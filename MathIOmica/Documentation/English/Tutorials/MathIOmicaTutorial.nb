(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3315971,      70808]
NotebookOptionsPosition[   3213361,      68807]
NotebookOutlinePosition[   3218014,      68903]
CellTagsIndexPosition[   3217931,      68898]
WindowTitle->MathIOmica: Omics Analysis Tutorial
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MATH I OMICA PACKAGE TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Dynamic Transcriptome\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"], \
"\<\"MathIOmica Overview\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaOverview"], "\<\"MathIOmica \
Guide\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/guide/MathIOmicaGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"RelatedTutorialsSection"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Functions",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Functions", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\")\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Applier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Applier"], "\<\"ApplierList\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplierList"], "\<\"ApplyBoxCoxTransform\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "\<\"associationList \
(\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Autocorrelation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Autocorrelation"], \
"\<\"BenjaminiHochbergFDR\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "\<\"ConstantAssociator\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantAssociator"], \
"\<\"ConstantMathIOmicaExamplesDirectory\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"], \
"\<\"ConstantSeriesClean\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantSeriesClean"], "\<\"CorrelationFunction\
\"\>":>Documentation`HelpLookup[
       "paclet:ref/CorrelationFunction"], "\<\"CreateTimeSeries\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/CreateTimeSeries"], "\<\"DataImporter\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporter"], "\<\"DataImporterDirect\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirect"], \
"\<\"DataImporterDirectLabeled\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirectLabeled"], \
"\<\"EnlargeInnerAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeInnerAssociation"], \
"\<\"EnlargeOuterAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeOuterAssociation"], \
"\<\"EnrichmentReportExport\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnrichmentReportExport"], \
"\<\"FilteringFunction\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilteringFunction"], "\<\"FilterMissing\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilterMissing"], "\<\"GeneTranslation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GeneTranslation"], "\<\"GetGeneDictionary\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GetGeneDictionary"], "\<\"GOAnalysis\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GOAnalysis"], "\<\"Interpolation\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/Interpolation"], "\<\"JoinNestedAssociations\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/JoinNestedAssociations"], \
"\<\"KEGGAnalysis\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/KEGGAnalysis"], "\<\"LombScargle\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LombScargle"], "\<\"LowValueTag\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LowValueTag"], "\<\"MeasurementApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/MeasurementApplier"], "\<\"Missing\"\>":>
       Documentation`HelpLookup["paclet:ref/Missing"], "\<\"OmicsObject\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObject"], "\<\"OmicsObjectCreator\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectCreator"], \
"\<\"OmicsObjectMerge\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectMerge"], "\<\"OmicsObjectPairedMerge\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectPairedMerge"], \
"\<\"OmicsObjectUniqueMassConverter\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], \
"\<\"QuantileEstimator\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileEstimator"], "\<\"QuantileNormalization\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileNormalization"], "\<\"Returner\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Returner"], "\<\"SeriesApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesApplier"], \
"\<\"SeriesInternalCompare\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesInternalCompare"], \
"\<\"TimeExtractor\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeExtractor"], \
"\<\"TimeSeriesClassification\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClassification"], \
"\<\"TimeSeriesClusters\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClusters"], \
"\<\"TimeSeriesDendrogramHeatmap\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], \
"\<\"TimeSeriesDendrogramsHeatmaps\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], \
"\<\"TimeSeriesModelFit\"\>":>Documentation`HelpLookup[
       "paclet:ref/TimeSeriesModelFit"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"TutorialFunction"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"MathIOmica/tutorial/MathIOmicaTutorial\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MathIOmica/tutorial/MathIOmicaTutorial"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MathIOmica/tutorial/\
MathIOmicaTutorial.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$71408], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MathIOmica/tutorial/MathIOmicaTutorial", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell["MathIOmica: Omics Analysis Tutorial", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     Cell["Loading the MathIOmica Package"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2133290847",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Metabolomic Data"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#779816621",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Data in MathIOmica"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#671613477",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Combined Data Clustering"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1340833355",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Transcriptome Data"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#540567276",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Visualization"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1200455778",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Proteomic Data"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1387790784",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Annotation and Enrichment"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2035743524",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> 
            Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TutorialJumpBox"],

Cell["\<\
MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.).\
\>", "Text",
 CellID->2044157074],

Cell["\<\
After a brief discussion of data in MathIOmica, each example data \
(transcriptome, proteome and metabolome) are imported and preprocessed. Next \
a simulation is carried out to obtain datasets for each omics used to assess \
statistical significance cutoffs. The datasets are combined, and classified \
for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered.\
\>", "Text",
 CellID->985017158],

Cell[TextData[{
 StyleBox["N.B.1 ",
  FontWeight->"Bold"],
 "For a more streamlined/simple example with less discussion please check out \
the tutorial on ",
 ButtonBox["MathIOmica Dynamic Transcriptome.",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]
}], "Text",
 CellID->429607656],

Cell[TextData[{
 StyleBox["N.B.2 ",
  FontWeight->"Bold"],
 "We highly recommend the saving of intermediate results whenever possible. \
Some functions perform lengthy intensive computations and the performance may \
vary from system to system. Please use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Put"]],"paclet:ref/Put"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to save expressions to a file, and equivalently ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Get"]],"paclet:ref/Get"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to recover these expressions."
}], "Text",
 CellID->54176507],

Cell[CellGroupData[{

Cell["Loading the MathIOmica Package", "Section",
 CellID->2133290847],

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData["MathIOmica`"], "InlineFormula"],
 " context provide support for conducting analyses of omics data (See also \
the ",
 ButtonBox["MathIOmica Overview",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaOverview"],
 ")."
}], "Text",
 CellID->1534169418],

Cell["This loads the package:", "MathCaption",
 CellID->1217948648],

Cell[BoxData[
 RowBox[{"<<", "MathIOmica`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->262742254],

Cell["Also we can load MathIOmica as:", "MathCaption",
 CellID->1869508656],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->998742135]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data in MathIOmica", "Section",
 CellID->671613477],

Cell[TextData[{
 "In this section we will discuss the data objects in use by MathIOmica, \
particularly the format of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ". The data in the tutorial will be imported as an OmicsObject which is \
first described in this section. Then we present the example data included \
with MathIOmica. The example data will be imported in subsequent sections to \
illustrate analysis methods available in MathIOmica."
}], "Text",
 CellID->1313645745],

Cell[CellGroupData[{

Cell["Data Format: OmicsObject", "Subsection",
 CellID->501197291],

Cell[TextData[{
 "In MathIOmica the calculations utilize what we term an omics object (",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "). An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations with some additional characteristics. It \
has an external  (outer) association to denote samples and an internal \
(inner) association for annotation."
}], "Text",
 CellID->1179683263],

Cell[CellGroupData[{

Cell["OmicsObject Structure", "Subsubsection",
 CellID->929984066],

Cell[TextData[{
 "In an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " the outer association has ",
 Cell[BoxData["M"], "InlineFormula"],
 " outer labels as keys, corresponding to ",
 Cell[BoxData["M"], "InlineFormula"],
 " samples. Across the samples there are ",
 Cell[BoxData["N"], "InlineFormula"],
 " inner labels (e.g. identifiers for genes/proteins), and  inner labels are \
the same across samples. For a given ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", the ",
 Cell[BoxData[
  SuperscriptBox["k", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "k"]], "InlineFormula"],
 " has a value of : "
}], "Text",
 CellID->1165527708],

Cell[TextData[Cell[BoxData[
 RowBox[{
  SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     SubscriptBox["Measurements", "jk"], "}"}], ",", 
    RowBox[{"{", 
     SubscriptBox["Metadata", "jk"], "}"}]}], 
   "}"}]}]], "InlineFormula"]], "Text",
 CellID->1597287192],

Cell[TextData[{
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " structure:"
}], "MathCaption",
 CellID->174991658],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{
    SubscriptBox["OuterLabel", "1"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "11"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "11"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "12"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "12"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "13"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "13"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "2"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "21"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "21"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "22"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "22"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "23"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "23"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "j"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jN"], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "M"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "Mk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "Mk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "MN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "MN"], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "\[IndentingNewLine]", "|>"}]], "InlineFormula"]], "Text",
 CellID->1192006303],

Cell[TextData[{
 "For any ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", it is possible that the ",
 Cell[BoxData[
  SuperscriptBox["m", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "m"]], "InlineFormula"],
 " is missing and takes a Missing[] value in the form ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["InnerLabel", "m"], "\[Rule]", " ", 
   RowBox[{"Missing", "[", "]"}]}]], "InlineFormula"],
 ". This can happen if the measurement was not performed for the sample, or \
no value was recorded (e.g. mass spectrometry data)."
}], "Text",
 CellID->2001356434],

Cell["\<\
For example here is a list of 3 samples using protein identifiers \
(specifically, these are UniProt accessions). The measurements are relative \
intensities in this case and the metadata is the number of peptides per \
sample.\
\>", "MathCaption",
 CellID->299944951],

Cell[BoxData[
 RowBox[{
  RowBox[{"omicsObjectExample", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.937", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.059", "}"}], ",", 
           RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.03", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.268", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.003", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.779", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.917", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.921", "}"}], ",", 
           RowBox[{"{", "24", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], 
     ",", 
     RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.064", "}"}], ",", 
           RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.545", "}"}], ",", 
           RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.87", "}"}], ",", 
           RowBox[{"{", "23", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}]}],
     "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[67]:=",
 CellID->1030671948],

Cell[TextData[{
 "The outer labels of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " are strings, while the inner labels are typically lists of strings. "
}], "Text",
 CellID->1097212187]
}, Open  ]],

Cell[CellGroupData[{

Cell["Methods to Import Data as an OmicsObject", "Subsubsection",
 CellID->1010514183],

Cell[TextData[{
 "There are multiple methods to import data as an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " using MathIOmica. Four functions assist with importing data directly from \
text files:"
}], "Text",
 CellID->1276400541],

Cell[TextData[{
 "(i) ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provides a graphical dynamic interface that utilizes file headers to \
assist with the creation of OmicsObject variables from multiple files."
}], "Text",
 CellID->200159297],

Cell[TextData[{
 "(ii) The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function provides a function to create an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " from already existing/imported data in a Mathematica notebook."
}], "Text",
 CellID->471195666],

Cell[TextData[{
 "(iii) ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and (iv) ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide additional expert mode functions that may be used to directly \
import data as ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " variables without a graphical interface. "
}], "Text",
 CellID->1897113300],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["DataImporter",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/DataImporter"], "[", 
      StyleBox["associationName", "TI"], "]"}], " "}], Cell[TextData[{
     "provides a graphical interface to extract data and create an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " variable ",
     StyleBox["associationName", "TI"],
     " for associations of information."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectCreator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectCreator"], "[", 
     RowBox[{
      StyleBox["outerLabels", "TI"], ",", " ", 
      StyleBox["innerLabels", "TI"], ",", " ", 
      StyleBox["measurements", "TI"], 
      StyleBox[",", "TI"], 
      StyleBox["metadata", "TI"]}], "]"}], Cell[TextData[{
     "creates an ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OmicsObject"]],"paclet:MathIOmica/ref/OmicsObject"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " for use with MathIOmica. It uses the following inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["outerLabels", "TI"], Cell[
         "Outer labels (keys) for the OmicsObject.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["innerLabels", "TI"], Cell[
         "Inner labels (keys) for identifiers in the OmicsObject.", 
          "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["measurements", "TI"], Cell[
         "List of measurements for each inner label.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["metadata", "TI"], Cell[
         "List of metadata for each label.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "Rows" -> {None, None, None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True, True, True}}}}]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirect",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirect"], "[", 
     RowBox[{
      StyleBox["positionsList", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DataImporterDirect"]],
        "paclet:MathIOmica/ref/DataImporterDirect"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function is a helper function originally created for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". ",
     Cell[BoxData[
      RowBox[{
       TemplateBox[{Cell[
          TextData["DataImporterDirect"]],
         "paclet:MathIOmica/ref/DataImporterDirect"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["positionsList", "TI"], ",", " ", 
        StyleBox["fileList", "TI"], ",", " ", 
        StyleBox["headerLines", "TI"]}], "]"}]], "InlineFormula"],
     " creates an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " importing the column number in ",
     Cell[BoxData[
      StyleBox["positionsList", "TI"]], "InlineFormula"],
     "  from the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     " file path list, and importing data by skipping a number of ",
     Cell[BoxData[
      StyleBox["headerLines", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirectLabeled",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirectLabeled"], "[", 
     RowBox[{
      StyleBox["sampleRules", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"], ",", " ", 
      StyleBox["headerColumnAssociations", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DataImporterDirectLabeled"]],
        "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function creates an ",
     Cell[BoxData["OmicsObject"], "InlineFormula"],
     " association for ",
     Cell[BoxData[
      StyleBox["variableName", "TI"]], "InlineFormula"],
     ", by imporing data from the files at the paths specified in the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     ", using the ",
     Cell[BoxData[
      StyleBox["sampleRules", "TI"]], "InlineFormula"],
     " as a label to column header imported rule for each file, and the ",
     Cell[BoxData[
      StyleBox["headerColumnAssociations", "TI"]], "InlineFormula"],
     " list of associations to associate column headers to column positions \
for each file."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->953451491],

Cell[TextData[{
 "Functions for importing/creating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->7357]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with OmicsObject Data", "Subsubsection",
 CellID->1310432575],

Cell[TextData[{
 "An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations, and so ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " can be used directly to access and manipulate components. MathIOmica also \
offers multiple functions that can implement computations and manipulation of \
an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ":"
}], "Text",
 CellID->1202669251],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Applier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Applier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to OmicsObject, association or list ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     " components."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ApplierList",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplierList"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to list of lists from an association, nested association or components \
or a matrix ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ConstantAssociator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantAssociator"], "[", 
     RowBox[{
      StyleBox["inputAssociation", "TI"], ",", " ", 
      StyleBox["associationAddition", "TI"]}], "]"}], Cell[TextData[{
     "adds multi key constant to an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " (or an association of associations) ",
     Cell[BoxData[
      StyleBox["inputAssociation", "TI"]], "InlineFormula"],
     ", with each addition specified in a single association ",
     Cell[BoxData[
      StyleBox["associationAddition", "TI"]], "InlineFormula"],
     ", of form <|addition1\[Rule] Value1,addition2\[Rule] Value2,...|>."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["CreateTimeSeries",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[TextData[{
     "creates a time series list across an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " ",
     Cell[BoxData[
      StyleBox["dataIn", "TI"]], "InlineFormula"],
     " using outer Keys for points."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeInnerAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeInnerAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list of OmicsObject (associations of associations)  ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     " elements  by enlarging the inner associations - inner association Keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeOuterAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeOuterAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list, ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     ", of OmicsObject (or associations of associations) elements to a \
combined output by enlarging the outer associations - outer association keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " data by a chosen ",
     Cell[BoxData[
      StyleBox["comparison", "Text"]], "InlineFormula",
      ShowStringCharacters->False],
     " (by default greatr or equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " if across the datasets a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points is missing."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Missing"]],"paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectMerge"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
      StyleBox["f", "TI"]}], "]"}], Cell[TextData[{
     "merges a list of ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " components ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]]],
     ", using the function ",
     StyleBox["f", "TI"],
     " to combine values with the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectPairedMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectPairedMerge"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["2", "TR"]]}], "]"}], Cell[TextData[{
     "merges pairwise ",
     Cell[BoxData[
      StyleBox["omicsObject1", "TI"]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      StyleBox["omicsObject2", "TI"]], "InlineFormula"],
     " values that have the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["Returner",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Returner"], "[", 
     RowBox[{
      StyleBox["originalAssociation", "TI"], ",", " ", 
      StyleBox["update", "TI"]}], "]"}], Cell[TextData[{
     "returns a modified ",
     Cell[BoxData[
      StyleBox["originalAssociation", "TI"]], "InlineFormula"],
     " updated at a specified position by the single association ",
     Cell[BoxData[
      StyleBox["update", "TI"]], "InlineFormula"],
     ", e.g. from ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Applier"]],"paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ApplierList"]],"paclet:MathIOmica/ref/ApplierList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " result."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->438464085],

Cell[TextData[{
 "Functions for manipulating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example Data ", "Subsection",
 CellID->490101258],

Cell[TextData[{
 "MathIOmica comes with multiple example data. The data can be found in the \
",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]],
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->249980817],

Cell["\<\
We can get a listing of the current example Data by evaluating:\
\>", "MathCaption",
 CellID->2139419895],

Cell[BoxData[
 RowBox[{"FileNames", "[", 
  RowBox[{"__", ",", "ConstantMathIOmicaExamplesDirectory"}], "]"}]], "Input",\

 CellLabel->"In[3]:=",
 CellID->1911473544],

Cell[TextData[{
 "The data contains both initial (raw) data and additionally intermediate \
data that have been analyzed in MathIOmica and are used in the examples (",
 StyleBox["N.B.",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" these files should ",
  FontSlant->"Italic"],
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" be altered or removed",
  FontSlant->"Italic"],
 "). The dynamic raw datasets are from an integrative Personal Omics Profile \
as described below:"
}], "Text",
 CellID->1570546560],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"i", 
         StyleBox[
          StyleBox["n", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "tegrativ", 
         StyleBox[
          StyleBox[
           StyleBox["e", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox[
          StyleBox["e", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "rsona", 
         StyleBox[
          StyleBox[
           StyleBox["l", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"O", 
         StyleBox[
          StyleBox["m", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "ic", 
         StyleBox[
          StyleBox[
           StyleBox["s", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox["r", "TR",
          FontWeight->"Bold"], "of", 
         StyleBox["i", "TR",
          FontWeight->"Bold"], "li", 
         StyleBox["n", "TR",
          FontWeight->"Bold"], 
         StyleBox[
          StyleBox["g", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       RowBox[{
        StyleBox[
         StyleBox[
          StyleBox["(", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], 
        StyleBox[
         RowBox[{
          StyleBox[
           StyleBox["i", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "PO", 
          StyleBox[
           StyleBox["P", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"]}]], 
        StyleBox[
         StyleBox[
          StyleBox[")", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"]}]}], "\n"}], "TR",
     FontWeight->"Bold"], Cell[TextData[{
     "Data from the first integrative Omics Profiling (iPOP) is used \
comprised of dynamics from proteomics transcriptomics and metabolomics. The \
data corresponds to a time series analysis of omics from blood componenets \
from a single individual.\nDifferent samples (from 7 to 21 included here) \
were obtained at different time points. The time points included here \
correspond to days ranging from 186th to the 400th day of the study, (this \
can be represented in the following sample to day association: ",
     StyleBox[
     "\[LeftAssociation]7\[Rule]186,8\[Rule]255,9\[Rule]289,10\[Rule]290,11\
\[Rule]292,12\[Rule]294,13\[Rule]297,14\[Rule]301,15\[Rule]307,16\[Rule]311,\
17\[Rule]322,18\[Rule]329,19\[Rule]369,20\[Rule]380,21\[Rule]400\
\[RightAssociation]", "InlineCode"],
     ". On day 289 the subject of the study had a Respiratory syncytial virus \
infection. Additionally, after day 301, the subject displayed high glucose \
levels and was eventually diagnosed with type 2 diabetes. The analyzed mapped \
data are used in these examples for illustrative purposes - these and \
additional dynamic omics data that will become available can also be accessed \
MathIOmica website at https://mathiomica.org. More information regarding the \
iPOP dataset can also be found in the original iPOP paper: ",
     Cell[BoxData[{
      StyleBox[
       RowBox[{
        SuperscriptBox["Chen", "*"], ",", 
        SuperscriptBox["Mias", "*"], ",", 
        RowBox[{"Li", "-", "Pook", "-", 
         SuperscriptBox["Than", "*"]}], ",", 
        RowBox[{
         SuperscriptBox["Jiang", "*"], " ", "et", " ", 
         RowBox[{"al", "."}]}], ",", 
        RowBox[{
         StyleBox["Personal",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Omics",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Profiling",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Reveals",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Dynamic",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Molecular",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["and",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Medical",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["Phenotypes",
           FontSlant->"Italic"], 
          StyleBox[".",
           FontSlant->"Italic"], 
          StyleBox["  ",
           FontSlant->"Italic"], "Cell"}], " ", "148", 
         RowBox[{"(", "6", ")"}]}], ",", 
        RowBox[{"p1293", " ", 
         RowBox[{"(", "2012", ")"}]}], ",", 
        RowBox[{"PMID", ":", "22424236."}]}], "TR"], "\n", 
      StyleBox[
       RowBox[{
        RowBox[{"http", ":"}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1016"}], "/", 
          RowBox[{"j", ".", "cell"}]}], ".2012", ".02", 
         RowBox[{".009", "."}]}]}], "TR"]}], "InlineFormula"],
     "\nand related review (including summary):\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{
        StyleBox["Mias", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["and", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Snyder", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Personal", "TR",
         FontSlant->"Italic"], 
        StyleBox[" ", "TR"], 
        StyleBox["Genomes", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Quantitative", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Dynamic", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Omics", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["and", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Personalized", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox[
         RowBox[{"Medicine", ".", "  ", "\n", 
          StyleBox["Quantitative",
           FontSlant->"Plain"]}], "TI"], 
        StyleBox[" ", "TR"], 
        StyleBox["Biology", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["1", "TR"], 
        StyleBox[
         RowBox[{"(", "1", ")"}], "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox[
         RowBox[{"(", "2013", ")"}], "TR"]}], 
       StyleBox[",", "TR"], 
       StyleBox[" ", "TR"], 
       StyleBox[
        RowBox[{
         RowBox[{"PMCID", ":", 
          RowBox[{"PMC4366006", ".", "\n", 
           RowBox[{"http", ":"}]}]}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1007"}], "/", 
           "s40484"}], "-", "013", "-", "0005", "-", "3."}]}], "TR"]}]], 
      "InlineFormula"]
    }], "TableText"]},
   {
    StyleBox[
     RowBox[{"Example", " ", 
      StyleBox[
       RowBox[{"i", 
        StyleBox["P", "TI",
         FontWeight->"Bold"], "OP"}]], 
      StyleBox[" ", "TR",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{
        StyleBox[
         StyleBox["S", "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], "et"}]], " ", "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Names located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[ButtonBox["ConstantMathIOmicaExamplesDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"],
      FontWeight->"Bold",
      FontSlant->"Italic"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"Transcriptome", "."}],
      FontWeight->"Bold"], " ", "The", " ", "transcriptomic", " ", "data", 
     " ", "included", " ", "was", " ", "obtained", " ", "from", " ", 
     "mapping", " ", "of", " ", "the", "  ", "originally", " ", "RNA", " ", 
     "Sequencing", " ", "raw", " ", "data", " ", "using", " ", "the", " ", 
     "Tuxedo", " ", 
     RowBox[{"suite", ".", " ", "The"}], " ", "data", " ", "corresponds", " ",
      "to", " ", "transcriptome", " ", "from", " ", "peripheral", " ", 
     "blood", " ", "mononuclear", " ", "cells", " ", 
     RowBox[{
      RowBox[{"(", "PBMCs", ")"}], "."}]}], Cell["\<\
iPOP_ 07_genes.fpkm_tracking
iPOP_ 08_genes.fpkm_tracking
iPOP_ 09_genes.fpkm_tracking
iPOP_ 10_genes.fpkm_tracking
iPOP_ 11_genes.fpkm_tracking
iPOP_ 12_genes.fpkm_tracking
iPOP_ 13_genes.fpkm_tracking
iPOP_ 14_genes.fpkm_tracking
iPOP_ 15_genes.fpkm_tracking
iPOP_ 16_genes.fpkm_tracking
iPOP_ 17_genes.fpkm_tracking
iPOP_ 18_genes.fpkm_tracking
iPOP_ 19_genes.fpkm_tracking
iPOP_ 20_genes.fpkm_tracking
iPOP_ 21_genes.fpkm_tracking\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Proteome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Proteomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", "data", " ", "using", " ", "the", " ", "Sequest", " ", "algorithm", 
     " ", "implemented", " ", "by", " ", 
     RowBox[{"ProteomeDiscoverer", ".", " ", "The"}], " ", "data", " ", 
     "corresponds", " ", "to", " ", "proteome", " ", "from", " ", 
     RowBox[{"PBMCs", ".", "\n", "The"}], " ", "names", " ", "of", " ", "the",
      " ", "files", " ", "provide", " ", "a", " ", "correspondence", " ", 
     "of", " ", "samples", " ", "to", " ", "Tandem", " ", "Mass", " ", "Tag", 
     " ", "labels", " ", "in", " ", "order", " ", "of", " ", "increasing", 
     " ", 
     RowBox[{"m", "/", "z"}], " ", "values", "  ", "from", " ", "126", " ", 
     "to", " ", "131", " ", 
     RowBox[{"amu", ".", " ", "6"}], " ", "TMT", " ", "labels", " ", "were", 
     " ", "used", " ", "in", " ", "each", " ", 
     RowBox[{"experiment", ".", "\n", "The"}], " ", "data", " ", "has", " ", 
     "been", " ", "adapted", " ", "from", " ", "the", " ", "original", " ", 
     "to", " ", "UniProt", " ", 
     RowBox[{"accessions", "."}]}], Cell["\<\
8_7_9_10_11_14_MulticonsensusReports_3Replicates.csv
8_12_13_15_16_14_MulticonsensusReports_3Replicates.csv
8_17_19_20_21_14_MulticonsensusReports_3Replicates.csv\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Metabolome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Metabolomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", 
     RowBox[{"data", ".", " ", "The"}], " ", "data", " ", "corresponds", " ", 
     "to", " ", "small", " ", "molecule", " ", "metabolomics", " ", "from", 
     " ", "plasma", " ", "ran", " ", "with", " ", "technical", " ", 
     RowBox[{"triplicates", ".", "\n", "The"}], " ", "names", " ", "of", " ", 
     "the", " ", "files", " ", "provide", " ", "a", " ", "correspondence", 
     " ", "of", " ", "samples", " ", "ran", " ", "in", " ", "positive", " ", 
     "or", " ", "negative", " ", 
     RowBox[{"mode", "."}]}], Cell["\<\
metabolomics_negative_mode.csv
metabolomics_positive_mode.csv\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1722327182],

Cell[TextData[{
 "Description of Example iPOP original datasets and corresponding files in \
the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]],
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->231225297],

Cell["\<\
Various analyzed datasets are used in the MathIOmica documentation for \
examples:\
\>", "Text",
 CellID->1540904390],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"Data", 
      StyleBox[
       RowBox[{" ", 
        StyleBox[" ", "TI",
         FontWeight->"Bold"]}]], "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Name(s) ", "TI",
      FontWeight->"Bold"],
     StyleBox["located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[Cell[BoxData[
      RowBox[{" ", 
       ButtonBox["ConstantMathIOmicaExamplesDirectory",
        BaseStyle->"Link",
        ButtonData->
         "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"]}]], "TI",
      FontWeight->"Bold"], "TI"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "transcriptome", " ", "imported", " ", "as", " ", "an", " ", 
     "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", 
      StyleBox[".",
       FontWeight->"Bold"]}]}], "rnaExample"},
   {
    RowBox[{
    "iPOP", " ", "proteome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", "."}]}], Cell["proteinExample", "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "metabolome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", "timepoints", 
     " ", "and", " ", "technical", " ", "replicates", " ", "for", " ", 
     "negative", " ", "and", " ", "positive", " ", "mode", " ", "aligned", 
     " ", "mass", " ", "spectrometry", " ", 
     RowBox[{"features", "."}]}], Cell["\<\
metabolomicsNegativeModeExample
metabolomicsPositiveModeExample\
\>", "TableText"]},
   {
    RowBox[{"Example", " ", "time", " ", "series", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinTimeSeriesExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClassificationExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClusteringExample", "TableText"]},
   {
    RowBox[{
     RowBox[{
     "Example", " ", "combined", " ", "clustering", " ", "results", " ", 
      "from", " ", "transcriptome"}], ",", " ", 
     RowBox[{"proteome", " ", "and", " ", "metabolome", " ", 
      RowBox[{"data", "."}]}]}], Cell["combinedClustersExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "enrichment", " ", "analysis", " ", "results", " ", "for",
      " ", "Gene", " ", "Ontology", " ", "and", " ", "KEGG", " ", "pathway", 
     " ", "analysis", " ", "for", " ", "combined", " ", "omics", " ", "data", 
     " ", "in", " ", "this", " ", 
     RowBox[{"tutorial", "."}]}], Cell["\<\
combinedGOAnalysis
combinedKEGGAnalysis\
\>", "TableText"]},
   {
    RowBox[{
    "Spectra", " ", "from", " ", "proteomics", " ", "mass", " ", 
     "spectrometry", " ", "data", " ", 
     RowBox[{"examples", "."}]}], Cell["\<\
small.pwiz.1.1.mzML
exampleMS3.mzXML\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->312091046],

Cell[TextData[{
 "Description of example analyzed datasets and corresponding files in the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]],
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transcriptome Data", "Section",
 CellID->540567276],

Cell["\<\
In this section we import the example transcriptome iPOP dataset, and \
illustrate a preprocessing approach for this omic dataset.\
\>", "Text",
 CellID->1827655092],

Cell[CellGroupData[{

Cell["Importing OmicsObject Transcriptome Data", "Subsection",
 CellID->257268298],

Cell[TextData[{
 "We first import the transcriptomics data example (for details on how to \
import such data please refer to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1539574452],

Cell[TextData[{
 "We import the transcriptomics ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"]
}], "MathCaption",
 CellID->787376419],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<rnaExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[68]:=",
 CellID->641241319],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[68], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[68]=",
 CellID->76837286]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->546537213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[69]:=",
 CellID->863380672],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[69]=",
 CellID->1272316944]
}, Open  ]],

Cell["\<\
Notice that we have used \"@\" to form a Query using a prefix function \
application, which is used throughout the MathIOmica tutorials and \
documentation. This is the same as using the [ ] form:\
\>", "Text",
 CellID->1566749700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "[", "rnaExample", "]"}]], "Input",
 CellLabel->"In[70]:=",
 CellID->908486935],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[70]=",
 CellID->535902783]
}, Open  ]],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["10", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->392276805],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"7777", ",", "55"}], "}"}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[71]:=",
 CellID->221465345],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "21.1197`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.560212`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[71]=",
 CellID->29914394]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to \"Gene Symbols\" and are also tagged with an \"RNA\" \
label. The values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<FPKM\>\"", " ", "values"}], "}"}], ",", 
    RowBox[{"{", "\"\<FPKM status\>\"", "}"}]}], "}"}]], "InlineFormula"],
 ". Here, FPKM stands for Fragments Per Kilobase of transcript per Million \
mapped reads. The example is from mapped RNA-Sequencing data. FPKM is then a \
relative measure of transcript (gene) expression."
}], "Text",
 CellID->464982744],

Cell["\<\
We can query all timepoints for a particular gene of interest if it exists. \
We must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1833142640],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"Key", "@", 
     RowBox[{"{", 
      RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[72]:=",
 CellID->1827950618],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.7644`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.9997`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "15.8482`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3504`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.5309`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.7081`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.6549`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3951`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "8.93065`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.2545`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.9217`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.0331`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.7293`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "10.8115`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.9051`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[72]=",
 CellID->679977437]
}, Open  ]],

Cell["\<\
We note that we added Key@ before the bracket to indicate that this list is \
used as a key for the inner associations.\
\>", "Text",
 CellID->1488223786],

Cell["\<\
We can query all timepoints for multiple genes of interest if it exists. We \
must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1609229737],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}], ",", 
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "}"}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->915139441],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[73]=",
 CellID->794006111]
}, Open  ]],

Cell["Or in a more concise form", "MathCaption",
 CellID->1516242184],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}], "}"}]}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[74]:=",
 CellID->1441431186],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[74]=",
 CellID->702184882]
}, Open  ]],

Cell["\<\
We should also note that  we can take advantage of Mathematica's native \
direct access to Wolfram Alpha,  to look up any \"Gene Symbol\" information \
by evaluating (needs a network connection):\
\>", "MathCaption",
 CellID->1478232418],

Cell["NFKBIB", "WolframAlphaLong",
 CellLabel->"In[75]:=",
 CellID->413937183],

Cell["Here is an image of the output:", "Text",
 CellID->90413432],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd0FNXbxkE/qigKiICAgFhQBAWUZkVAsaAI+kdFRaVXaYL0TkKvkRII
EEIooYQOgRB6Db2ZLCUkIZ10ks0mme+ZvXEcdnY3m56wz+/k5Ny5c+f2ue/z
zszO1P5t4Dc9HitWrNiQ0vj3za/DPxo8+Ne/Oj6NjW8HDOndc0D3bu0GDO3e
s/vgZr89jshmpYoV24j0clgihBBCiH2TlpYWFRV19+5dnU73DyGEEEKKPrDp
sOyw77DyZq1/XFwc0gQHByNNfHx8YmLiA0IIIYQUZWDNYdNh2YOCgmDlY2Nj
Tax/dHQ0REJMTExB15QQQggheQKsvL+/P8SAie8PhVDQVSOEEEJIHgJbL/x9
cd8f1p++PyGEEGIPiOsAqampUVFRwcHBBV0dQgghhOQTQUFB4eHh4snAgq4L
IYQQQvIJ2P07d+7w7j8hhBBiV8Du+/v7//PPP1Z+8RcbGxsYGCiSEUIIIaTw
A6sN2w0Lbsm4w+6LlFasP/aGhIRAKuj1egMhhBBCCjcpKSmw4GFhYX5+flY0
gBUBgKNwbFRUVGpqat69e5AQQggheUFMTAxMvCUNYEUABAYGhoaGpqenF3QL
CCGEEJIdIiIiYM2zKgD8/f2Tk5MLuu6EEEIIySYpKSk6nS6rAgDxdP8JIYSQ
ogvsOKx5UlJSVgVAQVecEEIIITkC1lyv11MAEEIIIXYFrLn4XQAFACGEEGI/
UAAQQgghdggFACGEEGKHUAAQQgghdggFACGEEGKHUAAQQgghdggFACGEEGKH
UAAQQgghdggFACGEEGKHUAAQQgghdggFALFCWlqat7c3Br2gK0IIISSXyTcB
oNfr/f39c73+4O+//75z505WjwoPD0dbgoODDQYD6qbT6ZRd0dHRoaGhCPj5
+V37l8jISCS7efOmSJOUlIRI2MegoCCRAEcpOeDA1NRUxIhdSKMuOiAgID4+
/vbt2wkJCUokOsfZ2Tmrrchr0Irt27ejtmb3okNu3bqlbEZFRaFX86tqeUDY
ZenYTCv783qMMFV2796dd/kTQoiafBMAK1euLFGiRGBgYK43YcaMGTdu3Mjq
UW3atIHxatCgAVp09erV4sWLK2svFEW/fv0QePbZZ7t27drLCPYi2euvv474
xMTEjz76aOTIkQh/++23bdu27dOnz9dG0JniwIiIiEWLFtWvXx+7fvjhh5Yt
W8Lii/xffPFFKIQqVarcu3dPqc+lS5fmzp2b077IbawLgMuXL7/xxhvK5vTp
0//888/8qlp2ifSTNv1oftc9X+moo5VDbR+jrVu3Ll26NKtVW7t2bbdu3bJ6
FCGEZI98EwAwuOPGjZs2bZrY3Ldv3zvvvFOnTh1YDWzChf/ss8+qVavWpUsX
GJ1du3b1799fpGzRokVYWNihQ4e++eabN998s0aNGlgn33333erVqy9ZsgQJ
OnTocPHiRSTo2LHj22+//cILL8DyimOHDh1asWLFpk2b/vrrr5s3b1YqA8cf
+Vy/fh0GGpuw7KhJs2bNUJD0sACAHVeOEgJAWH8HBwcRCQGwceNGyWgrUZaw
8ooA6Nu3r0j21Vdfubi4IBATE9OwYUMUDdmg7p9jx4799NNPCMyZM+fll19G
S02cQeTfo0ePqlWrfvjhh2fPnjXpXm1Lp0yZ8txzz9WuXXvbtm3YRM/DuGCz
UaNGBw8eRIxOp0Pfli9fvlOnTmiU2VHLngAwaYKlgrQtMpkVqnqkSFt/k2ZU
kVa8LwWefGjXzf3Sum+klR9JjhUlz9+ltFQ5BskWvS5t6y7p46UN30kOFaRF
9aU7h6WUB3J4wuPS7BrysTc8pXl1JcdK0n5Zy0m3faSN/5MDrp9IW7pKM56T
1rSTom+bjBHOF+hGiLrKlSuj/unp6SZNPnz48JNPPlm2bFkxoCYDgbnXrl07
HIuZI64aeXh4YDYiwe+//04BQAjJN/JHAAQEBMBowiYq9gKWF0slFsCff/45
ISEBBnfEiBGoyV9//eXr67tp0yaxeIKXXnoJayZMA1ZUWJzFixcXK1bMxwg0
ABJ88MEHZ86cQYKSJUuePn0a4QoVKhgMhps3bz7//POwLHv27ClVqtSaNWuU
+iBDrNJ3797Fki4ZLTsqhmRffPGF9LAAgNXeZARVRTKs0ihO7BVgGYcCGT58
ODSJsnorAqBx48ajRo2CdIG6gOmXjAIADYTvb3LVAkb5888/hwJ56qmnIiMj
Ue1hw4apEyDmjz/+QF8tWLDg+++/V+/StjQkJARCCEXs3LnztddeQ5qRI0ei
jRBaMFWimb169RozZkxoaOgnn3yyYcMGswOXDQGgbYKlgrQtMpkVqgl0VDbu
8aHS4SnSug4PVeKf7dL4YtLZJVLAEWl2Tfk/YmDir2+RkmOlC6ukZU2lkPPS
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
YpelF+tJxu8cBQcHr1u3LmuNLDgOHjwYFRVlaa/1FwWgA2/duqVsIh/xmkdb
SXkg3Tv332ZCmBRtHOjECOnYTOn6Vvlbvb7ODx1yYLRpJoenShE3zKQ04dxy
ycLLlwoj/+yQ4u5l50B76NJc75x7vvKbosVfXLCcLPRSRprkODkyzSBF+Wck
iFWd+zgQu+JDM3aFX7NYtNm+Qvfev/VQjOj5RwzNeMFSiBet5xFYok0+tm63
5JsAWLlyZYkSJQIDA3O9CTNmzLD+ll0tV69eLV68uDIH1J//69q1ay8j2Ku8
/D8xMfGjjz4aOVL+avy3337btm3bPn36fG1EvMBNefl//fr1seuHH35o2bLl
7du3Tcr19PTs2bPn8ePHW7duneN25xP79u1DcyztzcbnArNQdsh5+T3/V9Zn
bJ6cJ20zfvNoZ1/J43t5Eb7tI61476FDkD794a8oHpokhV02k1LNRVdpq/nv
IRZS/tkuf6o4GxSqLt07VM4k18n1zplWXtrYWf4gNf5ueMrJ5tWV45Oi5bdG
7xksh92/klw+lLZ1l1a1lgPi5ZM4EHrgxBxpwStyVus7SgvrSZGa9dNSXyGf
WwceihE9/4ihGa9Lly6JD5dkytatW8W7uLPE2rVr+dENQb4JgDZt2owbN27a
tGliE2blnXfeqVOnDoyCZHx3+meffVatWrUuXbrApuzatat///4iZYsWLcLC
wg4dOvTNN9+8+eabNWrUwPC9++671atXF59T79Chw8WLF5GgY8eOb7/99gsv
vCC+yAOGDh1asWLFpk2b/vrrr5s3b1YqA8uOops1a4acpYcFgPbrP8L6Ozg4
iEjl6z+oJzIXVl77+b+vvvrKxcXFpBMaNmyo0+kgAND2jz/+uGrVqlOmTEH8
6NGj3d3dJeO3eqEcEEBHoc5o7FtvvYXi6tat26BBg2PHjknGb82//PLLqJh4
5z9SYjLXrl27UaNG8NZNStT2AEp87rnnkH7btm1mD0cN0efly5fv1KmTeBsz
ikZXmB3W7AmAOXPmoAkYTaHBtCVmgJV2RhX5Ez8xd+VNsSDDIZ1YQl5ajzr+
Z4NOL5KWvysZkuQFfGc/+fX+zi0y3De3z+UX+yOlUwP5Vf/TnpY2/fjfq4AB
rBvWc3hnN/fLXw5Cstk1ZOfLubk0q7p0Sv6Mkex2YRPHYnkXLh6KizJe0bq8
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
dHVivT5l+YKNCDuMXhIWEinKWr14y5DuU6MiYqb85bR+5c6hPabNneISF5ug
3htzP+7Keb+xg+YO6+mww8Nb3jXTrfcPY1FK4J0Q+PiOY5b81W/mFvd9Jru8
dhw95HUakTh83OB5yHzt8u1paWl+124vmePuMHrxqAGzfPbJrdAn67eu87Kk
KAghhJC8wNfX15IAwC5t+lwUADPGLXNZ5BEXE+88fwPMpYiBxY8Iuw8ZAFWA
mEnDF4r7BaePXlyzzBOBpXPXwaQ+VKWrt5AYAgDG9+Dek9ASMLgBt4LVic8c
v7TQ0TUmOs5z/X73FdtFWSgX9t2QYsCBHq67I8OjYcH3bT+q3gshATWCTELv
RYzsNxO1xd6hPRygKBDYvHbv9cs34+MSoRCQQL0LTRBZjR8yH5UPCQ6fPGKR
//U71y7p+v004bYu6M7NoCHdp6Wmpkbfj53450JkkttjSwghhFjEy8tLMf1q
EIld2vS5KwBgECWjdV6x0EPEnDt1FYGkpGR463CKsyQA+v8yUfjRa5dvE08F
KIldnDYtm7d+99ZDHmv2jB44W5R1y+8uAkI5CMf/6kX/eVNXqveidJhpHIg/
WPATh89LKiufok9B5bFrwrAFF85clzQCAIeP+WOOqOfebUe2uO+DAIDIETHQ
BuJyBCGEEJLPFKwACLwTggBM5/KFG0XM5fNy4pQUw6Dfp+iT9RAAwrM+dtA3
UwEAzSBiNqzedeTAGXXiJXPccfjh/afxJ3YppePAPj+Oe5CYhLDftdszxi9T
7w0KCB3eZ7o4EH/iwoJi5R1GL3Gev+GQ1ymH0YvNCgAcDu9e1Mp7z4l1Ljsg
ABbPWitipvzlRAFACCGkQCjYWwBaAQB7Crf6uM+5OZNXSEbDDV8efr3TTDch
AFwWeRzzeahiVgSAkhiZLF+wEWmCA8PgsEsPC4DeP4w9sPs4SnFdunXHpoPq
vWDUgFmw45LRhQ8MkCP/6jczIuw+VMqAXyYmJjyIj0sY2mOaEABil6S6BYDD
b+sCITBmT1x+9aK/VgCkpqaeOX6J70oihBCSnxTAQ4BB4cIphq8t7OnFs9eV
WwAw9PD9//htsrgUAP99RJ8ZcKsXOroKAXD+zLVhvRzVv/v759rtRTPWwI4P
6W4qAJTECfGJqxdvgXUeO2gurLC6dBw48NdJ86etwn/sFeZb2QvOnbo6afjC
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
K/STvgMHDiAjQLc9e/YYm428AzlOs2bNEFMsbMVy3nrrrebNmxssB0lHXFyc
vFVWe0l6iQsyltOkSZOSkhKp0movbdy4UbzUjzIxMTGIVvIzWu15ee9V2mr1
iYTD4XnknvqteXl577//fqWt8rsmfzJY7UaZrbF6u21xgo0bJ+8lq1ckszVa
QpyYWhYA0OF4kx45csSg/urVq5DraBo6dKhBE977sLB169ZIDYwHFNdJ+dY2
bdogHBg8RsRCkpKSpJe9evWCDc8888wHH3xgPI6Xl9esWbN+/vlnXEaysrIs
aY2OjsZyhgwZYtAZqYd4/ihjldVeEuX8/HykYyEhIei5fv16qY/tXtKPMvqY
m9Fqz8t7T77VlhNp6tSpONbg0YZW9+C40laZXav0ZBDY4kbjrbF6u21xgi0b
V6mXrF6RzNYYj0aI81DLAgBiHu9Eg6xHAOmOJiHmDYCFjRo1evXVV6Ua5AiL
/+TgwYMyrbhS3XPPPcjQZaxKS0vr2rUrCjNmzKhfv750g1Hi3XffTU1NxeXC
pIUmW3fu3ImXuPJI3c6fPy9ZhYuSjFXWeUli5cqVbm5uWt0lEemkqJT3oSVe
0poXACZnVKlUVnte3ntr1qyRaUXotO5ECgoK6tu3L46FhJA6eHp6itZVq1bJ
t8rsmvxykIra6Eat0dbYst22OMGWjZNvvXHjhtUrktkaQpyZWhYAn376Kd6J
+pmLhI+PD5oWLlxo3IQUoGHDhu3atdOvDA8PR39cKnNycmRab9++jdaOHTvK
WIVrzpYtW7S6u4INGjRALq/fimvdv//9b1F+5513kKvqZ23mWr29vWHAvHnz
pJ5lZWVTpkxB5fjx48WKzFllnZckMKx4HLBs2TJ0PnfunLYyH1riJa15AWBy
RoVCYbXn5b2HiCPT6uXlZd2JVFRU1KtXL5QTEhKk1uzs7DfffBOVCEbyrTK7
Jr8c6XSy2o1ao62xZbttcYItGyffijTf6hXJbA0hzkwtC4AJEybgnXj06FHj
posXL6Jp+PDhJg986aWXHnroIYPK5s2bf/3115W2tmrVqmnTpuZMwuW3devW
HTp0eEtHs2bNMNTvet9KQ1R65ZVXROvzzz8PI/39/SttjYmJMb4RffLkSVQG
BgbKW2W1lwCixuOPPy7swaLuuuuuAQMGiCZbvCQwKQBkZrTa8/Lek2+15UQS
97cN7hX/8MMP9913X6WtMrtW6cmgtcGNAuOtsXq7bXGCLRtXqZesXpHM1hDi
zNSyAAgNDa1fv/4XX3xhUC/+tIF4C+fn5+s3ib93gBQAb2FfX1/9pieeeMLF
xQUF+daxY8cat4pJ8X9AQMA333wjVYoU293dXbzEel988UXYIF4WFBTcf//9
H330UaWtqEQTlpOXlycNfubMGQx+4MABeaus9hIKAwcODAoKkup79+59zz33
IEez0UsCkwJAZkarPS/vPflWW04k5LBIJA08P3LkSGxrpa0yu1bpyWCLGwXG
W2P1dtviBFs2rlIvWb0ima3REuLE1P7XAIcMGYI3o8HnwL/66isUoPNxbenV
q5f02x3Jyck9evS4efNmWVnZa6+91qJFi8uXL4smXMwffvhhIf7lWxEIWuiI
iooSreg/ceLEzZs3o9ytW7fjx49LxqDpwQcfbNOmjbgxCzu/++47fftxoYb9
0dHRlbaGh4c3atQIyykqKhKtyJukq5m8VdZ5KT093eAJBYIsZpw2bZqNXpJW
h9H0v24gP6Mtnpf3nnyr1ScSmDRpkoHnhw0bJqJbpa0yuyZvsC1uNLc1tmy3
LU6wZePkW21ZkczWEOK01L4AwHt2wYIFuNS3bdv2s88+69q167hx46Rb7hD8
yAKg6vv06fPee+/1799fBFOt7g3+448/IkHo3r07MseOHTsigoSFhVnSmpOT
g6tK48aN33///f/85z8ff/yxp6enVveNaVxeBgwYIOUCW7ZseeCBB1CJq4q/
v3+TJk1ef/116YJz8eJFjIxWXIhwMZFpFV9GvnTpUpcuXXBRwkJwtXnllVdw
IZIyU3NWWeeljIwMGIO00cvLS3QrKSkZPHgw7MGKdu7cabWXBHPmzMGBGK1n
z55XrlxBjSUzWud5USPvPflWq08keB6WYNj27dsPHToUBmM3V65caWGrzK6Z
M9gWN5rbGlveFDY6wcaNk2+1ZUUyW0OIc2KvnwLG+zExMVH6yQ4DcnNzIeOl
W+vGBwKTfwxRvlWhUCBYY3Abja8qpaWluCybm1fGKqu9JE/te8mWMeW9J99q
9Ymk1f1O7NWrV6WfErK8VX7X5A2Wxzo32rLdVjtBa9vGybdavSL5rSHE2eAf
AyKEEEKcEAoAQgghxAmhACCEEEKcEAoAQgghxAmhACCEEEKcEAoAQgghxAmh
ACCEEEKcEAoAQgghxAmpiwKguLg4NTVV/G7qrVu39JtUKlVycnJpaalxE9D/
oVRjsrKyRAc4pKCgoJqNrool8q3mELtTE5Pa4lV5q2xplbcqMzNTGIYO0g8C
C2TOHxnkjbFuTBmsG1D+KFv8acsZa/Ve2PKGte5NRIhTUbcEwI4dO1588cV/
/vOfAwYMeOmll9q2bfvll1+KptjY2G7durVp0wZNnTt3fuGFFx555BGDw9H/
+vXrBpVlZWU//fTTc88998knn3z++ecoYOS1a9deu3atfv36991331tvvXXv
vfc2b9787bffxphNmjSZOXMmmp544gkMiELr1q3btWt39913Dx069LXXXmvY
sOErr7zy9NNP16tXD5a0atUKfQ4dOiTNCBtef/11c2s0bpWxRL/bbB2WD2tJ
q9VetdAq61plrEKIwW7C57169cKG/v3vf0d59+7dotXk+SOzm5YYs3PnThwC
MwYNGgQfvvHGGx9++CHqzZ0JGzZskN9N64w0Z4aN/pSQ32WTrVbshSXDmnvD
VslgQoi2TgkAXANxRfX29hYvcXnBFaBHjx4oX7hw4YEHHujfv7/0q6Tu7u64
6op0RhAaGooaXDr0x0T/jh074rqEa6CoQT6CS8rSpUsjIyNx4RK/VI9r+Gef
fabV/Ug7rloTJkwQf8U+JCQEY+JShvKpU6e++uqrDh06pKWlaf/619lGjBix
d+9eadIxY8agKTg42OQyjVtlLJH6IIdq2bJlixYtkMdZOGylrVZ71UKrrGuV
sQouat++/bPPPiv91iu005NPPunh4aE1f/7I7GalxiCeNmjQwMfHR7xUKpUu
Li4I6CibOxOWLFkis5vWGSljhi3+lPrI77LJVuv2otJhZd6wlR5LCDGgrggA
vN+R7/Tr10+/MiUlpXv37hqNplOnTg8//HBhYaF+K5IL/duAuCQiKUCehYut
VOnq6ooLRUBAgP6Bvr6+c+fOxYXr5MmToka6UIONGzd6eXkhDdH+9WosmoAo
61/2Y2JicEUSZRyI7KxZs2a45Bov02SrjCVSnwMHDmB1mHHPnj0WDivfaotX
LbTKilZ5qxYtWoT+fn5++k0rVqxAeihz/sjsprwxcXFxGHPgwIH6Y+bl5b3/
/vv6hxucCUiBze2mdUbKm2GLP6WX8rtsstW6vah0WJk3bKXHEkIMqCsCACkD
3vhHjhwxqL969SoyCzQZ3LDV6q7P0l+ay8/PR0IkLp7r16+X+rRu3frBBx80
ns7guqF/odbH4Gqsj/HfZxfgSj5r1qyff/4Z18CsrKwqtcpYgqQSrnjmmWc+
+OCDapnUFq9aaJUVrfJWtWnTBrHM4A/E4IxNSkqSOX+kssxumjRm6tSp6K//
cEdg8Jjb3JmgNdpN64y00Awr/CnK8rtsrtXGvbDlDVvpaUkIEdQVAfDll1/i
7YzrknETsgw0GaQABqxcudLNzU2ruy4hNRCVWHijRo1effVVqRvyoMV/EhQU
JNVXowB49913U1NTca0zabN8qzlL0tLSunbtisKMGTPq168v3R21ZVKrvWqh
Vda1ylilUqnuueeeN954w6SpMuePhLndNGdM37590R8xVOrp6ekpTp5Vq1ZJ
lZYLAOuMtMQMK/wpIb/LJltt3wtb3rDyBhNCJOqKAPj0009x0UD6YNzk4+OD
poULF8oc3rFjR3FLc9myZeh87tw5re7JY8OGDdu1a6ffMzw8HB1w6SgqKpIq
q0sA4Cr973//W5TfeecdpGPi88+WtMpYgpRKPCBOSUlp0KABcnnbJ7XaqxZa
ZV2rjFUKhQK7CZNMmipz/kiY201zxiCnRv+EhASpZ3Z29ptvvonK8+fPS5WW
CwDrjLTEDCv8KSG/yyZbbd8LW96w8gYTQiTqigCYMGEC3stHjx41brp48SKa
hg8fbu5YXAEef/zxt3R06NDhrrvuGjBggGh66aWXHnroIYP+zZs3//rrr/Vr
qksA4ML7yiuvCEuef/55dPD397ew1ZwliNetW7fGusSBzZo1w4p+1/u2l3WT
2uLVSq2yulXeqlatWjVt2tRkk8z5I2FyN2WMEffeDW5l//DDD/fdd59+jeUC
wDojKzXDan9qK9tlmVZb9sKWN6y8wYQQfeqKAAgNDa1fv/4XX3xhUF+uQ1xt
8vPz9ZuUSqV4BDlw4ED9+/m9e/e+5557kCWhPH78eFyLfH199Q984oknXFxc
9GuqRQDAdS+++CKsEi8LCgruv//+jz76yJJWGUsCAgK++eYb6aXI6dzd3W2c
1BavVmqV1a3yVo0dO9Z4N8VRMuePVDa5mzLGIL9GQmow5siRI+FD/RrLBYB1
RlZqhtX+1Fa2yzKttuyFLW9YeYMJIfrUvgDIzMyURigrK4uMjJS+f3Tt2jWZ
t+qQIUNw3dD/wu+BAwfE16ACAwNxDezVq5f0wafk5OQePXrcvHkzPT3d4KY3
roe4hkybNk0Y8Nprr7Vo0eLy5cuiFde9hx9+WP8OAI5FMvXee+8ZmySGWrNm
jXETLkRo0v8oNSz/7rvvDPpgRdHR0ZW2yljSrVu348ePSy+xogcffLBNmzZi
ybZMarVXK7XKllYZqxDFWuiIioqSjp04ceLmzZu1sueP/hIMdlPemEmTJhmM
OWzYMAMBYHwmCEzupnVGypthtT/ld1m+1eq9sOUNW+lpSQjRp/YFwIkTJ7Zu
3SrKuNSsW7cuJSVFq3sj4+Jw6tQpcweiw4IFC3Dtatu2LfKmrl27jhs3Trpv
fObMGSSzyAX69OmDi2r//v0RxTIyMl5//XWkAF5eXqJbSUnJ4MGDcU144IEH
du7cqdVdqX788UckQd27d0ei1LFjR1www8LCRH/IFVyX0P/ee+9FKqf/Heoj
R460b98eTa1bt5a+gi2YM2cOBkRTz549r1y5ghp/f/8mTZrAGOnCdfHiRcyF
Prig4Uoo0yq+SW3SkhEjRqBmwIABUva0ZcsWLA2VuCTaPql1XpW3ypZWmb0W
TTk5OYhljRs3fv/99//zn/98/PHHnp6elpw/JnezUmMwJmoQj3Ds0KFDMR1c
t3LlSpkzQf68ssJIeTOs9qf8Lq9fv77Sd5YVe2HLG9aSYwkh+tS+AFAqlb/r
PaHW/6wd3rDmfsdGApeOxMRE6ddFDMjNzUXGId3TthwxLDD44hLR2uDVGkXG
KoVCAVWDDsZN8ueP1dy6devq1avSvSwbsdpIW8yooV2uob3gG5YQ26krnwEg
hBBCSDVCAUAIIYQ4IRQAhBBCiBNinQDgczdCCCGk7oI4boUAiI+P1/9iMiGE
EELqFojjIppXSQCkpqbm5OTY23ZCCCGEWMnt27czMjIUCkWVBEBBQQGaDP5+
KCGEEELqBIjgcXFxZWVl5h70mxMAoKSkJDY2FvqhvLycnwcghBBCHB/Ea0Tt
nJwcxHdEf/GzPFUVAKC0tDQjIyM+Pv43QgghhNQFELXFnX+1Wm0uvoueMgIA
SH8xhBBCCCF1AgRuc7m/5QJAUFZWpiCEEEKIw2Puub91AoAQQgghdwwUAIQQ
QogTQgFACCGEOCEUAIQQQogTQgFACCGEOCEUAIQQQogTQgFACCGEOCGVCoCC
goKUlJS4uLga+70iQgghhFQniNqI3YjgVgsA8feAMjIyioqKFAqFkhBCCCGO
jfjjv1lZWbGxsTIaQEYA4Cjxl4BUKpW9f9GQEEIIIVUjPz8fId6cBpARACkp
KZmZmfwrAIQQQkgdJScnB9G8qgJA/BFhe9tOCCGEECspLy+Pj4+vqgBAPdN/
QgghpO6COI5oXlpaWlUBYG/DCSGEEGITiOYKhYICgBBCCLkDSE1NjYiICNKB
Al6a64loLr4XYLUAUCqV6anZ+JedeVvGpFvZeUf2BWdl3Kq2RdZB8nILws9F
2T7OjdjkhNhk28chhBByJ4EAvd8Ic2m77QIgPSVrzLC5Ppv2eazd4zZv65XL
cSYnmjdpDQRAQX5R9S+47oCovXzuFqsPX7vEG3ILhYN7Tx3Yc7L67CKEEFLn
QbIvBf18HdJLk/cBqkUAzPxlhShfi46fM2E1CtmZtxdN2/DzkDnrl21XlClW
zPf4rv/UX75dcCMuRaEo37hi1+ihc+dPXiduCKxe5AnxABWRn1sYExk79edl
vwyfv3/3cTTFXk1ct9Rn/uS1k0YuPnkkDDU4fNPK3WOGzcOYyYnpxnNJhqlU
qm3r947/YdHS2ZtuZedpdXFz3LcLJv+05HLEdbws/b0MU2OorWv9Fs/cmJ9X
MfuOLYHicIxZmF9k0trtm/djLasWbsu9lY8aaJ5po5fDwn27joljDSaSkASA
gc3GywS+XofGfjNvwZR1cE7k+aurXb2ED1OSMjD+huU7po9xmzHW7fKFaxVu
KVPs3R4k5AEhhBAnJCIiwpwAQJNx/2oRAAhD5eXKwoJiBFxEZ1R6bwwI2HkM
+b7bvK0RoTGoGfvNfARTFMLPRa1csA3R1n/HUZ9N+7S6UOvuthPRX6PRYChE
4cz0nIkjXBF/r0bFjxg4IzE+NSkhFZEaMf1CSLTrDPdb2blnjoUvmbXJ5FyC
i2FX0BMxMeR0JP5hRoTXzLSc6MjfZugUS8ipi0tmbszJur3f9wRia97tAhyy
ebWvOBw6RNyxN7Z286rdsA02B+0PRg1sDj0dic4QP79dTTSeSEISAAY2Gy8T
VkG63LyRBnXx439nhAVf0vchBMCUUUvhpfNnL8+btEare7gwc9zKosKSajqP
CCGE1DGCgoKk0K8PKtFk3L9aBACi58hBM7//ahpCofgkwIQRrkhIEafWLvZG
AqvVC16IsMhe0bTb8xByZK0upN7QPdFG1EP4QxP+zR6/ClEbkXHp7M1iIiS8
yMERfEPPXBI14tuIxnMJEIKRuWOWxPgUvDx7ImLepLVi8FGDZ9/Oydu4cpcY
CoYhyJoUACatjbuWpNUpGagdrBexWN8e44kkkyQBYGCz8TJPHgmDSBA1OMRY
APh6Hdbq7nLA8iqfJYQQQu447CIAxCMAZO4IkSqlCnFw7DfzkB2fPnoe/6J0
t8Gl4LVuqY/nBn/RhCxeqwupKUkZKKTezPz1+4WiCf+Q/yIyIkSKiZBfIzKu
X7ZdP803OZcENAAyd0TbYwfOHT8UgnxfGhx5OkZGxNfqwugol9lCAGxcsUsc
O3GEKwSAjLWXwq9BQqTpboDoT2o8kdQkBICxzcbLPBV03svdX9RAGxgLAOkz
AD+5zLL05CCEEHLnYpdHANJnAOZPXieiJPL0k4dDUYg8f9XgEUDw8QsIstAJ
CJ0IZFq9kAomjVwMGYDC4YAzKTczjCNjyKmLq129FGUKpOHIzU3O9cfSriaG
no5E4ezJiBXzPZCqTxu9vLiopLS0DOl8WakCWTbkRLmiPPTMJfEIAFMj8UfN
jdjkiprcAhlrhQDQ2bwk7nqSWq1Gz9iricYTSSZJdwAMbDZe5q3sXGih+Os3
L1+4NmLgH48AoGRysnK1pgQANEz4uSj+QBMhhDgtdvgQYGq2JACiI3+b+ONi
BCOESES68T8smjdpDQIrmn4ZPr9cJwAQGT3W7kEsQ6gVXxlYNH0DYr0YATn4
rF9XYhCEZoTUa9Hxa5f8JTKWFP/uOt395yFzpo1ZjriJeuO5BEWFxahBNwyI
uIya/b4nJv+0BBpDhPKC/CI0jfx6FmL6r98tFMdCXWBwzIWe+bmFMtYiNIsP
PIScjhzlMhsjuLvtFCHYYCKJG38KAAObjZeJwr7dxyEt3OZthTYQAsDX6xBs
g0o55H9aEgCYWlvxLctcKAEn/5IFIYQ4ObX8NUAZRMpf1SZQLtsK9NNq+QH1
vxeg1f1qAXSFfg3ydPw/ZdRSSTwYHFKptQBjGthsPJEJ28wPC2MgHjACjJk+
xk186kAMK2OD/HSEEELueGrzh4DuDDau2FVUWGxvK/7C9s37p41ePmOsW8DO
Y/a2hRBCyJ0GBQAhhBDihFAAEEIIIU4IBQAhhBDihFAAEEIIIU4IBQAhhBDi
hFAAEEIIIU4IBQAhhBDihFAAEEIIIU6IvQRAZmamQY1CoUhPTzeo1Gg02dnZ
xpW5ubm220AIIYQ4LbUvADZt2jRo0KDx48e/++67Bw4cEJXz589v27bthAkT
Xn755UuX/vhrv0uXLn366afr16+PnpcvXxaV7u7uXbt2HTFiRJcuXQxUhFqt
lvmlXAuBuuBv6hJCCLnjqWUBUFhY2KRJk4yMij+ms3379tdeew2F4ODgevXq
paWloTx37twWLVogjoeEhLzzzjtHjx718vLCIf369UPrhQsX7r77bmHAmDFj
3nvvPf3BN2/e/Oabb1pt29mzZ6E9rly5smvXLqsHsZ3169enpKTI94mMjIS1
tWMPIYSQO5JaFgAxMTGI9UFBQShv27bt1VdfRWHs2LFPPfWU6HDq1Cl08Pf3
nzp1qpTgu7i4PPjggyhMnz69Xbt2ovL8+fP169cvKPjfn/+zRQBkZWVt2bJF
oVDYXQAkJCSUlJTI9ykrK8NijR+jEEIIIRZS+48AWrdu/cQTTwQGBr7xxht7
9uzR6uJ706ZNRSsCOgTAvHnz9A9ZuHDhxx9/jELPnj179OghKlNTU9Hz2LH/
/aEcxEQM3rdv34ceeghK4OLFi6gcPXr0hAkT3n333ebNm2Mic7H10KFDISEh
KEAAeHp6Hj58GKP5+vpCGGh1f4Pv9OnTXl5eO3bskFLvGzduQKigG9ZSVFTx
d3gx+JEjRyBssK6bN2/qj5+YmIgxT5w4sXXrVj8/v5ycHHPD7t27F5NmZGTs
378/LCzM29tbo9Gg4OPjg5FhpHhCcebMmYMHD9qyEYQQQpyZ2hcA0dHRCNCI
3VOmTBE1CG14GRcXhzLGR3nRokX6h/zrX/9CnEXhmWeeGTx4sKhEFmwgFdAH
Nb1790Y87dChw3PPPYcIC+WAyrVr1yIoN2vWzN3d3dgkJP4bNmwQDyYgANat
W4fgiwLGgRhQqVTQEh4eHtevX4+NjUXPpKQkzL5p06bw8PD4+Phdu3adOnVK
q4vdOAT+CQ4OXr9+vf4nFcWwkBlI8GEJlAMqjYdFJbolJyejjAIifkREREpK
CuaChIiKikI38YAA+gdlWG7LXhBCCHFaal8AILa2b9/+1VdfveuuuxD6tboP
Bjz22GMdO3ZcunRpp06dEK/1c1ukup07d4aRKD/66KPffPONqEdeXL9+/QUL
Fkg9IQAaNmyYl5en1X1aAONAbEAA9O3bV3SYP39+r169jE1KS0tDtEWg1/4Z
qcWNgvT0dJSzs7PRAQEXcgKZuwjKxcXFiL8I9Cjk5+dDPNy+fRudkfirdEA5
iFsQAgwLSSDiNXqiXFpaajys9q8CQHwDAsdiLigH9IRJ4qkHHIIO4oMThBBC
SFWpZQGACIj0H5ks4uYHH3zQtGlTEXYRyFasWLFy5crJkyfff//9t27dEv0R
Gd955x2Rm4N27dohwRfloqIihHgk3dLgEADSJwQQKxs0aHDy5EkIgKlTp4pK
pOrNmjUztiouLg4ptiiLxF+URZBFOM7KysKxKG/cuNHd3V1E6sjISJRR6evr
C/uRoa/7K+fOnZOmwLBeXl6SbTLDSgJAulkBFx04cAD1qDl27FhZWZmox1Hx
8fFW7wUhhBBnppYFwNGjR++++27xFBsyABE8LCxMakXy3qJFi+nTp4uXMOzT
Tz9F6BQvERaHDx/eqVMn8RLZvfTgQAAB8H//93+ifO3atUaNGkEkQACMGjVK
VEJdtGrVytiqGzduIMUWZUy3detWUUYCjrCLVH3Pnj1QGjBPo9EgZCNSww+Z
mZkI5Uj5/f39USluI0CrlOqAteJehDSseIqh1f0GAnpC5BgPq9UTAIjvov/t
27eR9ZeUlFy9enXLli3SjQXYDNVR1S0ghBBCtLUuAPLz8xs3biw+bnf9+vWm
TZsWFxeLJiS2ffr06datm1TTr1+/cePGBepYtmzZtGnTLl++3LBhQ2HAkiVL
vvjiC/3BxWcAfHx8MIuLi8s///lPVEIAPP3004jLsbGxL7300rBhw4ytysnJ
QdgVH+QTjwCgLvDy8OHDfn5+Wt2nFE6dOgXdAr2B1gsXLojb+KmpqYjdoaGh
6CA+mX/ixAm4CIk5WsUzfYEYFv+jNSgoCBoD4sF4WK0pARAeHu7r61tYWIhD
duzYgZeohJeEirB6LwghhDgztf8ZAOSt/+///b+ff/75yy+/3L59u1Z3M9/L
y6t9+/aI8oinotvChQvr/RUxL4Jshw4dxowZ07dvX4Mn4Ghq2bLl448/3qBB
gwcffFB8QQAC4Pnnn7/nnnugHN566y3xqX4DMKmHh4cYX9wBAOLOPGKxVnc/
AWXEdITsQ4cOoQlp+9GjR8Vt+W3btolb8QkJCegm7v+LjwVKYFj0FMNiLpG5
mxwWLzHpzZs3JQGA0I9D0ArXQQkIgQTNgHkldxFCCCFVwhF+Chjl4OBg6dF2
pahUKv276wYgob5+/br08XgIgNmzZxcUFOjn48Ygrd63b5/+IJhCfD5BgAHz
8/NFGSFYRF6EZuTg+lEYzszJyTH+siEEANQOhs3NzdX/pUGTwxqD3B8TiXsU
gv3794s7BoQQQogV3PF/DEgIgEq7QX4gyzZ5f6BaEAKgukaDnUj/+R1AQggh
VnPHCwAvL68zZ85Y0jM9PV3+LoEtZGdnx8TEVNdoiYmJxn84iRBCCLGcO14A
EEIIIcQY6wQAP3tGCCGE1F0Qx60QAPHx8eJ3+QghhBBSF0EcF9G8SgIgNTVV
/C0bQgghhNRFbt++nZGRoVAoqiQACgoK0FRYWGhv8wkhhBBSZRDB4+LiysrK
zD3oNycAQElJSWxsLPRDeXk5Pw9ACCGEOD6I1+LHahDfEf2VSqUVAgCUlpZm
ZGTEx8f/RgghhJC6AKK2uPOvVqvNxXfRU0YAAIgHpv+EEEJIHQKB21zub7kA
EJSVlSkIIYQQ4vCYe+5vnQAghBBCyB0DBQAhhBDihFAAEEIIIU4IBQAhhBDi
hFAAEEIIIU4IBQAhhBDihFAAEPL/2bsP+DbrO3/g0FIOuuii5a50XhdQOii9
Xu/uD22vR+nR3rW0vVIOKBxN2WEESEggi+y9iVeceO+9RzziPeJ4G494yLa8
5K1YW/+P9EtURSu2LEuy9Xm/8srr0aNn/J5Hj37fz0+SJSIiH3TNADA1NSWR
SDo6Opbs+4qIiIjIlVC1UbtRwZ0OAOL3gKRS6czMjFKpVBMREZF3Ez/+Ozw8
3N7e7iADOAgAWEv8EpBGo/H0NxoSERHRwkxOTqLE28sADgKARCIZGhrirwAQ
EREtU6Ojo6jmCw0A4keEPd12IiIicpJKpers7FxoAMB8Dv+JiIiWL9RxVPO5
ubmFBgBPN5yIiIgWBdVcqVQyABARkfthBDq4lIaHh+VyuQcbsESueVzzgWou
/i6AAYCIiNwJJQy1DCV4Sf/qTezCIw1YItc8rnlafABAY0aGZH87n7OXpiZn
FtqM3PTSxRwFEREtOxjGooSpltjs7CxqpQcbsEQcHNc8LT4ADEqGn3t0Y9OF
dnGzKLcqKjhtoc14+al3F3MURES07KB+KZXKpS6U2AV2ZPOz6+5pwBKxd1z9
/f21tbW5RpjATXvn3yUB4J1XDu7e6D9tHPibAkBTXfvGVw+98cyutLizuKnV
asMDk9c+v+fAu6d6Lw5gzom9YSEnE9es2jE5Pr36yXfjw7PXrNq5b3PghGwK
/7a+cVQcV256aUZiofke48OzXv/rzt3v+GH1uqoWzMlMKnrz2d1vv3ygvrYN
N7OSi0P9k3Bzx/r33m++iDkjQ7K9mwJefXq7/6EopUKJOfkZZZteO7z9rRMi
umBmUlSuWq1e8BVMREROQf2yrGryKXVPqUqp+Nuc6RFVX+UiayV2ZPOb62w0
QOg/r25OUMknxS1N7vpFNsCRkXZ11UmLefPco/VxoUCnWbH3xr1LAsC7a481
13cc3xumNwsAW14/ggwwNDi6/sV9yAYo+jEhGYo5ZUF2RdDRWCyAihx4JAbV
H4X+xce3RASlyEYnMCc1Nh/3onZf7JBgAoX+YnufaXejw7J1L+zF1rDHl57Y
UllyYXJiesPq/UMDo41172954yiWQSlHk8ZGJlDlRauw8ZSY/KnJmSM7z9RW
NKE9CAMz03JsB8EDC0yMT2198xjmLOZiJiKi+bNRfyVV+s3XqVuS/lYK01/U
7f70YgqszUJptwFTQ7oT39VGPaxJeUZ35OvqxljMQ5OuyiRO0Qbfr5odt56v
7sjTBv2rxcx57tHiuDDYNxX9SSPTTZuvA7gqAGAi+ER8YXaFCAAo0xjOY2CO
f9vWHS8vrhNL5qWXRp5KxbhbbwwApsqOADA6PI6Jzvd7d2/0x0R2yrnk6DyU
7A2rD5i/xFGYU4lqLqYP7ziNAFBaULtzw0mxr1f+bxtSBAJAekIBFsDqSAuY
eOvFfZiJBU7ujwg5majVapEZkEMuVLdi2vnLl4iInGUzAOi23awNffDyTfmk
bt8/6HZ/yjAtbdQG/Ei38xbt6Z+pZN2GknrmP7RRv9Pt+qRqtEPdFK87/I+I
CpqctdcslA4agHJs2OClacMNWbe6t1yUY23S07o9n9FG/0E1O2FYzLC7r2F3
mK+ak2sTn1I3RBmaFP17TelBlTG3qGtP/a36hzyAjWAL2KC6LV3rdy+OS5Px
8uU9nrhbe+bnhkOL/ZNqbvZvAWB2HBvU7fy49uQ9qsH6ax5XbW2tvQCAu6wP
34UBYGZ6FoP9yOA0BID+3qG1z+8pzqsS/zDQxvB8/Uv7MxIKUZpNAUDSIxUb
QQDAQB4Tfd2DCAx6w0h/fNva46WFtfHhWea7Q8AID0wW0we3BSMAnM0qP7A1
yLQvbAe1Pj+zDAtcks+te34v8sPrf92Zm1YiFmgwvk0gn72Um16K5IBI4PTV
S0RETrMdAE7eg/qoGm4zFMfKE5rkVeIVAG3Cn7UJT6oG6rQR/6XJWYc5hiXD
HlJJm1ArdQe/rK4LQXlFkVWNdTkdAFSKS7oj39Dt/Zwm63VVf62Yh3KsyVqD
HelOfEddH2nY9cEva8qPqHtKdUe/qX4/U1OyT5P6HJKAbsfHtCG/MCxw9Fum
1Q0uTeu2f8SQW5QKTcpf1Q3RCC26/berJDUIAIbtn9ur7j6HUKFuTTUFAHVN
oPbUfaqhZk3aC8gY1wwAubm5ptJvDjNxl/XhuzAAQFVJ/XOPbhRvAWCIjRig
N47lJb3S1LizsaGZuIkJmwEgI7FQo9bEhGSI1+Rh19t+Oze819151QsXYyPj
iBadbb31Na1YCwFgZEi26bXDszPyuTlFXFiWYk5pEQAwEXw8rjC7AhN1VS21
FU0T41NoBoIBYsZLf96K+TiH1WUN/IZDIiK3sRcAUFs1ma8ZyuiJ76q7SwwB
ACV+z62qoRZDKujMx5BZBAB1R65hrYELum03a/LfwT/dka9rKk84HwAMFXFG
U3FMG/wT3ZYPqKv9L5fjqSFMaHLWGl5hGKjD+F0sq8nfiOqMOm5ozMUibeRv
dQe+qJoYMLT26o8X6nZ8VDU9apiaHVfXBGjyNhjKfX2E4RWAvZ+9vLXc9Zr0
l0wBQBv1O23ogzgobdJfdHtv88YA0D+Cobrp5tHdISIAnK9sRjDAqN//UJRW
qx2Wjm189dDa5/a8tz/8cgDYHIBgINZas2qn38HIV57ahuWlAyNiZk5qydsv
H7BuM2r3htUHjuw8g8E7AgDmpMUXYElEjsykItxMjs47m1muFwHA+BYAksbh
HacxjUQxIZvCnMAjMWgPksPZLMOSyBUvP/WuE3/ASEREzrEXAFRTw6iw6vZs
beCPDdMIABiY7/iYeOXfMO4+/LXLAaCnzDinTLfrE5rSg+IfMoPzAQCFfqL/
cjku2WdojNk78pqCLZrsNw2vMxz66uVlinYY3gVQKlGgDXdVnjB8fiB3PWq3
xYZNAUB37E7Dixgl+3XH77ocAA584fLWCrZqkv/ytwAQ+qA29pHLx1V2SGX1
BwsefwvAMZVSZX5TefVNCxi8m6YxGI8+nW7x+X9A+UaVR6JQKpSb1xzpaO0R
89Vq9TXfzbfYO9pmPuTnhwGIiNzJbgAwvJn+B4yLDR+PFwFAvL2e+5bhbfGk
v4hhsikAGOvvZ9VdBYYX2HPWGf6OwNkAoG5JMgzhxyUqxZwm8xXt6Z9aBwDj
7j6nbkvDYlq/e9VNcYbmRf3OEFFG3tdUHMeEpvyoZQDY8xnDmwIzMt2WD6pk
PYa3AHZ8VAQAw+cem+JV4326975veHfgyh41ZYe14b9SySdxRJrsNyzPlRd8
CHCJRASl+B2MtBkYooLTMHLf8vqRlJh8N7SEiIiWgq0AUK01BgCUV922m1Eu
VdMjhpfToa9Se+bfdVs/hOGzeC9A6/cD8SE9w/J1obqj39Tt+qQ2/NcqxSWn
A4Bhs3H/q9v+EfHRO7F93ebrxejbMEI3fshQfSEcA3lDoU99ViWfMtxVflR3
8MuG9YdbDeVb2mSxWU3aC7p3b0Ri0WSsNmx/7226976nro80vKNx/C7DBw+2
3WR4o9/4lwKX9zgxoI17TLfrE8gk6ubEawYAvdv/DJCIiMgJdv8M34FLM3bv
QsU01uL5FMprNODStGpyHm0zfmJ/AUzLY/vWX0Ak/vTA2pWvI7Bm87jc+UVA
RERETnDnNwHaCwDL/ZsAbR7XPDEAEBGRR6B+zc4ucBC9cHK5fGhoyF4AcEMD
loiD45onBgAiIvII8WN8+H+JhuHYrPjFnOnpaZsf817qBiyRax7XPDEAEBGR
R+h0upmZGQxjHfzw/eJhF2q12ubXvLinAUvEwXHNEwMAERF5CuqX+IH7peO4
SrqhAUtkkdVfzwBARESehkKmXRrzLJFL14Al4pLvrWUAICIi8kEMAERERD6I
AYCIiMgHMQAQERH5IAYAIiIiH8QAQERE5IMYAIiIiHwQAwAREZEPYgAgIiLy
QQwARORaGo0mIyNjeHhY3BwdHS0vL8dETU1NhhmJRNLa2tre3i4WGxsbw0yp
VGpawHQX+ijc1Ol0LS0t4q68vDyFQuGRoyNaMRgAiMi1Zmdnr7vuugcffFDc
zM7O/rd/+zdMPPTQQ7/4xS9ev6Kqqgr/b9iwAXd1d3d/4xvfwE2kBay7adOm
d9555/e///199903MzODbICZ6Kleeuml+++/H/e++eabd999d3BwsAcPk2i5
YwAgItcSAQC1Pjw8XH91AAgKCjJfUgSA+vr6L33pS+IumUyGdcW9Uqn0hhtu
kEgk5gFg8+bN4t7nn39+1apVbj0wopWFAYCIXEsEAHQUt99+Owq6eQDAxNNG
r732mt4YAH7605/ecsstjz76qFhXBIDHHnvsT3/609e//nWsoje+O2AKABj4
495f/vKXN910U1VVlQcPk2i5YwAgItcSAQAT69ate/LJJ80DwB/+8Ie9RidO
nNAbA8CHPvShHTt24P/S0lL9lQAQHh4eFha2adOmG264oa6uzjwAPPzww7g3
ICDgRz/6EaY9e6REyxoDABG5likAYOILX/jC2rVrHbwF8Oqrr4qJb37zm3Nz
c+ZvAQBKPGKAzbcAGhoabrzxRn4UkMhpDABE5FqmAADR0dGYdvwZAEzI5fKv
fvWriArmAaC0tPQb3/gGtmAdAKamptavX3/HHXe49cCIVhYGACJyLQSA66+/
3nTzZz/7mQgAv/rVr+wFAMjNzb3hhhsKCwtR6683+tSnPrVq1SqM8U0BYPXq
1eJeLPntb3+7qKjIncdFtMIwABAREfkgBgAiIiIfxABARETkgxgAiIiIfBAD
ABERkQ9iACAiIvJBDABEdA1KpX5ubuX8U6k8fUKJvAIDABFdw5136q+7buX8
+81vPH1CibwCAwARXQMDANFKxABARNfAAEC0EjEAENE1/O53+u99b+X8M/78
EBExABAREfkg3wkAMzMzKu/79O/k5KTe+FNoOp3O020hItJrNJrZ2VnTTfRO
HmwMLSmPBIChoaHp6emFrqVWq53eY2Njo5+fn0wm6+7uXsx2XKWgoMDPKDk5
GTfj4uJwTjzdKCLydc3NzUlJSWfOnMnMzMSoBCOUsLAwTzeKlor7A8Dg4GB6
evpCB7w9PT2FhYU275rPprRaLartxMSEVCrF3nFzQXt3LeSQ+Ph4/G9qeUZG
xtTUlAebREQ0NzeHIRImMEBDhzk7O4vqgM7K0+2ipeLmAKDRaMLDwy1eU8rP
z7deEjvKzc3Nzs7GGFmkUKxYUVFRWVkZGhpaVFQUHByMqxQLlJaWYgSNAoq7
EFxLSkpwl/ihcFTYsrKy1NTUtLQ0XM/i9XYsVldX5/QhLF51dbW/vz/ag1bh
GYc5aKRnMwkRkYBus6qq6ty5c+ImelTPtoeWjpsDAAbg1nnSZsJsampCAMBE
eXk5/sfVWFBQgImLFy+idLa2tooWJiUlYWZmZmZjY+PIyAju6urqGh0dDQgI
UCgU/f39iYmJuJ4xxxQAMFO88O5BarW6ubkZjRRBxRvelSAi0hvfoETXhGGU
GKmxd1rB3BwALly4IOq43vipvItGGNqLCfOXwYeHhzFMTk9Px2J6swAwMTGB
Uq7RaPTGpCqTyZAQQkNDEVmxOu4SH6jDBIo+1sJ4X3/lLQDTJ+4CAwO9YcRd
X18fERHh6VYQEV0FvS66ZXTXnm4ILS03B4C6ujrTW/mo3bVGISEhYgJF37Sk
UqkcGBjARYh70UKUcrGieQCQSqUooCjrubm5NgNASkqKWMs8AOAQkG+9IQD0
9/fHxMS4fLMHDx68mYh8xpo1a1zejaDLLSsrc/lmyau4OQD09fUlJiZazLT5
FsD58+dR0BUKxZkzZ0ZGRkpKSnJycnATsQGlXPxBX1FRUXJyMsp9QkICRvoi
GyAAIB6IAIC8ERoaivmzs7Nijt74KcS4uDinD2HxEGzEq2p4fiH2eLAlREQm
6DnRweqNL66ia8UIy9MtoqXl5gCA6oyCbjET5dt6SQQAjO4xrs/OzsbN7u7u
wMDArKwsDPZRyouLi3GJdnV1YSwfGxuLZYKDg5EQcFd1dXV9fT0mEA+wOwyx
sQx2YXrDvbm52d4fFLiBVqtFJgkJCcnIyOBn/4jIe2CshH4S46P09PSOjg5P
N4eWnPv/DBA1fT4fwtcaKZVK0xzzaRPTB1TEmwI2iU/aiyUxHR8fLz5X4Clo
KhrA0k9E3gb9pBd+YRotEfcHAIzcMboXb8e7H7LH+Pi4R3ZNRETkPXznq4CJ
iIjIhAGAiIjIBzEAEBER+SAGACIiIh/EAEBEROSDGACIiIh8EAMAERGRD2IA
ICIi8kEMAERERD7IdwLAzMyMV33F5fT0tE6nE9PiFww92x4iIhP0SKbfT/d0
W2ipeCQADA0NofwtdC3T1/47obGx0c/PTyaTdXd3L2Y7LoFmpKSkREdHh4eH
T0xMYE5cXBzOiWdbRUSEchASEuJnhG4TGSAsLMzTjaKl4v4AMDg4mJ6evtAB
b09Pj72f8JvPprRaLa5nVFupVIq9e/aHeNra2kQD4uPj8RTDREZGxtTUlAeb
REQENTU1ZWVlptckUR1s/lw7rQxuDgAajQbD3vm8poQd5ebmZmdnJycnixSK
FSsqKiorK0NDQ4uKioKDg6enp7FAaWkpRtAooLjrzJkzJSUluEv88i+uYVzM
qampaWlpCADiFS0sNp+fI1xqGPJHR0eLnzjk7wITkTeIjY1FVxkQEFBdXS3m
oEf1bJNo6bg5AGAAPs882dTUhACAifLycvx/7ty5goICTFy8eBHXZ2trq2hh
UlISZmZmZmIoPTIygru6urpGR0dxASsUiv7+/sTERMQAzDEFAMxEqHD6EFyi
s7MTWQVNEifT4+9KEBEJs7OzeXl56J0kEomevdOK5uYAcOHCBVHH9cZP5V28
mvnL4MPDw/7+/unp6VhMbxYAJiYmcGVqNBq9cYAvk8mQEEJDQ6uqqrA67hIv
XmECRR9rYbyvv/IWgOkzLYGBgR4fcaMB+fn5CQkJLt8yzsY/EZHP2Ldvn8u7
EQydKioqXL5Z8ipuDgB1dXWmt/JRu2uvhqJvWlKpVA4MDISHh4eEhKCFKOVi
RfMAIJVKIyIiUNZzc3NtBoCUlBSxlnkAwCEEBAR4PAAADnApPmCDA28kIp8x
ODjo8m6kuLi4pqbG5Zslr+LmANDX14dgOZ8lz58/j4KuUCjOnDkzMjJSUlKS
k5ODm4gNKOXiD/qKioqSk5NR7jGOxkhfZAMEAMQDEQCQNzAcxvzZ2VkxR2/8
FGJcXJzTh7B4OAQRYBoaGsrKyjzYEiIiE3SwYhSG8VFUVBR6Kk+3iJaWmwMA
qjMK+nyWRADA6B7j+uzsbNzs7u4ODAzMysrCYB+lHOkUdb+rqwtj+djYWCwT
HByMhIC7qqur6+vrMYF4gN3FxMRgGSQE/C8+Gdjc3GzvDwrcA43BScCxlJaW
8v01IvISAwMD6DnRQaWkpFy8eNHTzaEl5/4/A0RNn8+H8LVG4kPygvm0iamA
ijG1TXNzc6YlMR0fHy8+V+ApiC5I2h5sABGRTeia0Ml7uhXkJu4PACh/GN2L
t+PdD9ljfHzcI7smIiLyHr7zVcBERERkwgBARETkgxgAaEllZWUl0srixA95
EJEXYgCgJbV///7NtLKMjIx4+rIiIhdgAKAlxQCw8jAAEK0MDAC0pBgAVh4G
AKKVgQGAlpRUKpXQysJvryJaGRgAiIiIfBADABERkQ9iACAiIvJBDABEREQ+
iAGAiIjIBzEAEDkml8vPnz+fkZFRU1ODacxpamoaGRmRyWRFV9TW1s7MzAwM
DBSZKSkpwcLDw8NY3lO/fkVEZA8DAJFjeXl5ZWVlKO4FBQWFhYV64/cbd3Z2
9vX1xcbG9vb29vT05Ofnx8XFTU1NdXd3IwxERkZiAndJJJLg4ODS0tKIiAis
4ulDISL6GwYAIsdQ5VtbW3U6nVqtxoTeLACkpqaKZTDMP3PmjJhGVEhMTBTT
lZWVbW1tmKivrz979qwnmk9EZBsDAJFjKPTh4eGnT5/Ozs6WSqV6swCAop+X
l5eTkxMaGlpdXS2WNw8AgkwmE68JuL/xRET2MAAQOaDRaMQ3305NTdXW1iIJ
aLVaUwCIj49HJBgcHMToPiUlRaxiEQDq6uqw1sWLFz1zAEREdjAAEDmAco/y
PTY2humJiQl/f3+5XG79FgDuwmJi2jwAtLS0IBgolUqPNJ6IyAEGACLHcMGH
hYVhsB8ZGVlVVaW39RkAPC8CAgLE3wiYB4DMzMxTp06FGhUVFXnqEIiIrDEA
EF2TTqebmprSarWebggRkcswABAREfkgBgAiIiIfxABARETkgxgAiIiIfBAD
ABERkQ9iACAiIvJBDABEREQ+iAGAiIjIBzEAEBER+SAGACIiIh/EAEBEROSD
GACIyBeUlZWdcClPHxDRYjEAEJEvyMnJ2exSnj4gosViACAiX8AAQGSBAYCI
fAEDAJEFBgAi8gU6nU7jUp4+IKLFYgAgIiLyQQwAREREPogBgIiIyAcxABAR
EfkgBgAiIiIfxABARCtARUXF3Nyc6aZOp2tqasrKysrMzKyvr9dqtWJmQ0ND
RkZGUVHRwMCAWHJ6erqlpUUmk5nWVSqVra2tYrq/vx/3Tk5OipsKhaK9vb2r
q0ts0OImVkT3KJVK3XLERIvFAEBEK0BYWNjU1JTpZmVlZXR0NGp3W1tbTEzM
uXPnMLOmpiY2NrazsxMlOzQ0dHh4eGZmJiQkpLS0NCoqCjPFujk5OZGRkXpj
94jNlpeXnzlzZmJiAlU+ISEhLy8vPT0dG7S4KZfLsU1sCvtlJ0nLAgMAEa0A
FgEAN01j/JGREVRwDP9Rmk0zBwcHJRJJdXU16jtWRH0fHR3FfASG1NRUEQBq
a2uxGCZQ4tHv9ff3o+LPGvX19VncbGpqKioqwsLd3d1paWluPnwiJzAAENEK
YB4AUM1PnTolXpYXTp8+jXIfFBRkPhMwfsfM2NhYDN4RACYnJ2NiYrC6CACA
4h4fHx8YGIiJ5uZmTERFRSFOICdY3MT2k5OT5XJ5aWlpRESE2w6cyGkMAES0
ApgHALVajbJu+kgAinJwcDBu+vn5YVrMHB4e7urqyszMLC8vx82Ghobi4mKM
/QsLC+vr61HTe3t7FQoFAsP4+LhYDPMx5MfCY2NjqPsWN3U6XU1NDfIDNoIk
4IFTQLRADABEtAJYvAWQnZ1dVlamVCr1xrf+c3NzMYF6jTqOeDAzM5OYmNjd
3V1mhLsuXLhQUVHR2tqKierq6tOnT7e3t2dkZGAZ3Is5uLenpyc+Ph6FfmRk
BJuyuCmVSs+fP683ZonS0lKPnASiBWEAIKIVAAEAw/wzRuijxKg8KCgoMjIS
ZXp6ehrLYCyflpaGBQICAvLz81G7kQRSUlKio6OTkpJM+QG9HNbFhEQiiYiI
wKAeW8C9WL6goAAbxJze3l6LmwqFAtvB2B9zzP8egchrMQAQ0UqF+m56zd8E
nZh4ZcB8jr0toMpbbAHFHTPt3cQeF9ViIjdiACAiIvJBDABEREQ+iAGAiIjI
BzEAEBER+SAGACIiIh/kXAAw/9QrERERLS+o404EgM7OTqzi6bYTERGRk1DH
RTVfUADo7+8Xv5pBREREy5FMJpNKpUqlckEBYGpqCneJb9YiIiKi5QUVvKOj
Q6FQ2Huj314AALlc3t7ejvygUqn4eQAiIiLvh3qNqj06Oor6juqvVqudCAAw
NzcnlUo7OzvfJyIiouUAVVu88q/Vau3Vd7GkgwAACA8c/hMRES0jKNz2xv7z
DwCCQqFQEhERkdez976/cwGAiIiIVgwGACIiIh/EAEBEROSDGACIiIh8EAMA
ERGRD2IAICIi8kEMAERERD7omgFgampKIpF0dHQs2fcVERERkSuhaqN2o4I7
HQDE7wFJpdKZmRmlUqkmIiIi7yZ+/Hd4eLi9vd1BBnAQALCW+CUgjUbj6W80
JCIiooWZnJxEibeXARwEAIlEMjQ0xF8BICIiWqZGR0dRzRcaAMSPCHu67URE
ROQklUrV2dm50ACA+Rz+ExERLV+o46jmc3NzCw0Anm44ERERLQqquVKpZAAg
IiLAkHBwBRkeHpbL5SvveK95XPOBai7+LoABgIjIx6GmoLigJnr679VcQ1Q3
cUQr6XiveVzz5KoAMD0121zfMTosW0xjFiQvvRT/Y6dtTRet77U3n4iI7MG4
EjVFtbLMzs6iVq6843VwXPPkkgBQkF2xec2REL/E0+8lHNoefLG9bzFNmqeX
n3oX/9dVtTSctxFI7M1fkJMHIpC13LkiEZEHoaAolUpPVzYXwxHhuGx+dn1Z
H6+94+rv76+trc01wgRu2nu4Fx8ABiTD61/cp1Jdrne9FwcKsysw0VTXvvHV
Q288syst7ixutrd0+x2M3PX2yQ2r9xfmVIqFM5OK3nx299svH6ivbTPfpkaj
CfVPWvfC3oPbTo2NTGDdU8fiDu84vWbVzvDAFK1Wq78SAHLTSopyq/TGIf+m
1w5j46mx+ab5GrVm29rjQcdi33h2d3hgsjhR8eFZr/915+53/EJOJiIn2Nvp
iX3hzz26EStKeqRZycUBh6PfenFfdVnDwW3BstEJvTFjxIdnY2J0WLZvc+Dr
f911+kS8fPaS+YrWC5/YG4b9rlm1Y3J82uIUWTRAqVAmReUySBCR26Cg2C42
/efVzQkq+aS4pcldv9jqNdKurjq52I3YoinerZoesZiJ47L5zXXuO14HbJ2K
ee7R+rhQoNOs2HvjfvEBoKK4LvBIjJhWzCnxD3kK01teP4ICNzQ4ingwPTnT
0tD54uNbujv7e7r6UcfR5smJadTroYHRxrr3t7xx1Hyb5yub920JRO0rL67D
P6yLklpT3tjfO4SKiS3orwSA1LizOaklYndoycT41Pa3Trzf0i3mIwBgxYLs
ivGxScQDhBMUa1RYTCAwvPTElsqSC/Z2ijmo6eJYUIi3vnF0sH8EG3x37THx
TkdVSX1YQDImIoJSI4PTcIwhfomilJtWtF5476YAnC5Uf6QRi1Nk0QAcy9Y3
j81ML/ZjHkRE82SjIE4N6U58Vxv1sCblGd2Rr6sbYzFPv/k6lVKxmKKn7sjT
Bv3rYrZgj+7AF1Uj71vMXEAAWJrjBW3w/arZcev5Nk/FPPdocVwY7JuK/qSR
6abN1wEWHwBKztYc2x2KCRS11/6y45X/2/bOKwdR9VDlMcDHv23rjosijuGw
WGXzmiPD0rHSgtqdG06KZbCWGCkLSAXYVFxYVnenBDexLkqhuCsxMgfL668O
ACNDMuxULCCG+aYA8NKft4pBdERQCppamFOJCbHk4R2nzQOAxU71VweArORi
MdO6pqN8y8YmzffuOACIt0isT5F1A4iI3Mm6IKI86XZ9UnVp2nBD1q3uLRfl
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
DwCjo6NjY2OeboUjnZ2dExOOfmqwra3NYo5Op7tw4YLpOwmtT7jFAk4bHByc
np5e5EbMXfNgberr66uurlYqldde1CkajUahUCzRxl2Cl/Fi+MJljHM1MjKy
FFsmX+bmALB9+/abb775c5/7HJ6zYk5paem999574403Pvfcc++88w7u/eAH
P/jggw/+6le/+vGPf/zxj3/8oYcesrkptVr98ssvf+ADH4iNjXW6PU47dOjQ
P/zDP1x//fVo5He/+9177rkHjbHZaXzta1974YUXbG5EIpHg2G+99VaL+XV1
ddddd11hYSE6VWz8i1/8or0FnG4/auLjjz+O9ldWVjq9EWsODtaeTZs2vfLK
K3ffffcf//hHF7ZEQLcZGRn5jW98Iz8/f56r4MxccxlexuZ4GeuX+DI+ePDg
7bffjsP86U9/Wl9f7/Ltk89y/ysA6CHxrL///vtNPW1FRcUDDzwgpu+7777b
brvNtDCiuOkua2i5p3pOQFeJA5FKpZjGQObDH/7wI488Yr1YVVWVg69iPnny
pHXPiTOTmZmJo8P0rl27rHtO8wVg3759TrT/4sWLaP98es6ioiIcxXy26fhg
rc3MzOARlMvlGD3V1NTMf8V5Ql0+cuQIDnP+AcDf338+PwfJy9gcL+Olu4zL
y8v/9V//NS8vLzw8/JZbbvnTn/7k2u2TL3N/AECH86Mf/QjP2fXr14s5XV1d
pqv6v/7rvzAkMS2M3bW0tDjY2g033GCz59RqtRav+ope3dTbOJhpva5NW7Zs
wVEMDw+Lm3iSfuUrX7G5pKmgiAmdkZhz6tQp0XNaFx0x58CBA6LntLdAfHz8
pz/9acdNFa+yWrzWioGbqed0UPIwyP3CF76A/sd8aw7Oj/mmLE6sNfSWaIP5
L0PZa7/Tv9GM9i8oAPj5+c1nX7yMeRmbLOllvHHjxqGhITH91FNPffzjH1/o
Fojs8UgAOHfu3D/90z9df/31yP96Y4Z/9NFHxb3mPSeeL7/97W8db030nAje
P/vZz37+859HR0dj5ptvvvniiy/+8z//86pVq3Bz//793/nOdzDnzjvv/NCH
PvTss8/am2m9rgPmPefIyAg6wN///vcWy5w9exYzn3766fHx8RdeeOGzn/1s
YGDg7bff/vnPf765uVl/pefEpnAXOqimpiZ0I8eOHbv33ntTUlL0xp4TC7/+
+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
dAjNmQDAcjB70ESrfyMCVmVmZmIuCQkJzFocoyYGqu4yEQRBEArGir8DgJiO
+Mt/PD116tSlS5caVEMKjGpnzpxhpzNmzPiv//qvX3755a233pqkB8n7q6++
igMW7xgQAGjVokWL5557jj1GFwoAT0/Pf/7znzhAaH777bcbN27cpk2bVq1a
iQoABFkW4tkxQioycSTyLAQbCABfX18csMqlpaWojCDu5+cXFBTEChMTE5kA
gDzw9vbG8b59+xDERQUAZAk+raysZG0R5SEwMCJ77ZD1xl4pRG/QGGjFaQkG
mrMHBwRBEATBsKIAQNhFgOaiNgJcu3bt+GGLgRGffvrpNWvWsNM5c+Z07doV
4mHe3yD69+jRAwf8L9ZBADz//PMIux06dJg2bZpWTAB8/vnn7IXDjz76qH//
/oi5OP73v/8tKgDi4+P37t3LjiEADh48mJ+f7+Liwt5JMBAAYWFh7JUArf4R
BqJzeXl5aGgou4+h1X/zkQmA48ePnzhxAlEe04cSEBUA7IECUxrA1dUVS4AR
YQMrYXICPWCOGCgrKwsG8F8ghOU1/uEFgiAIQpFYWAAgjJ49e5Yls/Pnz2cP
8RkRERHt27fnV75x4wbCOir/9ttv7733Hit85513Vq5cya82atQoiZcAkeY3
atTo2rVrTAAcPnwYwffy5csTJkxo1qwZe6kP+gFDaPXP0Js2bbpu3Tqh5Yiq
CKkIylreS4DsMT16NhAAKEEQRyHkDU5Z3GfP4tEWyuHYsWNMAHh4eFy8eBHS
hd1VuH79uvZvAVBcXIySpKQkeABKIyQkBMEdcRyFJSUlQgGAAy8vL8xIpVJl
ZmaiBDZr9d9QwHF2dnbNlowgCIJQJBYWAAh8CMcvv/zyJ598sn79ev5N+wUL
Fvz444/8yvb29gjHubm5ZWVliNfDhw//8MMPEe5LS0v51b755huDhlq9AOB+
BwDioW/fvvzfAXjqqacGDBiAOqwCwmuLFi1at27dpUuX0aNHN2/eXJgvIwqz
1FurFwDsdwBQiBQeYZe7IY9wHxwcjIDu5+fnpAfl7Pk7Cn19fVkhWrGb9uz2
Po7RYUBAAEvbUcJuR7CnAyi5d+8e6rC2UEpavZTiCwDWW2xsLHQIZAYkBHQF
+xTWurm5cU8QCIIgCEJrjUcASKILCgqE5UhXDX7/BxGTn7fm6zFlaGmrEMTZ
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
0dHR7733nndtFgRBEOoaIgDqHboAaNGixcmTJ4n4+fkx6zf9nTVrVmBg4Pjx
4ydOnBgXF5eenl5aWupl0wVBEIQ6gwiAeocuAF588UU15R8yZMhPP/1k+ou7
X7t2bXZ29sCBA3/44YeAgAAkgZ7JsWPHwjSCg4O///57dMKXX345ePDg2bNn
s3Dx4sVLlizJy8tzZgM5k4CUxl+1lRFjAtbqf93sQsXFxWpD+7KMJVa6yh6j
Mep3+/btbrb/ypUrHdZRLzEiIoLfAwcOuM7n3LlzujGXL192s3Q4f/68sQqQ
mprq/uawbNmyoqKiKm3iRWJiYtLS0pyt3bFjh7OeRuevYdGnT5/Wd25FRYVp
LfmzdunSpTUsxURhYaHe7Y3s3LnTzRwiIyPt+7zeRS9cuOBZgxWxsbHGvWAs
MTc3t9rZ7tmzhxz27t3rQVMFHREA9Y6bbrpJCQBfX9+FCxcS6dOnz8aNG01/
VeIff/xx165dL7/8MvFFixbpmURFRfXWeOWVV2644YYnnnji97//fdu2bfn7
1ltvvfnmmx07dnzwwQcdGjBjxoxrrrnm7bffJqXxl63sF+q/rFWRXr16sTkd
qdKa9uzZ87bbbnORrWmVwpkxCpMx+i8mbdu2zVh6QkKCvZ3Tpk1TdXdhDDpK
ZejCbQEN/pe//IVNWrRowY6otDV0/vSnP3Xo0EGvAruMskzPhrhgzJgxpEcu
ul+iF0FuXaPh8C5WtIF9V1Qt07lz51atWrlf0HXXXcdRYFxCk6qGUnsTFW3a
5I477njsscdYNXLkyGpUzRnPPPPMXXfdpbqTsadRkDt+cOzYsXoXNfLee++R
JzmTvwetVWzdupVCTUeiPpI89NBD1ctWHYOq/U+cOOFZmwWbCID6BqK6UaNG
06dPJ37mzJkePXoQ/+abb+z/Qnp6OqMW82iWBwYGZmZm2mdIGjyR/XJ6BcLA
4TzxvvvuQ1TUpBZPP/30hg0bKk3WsmVLhzZfDYYNG/b9998bl/j5+bVp02bV
qlXGhfiITZs2uZNhv379Zs+e7WxtVlYWQk5NKpnxNWnSxM2TAGxy4403solx
4VNPPbVu3Tp3Ngc8I1VAdbiZ3rv079+frksHDgoKsl87YMCAyZMnO9yQhmre
vHlOTo47pdD4v/rVr1q3bm1cuH79+i5duqj4kSNH7r77buPa06dP33LLLTbN
Sd1///3ulOIOFy9eZP867AxfffUV4s315uXl5WhmF0M0owHHtcevBo4bNw7z
nJX429/+1v65JHdg/jJ06FAidIDly5fXyETBESIA6jumKarDmbWLo8+ZAICu
XbuuXbvWuOTKlSuMikwiqmXp/w8H9U8//eQ6DdNnZlg1LMh9tmzZ8vjjjxuX
MOb8+9///vzzz/Ul+fn5TZs2dXPwnDVr1jvvvONs7ZIlS8hf/4sHVw9uVMqp
U6fatm1rWujr6/uvf/3Lnc3pHoz/+BfcREZGhjubeBcqy4CzbNmye++9NyUl
xbiKXo0LdnGahcl7ZGSkO6Ug8+jt7dq1O3TokL5w4MCBzKb1v8hRY4sFBwe/
8cYbygy0HIrO/Uq5YPXq1d26dXO4ij7zj3/8w/Xm6Oq//OUvrtP8+c9/rqGA
t+e9996bM2eOs7WMGMePH69GttRl69atRDgSKxU/QjUQAWBxXAiA//u///vP
f/5jXILXvuaaaxITE2tYKKPcs88+6zoNY/7f//73GhbkPvhEPKN+npn5I6N6
fHw89Q35BT8/v1dffdXNDJOTk++8805na3EuEydO1P/6+Ph8/fXX7mSLq7I/
e3/w4MF77rnHnc1jY2OVziGTlStXurNJ7UPjl5SUsEeYd6tZOUvefPNN9oWu
AS5cuIAYc+3shg8fbjqrw1YvvfSS/S0TH3/88aRJk8aPH08RONnXX3+dX+LG
lL169TJeRPvggw8CAgJUvGfPnnPnzi3RQCSbMqciGG9/4uighmkh3cDZBQWM
MV3UoLvu3bvXqPk//PBDZ6dEdL744osJEya4TlNV2BEuRAUHclXn76RfvHjx
b3/727KyMv7OnDmTBq+plYIdIgAsjgsBgLNgDMQR60tQ8kePHq15oYWFheT8
ySefML/+9NNPmVPPnz/f5Fu/++473GLNy3IfpuS//vWvH3nkkUcffZTpnroF
guGU0bufRvfu3at0A1Xz5s3vu+8++8sojMBUH4WgL9m3b5+b10lHjx7NbMh+
+e9+97v8/PxKNx81apS6QjRkyJARI0a4UyJ+p0r3KNacd999l/a5TmPevHn6
ciwfNmyYir/22mtvvfWW692xceNGclisERMTw5J//vOfaNqOHTsak6Eubrvt
NiUtoqOjIyMjo6Ki+E1KSjImW7t2LVbRKx7SIH769Gm1Sl2qxlv96le/Uld2
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
Tz6pNJm/v7/6FlWrVq1OnjxZaXryxC+npKTccccd7phx5cqV1q1bL1682Nnb
y51hLGLt2rWTJk2q0uY1pKCg4OWXX1ZfaLVpL1QJDQ21aTJJ3XA1duzYkSNH
JiYmrlixIiwszGEmIgAEQRCsSS0LgKKioh49etx8881t27adMmUK3qdr1642
7avTLH/sscdYNWTIkG+++ebWW2997rnnlLv/9ttvw8PDbb8IgIsXL7Zv375p
06a33367+ljqqVOn/vrXv44aNapTp07R0dHPPPPM6dOn33zzzWuvvZaUb7zx
xvfff697Z5LpzyYr3n33XZVyzJgxFD1s2LBXX331xRdf3LZtG87xxhtvvPvu
u6OiomzalP/rr7/GDASDj4+PsYhly5apb2pTqWeffbZZs2ZdunRRXzuldq+/
/jp/b7vtth9//LHarWdix44djzzyyG9+85uhQ4fatG92qFesYz/NEhsbiz05
OTk0yHvvvecsExEAgiAI1qSWBQBO/+mnny4uLiYTPObx48fbtGlj075Hds89
9+BwExISfvWrX+HxmcLjtkaMGMHaPn36qI+kKwFQWloaExOjMkEGZGRk4Gcb
NWr05Zdfrlu3Do+mkpEVKiIrK+v8+fPMiO+6666KigoqixdmUmy0Kikp6Xe/
+x0p0SdvvfXWfffdt2jRoi1btpDVgQMHSkpK8OBoAJs2ze/YsSM5Y3lAQICx
iFmzZjH1Js2//vWvAQMGZGZmDh48+J133lG1Y3MyPHr06E033eTZ17shA8iT
GrVo0ULpJT8/PyzBnsDAwPHjx0+cODEuLo66OHzbqggAQRAEa1LLAmDVqlW4
WmaseEP+GgUA03CVBvetiggKCmJmbbMTADbti6Ldu3e///77f/3rXzPtRQAY
vZhKZjw/j+tHAGzcuDE8PPypp54yWXXmzBn9veUIgHnz5qn4pUuXMBXFwrZN
mjRhCZ593Lhx+obGInQB8Ic//AHZYNN8K9leuXLFWLvHH38cM6rdgA754IMP
UD4vvviiOgMwZMiQn376CXePXMnOzh44cOAPP/yAXMFCfZOpU6feptGyZUsU
122/UNWLIIIgCEI9pfbvAcArffjhh7fccss333zjUAC0bdtWFREcHKw+EmoS
AIsXL27Xrh1u9Ny5c2gAdwSATTvz37t377/97W8hISEmk5wJgE8++QSvyjT/
xIkTSgB069Zt5syZ+ob2AqC8vJyZuLouf/78+euvv/7y5cvG2iE/TO9CrzZI
CxXp379/WVmZr6/vwoULVXPpGuPHH3/ctWvXyy+/bNO+Na9vi7bJ1qD1Wrdu
nf0LdAaP2CYIgiDUcWpZAOzcuVN9HGTJkiV//vOfqycAxowZgyvn7+nTp2+/
/XZnAqCoqKhZs2YYrBaePXsWd8wk1/5MuDMBgPdXDyngspUA+Pe///3cc8+R
M853y5YtxiL0MwBUBF9MZPr06a+99pqpdh4UAO+///6zzz5Ly6hvqVCLHj16
UCjKSiVIT09n7l9cXMxyKpKZmWmfiVwCEARBsCa1LACYPuMxH9RYtWoVM2Vd
AOg3quGPVBHMZ5UA6Nu3rxIAzFXx7Pj9du3a4frvueeem266iRk6AuDOO+/U
S1HJbNq5ccRA9+7d1fIXXnhhyJAh9lYZP12KAAgKClLx6OholpNDp06dmjZt
atMm9X/961+pAqV//PHHxiJmz56tBMDBgwfxyyTo0qVLXFycqXb2X0OrNuXl
5Xl5eaaFuuAxpXSWiQgAQRAEa1L7lwAoLjs7u4ZmV1RUIANc+DWdwsJCNeVn
ItyiRYvU1NQqFXT58uWsrCz7PJn72xdhJD8/v0oFeQsRAIIgCNbEOm8CDAgI
eOWVV7xtRZ1DBIAgCII1sY4AqNDwthV1DhEAgiAI1sQ6AkBwiAgAQRAEayIC
wOKIABAEQbAmIgAsjggAQRAEayICwOKIABAEQbAmIgAsjggAQRAEayICwOKI
ABAEQbAmIgAsjggAQRAEayICwOKIABAEQbAmIgAsjggAQRAEayICwOKIABAE
QbAmIgAsjggAQRAEayICwOKIABAEQbAmIgAsjggAQRAEayICwOKIABAEQbAm
IgAsjggAQRAEayICwOKIABAEQbAmIgAsjggAQRAEayICwOKIABAEQbAmIgAs
jggAQRAEayICwOKIABAEQbAmIgAsjggAQRAEayICwOKIABAEQbAmIgAsjggA
QRAEayICwOLs27fv+uuv97YVDYfk5OTevXt724qGw969ez/88ENvW9Fw2Lhx
4zfffONtK4S6gggAixMXF3fttdd624qGw4EDBx5++GFvW9Fw2Lx5c7du3bxt
RcMhPDy8V69e3rZCqCuIALA4IgA8iwgAzyICwLOIABCMiACwOBs3bmzUqJGv
4CG++OKLO+64w9tWNBw++OCDdu3aeduKhkOfPn06duzobSs8QFhYmLfHzoaA
CACLExcXd9111w0VPMSAAQNuvfVWb1vRcMBh/f73v/e2FQ2Hf/zjH/fdd5+3
rfAA8+fP9/bY2RAQAWBx5CkAzyKXADyLXALwLHIJQDAiAsDiiADwLCIAPIsI
AM8iAkAwIgLA4mRmZj711FPetqLhcPTo0VdeecXbVjQcdu3a1adPH29b0XBY
u3btwIEDvW2FUFcQASAIgiAIFkQEgCAIgiBYEBEAluLSpUveNqHew/Gix03t
Kc1bVS5evGj8K+1ZQ/Ly8ox/pT0F14gAsAhlZWX9+vWbOnXqP//5z5ycHG+b
Uy+Ji4t76qmnVq9ebbNrT2neqpKbm/v000+3bt1avTk5IyOjZ8+eNOCAAQPK
y8tNf71tbD2AXte3b1/6p7plQtpTcAcRABYhNDT0448/JjJnzpyhQ4ea1hrH
BBkfnEHL9OjRQwkAU3tK81YVGqq4uLi0tPSWW25JSEig9WhDlqOj1q9fb/pr
2lba055du3ZVVFRcvny5VatWRKQ9BXcQAWARvv766wkTJhCJjY01PlfFIPze
e+/5+fkNGzaMvwsWLBgxYsSnn3567Ngxr9lah2EapQSAqT2leatNhw4dCgoK
OnXqFB8fz18aavjw4aa/euIDBw4MGjTou+++i4yM5O+XX34ZEBBAezIuecv+
ugO+e8yYMaq5pD0FdxABYBF69erFnIvI/v3727Rpoy8/derUyJEjGYGZiPGX
eEpKyvfffz9x4kSv2VqH0QWAqT2leavHnj17PvjgAyItWrQ4efIkEcQSs1TT
Xz19VFQUrmrt2rWvvfYafwcMGFBWVvbUU08lJCR4qQZ1iJ07d+Lob7zxxsLC
QmlPwR1EAFgEpgZqirpu3bq//vWvxlU//vjjlClTmjVrRjwxMfGjjz7q37+/
j4+Pdwyt2+gCwNSe0rzV4PLlyx9//LGabL744otqijpkyJCffvrJ9Fff5MKF
CzTgiBEjnnvuOf4uW7bsm2++eeKJJ7Zv3+6lStQ5/vnPf0ZEREh7Cu4gAsAi
xMXFqanWrFmzfvjhB3350qVLu3fvjuxv2rSpTTsfS8pRo0YxJnjN1jrMP/7x
DyUATO0pzVtVKioqaKjs7GziMTExvr6+CxcuJN6nT5+NGzea/upbDRw4kFVM
dXFYZ86cadmyJSrihRde2LZtm7cqUtf4/PPPcevSnoI7iACwCPigvn37+vn5
IfiNz17hjzjqGQfatWs3adKkHj16dOnSpV+/fg888AADghcNroPs3bv3D3/4
w6efflpQUGBqT2neqjJs2LDrrruOxkEaTZw4kdagcaZPn84MlLWmvzqkpCUH
Dx586623rl27tlWrVr179+7atevrr7/upXrUFZjXP//886GhodHR0Ta7BpT2
FBwiAsBSOHwQuLS01KYpBPVXPeeu/xVc4M5z1tK87vPf/7337L+ObkUztie/
FRpy77rNUfeT9hRcIwJAEARBECyICABBEARBsCAiAARBEATBgogAEARBEAQL
IgJAEARBECyICABBEARBsCAiAARBEATBgogAEARBEAQLIgJAEARBECyIVwTA
/v37KyoqjEvy8/MXL17sfg6kV5+3Pn369OHDh6thQ2FhoTsfvNi8ebP6ciuJ
i4qK3Mk5Jyendt7z5r5J1UNvInZ6QUGBWpiUlLRly5aq5uCaxMRE9iORkJAQ
vaCrgV6Qx3FYU6pz4cIF00IOn6u61wRBENyk9gXAoUOH1LenjWRnZ48fP979
TM6dOzdu3Dhl/86dO6thRl5eXlRUVKXJwsLC9u7dSwSb2cSdnDEM86phUlVx
36TqoTcRLUA7qIW7d+9etmxZVXNwzY4dO1SnGjt2LPKpuvZWjl6Qx3FYU4fV
wQCEwdWwQRAEoUrUsgBg4j958mRGxcuXLzMMjhkzZuLEiXhwBMCoUaOWLFnC
EnzNf7V3VjOlQhWwfObMmWogZT4VFBTEEj8/PyUAmNOtW7eOyJo1a5YuXTpZ
g4U27b3WERERo0ePJnFAQEB+fr7REkZs9QF3+w1h165dEyZMGKOhBACJVQ7x
8fFTpkxhbF+0aBHVWbx4MWkohUhpaWlcXNywYcP8/f2nTp1aUlKyb9++SRrM
mklsqrXRnvPnz8+ePZtk06dPP3r0aHp6+owZM6jjqlWr1MdlSE9rsC0J1EkP
3ST8GhlicExMjMqNrMLDw0lPmrNnz9o03YUZ2Mkq0wyUQtXslaqtXLmSyIkT
J/DyqomuXLmCGbQ5Ndq2bRsCIDAwkExYuGHDBtP+NVVQb2RKX7hwIfuRVewv
2pzN58+fn5uby9q1a9eqGimPyd6nLF9fX+xXNTI1jl6cw5SkYV9QU0rEWvYF
ez85OdlYkH37cBTQWzCPnWsswllBpp5Auaqm9DqEGaVTLj3BvquThqws/iUg
QRDqArUsADIyMhj9bJrPwh3g2jIzMw8cOIAAGDFixJ49e/AIOD78hU07vc9U
+tKlS4yoy5cvt2nnVBnVWcgwrgQAm+C+iSAe5s2bx7iakJCAK2cJ3oqy8KQM
wvgv01xMP4dgvyEm+fj4YFVBQcHcuXOVAFC+CWNGjhyJeXhe3F95eTmtQTKU
CW6RHGgfhvrjx4/j+4qLi9kKA/AO5EwRplob7aEF8BfMIvE+bIsXQzyQEvPY
iqbAJGpNQTgao0l4c2pHiadOndKnnNgQHR1NHaM00B6kOXjwICaRbWFhobFo
llNNIrTD8OHD6Q8bN27ETetNFBsbS7NjFdXHpSKo8KdUh6YwZWWqoJ6D2koZ
STVRNaxC6Slnqp9mUfZjAPljqtoRlGtqHL04hynpSNSR/HHB1As7cbuqgnpB
pvaxaUqSPYgYYFu8vOkSlX1Bpp6QlZWlakpZ7Guqqfc6+51O865fv746x48g
CILnqGUBwOiq/PWRI0cYHvEyOAUGW+MlABaq4RExgN/HFTJcBwcHk4whNzU1
1WZw30YBQOZEmHfjLJiML1iwQP+qtf3JWKMAMG3IdDgoKEglM/kmJn3MW435
YD+yBKWBbao4/RIAeoBZ+QoNdRLAVGtjPsYWwL9gidoQd48xW7dupToOTcJ4
9aVvYFarbKDF1OQat4X3IcIsGCeII7a/AI2owKmxHB9NVjhZ6siGehM5uwSA
VDN1BlMFjQJA3wqzVftgubqRw1QjNty1axe1xpPSDogfZ1eIXKckW7qH6khM
3m3/KwBM7YN5+kV89prpVgH7gkw9Qa8pDajfI6GqY7/TEXKmXiQIglD71LIA
YDaEU1PxY8eOqZOuzAeN4zbzKSUA8Edr1qxhFYM2AoDpNk5W+XEXAoDqKD+O
X2bQVnkyFKsBX8deAOgb4kNVnjY737Rp0ybjzYp4aqbMOHoiaBVdAGCzqizj
/PFfUAYYa220x9gCTFrJRN8Qd8O8Ui8Xk5TByiRKoQpqVWRkJBbaDA6OzZWD
Ywa6efNm5ARtaLoaAvg1ZsSrV6+mLqiI0aNHX7582SgA9CKMrnzWrFn2ncFY
QYcCgGrqAsmhANi/fz+7npwLCwsRTi4EgOuUlKgEAHvHmQDQ22fRokUYqTYk
q5MnT7ouyNQT9JrSUVURNoPsNO10CqXp7KsjCIJQm9SyADh48KCarqakpKgb
pBlap02bZi8AysrKcFUZGRn4fWQA46pNm17FxMSwBA9YqQBgPGeKmpaWRhEj
Royo9AyAviGFMgfES+I0AwMDjb6J2TGuhG2ZyiUlJaWmpjKqqwbEtyoBMH36
dDXXKygooFLqtvbz58+TranWRntMPg6PrNoZR0yEtRRE6SdOnPD39zeahCMj
QrZYyyo1dTU5uCtXrhw6dEh96RtHhuWm/RIVFUXdMa+4uJgI7WZsIvyXclhs
7loAmCpYPQEQGxur7q8gTkVcCADXKaskAOgDqDX2PpmQ2PQch31Bpp5Auaqm
27dvp5eWlJScPXvWx8eH9PY7/cCBA6rigiAIXqSWBQAjIbNLPDgjM8Mjzkjd
c8X4ic9VafQrpEyySKNuP1OygXkZnhFvzhI1zjOe6wIgPj7ept2Fpfw4ppIP
PpFVbGI69c3IrAsA04aYx3yNojEVq5Q8ILE6O42vZNaPq8ISHGtQUJBKSV3U
OWRMwkfgHfDdzNyREOpWRtyEqdZGe4wtoPbLvHnzJk6ciOWqNfCh6jQ+26qb
FZVJqqEoApNQSuokMwYgOWza7Xw4OKqm7gAkQ1wPZpv2CxmyCRUnTo3UfZV6
E9EmeC51/x5mhIeHq61mz55t6gymCuo5GLfSBQAOUflB9qDyy6pGSC/2mrrV
k1+Ek6lxdFyn1AUAyZQA0AsytQ+RS5cuqVMfZIgyqbQgU0/QBQB6jx3HXqPB
+UVm2O90NoyLi7OvjiAIQm1S+48BqqvMRHBD6v52F1AcbtS4BCfFLNWdgthQ
zb7T09OZlVfVTjyCvaNU4E9Zq/9FWtCGpgTMAfW/VFP5Vpt7tdah+vpUVE02
1TTfWLpeoskGe9iq0jSujTHdt+CQKlXQGRSEVtQbzSMp3YE+46yODgsy9QQd
WsCYj7FN2AXIMIdbCYIg1Ca1LwBwZMwcPWW/C9QN28CMrAG8vZAJJjPKgICA
6r33QKgjbNu2zZ2XIwmCIFxtvPImwFqb/jALq8mct65RWlrqbROEmuLiJIMg
CEJtIt8CEARBEAQLIgJAEARBECyICABBEARBsCAiAARBEATBgogAEARBEAQL
IgJAEARBECyICABBEARBsCAiAARBEATBgogAEARBEAQL4hUBsH///qq+DC0/
P9/49VWPUFBQ4KmPsp04cWKRRs2z2rx587Fjx4xLCgsLq/HyWFps165d9l/+
NcHe17+TmJycvGHDhkpzDgsLO3fuHFaprx96nPLycvpYTExMfHw8/a2GuRkr
6CmbS0pKjhw5QlvFxcWpDxtdPbB5wYIF1d68Nk21h36rvoTo5nL3KS0tpXvr
X23OzMw0fcG5jqDshH379qnvT7mAA5ARSX351MTWrVsPHjxov7zmLSlYmdoX
AIcOHYqMjKzqVs4+CFsT9I/V1pArV66MHTuWw/PMmTM1z03/ZK1OXl5eVFRU
VfNhGBk2bJj60KELEhMT9U8zrFy5EvnhOn1xcfHw4cNxK1R27dq1VbWqUvB3
2BMUFMTIFh4ePnLkyFOnTtUkQ2MFPWIzozTdZvXq1Vi4dOnSefPm1TBD12B/
tYuoZVNN0EkiIiLsP93lbHmVQHLTvadOnar+kiEusiYZXiWwk8Fh48aNy5Yt
8/HxOXv2rLOUaohDxjjUaQEBAcePHzct9EhLClamlgUAE//JkyczI0MMT58+
fcmSJWPGjMHlqYkenZ9+zhIGK9NHADk6Ro0aVWl6hnoONAY9lh84cGDGjBkT
JkzQJ307duyYOHEiS5hd2gwCgBbgOCIf41d6d+7cyfHIQuw8fPgw+YeEhPCX
HEyf46FENRYxBDHjxnmNHj0aS9SBjFdlHLZpL4EnDS2ABFq4cCEJKF2fcTNH
wLAxGvYCYM6cOUTWrFlDTSdrqC8COyMpKYk0K1asYORxkYx5E8WpDy5T8WnT
ps2dOxczaL2srCwSpKamTpo0ydfX18/PT40/x44do1WJYLn6UDImMcSRZvHi
xerEDo6GiYwxH1qMvxQUGBiIi3dh0qJFi9THiBVoxeXLl7tIv2fPHmpKg9NE
6vvLxoJMFVQ203SrVq1SmxNX523sa+EMtaNdJDCyfv165u9YSDOqEzu5ubnz
589X3Vg1BTN0OgP2s3CtBh0P+9nvrMV90y3VTlc50F1ZSD9kf7Gtp0wtKCig
7vRJCsJtMa+kw9Mm9GfVk9kvtBt7lk5ibwP2q2TqG9n0FjqhkvqmfaQvt29z
+0KdgVJVLpX25C/NS191v3bGuth3cjTnzJkzMZgGPH36NNvSSbCK+qpj0/3e
gp3qe+VA0Rz7DpNxmJCh6qiMdex9SmeJ2n0Md6humk41u7+/P50cUae3pH03
s68Ugxhty3DELktJSdFVMYeMKoVMGJfobHQ/hiOqRodkiXy6ogFTywIgIyND
iXY6+YgRIxgZOH5xKOq4oO/ho1lF5zQ5QTfT02M5QBAYSAWOVkxNS0tjlCgt
LS0qKuL44ljg6ObIIo0uAPACHHGIc7wDnZ8Oz1HPVhwyjEiMWmROQYwJFy9e
xKcgLUyVYqLKcH3p0iWOL8YljGTOrg58jiB17o616AQy3717N0clqoAJKRsq
P0VxZMtQw4hkqrtuJ5XCt7JVQkICB7uzRmaHqqMem/XBxyFlZWXkg3nYQPvQ
wowqaDOG302bNqmiaRYyZBxTZyYZJWhhmzYlYSC1adNMmoXNaXzajQiDlSkf
hiPah73AMOXiJDw7BRuM34pCwISHhztLj220Gx2AqRCtStuaCjJWkLiyGd2o
OiFbMZCq/myqhYtGY88yOOOmGX6dfTBahy5KeuqFeGPPUiK7km5MWcgANfDS
Z2bNmkWh8fHxNB17TcljasRaIsYcbNo5IqQd8z7qpU+Ba2gqLcbxwl7Dy+BB
cBB0IQxgOeYpvURLcghwsHBM2dvAYcLxYtMcCtVhX0RHR7P77PeRWm7f5qrf
mgp1Bq3H8YJfprlU13Xx2S9T7dLT0411MXVyLMSe/fv302EQjRzLuEJakkw4
TpUzdb+3YCe726ZpcsYfZ+qXvUNXoUZkS/+n/TGVjkrTYQ9dFK9NMixhECAN
goHEekuaupnN0ZFLAgY3jCE3epp+XUm1pMoEsU192bOkRNex1+iQ/LqooFCv
qWUBgIdVLsl4Sh81jluh43GAqO+t0z9NF8LcTM/xqGYE9HPGKJWeDZVzxxer
JfgUvIPuWHHZ+kV2PAJHNCOzfoCoc/IcDhRH0YwAJknMrJ9VNu38BpujB4gz
hiO/Oa4dCgBKVNsiZmhPSsdXGosz5m8UAGrSzVhKVs4+DhgTE8MgwOhEPoxy
LnYH+XCAK4dLvdTUXhUUFxdn086xYCrLqQvDgk07x8I4TzfAAH4ZpigO45lu
sAQBw5hpyocqYwljNf6Xgdokn4wwSDIKGZeQg4urEmgh7MfBMWDatPY3FWSs
oG4zgzBr6TkbNmxQN5bY18JFo7FPEWBsiG/Fj7j4RKPa4+rcFHsZq+iW+o7G
c6kuivhU54j4Ja7WqnZW9qsc2EHkwCBPnhxEjOfqZJdHTKXdcL7Gv7ieKA00
J8WpumCPTdNp9jYQj42NxTdRljrRjXTB25r2kb7cvs3tC3VmLfuOI45DjMOB
rk63QXK4aAdT7Yx1sdl1chqNKtBotD8awKadlcJmylIn293vLcpOJuyUzijk
YuRk19BKHLM27RwR4ocOwCZsa9NkMEsYByjOeFePakn7bmZfKZYgIXQD0Ffq
LKiykBKNmTDKISSUVSxkn7poW6FeU8sCgEFP9UajQ2ccxqEzUDAxV74Vj6lO
euu4mV4XABytugBA/DMiUTTeRC2JjIxkZqo7Vg5wNduyaecSOXaYxej3HJKP
crsca+pKgWluogsAhg4ONyWY8TIc0RxBCADl8hwKAAYu2hM1og937ggAdpkz
AcD8F2NoK6QIW2Gti93BmKyfSaBBmFCouFJBGEYOGE8FmSagshgPcZ1UjXm0
GmfUNReVWO0g9o4pH4YvRir814ULF0aOHOniVihmZOoMjPrLeOj6sqlNc4tM
W6gyOsG+IGMFdZuBER6D+VU3UNnXwh0YGNkLLm5R0EdjYBezZ+k5+kUZ3Bxt
pVy88iyMyYzMNq0jUXE8i7rIpdKjEsmBJmIkP/kLSm3W3FTKNd5nwl9Esl4K
x5Q+CbVpu8neBpQem3CAqBNEyqMp32HcR/py+za3L9SZtczE1RGhjjK2cn1r
h6l2xrrYd3KbdsRRC7y2umuCI3fLli1oaY5uXKT7vQU7qTWzdTJXUxVnpKWl
KYlCn2dYozhsoD+o01+YcejQIZrdeN5Pb0n7bmZfKTVl0O8WQGeqYZzBiiGC
I07JS7UWTaWuMKampioFIjRUalkA4KnVNNzeoavps7IH52s6UexmehcCgOUc
WQz4HDL0ao5f3bGSmMOEA4qFHOO4OXVcMJnFa5AYj4wrUc5i//79+uih0AWA
TTuZwAjPwc5wrU5KMJKgqLGWCYUzAcAQSl3IB9s4NmsiAEJCQvT7CnRVT844
ZeOpdQWW6BNSIurCCtXEy9MIbKKuMKK18JW0iT5MMZKzivGE/EmPPQywSl8x
epjyYWBhv1NxBiJ2gSqOEcb+WgDDFI6PzUnMSEjjqBsAnNnPDlLjKn4He+wL
MlZQ2azijOHUSJ32cVgLZxYyyVUzWXw0mdNbOCKcmYemUjuaKTN7kNbbunUr
ahMLaUy2pU8aJQqdkN5l0y4q0R+I4AiUC6AI+j8DsjqjrmadbK7UUc1NpZfi
ZUhJI9Ah8eb4O9XByIQmwhnpPtShDRwpNClmq1kkYgMtbb+P1HKHbW5fqLOq
UR1dn7MJWSUlJbnoJ6baGeti38nV6XebdqRjKkuUZCVzCqKy7vcW7DQ9weHM
Qv100JEjR1S7oW2oGjkoNciG6iICO5H+Q1xvYftu5rBSRvGg7q2lqamCugdG
bxO9OJumOfULcA4rKNR3alkAcODQIRkQ6JNqiLNpJ7hw6Datj02ZMoWRSr8/
SsfN9HhtdbQaBQA+S41RHCmMoriGNWvWcBCp48WmOUr6OYbh6xMSEtRWHHo4
FNwZRVDQnj17OC7IynijoIKRUBcAaH48DscXLiY9Pd32y2DOkhkzZugCQD+s
SEZ70iAMj+SvhlDl5XV0Oxlt1AwFr+pQADAIk1I/t2nTjnQmIGxFxH4OomYo
lMiwQwJ11Kt70mzaGQ9MorkYZ0iG5QxTynJUnLKElOqEA5bv3LmTIuzzQZCg
BNQ9VOgTVTStgXez7yE0DiPVWA32sn6Jx6H9KDHqy05hqGQv2BekV5ABU7fZ
pp0CYufql8VNtXBhISZhCclIT+nqxjNn5tET6JxYiEmqaIxE4FEQC9Uki0GV
XW/Trl+ok7E27Y5Q5VnQkORAt+SXhSpbdWWfSpGPmn3X3FT6GI2m33jGEaGM
5+/UqVMZIrBEPzQc2sChTZ/U703VfYdpH+nL7dvcvlBnVcPf6bsJnUO56uS5
m7Uz1sW+k6MWiHCYs8nJkyepEXliD2ML/b9KvQU71Zl2HWcWMliprBjHMEbd
kEy96MA4cTX00SAMR1hL0XhtvSXtu5l9pehmxptp2ZAjRfVDGtCm9TQlPilR
n2qhsvRTo84OWKFeU/uPATIOmxyoEfrqf6vy6HdV0+M6nd0shOw3Xtxn3s1f
dbpAKXb8hZuXw0wmcby786gOpVR6U5nHoUFMD1wYQUtUajlDVqVmk4lRltA+
DFAuGtP9y46qTzoryFZZBXVMtXBhoeoVplLsUVdXcT1qymZcxebu31lNSvsW
NnbFmpuqJ6b1jAWhMF0cXFU6HBzm47DnGAuttJ+4j33tdOw7OTYY9xFbITCM
Xtv93lINyJn8nfUQyjIqf2fdrNIjF2tdX5UwFerBCgp1h9oXADhW/QmUugza
GJHMPNH00J9Qc9LT043P+tVBam6herCrFh6hqvuNWW3qS9W8aGftdLP6siOE
quKVNwHaXwKrm7i4a1oQKkUeoBZqAelmQrWRbwEIgiAIggURASAIgiAIFkQE
gCAIgiBYEBEAgiAIgmBBRAAIgiAIggURASAIgiAIFkQEgCAIgiBYEG8JgIqK
ipSUlG3btsXExOhvC3eT48ePe/GtFPn5+bt27TJ+k+sqkZycrL/VX1FYWFjz
13GXlpbu0oiPj3fzUzJVYuvWrerrh7VJdnZ2DV+ieFWbZfv27epDEu7DAXLq
1KmdO3fSBzCp5q/OKCoqmj9/vvrsSw0PH0YMGkp9KY8jNyEhQf/Sn+uiK825
uLhYb6j09HT1UQk30fegwsVHJ2sTvRbq08MezFnV98yZM+ovO2X37t01LKIa
HdWmORH1Kmah3uEVAUBvmTdv3pw5c3AWmzdvnjZtmnoNtZtER0ebPGNtEhwc
PGzYMP2t8lePlStXmr6Ey8Hu+qtn7nDy5MmxY8du3LgxKirK399/wYIFnn3f
UUBAgPpmeq2hPgdfw1pcvWYpKSmJiIhw513QOspjzpo1iw6wZcuWoKAg1591
docjR46ob+bW/PBBmaiPU1C1RYsWYep/Xb6OWy+6Uujz+tcS8eCmj2K45sSJ
E+zBdb+gv8Teu+i1oF6eFQDUV32UWf1dtWoVf03fEasS1eioCjyC/o0PoX7h
FQGwcOFCoyNjauBi+oYipXdxaDMMnjt3zqZ9BVt9P33Pnj24m4kTJypHST6x
sbGM3mPGjJkxY4b63gcHCNv6+vouXrxYzUHQHqGhoRMmTGDbrKwslc/kyZNH
jx6NJnH93vikpCRSrlixQh+mnJGbm6s+0kEpGMwSZnMUOmrUqMDAQPXpovXr
19MUU6ZMGT9+PGIeC7GcJcpOdBHDPquwSn0jhnFbDSb2lUpNTWWMZWFYWJiz
jx0oaCv9M0kc8pikf8DFIa6NNO0Cuof6fj32TJo0CQv9/PyUHlDfBpo7dy6b
63v/2LFjNA45r169WmXIEtqHDflV38a1bzfj/mJqrD7LPnXqVNrHvrfgCxgb
2eMU7cFmMWZLg2M/jcAuo5qmtfQZ9Wk2diK+kurbf+vKBPJDfa9KX+L6ff7u
dDbaXE381eHDJvobuUmMFLe5fSCQeMmSJTS12keVnr5TRZMh6fUv8qhVaAnV
Jejq27Zt8/HxQVqwK7GZGnF4FhQUoDHUB55cezf2oP6NrUqxbzH7vYNtWIXB
2HP69GnTX3aQPm0hTo0wlcFHHSC0jxrTVC1UW7k+B7Jjxw7qyF5T3w86f/48
Owj5h3kOP55CfRnKlBIjAVZxFKhvkbtfa4cd1dQN7Lu3/dFN6fq5CKEeUfsC
gC6Kj3A9ZdDBNvoYYp7pGEMNfVV9P51hn16Kl6dL5+XlMW4waWIc4yjLyclR
X9RSpyUZ6y5evMhajkoOWyJsvn37do4vjoVNmzapb5tiFTlTkIuDVBlDh+dQ
1YW3Q7AWpxYXF0c1OU6V6+GowVRWMbyrM/l41eXLl1MFFAXpObhU4/DLhsxq
sYe1bK7GBA5bZL99pRhhOFoZoDhaOa4PHz7swjZK178rBxzjxr/2uDDSfhfo
X1rH+dKwtBjVV59FZvchUZgEMVixeVlZWUZGBvarZmF/paenqyXUkeqzlaq1
qd3s9xfTFma17HTaxNRb2JyhjHG70hOw/1975/cSRRfG8X+7iyAIL0IsvBAr
6sIEjbALg6SIkMXeIvpBRnRRLqGtsWaJWrnum9m8H+aLh3n3zIzjb9f9fi5k
dubMOc/5+X2eM7PuXpslmy2SQeMQOs3OzrISdlzFNtxFrGWtpsUwEqEJChhD
b9L1FSdIUnmwYQ8rfJg+iFf4pVrsIVCtPhFw/5BapKq8iQIqGvP0S7v1ep2C
yP/Lly+MW8YMJ5lTVBwJY2LSlZqn2I+e3rt3jwMSl+8sUQtt3YiSh3Rxi8W9
g3kMRVqJgcqIZVXJfmTMMzgll3Qxo5fep7tpEzxYWpJ6UVlyUy3CL2MWQX3x
1qggs5jcKI6OoDWoO8XRlbn1xR4qQntS7qtXryi0pNdyx0k8UONhEA/veHaH
X2g13cXxOwDMhewvU5eDz89ovJeCu4vsog4ahExYVmld0u9h6bewkzQOZe4w
gFlYmKcIvYJEXHRmE5qlzPHSmQ44rkxSgpTy55hJ+pPZzBqmKlaVb8mykjA9
dUx0wNRgHnEXsQwizvLOessijEmKs/DDSZakk5STrBssBcFOAlvmpirF37hS
NAtLn5oCvS4JlPTbYayl+ohVuPHhY0y5kXEXsA5IdlmUJiYmqAL5s3pwBt9M
+zasLZzUwhJ+YJSWodE4ox8nVXpGWtxucX9JX5K80SL7K/5y316bRdlSa+3E
UihVpk06CsUlQxSoHV2mM+HH33PRj1zrmAbs6+ujUuhCUfoqg40uo9HosjB9
cJDkX6nuKFrFiUDmCA0pyZm6l6QUoWiKYGygg8gQwzVJN7L0U8gieI/JztZQ
kg4MDl6+fFm+Na1aIIIfdijZVIxbLO4dbqeauB+404h+x8ckXccYeJzHZr30
QpgcXq7gEglCLR6klNhPBXGrdIxzhc/GNAk/y1tUX5wlTGWE4IlhdsihYq1z
B2rHMIiHd5I3u2mWkLnpIo7fAWCo4EtXfOuPZYrpUN+BNQSfk6GICjMsUclw
CR3kjGY957WSsNowUImRsVmzSWKqzHGbuaT0BLlMqI5n7llwwvUj4NzFLKAK
JWZj4ePHj3VM2Is8oYzMLwpaW1tjwjJzOWZ9Vhr8Cm04E7hpbeT2YCfzmsnL
0q30caXQiydPnoSmKFkq8dupRWh8ZIIcSqKGEiPjLiBbZPft27cYRhOhO0Rh
LAssywo8ZRgfFTWgRNrQSNJIhKz4Sz7JjmqQPm63jv5i9KJE2rONR0tWU0rY
a7Nks6VNOA6FNhqN7NUgf2hfeGzE8Ch5Ck9Yx7oqlaHdiLaCD5ZLlcGG/yCv
W9Mn2fGvktQfYzCrslUmAunJk+lA/Etxu05kFc1oIbDF36M6OB7aq2fcZl/z
47xsS9KIUuMfkeIu9JQ2KWkEelBeZbkxRS2W2zuYiqZfuXKFUR1/pFVxzFBq
DeZkR/STdKsQb4H0oRbMWV0qAvkmHtExDYt55Q4A3qm0mLE6NjZGxcfHx0u2
lXJrnTtQk/8Pg9zh3TG7dUvF1zzMqeL4HQCKY6risv5JYQXAf2YsMVPiV52J
0JlWeh0LjxRF0MYXyyPrifa6MQkdIQ3rElkxRHHmGe0kZuVkDaREPmp+oWJa
cziPcGhDT4sYwYj29Bjz8cv2zLKwaIe4uMhs7bCxAjA9JU/IKLYxT5kvWJ5k
ljsagZVEO5bouNZGqqCZRWuzPlMWeWJebqWY+3qGTlZhncmtxfPnz+Wokw9t
iyWsnEn61YbcipQYGXdBSENWakmiCVZCljL6Lmz7cEmB/61bt8iKg9evXw8O
DnI7SysVod3IQenjduvoLzKnhXUmHi1ZTTmKZklS6aHW+J9J+oyVj9mryB9V
S9Ln5gSzVEQbIHqpI9cYLrEUk16hGcNVPthBBlutVlOsrenDAZMF22grTMWw
uGGLzCNWlQIyJi9fvqweLDFPRTMs1Q6YRx/pDT2URZKEe7CwsMBgDjtCFEEV
aCu5fGSuYV/Sg+GJRqB6i8W9o6cVSeqPYXnHxyTdCUEiaUZNCuYjvcaNtCHh
s4aTasFMoZTwdn1Rp9NTpEGC8a5x78sdAOp7+/bt7Blu1zZR9VrnDtSOYRAP
73h2J+m7jqxCRdaaU8uJvATIaNHrNMCYXF5eZqViKsXRBMNYb60wvAkYWa+0
8ZWkri/rD3OEqwTInMGpIKZg0qGY0kEcb4XtFPT06VPyDxM2PJVjFcKhxbHH
JI3za9euhYVIoG6kye4kk0+z2SwymyJYT5CwmzdvavXGeWDS6V0mvTFL4KCl
GGc+zHQmtZ67kS2JsWpgYICIO0n3AeQSdFQqSb9qREBHrWkKXHdlFdciSXcX
WUjJnOqw3krmkjQqz61IiZFxF7AgYG2S7t+yaGA/SwqmUh1WvLDZG95kYCCR
nhzoWb2NSYhBL1AX0ih0ituto79YXVkwOfPw4cOO0cLAxn69Cxo4rGbJZssq
Sl9QF5oC/zN7NXh0mEq9SEAR4fXCXGOSnQ1VKkKtqZ1yO8hgIwG3S7M0fbCK
NLJHj12qTIQk1YXgCRP30dHKsMg8Fa3XchiizFCaWo9XqCa3aEuNrmcIkRsm
4Q9o44KG4oCu5EZi5F17MKC35qq3WNw7OKK0FdbShtjW8TFJHQCGN+6i8mSS
YjzDgF6j79BxzWJqwZDQvCjvdHwhDKCV9P4nwpq9q4OJiQnNfUEpuB96+7d6
rXMHajwMOoZ3PLuVJjSF6SJO8B8BsVxX/O42ut8qeCeKtUKZkEA7zLiyV69e
DZuBrDy7lqJ6hWOGt7bC9g3zEQNoWJbf8Eoe5u36MDoL0obxubuauZWiPcM3
1w6lFhUJXZCFmlb5PhHLVEjGsaSEOIiVNkRMcbtl+ytJl2LqHhqqZLQcXbPQ
AlWylS5UNIaQs0ob7nuwUXSHTBz6RMhCE8XjmZOYmu27jm9fkoABFuw8uumZ
/L93ZEz2TMdHvQgUDENAEWXmbPm3R8vt5/byr/AchKJax3TMryQa3h2zmzzx
iw7+ryrM8XNm/hPgmzdv8IHxXcfHxw/yj1yIpg/+X4bwjZnm2uGs+FzycDmU
WhwzeqhKABUe0xw6p6pZDsuYIxpsp6qtAqdkehIaExRr20qEbbFyTrBVj25R
mpmZCU+CTHdxZhyAJHVTD/jv4A6Rw/3vOj2CIpSTtqL78GDbKwdvsQ4NPRE/
f68c0TjZ3NzsiuqbmLPkABhjjDGmInYAjDHGmB7EDoAxxhjTg9gBMMYYY3oQ
OwDGGGNMD7I/B8DvfBpjjDHdCzq+DwegXq/7u1rGGGNM94KOS8335AAsLi7q
P5kbY4wxphtZWVlpNpv616nVHYD19XUu/fjx46TNN8YYY8yeQcE/fvzYbreL
HvQXOQCwsbHBvfgPv3//9vsAxhhjzOlH/21VP5WO+m9tbe3DAYDNzc1ms1mv
1z8YY4wxphtAtbXzv729XaTvSlniAADOg8N/Y4wxpotAuIti/+oOgGi32/8a
Y4wx5tRT9Nx/fw6AMcYYY84MdgCMMcaYHsQOgDHGGNOD2AEwxhhjehA7AMYY
Y0wPYgfAGGOM6UHsABhjjDE9iB0AY4wxpgexA2CMMcb0IHYAjDHGmB7EDoAx
xpiuptForK+v63h1dbXZbIZLHIdLWSYnJ2u1GgfLy8uDg4Pnzp0bHR09FGPI
EHuytpF/UWIKfffu3b7L+vTp04sXLx6lcMDHPd1uB8AYY0xX09/fPz09reMb
N26cP39eoo/6o+wLCwvxLSS7f/8+B0jnwMAAKbOqfUBjKDRoMaXzsSgxRSPc
5Rn++vUr9/z79+/vR3Cyuql2AIwxxnQ1d+7cGRkZaaVaeeHCBQRXYTXaevHi
RZ1HiBG7sBsgB4CP3EsYvrq6Sprwlyi+lW4mcAtSLgnWpVYa1AengqvZDQc+
Ujo+wOTkpM4EB2A9RXkqn9aOA8B5TqrQrLWcIfOZmZm4yhQURH8tJXysvg9g
B8AYY0xX8+zZMwk92kf4PzQ09ODBAz7evXsXxwC15QyOQV9fH8kkeXIA4NwO
UmqEmxyGh4fJkwOknFu4ES1WAvLkPAcUcf36dR0HGSVDTk5PT3OLzgQHgBsv
Xbqk3LhLLgoOAB4IJzmDhbgWFKRCScxJzAiOQRbchiIHYNcthYAdAGOMMV0N
uonI8rdWq6HdSDP6zvnBwUG0eGpqCklV0I3a6ol8eASALo+NjbXSeJ9McBWQ
bI7JTRpNeM7t5BwcAK7KTyA2J1qnRIqQJag2J/XoQdqadQCQe6k5t3PcSh0A
0CaD7qU4RF97DlREyWIePXoUpD8LJ7lUsd3sABhjjOl2CKvRzdHRURQQ4Saa
lqCjrYTkQaDRO04iskUOQPaFAfLhRq6SOaqafZqPPxCkmQRkEjKXxONI6GTW
AVBBWTOy7wBgp7Qb/wG/hfRkgleQW187AMYYY0wrfZ2e6B6lnp2dRVgJz9FB
3ABCaUL+oIl6Ro9G7+oA6HZCdfwK5ZB1AAjVYwdA2wKDKdrq19P82AGQGZSY
dQAwiVIajQblcowPQIZFDoAfARhjjDGtVJHRXKlqK93856MeBIyMjOAbKBni
iEajy7s6AOSgFwlaO7F5uQNAnig+Bf2TUqvV9C5irgOAGXJOYgeAe4Po43sU
OQB+CdAYY4xp7ey0h2/cEzvzUYH/7Oysntdz0N/fL2dgVwcAt2F4eBh1Hh0d
VVblDgBaH/b/BbdTVtYBQPRxKiTr+ppA7ACQj97941ivAhZV2V8DNMYYY4im
UVh0Ux/RNYmvPiKyRPFDQ0NTU1P6JiAROv6ALukufSUwKHiz2ZQPoHAeXeZS
2Ekg/7A/wO1kQm7hjOAMihzuwjxs4BgzOB9e8wsBu0rRSdKQUjmU1Nr/CMgY
Y4w55WQfAZwS7AAYY4wxR40dAGOMMcacBuQAbGxsnLQhxhhjjDkm0H3Uv16v
//z586RtMcYYY8wxge7Pzc19/vx5ZWXlpG0xxhhjzDGB7s/Pz/P3sH4G0Rhj
jDGnn8XFxaWlpe3t7Xq9vra2dtLmGGOMMebIQfHn5uba7XaSJPoxYr8JYIwx
xpxt9PT/+/fvf//+TVJWVlY4430AY4wx5qyCyhPvf/36dXt7O8mgPYFGo4Ez
gIfg7wYaY4wx3Q5qjqbrfT/F/h3qL/78+fPt27f5+XnSfDDGGGNM94Omo+xL
S0vtdjvs/OfCVTyBra2t38YYY4zpchB0ZD2W/v8Av/39cA==
    "], {{0, 1848}, {683, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
      "Comments" -> 
      Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2019, 7, 22, 15, 25, 26.}, "Instant", "Gregorian", -4.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{683, 1848},
  PlotRange->{{0, 683}, {0, 1848}}]], "Input"]], "Text",
 CellID->984259520]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing Transcriptome Mapped Data", "Subsection",
 CellID->964105434],

Cell["\<\
We will next preprocess the imported transcriptome data. We will first \
relabel the data, carry out quantile normalization and filtering and we will \
finally create time series.\
\>", "Text",
 CellID->1926312606],

Cell[CellGroupData[{

Cell["Labeling, Normalization and Filtering", "Subsubsection",
 CellID->433330108],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->62840614],

Cell["\<\
First, we illustrate how to change the outer keys. In this example, we notice \
that the sample numberings do not correspond to actual days, so we may want \
to adjust the outer keys to correspond to real times. \
\>", "Text",
 CellID->1020016945],

Cell["\<\
We form an association between samples to actual days of the study:\
\>", "MathCaption",
 CellID->381670302],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[76]:=",
 CellID->199112125],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1332666250],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "rnaExample"}], "]"}]}]], "Input",
 CellLabel->"In[77]:=",
 CellID->2014709187],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[77], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[77]=",
 CellID->2120249074]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantile Normalization", "Subsubsubsection",
 CellID->1747728821],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileNormalization",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileNormalization"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs quantile normalization of ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->818482745],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileNormalization"]],
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " can perform quantile normalization across various samples for multiple \
forms of data, including ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " and matrix data."
}], "Caption",
 CellID->1606736180],

Cell[TextData[{
 "We normalize the transcriptome data using the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileNormalization"]],
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function. The Measurement is located in position 1, 1 in the list."
}], "MathCaption",
 CellID->1093504481],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaQuantileNormed", "=", 
  RowBox[{"QuantileNormalization", "[", 
   RowBox[{"rnaLongitudinal", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[78]:=",
 CellID->364761141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[78], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[78]=",
 CellID->2073287215]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tag Missing and Low Values", "Subsubsubsection",
 CellID->1673762423],

Cell[TextData[{
 "Next, we will tag values of  less than 1 FPKM as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 ". Additionally, we will treat values of FPKM less than 5 as \"noise\" and \
set them all to a token value of 1."
}], "Text",
 CellID->529597330],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData["Missing"], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1118958870],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows us to tag low values."
}], "Caption",
 CellID->827431311],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], "1", Cell["\<\
Selection of which component of a list to use in the association or \
OmicsObject input values.\
\>", "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell["\<\
Selection of which list to use in the association or OmicsObject input values.\
\>", "TableText"]},
   {"OtherReplacement", 
    RowBox[{"_Missing", " ", ":>", " ", 
     RowBox[{"Missing", "[", "]"}]}], Cell["\<\
Replacement rule for any other kind of replacement in the data.\
\>", "TableText"]},
   {"ValueReplacement", 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell["\<\
Value that specifies how tagged data points will be replaced.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->29072],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->956870455],

Cell[TextData[{
 "We first use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag values of 0 as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->1372190648],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaZeroTagged", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaQuantileNormed", ",", "0"}], "]"}]}]], "Input",
 CellLabel->"In[79]:=",
 CellID->581335803],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 79, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[79], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[79]=",
 CellID->1591346998]
}, Open  ]],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->351193473],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaNoiseAdjusted", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaZeroTagged", ",", "1", ",", 
    RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[80]:=",
 CellID->1223638755],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[80], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[80]=",
 CellID->1007655648]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1524282659],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->222118196],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", retaining data across the datasets with a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points not missing."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1425592616],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows the removal of data marked as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], and retains only data with measurements available for a certain \
percentage of samples."
}], "Caption",
 CellID->460047533],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"MininumPoints", "3", Cell[
    "Minimum number of datapoints to keep.", "TableText"]},
   {"Reference", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Select a reference outer key for which should remove dataset if the \
reference point has a ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     " value."
    }], "TableText"]},
   {"ShowPlots", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[
    "Whether to show summary plots.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2081738160],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->969678196],

Cell["\<\
In this dataset we will use a reference point, day \"255\" which was a \
healthy measurement. \
\>", "Text",
 CellID->2046575969],

Cell["\<\
Hence, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->132360816],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[81]:=",
 CellID->1942659867],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 18427.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646116, 
           133.66873498799035`}, {-48.97193256023674, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18427]& ,
        TagBoxNote->"18427"],
       StyleBox["18427", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18427, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 6841.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.16873498799035`, 231.18674939951956`}, {
           24.448647134884688`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6841]& ,
        TagBoxNote->"6841"],
       StyleBox["6841", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6841, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1221241714],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "18427"}], ",", 
     RowBox[{"1", "\[Rule]", "6841"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1908272819],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$45449$45555 = False, DynamicChart`click$45466$45555 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.440497565477732, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 18427]& , TagBoxNote -> "18427"], 
                    StyleBox["18427", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[18427, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$45449$45555, 
                    FEPrivate`Not[DynamicChart`click$45449$45555]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$45449$45555, {{{1., 0.}, {0., 1.}}, {
                    0.13191433757046722`, 0.15032833247044558`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$45449$45555}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.440497565477732}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 6841]& , 
                    TagBoxNote -> "6841"], 
                    StyleBox["6841", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[6841, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$45466$45555, 
                    FEPrivate`Not[DynamicChart`click$45466$45555]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$45466$45555, {{{1., 0.}, {0., 
                    1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$45466$45555}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["18427", {}, StripOnInput -> False], 
                    TraditionalForm], {0.43971445856822405`, 
                    0.5010944415681519}]}}}, StatusArea[#, 18427]& , 
                 TagBoxNote -> "18427"], 
                StyleBox["18427", {}, StripOnInput -> False]], Annotation[#, 
                Style[18427, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$45449$45555, 
                  FEPrivate`Not[DynamicChart`click$45449$45555]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$45449$45555, {{{1., 0.}, {0., 1.}}, {
                0.13191433757046722`, 0.15032833247044558`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$45449$45555}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["6841", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4397144585682239, \
-0.501094441568152}]}}}, StatusArea[#, 6841]& , TagBoxNote -> "6841"], 
                StyleBox["6841", {}, StripOnInput -> False]], Annotation[#, 
                Style[6841, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$45466$45555, 
                  FEPrivate`Not[DynamicChart`click$45466$45555]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$45466$45555, {{{1., 0.}, {0., 
                1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$45466$45555}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[81]:=",
 CellID->1820484635]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[81], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[81]=",
 CellID->1685741636]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Transcriptome Time Series", "Subsubsection",
 CellID->267016150],

Cell[TextData[{
 "We can now create time series for each of the genes. MathIOmica provides \
functions to facilitate the process, such as ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CreateTimeSeries"]],"paclet:MathIOmica/ref/CreateTimeSeries"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeExtractor"]],"paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". The functions assume an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " as an input for which times have been used as the sample labels (outer \
keys)."
}], "Text",
 CellID->94668970],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["CreateTimeSeries",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
      StyleBox["omicsObject", "TI"], "]"}], " "}], Cell["\<\
creates a time series list across an OmicsObject using outer keys as times.\
\>", "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeExtractor",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeExtractor"], "[", 
     StyleBox["omicsObject", "TI"], "]"}], Cell["\<\
extracts a list of sorted times from an OmicObject's outer keys.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1824801338],

Cell[TextData[{
 "We extract the times for the filtered RNA data using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeExtractor"]],"paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->2019621014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesRNA", "=", 
  RowBox[{"TimeExtractor", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[82]:=",
 CellID->643857816],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[82]=",
 CellID->15810684]
}, Open  ]],

Cell["\<\
For each gene we now extract a time series (list of values) corresponding to \
these times:\
\>", "MathCaption",
 CellID->148216279],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[83]:=",
 CellID->2137454280],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "2.294595133333334`", ",", "1", ",", "4.676944000000001`", ",", 
              "4.481310666666667`", ",", "4.955066666666666`", ",", "1", ",", 
              "1.2572603333333332`", ",", "2.1476724666666676`", ",", 
              "1.932187333333333`", ",", "1", ",", "2.582170666666667`", ",", 
              "2.3130066666666664`", ",", "4.102843333333334`", ",", 
              "3.8092893333333335`", ",", "1.4547106666666665`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "5.916647999999999`", ",", "4.320814`", ",", 
              "3.195994666666667`", ",", "3.6416366666666664`", ",", 
              "2.7327000000000004`", ",", "2.134606133333333`", ",", 
              "2.1716795999999996`", ",", "3.2342906666666664`", ",", 
              "1.8957593333333331`", ",", "3.0267020000000002`", ",", 
              "4.340044000000001`", ",", "7.270013333333333`", ",", 
              "2.011321133333333`", ",", "9.277005333333333`", ",", 
              "7.5441486666666675`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[83], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[83]=",
 CellID->344747750]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Log Ratios Compared to Reference in Transcriptome Time Series\
\>", "Subsubsection",
 CellID->1837977213],

Cell["\<\
Next, we want to use log ratios of expression at any time point compared to a \
healthy datapoint. \
\>", "Text",
 CellID->1135789927],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesApplier"], "[", 
     StyleBox[
      RowBox[{"function", ",", "data"}], "TI"], "]"}], Cell[TextData[{
     "applies a given ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     ", an association of lists, implementing masking for ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719166110],

Cell["Applying a function to a series with Missing data.", "Caption",
 CellID->1779824032],

Cell[TextData[{
 "We first use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the logarithm:"
}], "MathCaption",
 CellID->1087636944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesRNA"}], "]"}]}]], "Input",
 CellLabel->"In[84]:=",
 CellID->533314544],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.7777700723187606`", ",", "1.4634438104320098`", ",", 
              "1.1618983591500285`", ",", "1.2924332142933417`", ",", 
              "1.0052901314367368`", ",", "0.7582821487875812`", ",", 
              "0.7755008773783016`", ",", "1.1738096354916885`", ",", 
              "0.63961946188012`", ",", "1.107473577885762`", ",", 
              "1.46788448630977`", ",", "1.9837581255648373`", ",", 
              "0.698791786422256`", ",", "2.2275387935694635`", ",", 
              "2.0207722517470934`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 84, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[84], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[84]=",
 CellID->1534941352]
}, Open  ]],

Cell[TextData[{
 "Now we need to compare  to use log ratios of expression at any time point \
compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesInternalCompare"]],
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->440466924],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesInternalCompare",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesInternalCompare"], "[", 
     StyleBox["associationOfLists", "TI"], "]"}], Cell[TextData[{
     "compares each value in each list of ",
     Cell[BoxData[
      StyleBox["associationOfLists", "TI"]], "InlineFormula"],
     " to an internal reference value in the list, if the reference point \
itself is not ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719094828],

Cell["\<\
Comparing values in a series to an internal reference point in the series.\
\>", "Caption",
 CellID->581787458],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"CompareFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"Head", "[", "#2", "]"}], ",", "Missing"}], "]"}], ",", 
        RowBox[{"Missing", "[", "]"}], ",", 
        RowBox[{"(", 
         RowBox[{"#1", "-", " ", "#2"}], ")"}]}], "]"}], "&"}], ")"}], Cell[
    TextData[{
     "The function is used by a ",
     ButtonBox["Query",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Query"],
     " operation on non-missing input data. Namely: ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", 
         RowBox[{
          RowBox[{"CompareFunction", "[", 
           RowBox[{"#", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "ComparisonIndex", "]"}], "]"}]}], "]"}], "&"}]}], 
        "]"}], "@"}]], "Input"]
    }], "TableText"]},
   {"ComparisonIndex", "1", Cell["\<\
List position of list value that will be used as a reference data point.\
\>", "TableText"]},
   {"DeleteRule", 
    RowBox[{"{", 
     RowBox[{"Head", ",", " ", "Missing"}], "}"}], Cell[TextData[{
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " allows the customization of how to select values for the reference \
data point for which its key should be deleted.  The ",
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " value takes the structure ",
     Cell[BoxData[
      RowBox[{"deleteRuleOptionValue", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{Cell[
             TextData["MatchQ"]],"paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "first", " ", "argument"}], ",", 
         RowBox[{
          TemplateBox[{Cell[
             TextData["MatchQ"]],"paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "second", " ", "argument"}]}], 
        "}"}]}]], "InlineFormula"],
     ".\nThe ",
     ButtonBox["MatchQ",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/MatchQ"],
     " function referred to here is implemented by ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["SeriesInternalCompare"]],
        "paclet:MathIOmica/ref/SeriesInternalCompare"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " internally, and uses the ",
     Cell[BoxData["deleteRuleOptionValue"], "InlineFormula"],
     " as:\n",
     Cell[BoxData[
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"deleteRuleOptionValue", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"reference", " ", "comparison", " ", "value"}], "]"}], ",", 
        RowBox[{"deleteRuleOptionValue", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "InlineFormula"],
     "\nThe default removes the corresponding key if the value used for \
reference in the comparison is actually ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     ", i.e. the comparison reference point has ",
     ButtonBox["Head",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Head"],
     " that matches ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1460313503],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesInternalCompare"]],
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->2045927005],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->1398268181],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[85]:=",
 CellID->779768946],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.31432626188675084`", ",", "0.`", ",", 
              RowBox[{"-", "0.3015454512819813`"}], ",", 
              RowBox[{"-", "0.1710105961386681`"}], ",", 
              RowBox[{"-", "0.45815367899527293`"}], ",", 
              RowBox[{"-", "0.7051616616444286`"}], ",", 
              RowBox[{"-", "0.6879429330537081`"}], ",", 
              RowBox[{"-", "0.2896341749403213`"}], ",", 
              RowBox[{"-", "0.8238243485518898`"}], ",", 
              RowBox[{"-", "0.3559702325462477`"}], ",", 
              "0.004440675877760203`", ",", "0.5203143151328276`", ",", 
              RowBox[{"-", "0.7646520240097537`"}], ",", 
              "0.7640949831374537`", ",", "0.5573284413150836`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[85], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[85]=",
 CellID->1779061158]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Transcriptome Time Series", \
"Subsubsection",
 CellID->384896847],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1747726374],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaCompared"}], "]"}]}]], "Input",
 CellLabel->"In[86]:=",
 CellID->755844152],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", "0.20090154784186665`",
               ",", "0.1731122416739286`", ",", "0.`", ",", 
              "0.2493264424569924`", ",", "0.22039379964993433`", ",", 
              "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1564105847744402`", ",", "0.`", ",", 
              RowBox[{"-", "0.15005077872901465`"}], ",", 
              RowBox[{"-", "0.08509587199020531`"}], ",", 
              RowBox[{"-", "0.22797994802620195`"}], ",", 
              RowBox[{"-", "0.3508925636575009`"}], ",", 
              RowBox[{"-", "0.34232442368796406`"}], ",", 
              RowBox[{"-", "0.14412365801429614`"}], ",", 
              RowBox[{"-", "0.40993981010358166`"}], ",", 
              RowBox[{"-", "0.17713286793361294`"}], ",", 
              "0.0022097062671921166`", ",", "0.25891144382253184`", ",", 
              RowBox[{"-", "0.3804953156202253`"}], ",", 
              "0.3802181288269338`", ",", "0.2773298893139476`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[86], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[86]=",
 CellID->1063560421]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ConstantSeriesClean",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantSeriesClean"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[
    "removes constant list series from an association of lists.", "TableText"]}
  }]], "DefinitionBox",
 CellID->1164836919],

Cell["Removing constant series.", "Caption",
 CellID->953171581],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1883423327],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedRNACompared", "]"}]}]], "Input",
 CellLabel->"In[87]:=",
 CellID->786900109],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[87]:=",
 CellID->1253250375],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", "0.1731122416739286`", ",", 
              "0.`", ",", "0.2493264424569924`", ",", "0.22039379964993433`", 
              ",", "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           TemplateBox[{"11783"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 87, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[87], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[87]=",
 CellID->859442849]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Transcriptome Data", "Subsection",
 CellID->1956292219],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
transcriptome dataset prior to classification and clustering. In this \
subsection we first resample the imported and labeled transcriptome dataset, \
Then, we carry out the full analysis in this \"bootstrap\" dataset, to create \
a set of random time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->673780035],

Cell[CellGroupData[{

Cell["Resampling the Transcriptome Data", "Subsubsection",
 CellID->576856357],

Cell[TextData[{
 "First, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BootstrapGeneral"]],"paclet:MathIOmica/ref/BootstrapGeneral"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1399228810],

Cell[BoxData[GridBox[{
   {
    RowBox[{"BootstrapGeneral", "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["numberResampled", "TI"]}], "]"}], Cell[TextData[{
     "performs a resampling of the ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " data with replacement, and generates a new association structure with \
numbering corresponding to the ",
     Cell[BoxData[
      StyleBox["numberResampled", "TI"]], "InlineFormula"],
     " of new identities."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1661281776],

Cell["\<\
We can perform resampling of an OmicsObject to create a bootstrap dataset to \
be used for statistical considerations.\
\>", "Caption",
 CellID->2000128109],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->809854710],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"rnaLongitudinal", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[88]:=",
 CellID->2018927283],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "5.5402`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.00246625`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "12.7439`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99990"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.347246`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "12.2697`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 88, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[88], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[88]=",
 CellID->1775673247]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Transcriptome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1483609541],

Cell[TextData[{
 "We normalize the transcriptome bootstrap data using the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileNormalization"]],
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function:"
}], "MathCaption",
 CellID->214676973],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapQuantileNormed", "=", 
   RowBox[{"QuantileNormalization", "[", 
    RowBox[{"rnaBootstrap", ",", 
     RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[89]:=",
 CellID->303358251],

Cell[TextData[{
 "We use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag zero values as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->375344567],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapZeroTagged", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapQuantileNormed", ",", "0"}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[90]:=",
 CellID->1256666330],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->1035495647],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapNoiseAdjusted", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapZeroTagged", ",", "1", ",", 
     RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[91]:=",
 CellID->367863841],

Cell["\<\
Next, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->61312748],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaBootstrapNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[92]:=",
 CellID->1838688723],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 72929.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646117, 
           133.66873498799038`}, {-48.971932560236766`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 72929]& ,
        TagBoxNote->"72929"],
       StyleBox["72929", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[72929, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 27071.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.16873498799038`, 231.1867493995196}, {
           24.454727201168545`, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 27071]& ,
        TagBoxNote->"27071"],
       StyleBox["27071", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27071, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->793810163],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "72929"}], ",", 
     RowBox[{"1", "\[Rule]", "27071"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->1398994377],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$49768$49842 = False, DynamicChart`click$49774$49842 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.4406715590832082`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 72929]& , TagBoxNote -> "72929"], 
                    StyleBox["72929", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[72929, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$49768$49842, 
                    FEPrivate`Not[DynamicChart`click$49768$49842]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$49768$49842, {{{1., 0.}, {0., 1.}}, {
                    0.1319274151555435, 0.15031685577598033`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$49768$49842}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.4406715590832082`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 27071]& , 
                    TagBoxNote -> "27071"], 
                    StyleBox["27071", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[27071, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$49774$49842, 
                    FEPrivate`Not[DynamicChart`click$49774$49842]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$49774$49842, {{{1., 0.}, {0., 
                    1.}}, {-0.13192741515554346`, -0.1503168557759804}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$49774$49842}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["72929", {}, StripOnInput -> False], 
                    TraditionalForm], {0.43975805051847827`, 
                    0.5010561859199344}]}}}, StatusArea[#, 72929]& , 
                 TagBoxNote -> "72929"], 
                StyleBox["72929", {}, StripOnInput -> False]], Annotation[#, 
                Style[72929, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49768$49842, 
                  FEPrivate`Not[DynamicChart`click$49768$49842]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$49768$49842, {{{1., 0.}, {0., 1.}}, {
                0.1319274151555435, 0.15031685577598033`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$49768$49842}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["27071", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.43975805051847816`, \
-0.5010561859199345}]}}}, StatusArea[#, 27071]& , TagBoxNote -> "27071"], 
                StyleBox["27071", {}, StripOnInput -> False]], Annotation[#, 
                Style[27071, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49774$49842, 
                  FEPrivate`Not[DynamicChart`click$49774$49842]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$49774$49842, {{{1., 0.}, {0., 
                1.}}, {-0.13192741515554346`, -0.1503168557759804}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$49774$49842}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[92]:=",
 CellID->100043236]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "4.7468285833333335`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "11.660224000000001`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "11.26338088888889`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[92], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[92]=",
 CellID->1866962899]
}, Open  ]],

Cell["\<\
For each bootstrap member we now extract a time series (list of values) \
corresponding to the series times:\
\>", "MathCaption",
 CellID->274183705],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaBootstrapFiltered", "]"}]}]], "Input",
 CellLabel->"In[93]:=",
 CellID->1853107120],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "4.7468285833333335`", ",", "1", ",", "204.56655238095237`", ",",
               "1", ",", "1", ",", "1", ",", "3.217454`", ",", "6.863135`", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
              "6.6208108333333335`", ",", "1.1237841555555557`"}], "}"}]}], 
           ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "28.96456190476191`", ",", "1", ",", "1", ",", 
              "9.124801666666668`", ",", "1", ",", "1", ",", "1", ",", 
              "1.018968911111111`", ",", "18.96063425`", ",", "1"}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[93], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[93]=",
 CellID->1161877176]
}, Open  ]],

Cell[TextData[{
 "We use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement a logarithm:"
}], "MathCaption",
 CellID->373642571],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesBootstrapRNA"}], "]"}]}]], "Input",
 CellLabel->"In[94]:=",
 CellID->568506969],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.557476728391234`", ",", "0", ",", "5.320893362054563`", ",", 
              "0", ",", "0", ",", "0", ",", "1.1685903635716475`", ",", 
              "1.9261643344309773`", ",", "0", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "1.8902178448251994`", ",", 
              "0.11670170060702972`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "3.3660730794475615`", ",", "0", ",", "0", ",", 
              "2.210996164072526`", ",", "0", ",", "0", ",", "0", ",", 
              "0.018791244561346027`", ",", "2.9423649482715892`", ",", "0"}],
              "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[94], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[94]=",
 CellID->600894861]
}, Open  ]],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->369078912],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesBootstrapRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[95]:=",
 CellID->1176501448],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.557476728391234`", ",", "0", ",", "5.320893362054563`", ",", 
              "0", ",", "0", ",", "0", ",", "1.1685903635716475`", ",", 
              "1.9261643344309773`", ",", "0", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "1.8902178448251994`", ",", 
              "0.11670170060702972`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "3.3660730794475615`", ",", "0", ",", "0", ",", 
              "2.210996164072526`", ",", "0", ",", "0", ",", "0", ",", 
              "0.018791244561346027`", ",", "2.9423649482715892`", ",", "0"}],
              "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[95], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[95]=",
 CellID->1771820633]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1458062219],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedBootstrapRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaBootstrapCompared"}], "]"}]}]], "Input",
 CellLabel->"In[96]:=",
 CellID->715818816],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.24812700467967763`", ",", "0.`", ",", "0.8476899256853185`", 
              ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1861721728003447`", 
              ",", "0.3068639024333002`", ",", "0.`", ",", "0.`", ",", "0.`", 
              ",", "0.`", ",", "0.`", ",", "0.3011371428406584`", ",", 
              "0.01859215157747957`"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", "0.`", ",", 
              "0.`", ",", "0.`", ",", 
              TemplateBox[{"5"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
              "0.0037675423468814012`", ",", "0.5899281714099865`", ",", 
              "0.`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 96, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[96], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[96]=",
 CellID->1492281749]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->841142010],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedBootstrapRNACompared", "]"}]}]], "Input",\

 CellLabel->"In[97]:=",
 CellID->188913869],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[97]:=",
 CellID->1269750011],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.24812700467967763`", ",", "0.`", ",", "0.8476899256853185`", 
              ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1861721728003447`", 
              ",", "0.3068639024333002`", ",", "0.`", ",", "0.`", ",", "0.`", 
              ",", "0.`", ",", "0.`", ",", "0.3011371428406584`", ",", 
              "0.01859215157747957`"}], "}"}]}], ",", 
           TemplateBox[{"99965"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", "0.`", ",", 
              "0.`", ",", "0.`", ",", 
              TemplateBox[{"5"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
              "0.0037675423468814012`", ",", "0.5899281714099865`", ",", 
              "0.`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 97, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[97], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[97]=",
 CellID->1143434638]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Transcriptome Time Series", "Subsection",
 CellID->834625544],

Cell[TextData[{
 "In this subsection we will classify the transcriptome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1375671789],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["setTimes", "TI"]}], "]"}], Cell[TextData[{
     "takes a ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " association (or list of lists) of values corresponding to intensities \
collected over time and classifies the values into classes (groups) that show \
distinct similar temporal patterns. ",
     Cell[BoxData["TimeSeriesClassification"], "InlineFormula"],
     " takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Association with series as values, or a list of series, where the \
series contain information regarding time intensities/observations. Each \
series may include ",
          Cell[BoxData[
           TemplateBox[{Cell[
              TextData["Missing"]],"paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " data points and may be entered as list of ",
          Cell[BoxData["N"], "InlineFormula"],
          " signal intensities corresponding one-to-one to the ",
          Cell[BoxData["N"], "InlineFormula"],
          " ",
          Cell[BoxData[
           StyleBox["setTimes", "TI"]], "InlineFormula"],
          " with ",
          Cell[BoxData[
           TemplateBox[{Cell[
              TextData["Missing"]],"paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          
          ". Alternatively, each series data may be a list of pairs of values \
{{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {
         StyleBox["setTimes", "TI"], Cell[TextData[{
          "A global complete set of all possible ",
          Cell[BoxData["N"], "InlineFormula"],
          
          " times during which all data series could have been collected in \
the window of the experiment, including times for which no values were \
reported or are missing, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->628162865],

Cell["Classifying a set of time series based on temporal behavior.", "Caption",
 CellID->503663403],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationCutoffs", 
    RowBox[{"{", "0", "}"}], Cell[TextData[{
     "Cutoffs, for \"Autocorrelation\" and \"InterpolatedAutocorrelation\" \
methods, for different lags that will be used to filter out data series for \
which the lags are not within cutoffs. The list length corresponds to cuttofs \
at different lags, with the ith lag cutoff provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "jk"]}], "}"}]}], TraditionalForm]]],
     " up to ",
     Cell[BoxData["k"], "InlineFormula"],
     ", where ",
     Cell[BoxData[
      RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "  ", "n"}]], 
      "InlineFormula"],
     ", and typically ",
     Cell[BoxData[
      RowBox[{"n", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "setTimes", "]"}], "/", "2"}], "]"}]}]], 
      "InlineFormula"],
     ". The classification will only consider lags up to the length of the \
list provided. The cutoffs are user-provided and typically calculated through \
simulation."
    }], "TableText"]},
   {"AutocorrelationLogic", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "Option to return the autocorrelation logic list for each signal, with \
the default set to ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["False"]],"paclet:ref/False"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". If set to True, a logic vector is returned indicating whether or not \
at a particular lag the autocorrelation for a signal is above or below the ",
     Cell[BoxData["AutocorrelationCutoffs"], "InlineFormula"],
     "."
    }], "TableText"]},
   {"AutocorrelationOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["UpperFrequencyFactor",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], " ", 
      "\[Rule]", "  ", "1"}], "}"}], Cell[TextData[{
     "Options that are used by the internal Autocorrelation function in the \
case that  the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<Autocorrelation\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Options list for the internal Interpolation function used to \
interpolate between data points that have ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values or uneven spacing."
    }], "TableText"]},
   {"LombScargleCutoff", "0", Cell["\<\
Cutoff value for \"LombScargle\" method, for filtering the highest intensity \
observed in the power spectrum. The cutoff is user-provided and typically \
calculated through simulation. \
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], Cell[
    TextData[{
     "Options that are used by the internal LombScargle function if the case \
that the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<LombScargle\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Selection of which algorithm to use in the classification scheme.\
\>", "TableText"]},
   {"ReturnAllSpikes", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Option whether each signal may maintain unique membership to each spike \
class, or be allowed to belong to multiple classes. Used in \"Autocorrelation\
\" and \"InterpolatedAutocorrelation\" methods. If set to False, first spike \
maxima are classified, and only signals found not to belong to spike maxima \
are then considered for membership in the spike minima class.\
\>", "TableText"]},
   {"ReturnData", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
If set to True will return input keys to data associations in the \
classification. If set to False will only return the keys of the input data \
in the classification.\
\>", "TableText"]},
   {"ReturnModels", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether to return the models as well as the classification information for \
the input data. The data is returned as an association with the  key \
\"TimeSeriesClasses\" for classification groups and one of the following: (i) \
\"Models\" for model-based methods, (ii) \"LombScargle\" for periodograms in \
the \"LombScargle\" method, (iii) \"Autocorrelations\" for autocorrelation \
based methods.\
\>", "TableText"]},
   {"SpikeCutoffs", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"1", " ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}], ",", " ", 
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}]}], "|>"}], Cell[TextData[{
     "Association with number, ",
     Cell[BoxData["n"], "InlineFormula"],
     ", of data points as keys, and values corresponding to cutoffs, in the \
form ",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}], ",", 
          RowBox[{"Minimum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}]}], "}"}]}], "|>"}]], "InlineFormula"],
     " used to call spike maxima and minima for a time series with this \
number of datapoints. The values are provided by the user depending on data \
approach based on simulation. The default values are only place-holders and \
should be replaced by real values. The association must have corresponding \
keys for all lengths of input datasets, so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", 
        RowBox[{"OptionValue", "[", "SpikeCutoffs", "]"}], "]"}], 
       "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of series constructed by excluding ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Missing"]],"paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->495990132],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1722114517],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " uses multiple methods to classify data. The periodogram/autocorrelation \
methods used use cutoffs from simulation/user-provided values, to assess \
class membership based on statistical significance. In this tutorial we will \
use the \"LombScargle\" method, to classify data based on a Lomb-Scargle \
computation of a periodogram. The data is classified based into classes major \
(highest intensity) frequencies based on the generated periodogram for a \
signal, when the intensity of this frequency is above an intensity threshold \
cutoff. Additionally, data that displays spikey behavior in the real \
intensity, that is not classified into any frequency classes, is classified \
as a SpikeMaximum or SpikeMinimum if the spike is higher or lower \
respectively than what one would expect from a random signal."
}], "Text",
 CellID->1268036459],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Classification based on periodograms (power spectra) generated by a \
Lomb-Scargle computation as implemented internally by the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into classes of major (highest \
intensity)  frequencies and spikes (maxima or minima in real signal \
intensity), depending on cutoffs typically provided by simulation and passed \
to the function by the ",
     Cell[BoxData["LombScargleCutoffs"], "InlineFormula"],
     " and ",
     Cell[BoxData["SpikeCutoffs"], "InlineFormula"],
     " option values. The returned {computed classification vector} for this \
method is the intensity list of the periodogram for each signal."
    }], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated by a Lomb-Scargle \
approach using an inverser Fourier transform of spectral intensities, as \
implemented through the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Autocorrelation"]],"paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into autocorrelations at different \
lags and spikes (maxima or minima) classes, depending on cutoffs typically \
provided by simulation. The returned {computed classification vector} for \
this method is the autocorrelation list for each signal."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated directly in time, \
with ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Missing"]],"paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " data handled through interpolation. The data is classified into \
autocorrelations at different lags and spikes (maxima or minima) classes \
depending on cutoffs typically provided by simulation. The returned {computed \
classification  vector} for this method is the autocorrelation list for each \
signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelAggregate\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesModelFit"]],"paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into \
aggregate model classes. The returned {computed classification vector} for \
this method is the actual input signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelDetailed\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesModelFit"]],"paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into model \
classes based on individual model degree parameters.  The returned {computed \
classification vector} for this method is the \"BestFitParameters\" for the \
model fit. If this list is empty an integer list is returned {token integer} \
- this is used in subsequent clustering applications."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1644998689],

Cell[TextData[{
 "Methods for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->788494545],

Cell[TextData[{
 "To create the cutoffs for the classification we will first use the \
bootstrap time series set created in the previous subsection, and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1104163398],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileEstimator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileEstimator"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["timepoints", "TI"]}], "]"}], Cell[TextData[{
     "obtains the quantile estimator following bootstrap for time series.  It \
takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell["\<\
Association or list with series as values, from which to generate a \
distribution.\
\>", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["timepoints", "TI"], Cell[
         "Timepoints over which the time series run.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->219567939],

Cell["\<\
Estimating  the quantile value that can be used as a cutoff for \
classification of time series based on bootstrap simulations.\
\>", "Caption",
 CellID->908945433],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Specific options when calculating autocorrelations for the time series.\
\>", "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options list for the internal Interpolation function used to interpolate \
between data points that have Missing values or uneven spacing.\
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", " ", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], 
    Cell["\<\
Specific options when calculating LombScargle periodograms for the time \
series.\
\>", "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Method of calculation. Choices include one of the following: \
{\"LombScargle\",\"Autocorrelation\", \
\"InterpolatedAutocorrelation\",\"Spikes\"}\
\>", "TableText"]},
   {"QuantileValue", "0.95", Cell["Which quantile to extract.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1624929440],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->639559181],

Cell[TextData[{
 "Depending on the cutoffs we would like to generate, we select the \
appropriate Method (also considering the Method that the downstream ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " will use)."
}], "Text",
 CellID->67687095],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile of autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=Floor[Length[timepoints]/2].  The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Autocorrelation"]],"paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile for autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=(Length[timepoints]-1). The method utilizes an ",
     ButtonBox["Interpolation",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Interpolation"],
     " followed by a ",
     ButtonBox["CorrelationFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/CorrelationFunction"],
     " implementation to compute autocorrelations, i.e. missing data or \
uneven sampling is handled by data interpolation."
    }], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Single value corresponding to selected quantile of maximum peak \
intensity of periodogram. The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<Spikes\>\"", Cell[TextData[{
     "Association with number, n, of data points as keys, and values \
corresponding to quantiles for maxima and minima of the series, in the form ",
     
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}], ",", 
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}]}], "}"}]}], "|>"}]], 
      "InlineFormula"],
     " . The keys are generated automatically so that so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", "output", "]"}], "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of input series constructed by excluding \
Missing or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->131328315],

Cell[TextData[{
 ButtonBox["Method",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Method"],
 " selection and output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->751094438],

Cell[TextData[{
 "The default output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Association"]],"paclet:ref/Association"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->1062814029],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->2093893304],

Cell["\<\
Before we classify our transcriptome data, we estimate for the \
\"LombScargle\" Method a 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->1669899255],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNA", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA"}], "]"}]}]], "Input",\

 CellLabel->"In[263]:=",
 CellID->532996142],

Cell[BoxData["0.8602315900893768`"], "Output",
 CellID->177650624]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->365627628],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNASpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[264]:=",
 CellID->186560353],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.884016143838748`", ",", 
      RowBox[{"-", "0.3480693290704187`"}]}], "}"}]}], ",", 
   RowBox[{"15", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.858813122520236`", ",", 
      RowBox[{"-", "0.3376351832224358`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[264]=",
 CellID->811386742]
}, Open  ]],

Cell["\<\
Now we can classify the transcriptome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1987903082],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"rnaFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95RNA"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95RNASpikes"}]}], "]"}]}]], "Input",
 CellLabel->"In[265]:=",
 CellID->136519148],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[265]:=",
 CellID->1026543908],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.08553735041954855`", ",", "0.2041353122187633`", ",", 
                   "0.21930279158524527`", ",", "0.3784958694491304`", ",", 
                   "0.5848999163284979`", ",", "0.34601221698539536`", ",", 
                   "0.5457352214922402`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                   TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
                   "0.07591897179810148`", ",", "0.`"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"821"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 265, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[265], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[265]=",
 CellID->755245404]
}, Open  ]],

Cell[TextData[{
 "The default output for TimeSeriesClassification is an Association with \
outer keys being the classification classes,  inner keys being the class \
members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->673783308],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->594786925],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1134620377],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "rnaClassification", "]"}]], "Input",
 CellLabel->"In[101]:=",
 CellID->2057374526],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[101]=",
 CellID->568030100]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->172558847],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", "rnaClassification"}]], "Input",\

 CellLabel->"In[266]:=",
 CellID->1093618079],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[266]=",
 CellID->1781151258]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->47471690],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "rnaClassification"}]], "Input",
 CellLabel->"In[267]:=",
 CellID->1140260793],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PADI4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC28B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JAK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C1orf52\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IARS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"URB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HSPA14\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WBP1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDZD8\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC102288414\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRMT112\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DRAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CDK2AP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM168A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FLI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EFCAB4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFA12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ELK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SSH1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C12orf49\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IPO5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TMCO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KIAA0586\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JKAMP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PCNX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EHD4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CLPX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AAGAB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RCCD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM173A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LINC00921\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZC3H7A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GLG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBTPS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TNFRSF13B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF207\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ACLY\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PSME3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TEX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ATP9B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADNP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HOOK2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SDHAF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF529\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RPL18\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CTU1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GEMIN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GMCL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"COA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MRPS9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RALGAPA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC284801\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAMHD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SERINC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"USP25\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RUNX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DSCR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"THAP7\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PITPNB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EWSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NPTXR\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TCF20\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STT3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SNRK-AS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKAR2A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GSK3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTPLB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DNAJC13\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LRCH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KLF3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ANTXR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GPRIN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTGER4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NNT\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC125\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"POC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TBC1D22B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HACE1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SYNJ2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CYTH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MTERF\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBLAC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRIM56\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHCYL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RNF122\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADAM9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKDC\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KDM4C\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FOCAD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CEP78\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RC3H2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZRSR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CASK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DDX3X\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TIMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARHGEF6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IDS\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[267]=",
 CellID->384783444]
}, Open  ]],

Cell[TextData[{
 "We may also want to know what these frequencies correspond to. The \
\"LombScargle\" method uses a ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " transformation."
}], "Text",
 CellID->1070903617],

Cell[BoxData[GridBox[{
   {
    ButtonBox[
     RowBox[{"LombScargle", "[", 
      RowBox[{
       StyleBox["data", "TI"], ",", " ", 
       StyleBox["setTimes", "TI"]}], "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell[TextData[{
     "calculates the Lomb-Scargle power spectrum for time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " that runs over specified ",
     Cell[BoxData[
      StyleBox["setTimes", "TI"]], "InlineFormula"],
     ". It takes as input:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Time series (data as a list; list may be the value of a single key \
in an association). The series may include Missing data points. Data may be \
entered as list of N signal intensities corresponding one-to-one to the N \
setTimes with Missing inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          ". Alternatively, the data may be a list of pairs of values {{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["setTimes", "TI"], Cell[TextData[{
          
          "A complete set of all possible N times during which data could \
have been collected in the window of the experiment, including times for \
which no data was collected,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1990717933],

Cell["\<\
Calculating the power spectrum of a (possibly unevenly sampled) time series.\
\>", "Caption",
 CellID->201079671],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FrequenciesOnly", "False", Cell[TextData[{
     "Whether to return only the computation frequencies. An association of \
frequencies \"f\" ordered from low to high by index i is returned in the \
form:\n",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<f1\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "1"]}], ",", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "2"]}], ",", " ", "...", ",", 
        RowBox[{"\"\<fi\>\"", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["frequency", 
            RowBox[{"i", ",", "...", ","}]], "\"\<fn\>\""}], "\[Rule]", " ", 
          SubscriptBox["frequency", "n"]}]}]}], "|>"}]], "InlineFormula"]
    }], "TableText"]},
   {"NormalizeIntensities", "False", Cell[
    "Whether the intensities list should be normalized or not.", "TableText"]},
   {
    ButtonBox["OversamplingRate",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/OversamplingRate"], "1", Cell["\<\
Rate at which to oversample the time series using zero-padding.\
\>", "TableText"]},
   {"PairReturn", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether data should be returned as {frequency list,intensity list} or as \
pairs: {{frequency1,intensity1}, {frequency2, \
intensity2},...,{frequencyN,intensityN}.\
\>", "TableText"]},
   {
    ButtonBox["UpperFrequencyFactor",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], "1", 
    Cell["\<\
Value \[GreaterEqual] 1,  by which to scale the upper Nyquist cutoff \
frequency and increase spectral resolution. \
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->3905959],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1222943503],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["True"]],"paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->661398041],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"rnaFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[104]:=",
 CellID->741518215],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[104]=",
 CellID->1561171098]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proteomic Data", "Section",
 CellID->1387790784],

Cell[CellGroupData[{

Cell["Importing OmicsObject Proteome Data", "Subsection",
 CellID->1225055698],

Cell[TextData[{
 "We now import the proteomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->72301240],

Cell["We import the proteomics OmicsObject MathIOmica example:", "MathCaption",
 CellID->1419719176],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<proteinExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[105]:=",
 CellID->458823941],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.937`", "}"}], ",", 
                 RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.073`", "}"}], ",", 
                 RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.059`", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5219"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[105], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[105]=",
 CellID->647445040]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->1754470356],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "proteinExample"}]], "Input",
 CellLabel->"In[106]:=",
 CellID->285316335],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"14\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>", ",", "\<\"21\"\>"}], "}"}]], "Output",
 CellLabel->"Out[106]=",
 CellID->309147931]
}, Open  ]],

Cell["\<\
We notice that sample 8 is missing - this is because it was used as a \
reference in the proteomics experiment. Point 18 is missing as there was no \
sample for that time point. We will address this in the next section.\
\>", "Text",
 CellID->460190071],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["214", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->1259531385],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "22"}], "}"}]}], "]"}], "@", 
  "proteinExample"}]], "Input",
 CellLabel->"In[107]:=",
 CellID->1197679216],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A5PLN9\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1.057`", "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A6NGU5\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[107]=",
 CellID->1086334224]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to UniProt accessions, and have been tagged with a \
\"Protein\" label as well. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "relative", " ", "intensity", " ", "compared", " ", "to", " ", 
       "reference"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "number", " ", "of", " ", "unique", " ", "peptides", " ", "identified", 
       " ", "for", " ", "the", " ", "given", " ", "protein"}], "}"}]}], 
    "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1823731250],

Cell["\<\
The measurement for each protein is a relative intensity, i.e. the ratio of \
the value for the protein compared to the reference timepoint that has been \
chosen as the healthy sample \"8\", day \"255\" (in the experiment this was \
TMT reporter with 126 amu). The last list, the \"metadata\", in the \
proteomics OmicsObject was chosen to be the number of unique peptides \
identified for the given protein.\
\>", "Text",
 CellID->220886326],

Cell[CellGroupData[{

Cell["Additional Information: Gene Translation", "Subsubsubsection",
 CellID->237385776],

Cell[TextData[{
 "As an aside, let us consider the form of the protein identifiers. \
MathIOmica can perform basic ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GeneTranslation"]],"paclet:MathIOmica/ref/GeneTranslation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " going from one kind of identifier to another, using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GetGeneDictionary"]],"paclet:MathIOmica/ref/GetGeneDictionary"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1605734052],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GeneTranslation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GeneTranslation"], "[", 
     RowBox[{
      StyleBox["inputIDList", "TI"], ",", 
      StyleBox["targetIDList", "TI"], ",", 
      StyleBox["geneDictionary", "TI"]}], "]"}], Cell[TextData[{
     "uses ",
     Cell[BoxData[
      StyleBox["geneDictionary", "TI"]], "InlineFormula"],
     " to convert ",
     Cell[BoxData[
      StyleBox["inputIDList", "TI"]], "InlineFormula"],
     " IDs to different annotations as indicated by ",
     Cell[BoxData[
      StyleBox["targetIDList", "TI"]], "InlineFormula"],
     ". It takes for inputs:\n",
     Cell[BoxData[GridBox[{
        {"inputIDList", Cell[TextData[{
          "List of ",
          Cell[BoxData["n"], "InlineFormula"],
          " IDs (strings) to be converted in the form ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["inputID", 
               RowBox[{"1", ","}]], 
              SubscriptBox["inputID", "2"]}], ",", "...", ",", 
             SubscriptBox["inputID", "n"]}], "}"}]], "InlineFormula"]
         }], "TableText"]},
        {"targetIDList", Cell[TextData[{
          
          "List of target identifier strings, as used in the gene \
geneDictionary,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{"target", " ", 
              SubscriptBox["ID", "1"]}], ",", 
             SubscriptBox["targetID", "2"], ",", 
             RowBox[{"...", "target", " ", 
              SubscriptBox["ID", "k"]}]}], "}"}]], "InlineFormula"],
          
          ", e.g. {\"UniProt ID\",\"Gene Symbol\"}. Can also be provided as a \
single string for only one kind of IDs."
         }], "TableText"]},
        {"geneDictionary", Cell[TextData[{
          "Gene dictionary to base translation on in the form generated by ",
          Cell[BoxData[
           TemplateBox[{Cell[
              TextData["GetGeneDictionary"]],
             "paclet:MathIOmica/ref/GetGeneDictionary"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]},
   {
    ButtonBox[
     RowBox[{"GetGeneDictionary", "[", "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell["\<\
creates an ID/accession dictionary from a UCSC table search - typically of \
gene annotations. GetGeneDictionary uses MathIOmica data for the annotations..\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->730612315],

Cell["Translating gene identifiers using a gene dictionary.", "Caption",
 CellID->69474757],

Cell["We use GetGeneDictionary to define a gene dictionary:", "MathCaption",
 CellID->1155116896],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geneDictionary", "=", 
  RowBox[{"GetGeneDictionary", "[", "]"}]}]], "Input",
 CellLabel->"In[108]:=",
 CellID->797502192],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"\<\"human\"\>", "\[Rule]", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"UCSC ID\"\>", "\[Rule]", 
              RowBox[{"{", 
               
               RowBox[{"\<\"uc001aaa.3\"\>", ",", "\<\"uc010nxr.1\"\>", 
                ",", "\<\"uc010nxq.1\"\>", ",", "\<\"uc001aal.1\"\>", 
                ",", "\<\"uc001aaq.2\"\>", ",", "\<\"uc001aar.2\"\>", 
                ",", "\<\"uc001aau.3\"\>", ",", "\<\"uc021oeh.1\"\>", ",", 
                TemplateBox[{"121567"},
                 "OutputSizeLimit`Skeleton"], ",", "\<\"uc022cfk.1\"\>", 
                ",", "\<\"uc031tkn.1\"\>", ",", "\<\"uc022cgh.1\"\>", 
                ",", "\<\"uc022cha.1\"\>", ",", "\<\"uc022chb.1\"\>", 
                ",", "\<\"uc022chc.1\"\>", ",", "\<\"uc022che.1\"\>", 
                ",", "\<\"uc022cpe.1\"\>"}], "}"}]}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
              RowBox[{"\<\"HGU\"\>", "\[Ellipsis]", "\<\"x ID\"\>"}], 
              "\[Rule]", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[108], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[108]=",
 CellID->113335974]
}, Open  ]],

Cell["\<\
The current version of the gene dictionary has accessions for the following \
identifiers:\
\>", "MathCaption",
 CellID->811349928],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Keys"}], "]"}], "@", "geneDictionary"}]], "Input",
 CellLabel->"In[109]:=",
 CellID->1984565093],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"human\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\<\"UCSC ID\"\>", ",", "\<\"UniProt ID\"\>", 
     ",", "\<\"Gene Symbol\"\>", ",", "\<\"RefSeq ID\"\>", 
     ",", "\<\"NCBI Protein Accession\"\>", ",", "\<\"Ensembl ID\"\>", 
     ",", "\<\"KEGG Gene ID\"\>", ",", "\<\"HGU133Plus2 Affymetrix ID\"\>"}], 
    "}"}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[109]=",
 CellID->19720129]
}, Open  ]],

Cell["\<\
We can now use GeneTranslation (setting the optional InputID to \"UniProt \
ID\") to convert our example \"UniProt ID\" accessions to \"Gene Symbol\":\
\>", "MathCaption",
 CellID->589880236],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneTranslation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<A5PLN9\>\"", ",", "\"\<A6NGU5\>\""}], "}"}], ",", 
   RowBox[{"{", "\"\<Gene Symbol\>\"", "}"}], ",", "geneDictionary", ",", 
   RowBox[{"InputID", "\[Rule]", " ", 
    RowBox[{"{", "\"\<UniProt ID\>\"", "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[110]:=",
 CellID->557131970],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Gene Symbol\"\>", "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"A5PLN9\"\>", "\[Rule]", 
      RowBox[{"{", "\<\"TRAPPC13\"\>", "}"}]}], ",", 
     RowBox[{"\<\"A6NGU5\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[110]=",
 CellID->723726465]
}, Open  ]],

Cell["\<\
We note that an ID might not necessarily be annotated across all databases, \
as in the above example.\
\>", "Text",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Proteome Data", "Subsection",
 CellID->1281067914],

Cell["\<\
We will next preprocess the imported proteome data. We will first perform a \
transformation on the data towards a normal distribution, then we will \
re-label the samples with real time and carry out filtering for unique \
peptides present in each protein identification, as well as for missing data. \
Finally, we will create the proteomics time series or relative intensities \
compared to the healthy reference point for each protein.\
\>", "Text",
 CellID->1997801546],

Cell[CellGroupData[{

Cell["Power Transformation, Labeling and Filtering", "Subsubsection",
 CellID->1973203023],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->666869090],

Cell[TextData[{
 "To make the data comparable across time points, and as close to a normal \
distribution as possible for each sample, we normalize each time point \
/sample by using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ApplyBoxCoxTransform"]],
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->611320926],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ApplyBoxCoxTransform",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "for a given ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " set, computes the Box-Cox transformation at the maximum likelihood \
\[Lambda] parameter."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->351641937],

Cell["\<\
Applying a power transformation (Box-Cox) for an optimized parameter for each \
dataset.\
\>", "Caption",
 CellID->171038615],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["HorizontalSelection",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/HorizontalSelection"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Horizontal selection across components for a single level association with \
multi-list values.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1055700668],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ApplyBoxCoxTransform"]],
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->651235562],

Cell[TextData[{
 "We apply a Box-Cox transformation to the proteomics data measurement in the \
OmicsObject, which is in the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1312882619],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinExample", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[111]:=",
 CellID->223704608],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15263837861185456`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15263837861185456`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->916487219],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17708643543086405`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17708643543086405`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1393161984],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4215814241016595`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4215814241016595],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1933820101],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29228668269327357`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29228668269327357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1615625703],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4320423187977895`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4320423187977895],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->944609390],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3466732904603381`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3466732904603381],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1760647747],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3680613181947485`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3680613181947485],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->729347633],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08340736160903305`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08340736160903305],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->928300839],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", "0.134129663481085`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.134129663481085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->200801478],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.16633647201933024`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.16633647201933024`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->584112668],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08662842477048169`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08662842477048169],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->805571796],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.199246934668649`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.199246934668649],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->507574800],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.22177775113087478`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.22177775113087478`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[111]:=",
 CellID->1093520098]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5221"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", 
                   TemplateBox[{"21"},
                    "OutputSizeLimit`Skeleton"]}], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5223"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 111, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[111], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[111]=",
 CellID->627236060]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->1190633123],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedProteinData"}], ")"}]}]], "Input",
 CellLabel->"In[112]:=",
 CellID->718275515],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.9, 0}, {-1.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-82.10026737967915, -73.84625668449199}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-66.5922459893048, -58.33823529411765}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.5, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-51.084224598930476`, -42.830213903743314`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-35.57620320855615, -27.322192513368975`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-27.822192513368975`, -19.568181818181827`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-20.068181818181827`, -11.81417112299465}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-12.31417112299465, -4.060160427807489}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-4.560160427807489, 3.6938502673796805`}, {
              18.900813620652837`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{3.1938502673796805`, 11.44786096256685}, {
              18.592914125795218`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{10.94786096256685, 19.20187165775402}, {
              18.24102898881508, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 20.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{18.70187165775402, 26.95588235294118}, {
              18.15305770457005, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 20]& ,
           TagBoxNote->"20"],
          StyleBox["20", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[20, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.45588235294118, 34.70989304812835}, {
              17.229359219997193`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 96.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{34.20989304812835, 42.46390374331551}, {
              14.810148903258757`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 96]& ,
           TagBoxNote->"96"],
          StyleBox["96", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[96, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 171.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{41.96390374331551, 50.21791443850268}, {
              11.511225744069982`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 171]& ,
           TagBoxNote->"171"],
          StyleBox["171", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[171, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 511.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.71791443850268, 
              57.971925133689844`}, {-3.4438925775857925`, 
              19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 511]& ,
           TagBoxNote->"511"],
          StyleBox["511", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[511, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 1161.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.471925133689844`, 
              65.72593582887701}, {-32.03455995722183, 19.53277054702039}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1161]& ,
           TagBoxNote->"1161"],
          StyleBox["1161", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1161, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 1073.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{65.22593582887701, 
              73.47994652406418}, {-28.163823450440344`, 
              19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1073]& ,
           TagBoxNote->"1073"],
          StyleBox["1073", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1073, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 514.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{72.97994652406418, 
              81.23395721925135}, {-3.575849503953343, 19.532770547020387`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 514]& ,
           TagBoxNote->"514"],
          StyleBox["514", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[514, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 197.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.73395721925135, 88.98796791443851}, {
              10.367599048884541`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 197]& ,
           TagBoxNote->"197"],
          StyleBox["197", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[197, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 85.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.48796791443851, 96.74197860962568}, {
              15.293990966606444`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 45.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{96.24197860962568, 104.49598930481284`}, {
              17.053416651507124`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 45]& ,
           TagBoxNote->"45"],
          StyleBox["45", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[45, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 35.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.99598930481284`, 112.25}, {
              17.493273072732293`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 120.00401069518718`}, {
              18.24102898881508, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{119.50401069518718`, 127.75802139037435`}, {
              18.5489284836727, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{127.25802139037435`, 135.51203208556151`}, {
              18.72487105216277, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{135.01203208556151`, 143.26604278074868`}, {
              18.944799262775355`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{142.76604278074868`, 151.02005347593587`}, {
              18.768856694285287`, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{173.78208556149735`, 182.03609625668452`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{181.53609625668452`, 189.79010695187168`}, {
              18.98878490489787, 19.532770547020387`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.522, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-1, 2], 
         Rational[3, 5]}, {All, All}}, {{-0.5, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.476], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.476], Thickness[Small]}], 
        RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 1.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 2.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 4.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 1.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 2.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 5.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 6.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 21.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 30.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 69.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 92.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 102.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 140.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 163.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 207.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 334.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 382.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 434.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 391.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 365.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 372.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 351.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 260.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 147.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 75.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 29.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 12.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 9.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 6.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 5.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 3.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 4.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 1.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 2.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 1.},
         RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 3.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.78, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 4], 
         Rational[3, 4]}, {All, All}}, {{-0.75, 0.75}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.567], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.567], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.25, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-78.5598007818019, -72.4929943955164}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.95, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-45.1589624640889, -39.092156077803395`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.85, 0}, {-0.8, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-28.458543305232396`, -22.39173691894692}, {
              21.520832192096776`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.75, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-22.89173691894692, -16.824930532661412`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.75, 0}, {-0.7, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-17.324930532661412`, -11.258124146375906`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.65, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-11.758124146375906`, -5.6913177600904135`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.65, 0}, {-0.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-6.1913177600904135`, -0.12451137380490707`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.55, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-0.6245113738049071, 5.442295012480578}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.55, 0}, {-0.5, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{4.942295012480578, 11.009101398766084`}, {
              21.520832192096776`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.45, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{10.509101398766084`, 16.575907785051584`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.45, 0}, {-0.4, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{16.075907785051584`, 22.142714171337076`}, {
              21.594036755152175`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.35, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.642714171337076`, 27.709520557622582`}, {
              20.7155819984874, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.35, 0}, {-0.3, 31.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{27.209520557622582`, 33.27632694390808}, {
              19.544308989601035`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.25, 50.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{32.77632694390808, 38.84313333019358}, {
              18.153422291548473`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 50]& ,
           TagBoxNote->"50"],
          StyleBox["50", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[50, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.25, 0}, {-0.2, 79.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.34313333019358, 44.40993971647907}, {
              16.03048996294193, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.15, 174.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{43.90993971647907, 49.97674610276458}, {
              9.076056472679129, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 174]& ,
           TagBoxNote->"174"],
          StyleBox["174", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[174, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.15, 0}, {-0.1, 313.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.47674610276458, 
              55.54355248905007}, {-1.0993777920211834`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 313]& ,
           TagBoxNote->"313"],
          StyleBox["313", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[313, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {-0.05, 558.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.04355248905007, 
              61.11035887533557}, {-19.034495740593677`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 558]& ,
           TagBoxNote->"558"],
          StyleBox["558", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[558, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.05, 0}, {0., 758.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{60.61035887533557, 
              66.67716526162107}, {-33.67540835167327, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 758]& ,
           TagBoxNote->"758"],
          StyleBox["758", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[758, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.05, 774.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.17716526162107, 
              72.24397164790656}, {-34.846681360559636`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 774]& ,
           TagBoxNote->"774"],
          StyleBox["774", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[774, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.05, 0}, {0.1, 535.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.74397164790656, 
              77.81077803419207}, {-17.35079079031953, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 535]& ,
           TagBoxNote->"535"],
          StyleBox["535", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[535, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.15, 326.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{77.31077803419207, 
              83.37758442047756}, {-2.0510371117413584`, 22.31365044431837}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 326]& ,
           TagBoxNote->"326"],
          StyleBox["326", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[326, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.15, 0}, {0.2, 154.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{82.87758442047756, 88.94439080676307}, {
              10.540147733787087`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.25, 81.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.44439080676307, 94.51119719304856}, {
              15.884080836831139`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 81]& ,
           TagBoxNote->"81"],
          StyleBox["81", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[81, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.25, 0}, {0.3, 53.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{94.01119719304856, 100.07800357933405`}, {
              17.93380860238228, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 53]& ,
           TagBoxNote->"53"],
          StyleBox["53", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[53, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.35, 40.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.57800357933405, 105.64480996561956`}, {
              18.885467922102453`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.35, 0}, {0.4, 22.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{105.14480996561956`, 111.21161635190506`}, {
              20.203150057099617`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 22]& ,
           TagBoxNote->"22"],
          StyleBox["22", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[22, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.45, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{110.71161635190506`, 116.77842273819056`}, {
              20.27635462015501, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.45, 0}, {0.5, 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.27842273819056`, 122.34522912447605`}, {
              21.301218502930585`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.55, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.84522912447605`, 127.91203551076157`}, {
              21.228013939875186`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.55, 0}, {0.6, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{127.41203551076157`, 133.47884189704706`}, {
              21.44762762904138, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.65, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{132.97884189704706`, 139.04564828333255`}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.75, 0}, {0.8, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{149.67926105590357`, 155.74606744218906`}, {
              21.667241318207573`, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.85, 1.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{155.24606744218906`, 161.31287382847455`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.95, 0}, {1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{171.94648660104554`, 178.01329298733106`}, {
              21.74044588126297, 22.31365044431837}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.41700000000000004`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-2, 5], 
         Rational[9, 20]}, {All, All}}, {{-0.4, 0.45}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], 
        RectangleBox[{-1.45, 0}, {-1.4, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 2.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1.05, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 4.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 2.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 3.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 6.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 7.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 12.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 24.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 48.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 75.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 74.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 89.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 89.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 128.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 168.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 245.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 278.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 343.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 377.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 376.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 345.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 335.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 317.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 236.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 130.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 101.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 51.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 34.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 29.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 14.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 11.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 11.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 16.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 3.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 7.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 2.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 2.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.883, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[4, 5]}, {All, All}}, {{-0.85, 0.8}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.602], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.602], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-23.29901960784312, -15.691176470588218`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-9.083333333333329, -1.4754901960784252`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.240196078431367`, 19.848039215686278`}, {
              16.05669343918261, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{19.348039215686278`, 26.955882352941174`}, {
              16.05669343918261, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.455882352941174`, 34.06372549019607}, {
              15.912841803959392`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{33.56372549019607, 41.17156862745097}, {
              15.625138533512956`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 79.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{40.67156862745097, 48.27941176470587}, {
              12.412452013527766`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 285.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{47.77941176470587, 55.387254901960766`}, {
              2.5346397282001636`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 285]& ,
           TagBoxNote->"285"],
          StyleBox["285", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[285, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 530.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.887254901960766`, 
              62.49509803921566}, {-9.21324381502927, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 530]& ,
           TagBoxNote->"530"],
          StyleBox["530", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[530, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 1065.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{61.99509803921566, 
              69.60294117647057}, {-34.8667854298364, 16.700545074405824`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1065]& ,
           TagBoxNote->"1065"],
          StyleBox["1065", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1065, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 1057.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{69.10294117647057, 
              76.71078431372547}, {-34.48318106924114, 16.700545074405824`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1057]& ,
           TagBoxNote->"1057"],
          StyleBox["1057", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1057, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 777.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{76.21078431372547, 
              83.81862745098036}, {-21.05702844840751, 16.700545074405827`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 777]& ,
           TagBoxNote->"777"],
          StyleBox["777", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[777, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 158.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.31862745098036, 90.92647058823526}, {
              8.624358952649704, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 158]& ,
           TagBoxNote->"158"],
          StyleBox["158", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[158, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 29.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{90.42647058823526, 98.03431372549016}, {
              14.809979267248059`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{97.53431372549016, 105.14215686274505`}, {
              15.673089078587363`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{104.64215686274505`, 112.24999999999996`}, {
              16.008742894108202`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.74999999999996`, 119.35784313725486`}, {
              15.960792349033799`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{118.85784313725486`, 126.46568627450976`}, {
              15.960792349033799`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{125.96568627450976`, 133.57352941176467`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{133.07352941176467`, 140.68137254901956`}, {
              16.15259452933142, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{140.18137254901956`, 147.78921568627447`}, {
              16.104643984257017`, 16.700545074405827`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.624, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 5], 
         Rational[3, 5]}, {All, All}}, {{-0.6, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.45588235294116, 31.69444444444443}, {
              18.670170862552855`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{31.19444444444443, 36.4330065359477}, {
              18.670170862552855`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.9330065359477, 41.17156862745097}, {
              18.456276284524616`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 29.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{40.67156862745097, 45.91013071895423}, {
              17.17290881635518, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 152.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{45.41013071895423, 50.6486928104575}, {
              10.595650541986808`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 152]& ,
           TagBoxNote->"152"],
          StyleBox["152", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[152, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 259.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.1486928104575, 55.38725490196076}, {
              4.873970579731397, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 259]& ,
           TagBoxNote->"259"],
          StyleBox["259", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[259, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 452.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.88725490196076, 
              60.12581699346403}, {-5.446442810131167, 19.223644507059916`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 452]& ,
           TagBoxNote->"452"],
          StyleBox["452", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[452, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 877.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{59.62581699346403, 
              64.8643790849673}, {-28.17274172563163, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 877]& ,
           TagBoxNote->"877"],
          StyleBox["877", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[877, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 955.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{64.3643790849673, 
              69.60294117647057}, {-32.343685997182305`, 
              19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 955]& ,
           TagBoxNote->"955"],
          StyleBox["955", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[955, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 656.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{69.10294117647057, 
              74.34150326797383}, {-16.35506628957139, 19.223644507059916`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 656]& ,
           TagBoxNote->"656"],
          StyleBox["656", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[656, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 184.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{73.84150326797383, 79.08006535947709}, {
              8.884493917760892, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 44.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{78.58006535947709, 83.81862745098036}, {
              16.37080414874928, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 44]& ,
           TagBoxNote->"44"],
          StyleBox["44", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[44, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.31862745098036, 88.55718954248363}, {
              17.921539839454017`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.05718954248363, 93.2957516339869}, {
              18.509749929031678`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{92.7957516339869, 98.03431372549016}, {
              18.456276284524616`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{97.53431372549016, 102.77287581699343`}, {
              18.509749929031678`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.27287581699343`, 107.5114379084967}, {
              18.616697218045797`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 2.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{107.0114379084967, 112.24999999999997`}, {
              18.616697218045797`, 19.223644507059916`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.6720000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1.6, 2.}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.64271417133707, 26.257310195982875`}, {
              18.867915887176146`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{33.98650224527448, 38.601098269920286`}, {
              18.1585533606675, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.101098269920286`, 42.71569429456609}, {
              17.89254241322676, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 31.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{42.21569429456609, 46.8302903192119}, {
              16.207806412768726`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 99.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{46.3302903192119, 50.944886343857696`}, {
              10.178224937445245`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 99]& ,
           TagBoxNote->"99"],
          StyleBox["99", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[99, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 219.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.444886343857696`, 
              55.0594823685035}, {-0.4622129601844307, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 219]& ,
           TagBoxNote->"219"],
          StyleBox["219", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[219, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 349.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.5594823685035, 
              59.1740783931493}, {-11.98935401594991, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 466.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.6740783931493, 
              63.28867441779511}, {-22.36378096613884, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 466]& ,
           TagBoxNote->"466"],
          StyleBox["466", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[466, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 559.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{62.78867441779511, 
              67.40327044244091}, {-30.61012033680184, 19.456586202989726`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 559]& ,
           TagBoxNote->"559"],
          StyleBox["559", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[559, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 639.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.90327044244091, 
              71.51786646708672}, {-37.703745601888286`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 639]& ,
           TagBoxNote->"639"],
          StyleBox["639", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[639, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 548.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.01786646708672, 
              75.63246249173253}, {-29.634746862852452`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 548]& ,
           TagBoxNote->"548"],
          StyleBox["548", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[548, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 375.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{75.13246249173253, 
              79.74705851637833}, {-14.294782227103006`, 
              19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 375]& ,
           TagBoxNote->"375"],
          StyleBox["375", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[375, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 191.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{79.24705851637833, 83.86165454102414}, {
              2.020555882595829, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 80.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.36165454102414, 87.97625056566993}, {
              11.862960937903276`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 80]& ,
           TagBoxNote->"80"],
          StyleBox["80", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[80, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 40.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{87.47625056566993, 92.09084659031573}, {
              15.4097735704465, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{91.59084659031573, 96.20544261496154}, {
              17.626531465786016`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.70544261496154, 100.32003863960735`}, {
              18.601904939735405`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.82003863960735, 104.43463466425314`}, {
              18.51323462392182, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.93463466425314`, 108.54923068889894`}, {
              18.867915887176146`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.2, 0}, {2.4, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{112.16382671354475`, 116.77842273819056`}, {
              18.779245571362566`, 19.456586202989726`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.2920000000000003`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.2, 2.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.6, 0}, {-2.4, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.63235294117647, 26.224424552429674`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.4, 0}, {-2.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{25.724424552429674`, 30.316496163682864`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{29.816496163682864`, 34.40856777493607}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.8, 0}, {-1.6, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.00063938618926, 42.59271099744246}, {
              19.124539917646118`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.6, 0}, {-1.4, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{42.09271099744246, 46.684782608695656`}, {
              18.202278742559628`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.2, 51.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{46.184782608695656`, 50.77685421994886}, {
              14.882138512248265`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 51]& ,
           TagBoxNote->"51"],
          StyleBox["51", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[51, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1., 85.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{50.27685421994886, 54.86892583120205}, {
              11.746450516954202`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.8, 124.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.36892583120205, 58.96099744245525}, {
              8.149631934116892, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 124]& ,
           TagBoxNote->"124"],
          StyleBox["124", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[124, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.6, 184.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.46099744245525, 63.05306905370845}, {
              2.6160648835979536`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.4, 273.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.55306905370845, 
              67.14514066496164}, {-5.592059574671804, 20.085670505189363`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 273]& ,
           TagBoxNote->"273"],
          StyleBox["273", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[273, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.2, 449.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.64514066496164, 
              71.23721227621483}, {-21.82385625619402, 20.085670505189363`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 449]& ,
           TagBoxNote->"449"],
          StyleBox["449", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[449, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {0., 611.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{70.73721227621483, 
              75.32928388746804}, {-36.764487292595156`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 611]& ,
           TagBoxNote->"611"],
          StyleBox["611", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[611, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.2, 574.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{74.82928388746804, 
              79.42135549872124}, {-33.352120944775145`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 574]& ,
           TagBoxNote->"574"],
          StyleBox["574", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[574, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.4, 520.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{78.92135549872124, 
              83.51342710997443}, {-28.3719105993081, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 520]& ,
           TagBoxNote->"520"],
          StyleBox["520", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[520, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.6, 397.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.01342710997443, 
              87.60549872122763}, {-17.028098145744273`, 
              20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 397]& ,
           TagBoxNote->"397"],
          StyleBox["397", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[397, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.8, 200.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{87.10549872122763, 91.69757033248082}, {
              1.1404470034595704`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {1., 76.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{91.19757033248082, 95.78964194373403}, {
              12.576485574532041`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 76]& ,
           TagBoxNote->"76"],
          StyleBox["76", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[76, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.2, 35.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.28964194373403, 99.88171355498721}, {
              16.357756392386648`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.4, 13.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{99.38171355498721, 103.97378516624042`}, {
              18.386730977576924`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.6, 13.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.47378516624042`, 108.06585677749362`}, {
              18.386730977576924`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.6, 0}, {1.8, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.56585677749362`, 112.15792838874681`}, {
              18.84786156512017, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.8, 0}, {2., 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.65792838874681`, 116.25}, {
              19.03231380013747, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0}, {2.2, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{115.75, 120.3420716112532}, {
              19.401218270172066`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.6, 0}, {2.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{128.0262148337596, 132.61828644501279`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2.8, 0}, {3., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{132.11828644501279`, 136.710358056266}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0}, {4.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{156.67071611253198`, 161.26278772378518`}, {
              19.493444387680714`, 20.085670505189363`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.692, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 5], 2}, {All, All}}, {{-2.6, 2}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-10.014705882352928`, -5.004901960784309}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 5.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
              18.158448402172937`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
              17.809484043166734`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
              16.76259096614812, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 33.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
              15.715697889129505`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 33]& ,
           TagBoxNote->"33"],
          StyleBox["33", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[33, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 70.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
              12.487777568322112`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 70]& ,
           TagBoxNote->"70"],
          StyleBox["70", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[70, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 139.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
              6.468142375465083, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 139]& ,
           TagBoxNote->"139"],
          StyleBox["139", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[139, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 200.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
              1.1464359006204603`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 299.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.122549019607845`, 
              58.13235294117648}, {-7.490431984783104, 19.094653850930694`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 299]& ,
           TagBoxNote->"299"],
          StyleBox["299", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[299, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 401.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.63235294117648, 
              62.642156862745104`}, {-16.389023139441324`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 401]& ,
           TagBoxNote->"401"],
          StyleBox["401", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[401, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 600.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.142156862745104`, 
              67.15196078431373}, {-33.75, 19.094653850930698`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 600]& ,
           TagBoxNote->"600"],
          StyleBox["600", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[600, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 619.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.65196078431373, 
              71.66176470588236}, {-35.40758070527947, 19.094653850930698`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 619]& ,
           TagBoxNote->"619"],
          StyleBox["619", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[619, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 533.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.16176470588236, 
              76.17156862745098}, {-27.904846986646074`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 533]& ,
           TagBoxNote->"533"],
          StyleBox["533", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[533, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 349.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{75.67156862745098, 
              80.68137254901961}, {-11.852486472360663`, 
              19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 159.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
              4.723320580434059, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 159]& ,
           TagBoxNote->"159"],
          StyleBox["159", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[159, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 93.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
              10.481232504036436`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 93]& ,
           TagBoxNote->"93"],
          StyleBox["93", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[93, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 42.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
              14.930528081365544`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 42]& ,
           TagBoxNote->"42"],
          StyleBox["42", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[42, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 27.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
              16.239144427638813`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 27]& ,
           TagBoxNote->"27"],
          StyleBox["27", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[27, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
              17.809484043166734`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 17.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
              17.111555325154324`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 17]& ,
           TagBoxNote->"17"],
          StyleBox["17", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[17, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.24019607843138`, 112.25}, {
              17.896725132918284`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 116.75980392156863`}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.1, 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
              18.24568949192449, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.3, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
              18.507412761179143`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
              18.420171671427592`, 19.094653850930694`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{-2.2, 0}, {-2.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.4, 2.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 3.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 6.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 12.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 29.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 46.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 84.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 139.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 156.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 196.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 242.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 321.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 425.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 399.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 386.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 368.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 266.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 144.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 57.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 35.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 17.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 13.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 11.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 7.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 6.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 3.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 2.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 2.},
         RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 1.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 10], 
         Rational[13, 10]}, {All, All}}, {{-1.3, 1.3}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], 
        RectangleBox[{-2.1, 0}, {-2., 1.},
         RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.6, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.3, 4.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 3.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 4.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 14.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 25.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 46.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 83.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 109.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 125.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 147.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 165.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 247.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 289.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 384.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 375.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 343.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 327.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 277.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 182.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 86.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 46.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 30.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 21.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 12.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 11.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 9.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 4.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 2.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 3.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 3.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 1.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 1.},
         RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.17, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-21, 10], 
         Rational[7, 5]}, {All, All}}, {{-2.1, 1.4}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{-1.95, 0}, {-1.9, 1.},
         RoundingRadius->0], RectangleBox[{-1.85, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.75, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.35, 0}, {-1.3, 1.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.25, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 1.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 4.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 6.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 9.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 4.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 8.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 29.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 30.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 34.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 46.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 84.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 116.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 106.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 153.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 196.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 224.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 269.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 297.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 310.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 344.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 284.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 253.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 175.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 101.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 78.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 43.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 27.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 25.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 19.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 21.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 13.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 10.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 5.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 5.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 3.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 4.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 3.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 1.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 2.},
         RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 1.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.45, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 1.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.55, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.884, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[17, 20]}, {All, All}}, {{-0.85, 0.85}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-2.1, 0}, {-2., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{-28.053921568627445`, -23.044117647058812`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.4, 0}, {-1.3, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{3.5147058823529562`, 8.524509803921575}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.3, 0}, {-1.2, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.2, 0}, {-1.1, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-1., 0}, {-0.9, 11.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
              19.279958743266057`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.9, 0}, {-0.8, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
              18.34566402776069, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
              18.34566402776069, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.7, 0}, {-0.6, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
              16.477074596749958`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.6, 0}, {-0.5, 61.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
              14.608485165739227`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 61]& ,
           TagBoxNote->"61"],
          StyleBox["61", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[61, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.5, 0}, {-0.4, 90.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
              11.899030490773665`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 90]& ,
           TagBoxNote->"90"],
          StyleBox["90", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[90, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.4, 0}, {-0.3, 181.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
              3.3969485796748344`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 181]& ,
           TagBoxNote->"181"],
          StyleBox["181", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[181, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.3, 0}, {-0.2, 290.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.122549019607845`, 
              58.13235294117648}, {-6.786863819333654, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 290]& ,
           TagBoxNote->"290"],
          StyleBox["290", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[290, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.2, 0}, {-0.1, 392.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.63235294117648, 
              62.642156862745104`}, {-16.31666991748839, 20.80768293032196}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 392]& ,
           TagBoxNote->"392"],
          StyleBox["392", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[392, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.1, 0}, {0., 515.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{62.142156862745104`, 
              67.15196078431373}, {-27.80849491820439, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 515]& ,
           TagBoxNote->"515"],
          StyleBox["515", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[515, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.1, 578.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{66.65196078431373, 
              71.66176470588236}, {-33.694551625888195`, 20.80768293032196}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 578]& ,
           TagBoxNote->"578"],
          StyleBox["578", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[578, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.1, 0}, {0.2, 510.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{71.16176470588236, 
              76.17156862745098}, {-27.34134756045171, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 510]& ,
           TagBoxNote->"510"],
          StyleBox["510", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[510, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.2, 0}, {0.3, 306.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{75.67156862745098, 
              80.68137254901961}, {-8.28173536414224, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 306]& ,
           TagBoxNote->"306"],
          StyleBox["306", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[306, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.3, 0}, {0.4, 154.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
              5.9195443115393225`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.4, 0}, {0.5, 78.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
              13.020184149380105`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 78]& ,
           TagBoxNote->"78"],
          StyleBox["78", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[78, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.5, 0}, {0.6, 43.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
              16.290215653648886`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 43]& ,
           TagBoxNote->"43"],
          StyleBox["43", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[43, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.6, 0}, {0.7, 25.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
              17.971946141558544`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 25]& ,
           TagBoxNote->"25"],
          StyleBox["25", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[25, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.7, 0}, {0.8, 24.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
              18.065375613109083`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 24]& ,
           TagBoxNote->"24"],
          StyleBox["24", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[24, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.8, 0}, {0.9, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
              19.560247157917665`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.9, 0}, {1., 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{107.24019607843138`, 112.25}, {
              19.373388214816593`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{111.75, 116.75980392156863`}, {
              19.74710610101874, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.1, 0}, {1.2, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
              20.120823987220888`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.2, 0}, {1.3, 3.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.3, 0}, {1.4, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{125.27941176470588`, 130.2892156862745}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.4, 0}, {1.5, 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
              20.02739451567035, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{134.29901960784315`, 139.30882352941177`}, {
              20.214253458771424`, 20.80768293032196}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[112]=",
 CellID->2106720944]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->528878766],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created before and reproduced here for reference:\
\>", "MathCaption",
 CellID->1740422649],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[113]:=",
 CellID->750369086],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1712427223],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "transformedProteinData"}], "]"}]}]], "Input",\

 CellLabel->"In[114]:=",
 CellID->188499867],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[114], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[114]=",
 CellID->2096017719]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->292613774],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinRawData", "=", 
  RowBox[{"TimeExtractor", "[", "proteinLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[115]:=",
 CellID->222147988],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 CellLabel->"Out[115]=",
 CellID->448057845]
}, Open  ]],

Cell["\<\
We notice a small complication: there are two timepoints missing, compared to \
the transcriptome: (i) the reference time point \"255\" does not appear \
explicitly in our computation (corresponding to a zero value about which \
other timepoints are computed for proteins with at least 2 unique peptides). \
(ii) there is no sample for day \"329\". \
\>", "Text",
 CellID->1796883614],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data. Timepoints \"255\" (zero \
measurement assumed to have at least 2 unique peptides available per protein) \
and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->306227952],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"proteinLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[116]:=",
 CellID->1402371052],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[116], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[116]=",
 CellID->1430534533]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->136402831],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProtein", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[117]:=",
 CellID->1157329268],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[117]=",
 CellID->1914467966]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Unique Peptides", "Subsubsubsection",
 CellID->1560572010],

Cell[TextData[{
 "Typically, proteomics data from mass spectrometry is filtered to retain \
only identifications of proteins that are supported by at least 2 unique \
peptides having been identified per protein. We can use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilteringFunction"]],"paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the filtering:"
}], "Text",
 CellID->1315991259],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters OmicsObject data by a chosen comparison (by default greatr or \
equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->391089394],

Cell["\<\
FilteringFunction can be used to filter data in an OmicsObject.\
\>", "Caption",
 CellID->1739485138],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["SelectionFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/SelectionFunction"], 
    ButtonBox["GreaterEqual",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqual"], Cell[
    "Selection of comparison to use for filtering.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2083543412],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilteringFunction"]],"paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1245777502],

Cell[TextData[{
 "We filter out proteomics data with less than 2 unique peptides per protein. \
The unique peptides is reported as the second list, first component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->178778395],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[118]:=",
 CellID->398862612],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y616\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[118], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[118]=",
 CellID->715621561]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1066609228],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1455293487],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[119]:=",
 CellID->1426380326],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.588], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.588], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 2475.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.785228182546035`, 
           43.69675740592474}, {-50.75544747610698, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2475]& ,
        TagBoxNote->"2475"],
       StyleBox["2475", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2475, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 443.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.43134507606085, 101.34287429943956`}, {
           48.42148648390962, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 443]& ,
        TagBoxNote->"443"],
       StyleBox["443", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[443, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 143.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{100.84287429943956`, 115.75440352281827`}, {
           63.06375035595931, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 143]& ,
        TagBoxNote->"143"],
       StyleBox["143", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[143, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 499.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{144.07746196957567`, 158.9889911929544}, {
           45.68826389446034, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 499]& ,
        TagBoxNote->"499"],
       StyleBox["499", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[499, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 345.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{158.4889911929544, 173.40052041633308`}, {
           53.204626015445854`, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 345]& ,
        TagBoxNote->"345"],
       StyleBox["345", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[345, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{13.5, 0}, {14.5, 1320.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{216.1351080864692, 231.04663730984788`}, {
           5.617268431284344, 70.543229468303}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1320]& ,
        TagBoxNote->"1320"],
       StyleBox["1320", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1320, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.21999999999999997`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 14.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->1543152527],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "2475"}], ",", 
     RowBox[{"5", "\[Rule]", "443"}], ",", 
     RowBox[{"6", "\[Rule]", "143"}], ",", 
     RowBox[{"9", "\[Rule]", "499"}], ",", 
     RowBox[{"10", "\[Rule]", "345"}], ",", 
     RowBox[{"14", "\[Rule]", "1320"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->604516470],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$165560$165694 = False, 
       DynamicChart`click$165566$165694 = False, 
       DynamicChart`click$165572$165694 = False, 
       DynamicChart`click$165578$165694 = False, 
       DynamicChart`click$165584$165694 = False, 
       DynamicChart`click$165590$165694 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.16534698176788387`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 2475]& , TagBoxNote -> "2475"], 
                    StyleBox["2475", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[2475, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165560$165694, 
                    FEPrivate`Not[DynamicChart`click$165560$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165560$165694, {{{1., 0.}, {0., 
                    1.}}, {-0.016515869094466458`, 0.19931689860133397`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165560$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.9965728, 0.58382944, 0.22525344]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.36737093040064384`, 
                    0.16534698176788387`}]}], "DelayedMouseEffectStyle"], {}},
                     StatusArea[#, 443]& , TagBoxNote -> "443"], 
                    StyleBox["443", {}, StripOnInput -> False]], Annotation[#, 
                    Style[443, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165566$165694, 
                    FEPrivate`Not[DynamicChart`click$165566$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165566$165694, {{{1., 0.}, {0., 1.}}, {
                    0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165566$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8704000000000001, 0.50272, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.5393317914392433, -0.36737093040064384`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 143]& , 
                    TagBoxNote -> "143"], 
                    StyleBox["143", {}, StripOnInput -> False]], Annotation[#, 
                    Style[143, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165572$165694, 
                    FEPrivate`Not[DynamicChart`click$165572$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165572$165694, {{{1., 0.}, {0., 1.}}, {
                    0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165572$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1393910198186905`, -0.5393317914392433}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 499]& , 
                    TagBoxNote -> "499"], 
                    StyleBox["499", {}, StripOnInput -> False]], Annotation[#, 
                    Style[499, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165578$165694, 
                    FEPrivate`Not[DynamicChart`click$165578$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165578$165694, {{{1., 0.}, {0., 1.}}, {
                    0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165578$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.5542616286181081`, -1.1393910198186905`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 345]& , 
                    TagBoxNote -> "345"], 
                    StyleBox["345", {}, StripOnInput -> False]], Annotation[#, 
                    Style[345, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165584$165694, 
                    FEPrivate`Not[DynamicChart`click$165584$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165584$165694, {{{1., 0.}, {0., 1.}}, {
                    0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165584$165694}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5542616286181081`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 1320]& , 
                    TagBoxNote -> "1320"], 
                    StyleBox["1320", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1320, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$165590$165694, 
                    FEPrivate`Not[DynamicChart`click$165590$165694]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$165590$165694, {{{1., 0.}, {0., 
                    1.}}, {-0.1402473568544977, -0.14258568965827945`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$165590$165694}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2475", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.055052896981554855`, 
                    0.6643896620044465}]}}}, StatusArea[#, 2475]& , 
                 TagBoxNote -> "2475"], 
                StyleBox["2475", {}, StripOnInput -> False]], Annotation[#, 
                Style[2475, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165560$165694, 
                  FEPrivate`Not[DynamicChart`click$165560$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165560$165694, {{{1., 0.}, {0., 
                1.}}, {-0.016515869094466458`, 0.19931689860133397`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165560$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["443", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.6632684179692258, -0.06722685601041306}]}}}, 
                 StatusArea[#, 443]& , TagBoxNote -> "443"], 
                StyleBox["443", {}, StripOnInput -> False]], Annotation[#, 
                Style[443, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165566$165694, 
                  FEPrivate`Not[DynamicChart`click$165566$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165566$165694, {{{1., 0.}, {0., 1.}}, {
                0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165566$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["143", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.5993228812358589, -0.29198720600668965`}]}}}, 
                 StatusArea[#, 143]& , TagBoxNote -> "143"], 
                StyleBox["143", {}, StripOnInput -> False]], Annotation[#, 
                Style[143, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165572$165694, 
                  FEPrivate`Not[DynamicChart`click$165572$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165572$165694, {{{1., 0.}, {0., 1.}}, {
                0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165572$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["499", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.44529214307815984`, -0.4961444867750765}]}}}, 
                 StatusArea[#, 499]& , TagBoxNote -> "499"], 
                StyleBox["499", {}, StripOnInput -> False]], Annotation[#, 
                Style[499, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165578$165694, 
                  FEPrivate`Not[DynamicChart`click$165578$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165578$165694, {{{1., 0.}, {0., 1.}}, {
                0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165578$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["345", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.14806813902958724`, -0.650015592619715}]}}}, 
                 StatusArea[#, 345]& , TagBoxNote -> "345"], 
                StyleBox["345", {}, StripOnInput -> False]], Annotation[#, 
                Style[345, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165584$165694, 
                  FEPrivate`Not[DynamicChart`click$165584$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165584$165694, {{{1., 0.}, {0., 1.}}, {
                0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165584$165694}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1320", {}, StripOnInput -> False], 
                    
                    TraditionalForm], {-0.4674911895149923, \
-0.4752856321942648}]}}}, StatusArea[#, 1320]& , TagBoxNote -> "1320"], 
                StyleBox["1320", {}, StripOnInput -> False]], Annotation[#, 
                Style[1320, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$165590$165694, 
                  FEPrivate`Not[DynamicChart`click$165590$165694]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$165590$165694, {{{1., 0.}, {0., 
                1.}}, {-0.1402473568544977, -0.14258568965827945`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$165590$165694}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}],FormBox[
    FormBox[
     TemplateBox[{"1", "5", "6", "9", "10", "14"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9965728, 0.58382944, 0.22525344], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6643818666666668, 0.3892196266666667, 
                    0.15016896000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9965728`", ",", "0.58382944`", ",", "0.22525344`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8704000000000001, 0.50272, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5802666666666667, 0.33514666666666665`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8704000000000001`", ",", "0.50272`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.49372288, 0.31936, 0.27266112000000015`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.74058432`", ",", "0.47903999999999997`", ",", 
                    "0.4089916800000002`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42680576000000003`, 0.3325866666666667, 0.49611296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.64020864`", ",", "0.49888000000000005`", ",", 
                    "0.74416944`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[119]:=",
 CellID->363177333]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2471"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6W5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05149461539056731`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.026397012306561926`"}], "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[119], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[119]=",
 CellID->772910957]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Proteome Time Series", "Subsubsection",
 CellID->1796762249],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->1723717413],

Cell["\<\
For each protein we now extract a time series (list of values) corresponding \
to these times:\
\>", "MathCaption",
 CellID->141883528],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProtein", "=", 
  RowBox[{"CreateTimeSeries", "[", "filteredProteinData", "]"}]}]], "Input",
 CellLabel->"In[120]:=",
 CellID->929606926],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.06539623262957527`"}], ",", "0", ",", 
              "0.002994714615415848`", ",", 
              RowBox[{"-", "0.03484490076135003`"}], ",", 
              RowBox[{"-", "0.01821227311815761`"}], ",", 
              "0.06270726568914738`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.08295938346569019`", ",", 
              "0.06898558805479732`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.050132042020201786`"}], ",", 
              RowBox[{"-", "0.13767416728731544`"}], ",", 
              RowBox[{"-", "0.012088757412992066`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[120], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[120]=",
 CellID->185873596]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Proteome Time Series", "Subsubsection",
 CellID->1908271188],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1758442397],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProtein"}], "]"}]}]], "Input",
 CellLabel->"In[121]:=",
 CellID->471416365],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151369766354`"}], ",", "0.`", ",", 
              "0.009393207686535883`", ",", 
              RowBox[{"-", "0.1092943507816164`"}], ",", 
              RowBox[{"-", "0.05712452965038666`"}], ",", 
              "0.19668731272116724`", ",", "0.5296378663769438`", ",", 
              "0.07400932770616492`", ",", 
              RowBox[{"-", "0.539240654836878`"}], ",", "0.2602100094709663`",
               ",", "0.21637986893336714`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392568889564`"}], ",", 
              RowBox[{"-", "0.4318281414007336`"}], ",", 
              RowBox[{"-", "0.03791753927664883`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05027722328878657`"}], ",", "0.`", ",", 
              "0.09612084857400716`", ",", "0.08485184825964483`", ",", 
              "0.2073722042772388`", ",", "0.18814267853211547`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.13483525476760364`", ",", 
              
              RowBox[{"-", "0.13334802450732536`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.18513498512557355`"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3695191728536936`"}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[121], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[121]=",
 CellID->1536305234]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->2143452651],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedProteinAll", "]"}]}]], "Input",
 CellLabel->"In[122]:=",
 CellID->970526932],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151369766354`"}], ",", "0.`", ",", 
              "0.009393207686535883`", ",", 
              RowBox[{"-", "0.1092943507816164`"}], ",", 
              RowBox[{"-", "0.05712452965038666`"}], ",", 
              "0.19668731272116724`", ",", "0.5296378663769438`", ",", 
              "0.07400932770616492`", ",", 
              RowBox[{"-", "0.539240654836878`"}], ",", "0.2602100094709663`",
               ",", "0.21637986893336714`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392568889564`"}], ",", 
              RowBox[{"-", "0.4318281414007336`"}], ",", 
              RowBox[{"-", "0.03791753927664883`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05027722328878657`"}], ",", "0.`", ",", 
              "0.09612084857400716`", ",", "0.08485184825964483`", ",", 
              "0.2073722042772388`", ",", "0.18814267853211547`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.13483525476760364`", ",", 
              
              RowBox[{"-", "0.13334802450732536`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.18513498512557355`"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3695191728536936`"}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[122], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[122]=",
 CellID->1486179957]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Proteome Data", "Subsection",
 CellID->1059869896],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
proteome dataset prior to classification and clustering. In this subsection \
we first resample the imported and labeled proteome dataset, Then, we carry \
out the full analysis in this \"bootstrap\" dataset, to create a set of \
random proteome time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->214174283],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->444582009],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->168882663],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"proteinExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[123]:=",
 CellID->1585019354],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.061`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.053`", "}"}], ",", 
                 RowBox[{"{", "10", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.13`", "}"}], ",", 
                 RowBox[{"{", "8", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"6", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.888`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"7", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99987"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99995", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.027`", "}"}], ",", 
                 RowBox[{"{", "15", "}"}]}], "}"}]}], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.926`", "}"}], ",", 
                 RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.993`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.325`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[123], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[123]=",
 CellID->844239042]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Proteome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1807183132],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap set proteomics data \
measurement in the OmicsObject, which is in the first list first component \
for each identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1847604807],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinBootstrapData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinBootstrap", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[124]:=",
 CellID->80455629],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15017066817014188`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15017066817014188`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->534263066],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2228174692911122`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2228174692911122],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->2122200127],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.3687984643437591`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.3687984643437591],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->840909824],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2879300846458019`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2879300846458019],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->53150085],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4791399700665757`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4791399700665757],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1067283359],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3408826705882606`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3408826705882606],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1639847900],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.36683619844100357`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.36683619844100357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->961166574],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.06735147105718207`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.06735147105718207],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1489251853],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.13961988867477013`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.13961988867477013`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->1713518480],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.15632482895988384`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.15632482895988384`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->499513137],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.1004790270547353`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.1004790270547353],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->406807222],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.1867068807032459`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.1867068807032459],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->690439218],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.21520312209478668`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.21520312209478668`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[124]:=",
 CellID->820946473]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05894938566154792`", "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05144349547436535`", "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.12110290200091585`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99991"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.0070283213420885195`"}], "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.27554911350071687`", "}"}], ",", 
                 RowBox[{"{", "1.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[124], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[124]=",
 CellID->2128264267]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys to actual days:"
}], "MathCaption",
 CellID->1446718475],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "transformedProteinBootstrapData"}], "]"}]}],
   ";"}]], "Input",
 CellLabel->"In[125]:=",
 CellID->1187557991],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->918869862],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[126]:=",
 CellID->890865057],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 CellLabel->"Out[126]=",
 CellID->1249911037]
}, Open  ]],

Cell[TextData[{
 "As with the regular protein data above use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed bootstrap data. Timepoints \
\"255\" (zero measurement assumed to have at least 2 unique peptides \
available per protein) and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->916506595],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"proteinBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[127]:=",
 CellID->1973625881],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->19000568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[128]:=",
 CellID->1514966620],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[128]=",
 CellID->569763905]
}, Open  ]],

Cell[TextData[{
 "We filter out proteomics bootstrap data with less than 2 unique peptides \
per protein. The unique peptides is reported as the second list, first \
component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->1183809265],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinBootstrapLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[129]:=",
 CellID->1993811047],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05144349547436535`", "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.12110290200091585`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"8", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07468549415355666`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"9", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.150168186299147`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"88851", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"47564", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"39785", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"81335", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"81335", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[129], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[129]=",
 CellID->1808037231]
}, Open  ]],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
bootstrap samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1212150445],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinBootstrapData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinBootstrapUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[130]:=",
 CellID->1582653673],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 142.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{35.65072057646117, 51.15349202438874}, {
           67.05973819184112, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 1220.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{50.65349202438874, 66.15626347231631}, {
           61.43907938575053, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1220]& ,
        TagBoxNote->"1220"],
       StyleBox["1220", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1220, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 5012.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{65.65626347231631, 81.1590349202439}, {
           41.66770814948383, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5012]& ,
        TagBoxNote->"5012"],
       StyleBox["5012", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5012, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0}, {4.5, 11693.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.6590349202439, 96.16180636817145}, {
           6.833179871662658, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11693]& ,
        TagBoxNote->"11693"],
       StyleBox["11693", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11693, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 18728.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{95.66180636817145, 
           111.16457781609904`}, {-29.8470935057467, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18728]& ,
        TagBoxNote->"18728"],
       StyleBox["18728", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18728, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 22396.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.66457781609904`, 
           126.1673492640266}, {-48.97193256023675, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 22396]& ,
        TagBoxNote->"22396"],
       StyleBox["22396", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22396, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.5, 0}, {7.5, 19536.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{125.6673492640266, 
           141.17012071195418`}, {-34.05998062571069, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 19536]& ,
        TagBoxNote->"19536"],
       StyleBox["19536", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19536, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.5, 0}, {8.5, 12532.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{140.67012071195418`, 156.17289215988177`}, {
           2.458659706254494, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12532]& ,
        TagBoxNote->"12532"],
       StyleBox["12532", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12532, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 5943.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{155.67289215988177`, 171.17566360780933`}, {
           36.81350281695104, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5943]& ,
        TagBoxNote->"5943"],
       StyleBox["5943", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5943, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 2117.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{170.67566360780933`, 186.1784350557369}, {
           56.76214900628554, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2117]& ,
        TagBoxNote->"2117"],
       StyleBox["2117", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2117, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.5, 0}, {11.5, 573.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{185.6784350557369, 201.18120650366447`}, {
           64.81251746324646, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 573]& ,
        TagBoxNote->"573"],
       StyleBox["573", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[573, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11.5, 0}, {12.5, 96.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{200.68120650366447`, 216.18397795159206`}, {
           67.29958077540343, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 96]& ,
        TagBoxNote->"96"],
       StyleBox["96", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[96, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12.5, 0}, {13.5, 12.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{215.68397795159206`, 231.18674939951964`}, {
           67.73755418886503, 68.30012181935955}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.24, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 13.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->1368119989],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "142"}], ",", 
     RowBox[{"2", "\[Rule]", "1220"}], ",", 
     RowBox[{"3", "\[Rule]", "5012"}], ",", 
     RowBox[{"4", "\[Rule]", "11693"}], ",", 
     RowBox[{"5", "\[Rule]", "18728"}], ",", 
     RowBox[{"6", "\[Rule]", "22396"}], ",", 
     RowBox[{"7", "\[Rule]", "19536"}], ",", 
     RowBox[{"8", "\[Rule]", "12532"}], ",", 
     RowBox[{"9", "\[Rule]", "5943"}], ",", 
     RowBox[{"10", "\[Rule]", "2117"}], ",", 
     RowBox[{"11", "\[Rule]", "573"}], ",", 
     RowBox[{"12", "\[Rule]", "96"}], ",", 
     RowBox[{"13", "\[Rule]", "12"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->885246694],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$168596$168835 = False, 
       DynamicChart`click$168602$168835 = False, 
       DynamicChart`click$168608$168835 = False, 
       DynamicChart`click$168614$168835 = False, 
       DynamicChart`click$168620$168835 = False, 
       DynamicChart`click$168626$168835 = False, 
       DynamicChart`click$168632$168835 = False, 
       DynamicChart`click$168638$168835 = False, 
       DynamicChart`click$168644$168835 = False, 
       DynamicChart`click$168650$168835 = False, 
       DynamicChart`click$168656$168835 = False, 
       DynamicChart`click$168662$168835 = False, 
       DynamicChart`click$168668$168835 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.132670530453598, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                    StyleBox["142", {}, StripOnInput -> False]], Annotation[#, 
                    Style[142, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168596$168835, 
                    FEPrivate`Not[DynamicChart`click$168596$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168596$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.199998009896269, 0.0008922093542924382}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168596$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.056015669706007, 
                    3.132670530453598}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 1220]& , TagBoxNote -> "1220"], 
                    StyleBox["1220", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1220, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168602$168835, 
                    FEPrivate`Not[DynamicChart`click$168602$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168602$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19977678950077757`, 0.009446394908218388}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168602$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.741102422110166, 
                    3.056015669706007}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 5012]& , TagBoxNote -> "5012"], 
                    StyleBox["5012", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[5012, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168608$168835, 
                    FEPrivate`Not[DynamicChart`click$168608$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168608$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19412248198905793`, 0.04812963729769719}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168608$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.006409564141657, 
                    2.741102422110166}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 11693]& , TagBoxNote -> "11693"], 
                    StyleBox["11693", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[11693, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168614$168835, 
                    FEPrivate`Not[DynamicChart`click$168614$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168614$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.14388299307930927`, 0.13891610526695403`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168614$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.8296946198130639, 
                    2.006409564141657}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 18728]& , TagBoxNote -> "18728"], 
                    StyleBox["18728", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[18728, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168620$168835, 
                    FEPrivate`Not[DynamicChart`click$168620$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168620$168835, {{{1., 0.}, {0., 1.}}, {
                    0.03043019727813825, 0.19767145239921113`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168620$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5774875615828763, 
                    0.8296946198130639}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 22396]& , TagBoxNote -> "22396"], 
                    StyleBox["22396", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[22396, {}], "Tooltip"]& ], 
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168626$168835, 
                    FEPrivate`Not[DynamicChart`click$168626$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168626$168835, {{{1., 0.}, {0., 1.}}, {
                    0.19841189618432042`, 0.02515391525274853}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168626$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8049706431934798`, -0.5774875615828763}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 19536]& , 
                    TagBoxNote -> "19536"], 
                    StyleBox["19536", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[19536, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168632$168835, 
                    FEPrivate`Not[DynamicChart`click$168632$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168632$168835, {{{1., 0.}, {0., 1.}}, {
                    0.07410370626023725, -0.1857650147861445}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168632$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.5923794258892263`, -1.8049706431934798`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 12532]& , 
                    TagBoxNote -> "12532"], 
                    StyleBox["12532", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[12532, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168638$168835, 
                    FEPrivate`Not[DynamicChart`click$168638$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168638$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.11748587423872935`, -0.1618550875146082}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168638$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.965789128694909, -2.5923794258892263`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 5943]& , 
                    TagBoxNote -> "5943"], 
                    StyleBox["5943", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[5943, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168644$168835, 
                    FEPrivate`Not[DynamicChart`click$168644$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168644$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.18700204879205642`, -0.0709241407954538}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168644$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.0988041616479007`, -2.965789128694909}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 2117]& , 
                    TagBoxNote -> "2117"], 
                    StyleBox["2117", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[2117, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168650$168835, 
                    FEPrivate`Not[DynamicChart`click$168650$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168650$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19880662692911488`, -0.021815707393246214`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168650$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999]], 
               
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.134806813458039, -3.0988041616479007`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 573]& , 
                    TagBoxNote -> "573"], 
                    StyleBox["573", {}, StripOnInput -> False]], Annotation[#, 
                    Style[573, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168656$168835, 
                    FEPrivate`Not[DynamicChart`click$168656$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168656$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19993856278568675`, -0.004956925578824368}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168656$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.5579536, 0.5317333333333334, 0.7947799999999999]], 
               
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.140838671352932, -3.134806813458039}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 96]& , 
                    TagBoxNote -> "96"], 
                    StyleBox["96", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[96, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168662$168835, 
                    FEPrivate`Not[DynamicChart`click$168662$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168662$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19999857877864946`, -0.0007539804509012958}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168662$168835}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.140838671352932}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 12]& , 
                    TagBoxNote -> "12"], 
                    StyleBox["12", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[12, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$168668$168835, 
                    FEPrivate`Not[DynamicChart`click$168668$168835]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$168668$168835, {{{1., 0.}, {0., 
                    1.}}, {-0.19999998578776984`, -0.00007539822190018135}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$168668$168835}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["142", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666600329875633, 
                    0.0029740311809747936`}]}}}, StatusArea[#, 142]& , 
                 TagBoxNote -> "142"], 
                StyleBox["142", {}, StripOnInput -> False]], Annotation[#, 
                Style[142, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168596$168835, 
                  FEPrivate`Not[DynamicChart`click$168596$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168596$168835, {{{1., 0.}, {0., 
                1.}}, {-0.199998009896269, 0.0008922093542924382}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168596$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1220", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6659226316692585, 
                    0.031487983027394625`}]}}}, StatusArea[#, 1220]& , 
                 TagBoxNote -> "1220"], 
                StyleBox["1220", {}, StripOnInput -> False]], Annotation[#, 
                Style[1220, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168602$168835, 
                  FEPrivate`Not[DynamicChart`click$168602$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168602$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19977678950077757`, 0.009446394908218388}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168602$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["5012", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6470749399635264, 
                    0.1604321243256573}]}}}, StatusArea[#, 5012]& , 
                 TagBoxNote -> "5012"], 
                StyleBox["5012", {}, StripOnInput -> False]], Annotation[#, 
                Style[5012, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168608$168835, 
                  FEPrivate`Not[DynamicChart`click$168608$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168608$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19412248198905793`, 0.04812963729769719}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168608$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["11693", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4796099769310308, 
                    0.46305368422318005`}]}}}, StatusArea[#, 11693]& , 
                 TagBoxNote -> "11693"], 
                StyleBox["11693", {}, StripOnInput -> False]], Annotation[#, 
                Style[11693, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168614$168835, 
                  FEPrivate`Not[DynamicChart`click$168614$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168614$168835, {{{1., 0.}, {0., 
                1.}}, {-0.14388299307930927`, 0.13891610526695403`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168614$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["18728", {}, StripOnInput -> False], 
                    TraditionalForm], {0.10143399092712749`, 
                    0.6589048413307037}]}}}, StatusArea[#, 18728]& , 
                 TagBoxNote -> "18728"], 
                StyleBox["18728", {}, StripOnInput -> False]], Annotation[#, 
                Style[18728, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168620$168835, 
                  FEPrivate`Not[DynamicChart`click$168620$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168620$168835, {{{1., 0.}, {0., 1.}}, {
                0.03043019727813825, 0.19767145239921113`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168620$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["22396", {}, StripOnInput -> False], 
                    TraditionalForm], {0.6613729872810681, 
                    0.08384638417582842}]}}}, StatusArea[#, 22396]& , 
                 TagBoxNote -> "22396"], 
                StyleBox["22396", {}, StripOnInput -> False]], Annotation[#, 
                Style[22396, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168626$168835, 
                  FEPrivate`Not[DynamicChart`click$168626$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168626$168835, {{{1., 0.}, {0., 1.}}, {
                0.19841189618432042`, 0.02515391525274853}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168626$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["19536", {}, StripOnInput -> False], 
                    TraditionalForm], {
                    0.24701235420079082`, -0.6192167159538149}]}}}, 
                 StatusArea[#, 19536]& , TagBoxNote -> "19536"], 
                StyleBox["19536", {}, StripOnInput -> False]], Annotation[#, 
                Style[19536, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168632$168835, 
                  FEPrivate`Not[DynamicChart`click$168632$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168632$168835, {{{1., 0.}, {0., 1.}}, {
                0.07410370626023725, -0.1857650147861445}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168632$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["12532", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.3916195807957644, \
-0.5395169583820272}]}}}, StatusArea[#, 12532]& , TagBoxNote -> "12532"], 
                StyleBox["12532", {}, StripOnInput -> False]], Annotation[#, 
                Style[12532, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168638$168835, 
                  FEPrivate`Not[DynamicChart`click$168638$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168638$168835, {{{1., 0.}, {0., 
                1.}}, {-0.11748587423872935`, -0.1618550875146082}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168638$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["5943", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.623340162640188, \
-0.23641380265151263`}]}}}, StatusArea[#, 5943]& , TagBoxNote -> "5943"], 
                StyleBox["5943", {}, StripOnInput -> False]], Annotation[#, 
                Style[5943, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168644$168835, 
                  FEPrivate`Not[DynamicChart`click$168644$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168644$168835, {{{1., 0.}, {0., 
                1.}}, {-0.18700204879205642`, -0.0709241407954538}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168644$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2117", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6626887564303829, \
-0.07271902464415403}]}}}, StatusArea[#, 2117]& , TagBoxNote -> "2117"], 
                StyleBox["2117", {}, StripOnInput -> False]], Annotation[#, 
                Style[2117, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168650$168835, 
                  FEPrivate`Not[DynamicChart`click$168650$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168650$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19880662692911488`, -0.021815707393246214`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168650$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["573", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6664618759522891, \
-0.01652308526274789}]}}}, StatusArea[#, 573]& , TagBoxNote -> "573"], 
                StyleBox["573", {}, StripOnInput -> False]], Annotation[#, 
                Style[573, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168656$168835, 
                  FEPrivate`Not[DynamicChart`click$168656$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168656$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19993856278568675`, -0.004956925578824368}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168656$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["96", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666619292621648, \
-0.0025132681696709855`}]}}}, StatusArea[#, 96]& , TagBoxNote -> "96"], 
                StyleBox["96", {}, StripOnInput -> False]], Annotation[#, 
                Style[96, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168662$168835, 
                  FEPrivate`Not[DynamicChart`click$168662$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168662$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19999857877864946`, -0.0007539804509012958}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168662$168835}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["12", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666666192925661, \
-0.00025132740633393777`}]}}}, StatusArea[#, 12]& , TagBoxNote -> "12"], 
                StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
                Style[12, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$168668$168835, 
                  FEPrivate`Not[DynamicChart`click$168668$168835]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$168668$168835, {{{1., 0.}, {0., 
                1.}}, {-0.19999998578776984`, -0.00007539822190018135}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$168668$168835}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}],FormBox[
    FormBox[
     TemplateBox[{
      "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6590506666666667, 0.4511765333333334, 
                    0.18945208888888887`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.988576`", ",", "0.6767648`", ",", 
                    "0.2841781333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6628586666666667, 0.4069216, 0.16139271111111114`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.994288`", ",", "0.6103824`", ",", 
                    "0.24208906666666669`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.544`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.928`", ",", "0.5210666666666667`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5706666666666668, 0.3320888888888889, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8560000000000001`", ",", "0.4981333333333333`", ",", 
                    "0.2`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.784`", ",", "0.47519999999999996`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.49854684444444447`, 0.31893333333333335`, 
                    0.24943982222222214`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7478202666666667`", ",", "0.4784`", ",", 
                    "0.3741597333333332`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7116405333333333`", ",", "0.4816`", ",", 
                    "0.5483194666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6754608`", ",", "0.4848`", ",", "0.7224792`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4111381333333334, 0.33884444444444445`, 
                    0.5057530666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6167072`", ",", "0.5082666666666666`", ",", 
                    "0.7586295999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37196906666666674`, 0.35448888888888896`, 
                    0.5298533333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5579536`", ",", "0.5317333333333334`", ",", 
                    "0.7947799999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None", ",", "None"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[130]:=",
 CellID->574479642]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"10", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.0440972546516367`"}], "}"}], ",", 
                 RowBox[{"{", "15.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"15", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.09820855580560213`", "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"83", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.26095238819475913`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"131", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05787920075595823`"}], "}"}], ",", 
                 RowBox[{"{", "3.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"6366"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"88885", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"91871", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"92952", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"96125", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"10", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              TemplateBox[{"6372"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[130], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[130]=",
 CellID->314696655]
}, Open  ]],

Cell["\<\
For each bootstrap protein we now extract a time series (list of values):\
\>", "MathCaption",
 CellID->1388846014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProteinBootstrap", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "filteredProteinBootstrapData", "]"}]}]], "Input",
 CellLabel->"In[131]:=",
 CellID->1335198055],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[131], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[131]=",
 CellID->2001941671]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1164916883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinBootstrapAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProteinBootstrap"}], "]"}]}]], "Input",\

 CellLabel->"In[132]:=",
 CellID->149642882],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"10", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.03144802637947889`"}], ",", "0.`", ",", 
              "0.06407161618429313`", ",", 
              RowBox[{"-", "0.11500814497472765`"}], ",", 
              "0.02030351406722126`", ",", 
              RowBox[{"-", "0.05862659638869126`"}], ",", 
              RowBox[{"-", "0.023784381510738785`"}], ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "0.06295888538654712`"}], ",", 
              RowBox[{"-", "0.17115950215528627`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.7173193068037694`", ",", 
              
              RowBox[{"Missing", "[", "]"}], ",", "0.3749107966117535`"}], 
             "}"}]}], ",", 
           TemplateBox[{"6372"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 132, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[132], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[132]=",
 CellID->2007366948]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1523959247],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedProteinBootstrapAll", "]"}]}]], "Input",
 CellLabel->"In[133]:=",
 CellID->145606560],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"10", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.03144802637947889`"}], ",", "0.`", ",", 
              "0.06407161618429313`", ",", 
              RowBox[{"-", "0.11500814497472765`"}], ",", 
              "0.02030351406722126`", ",", 
              RowBox[{"-", "0.05862659638869126`"}], ",", 
              RowBox[{"-", "0.023784381510738785`"}], ",", 
              TemplateBox[{"20"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "0.06295888538654712`"}], ",", 
              RowBox[{"-", "0.17115950215528627`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.7173193068037694`", ",", 
              
              RowBox[{"Missing", "[", "]"}], ",", "0.3749107966117535`"}], 
             "}"}]}], ",", 
           TemplateBox[{"6372"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 133, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[133], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[133]=",
 CellID->848200666]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Proteome Time Series", "Subsection",
 CellID->2003973854],

Cell[TextData[{
 "In this subsection we will classify the proteome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1328457457],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap proteome data:\
\>", "MathCaption",
 CellID->1629616244],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Protein", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[268]:=",
 CellID->2101262717],

Cell[BoxData["0.8350640860442666`"], "Output",
 CellLabel->"Out[268]=",
 CellID->384258966]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->218785383],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95ProteinSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[270]:=",
 CellID->633928417],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"12", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.804264750066626`", ",", 
      RowBox[{"-", "0.8380547398330289`"}]}], "}"}]}], ",", 
   RowBox[{"13", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8027925581149449`", ",", 
      RowBox[{"-", "0.8174904385249819`"}]}], "}"}]}], ",", 
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7877720084250821`", ",", 
      RowBox[{"-", "0.8216094289485545`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[270]=",
 CellID->1148116342]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1746502806],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"proteinFinalTimeSeries", ",", "timesProtein", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Protein"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95ProteinSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[271]:=",
 CellID->1666173246],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[271]:=",
 CellID->1621576223],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 271, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[271], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[271]=",
 CellID->116615884]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData["Association"], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->808687274],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->690387281],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "proteinClassification", "]"}]], "Input",
 CellLabel->"In[137]:=",
 CellID->484887026],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",\

 CellLabel->"Out[137]=",
 CellID->459471277]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1931356472],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[272]:=",
 CellID->1092900499],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[272]=",
 CellID->1294671978]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->642146293],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[273]:=",
 CellID->1447420276],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"O00160\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00267\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00273\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00571\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O15031\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43143\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43175\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43312\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43516\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60271\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60879\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75792\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O95498\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00915\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02042\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02671\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P04844\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P08174\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09326\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09496\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P11021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P12956\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13501\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13611\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13667\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P19387\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23141\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23368\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32119\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32189\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P33176\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P40306\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P42892\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P50225\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P51531\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P52888\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P54920\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P55036\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P60660\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P84095\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q01518\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q07021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08722\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q09666\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13151\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13217\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14165\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14653\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q15084\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q5H9R7\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q6NYC8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q709C8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q86YP4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q92499\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96AT9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96L92\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96RT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q99439\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTE3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTV4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BWS9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9C0I1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H0D6\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H2U2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H444\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H4Z3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NS69\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NUP9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NVJ2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NYB0\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9UQ35\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y277\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y2Q0\"\>", ",", "\<\"Protein\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[273]=",
 CellID->157992455]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["True"]],"paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1243280944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"proteinFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[140]:=",
 CellID->806940498],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[140]=",
 CellID->1715219372]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metabolomic Data", "Section",
 CellID->779816621],

Cell[CellGroupData[{

Cell["Importing OmicsObject Metabolome Data", "Subsection",
 CellID->1971981026],

Cell[TextData[{
 "We now import the metabolomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1838680125],

Cell["\<\
We import the metabolomics OmicsObject MathIOmica examples for each of \
positive and negative mass spectrometry aligned mass features:\
\>", "MathCaption",
 CellID->902655240],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesNegativeModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsNegativeModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[141]:=",
 CellID->1102136272],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2289"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"421.948`", ",", "0.39287496`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "115528", ",", "130042"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C11 H12 Cl2 O11 S, db=0.00, overall=48.58, \
mfg=97.17 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[141], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[141]=",
 CellID->1616524567]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesPositiveModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsPositiveModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[142]:=",
 CellID->1021092447],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "202.0329`", ",", "0.33260712`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"263741", ",", "276622", ",", "337241"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "174.0375`", ",", "0.33451426`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"78435", ",", "88529", ",", "121073"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"3670"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"19\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[142], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[142]=",
 CellID->1548290285]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->969019879],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[143]:=",
 CellID->1948611152],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 CellLabel->"Out[143]=",
 CellID->1243364280]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesPositiveModeExample"}]], "Input",
 CellLabel->"In[144]:=",
 CellID->619818574],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 CellLabel->"Out[144]=",
 CellID->1440862894]
}, Open  ]],

Cell["\<\
We notice that sample 7, 18 and 21 are missing as there was no sample for \
these time points. This will be addressed further below.\
\>", "Text",
 CellID->1900924848],

Cell[TextData[{
 "We can get the intensity data from any sample and entry. For example, the \
",
 Cell[BoxData[
  SuperscriptBox["77", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["155", "th"]], "InlineFormula"],
 " entries in sample 14:"
}], "MathCaption",
 CellID->729703917],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<14\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"77", ",", "155"}], "}"}]}], "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[145]:=",
 CellID->2002108649],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"322.0892`", ",", "0.4402413`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"31950", ",", "29801", ",", "27440"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Isosorbide-2-glucuronide [ C12 H18 O10, db=60.03, \
overall=60.67, mfg=61.31, KEGG ID=, CAS ID=29542-01-6 ]\"\>", 
        ",", "\<\"29542-01-6\"\>"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"146.0588`", ",", "0.7426923`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"62667", ",", "1", ",", "60382"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Adipic acid [ C6 H10 O4, db=45.74, overall=46.59, \
mfg=47.44, KEGG ID=, CAS ID=124-04-9 ]\"\>", ",", "\<\"124-04-9\"\>"}], 
       "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[145]=",
 CellID->81485738]
}, Open  ]],

Cell[TextData[{
 "The outer keys correspond to the identified features in the form {mass to \
charge ratio (m/z), retention time, \"Meta\"}, i.e. each m/z and retention \
time has been tagged with a \"Meta\" label as well to indicate these are \
metabolomics data. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "1"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "2"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "3"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Annotations", ",", " ", 
       RowBox[{"CAS", " ", "Number"}]}], "}"}]}], "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->527526154],

Cell[TextData[{
 "We would like to combine the positive and negative mode metabolomics data. \
We will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EnlargeInnerAssociation"]],
    "paclet:MathIOmica/ref/EnlargeInnerAssociation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->449223127],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesExample", "=", 
  RowBox[{"EnlargeInnerAssociation", "[", 
   RowBox[{"{", 
    RowBox[{
    "metabolitesNegativeModeExample", ",", "metabolitesPositiveModeExample"}],
     "}"}], "]"}]}]], "Input",
 CellLabel->"In[146]:=",
 CellID->1688076284],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 146, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[146], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[146]=",
 CellID->2034427395]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Metabolome Data", "Subsection",
 CellID->1357359281],

Cell["\<\
We will next preprocess the imported metabolome data. We will first perform \
calculate the median of the technical replicates, transform the data towards \
a normal distribution, then we will re-label the samples with real time and \
carry out filtering for missing data. Finally, we will create the \
metabolomics time series or relative intensities compared to the healthy \
reference point for each mass feature identified.\
\>", "Text",
 CellID->1802528277],

Cell[CellGroupData[{

Cell["\<\
Medians of Technical Triplicates, Data Transformation, Labeling, Filtering, \
Matching Mass\
\>", "Subsubsection",
 CellID->524759768],

Cell[CellGroupData[{

Cell["Median of Technical Triplicates", "Subsubsubsection",
 CellID->1551861331],

Cell["\<\
The metabolomics intensities have three measurements, corresponding to \
technical triplicates. Typically we would like to use the median of these \
values. An additional complication is that some of the triplicates have \
intensity values of 1, which should be taken as a Missing value. We can use \
MeasurementApplier to perform the calculation:\
\>", "Text",
 CellID->944497302],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1659581078],

Cell[TextData[{
 "Applying a function to the measurements in an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "."
}], "Caption",
 CellID->1061570710],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ComponentIndex"]],"paclet:MathIOmica/ref/ComponentIndex"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Applier"]],"paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", that allows selection of which component of a list to use in an \
association or ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input or output values."
    }], "TableText"]},
   {"IgnorePattern", "_Missing", Cell[TextData[{
     Cell[BoxData["IgnorePattern"], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["MeasurementApplier"], "InlineFormula"],
     " specifying a pattern of values to delete prior to applying the \
function to the measurement list."
    }], "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ListIndex"]],"paclet:MathIOmica/ref/ListIndex"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Applier"]],"paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " that allows selection of which list to use in the association or \
OmicsObject input or output values."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->524783694],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MeasurementApplier"]],
    "paclet:MathIOmica/ref/MeasurementApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->324206829],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1:\
\>", "MathCaption",
 CellID->873132756],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteMedians", "=", 
  RowBox[{"MeasurementApplier", "[", 
   RowBox[{"Median", ",", "metabolitesExample", ",", 
    RowBox[{"IgnorePattern", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[147]:=",
 CellID->986470141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "19880.5`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "69828.`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "16606.5`", "}"}], ",", 
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[147], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[147]=",
 CellID->469857818]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->128983684],

Cell[TextData[{
 "We apply a Box-Cox transformation to the metabolite median data in the \
OmicsObject, which is now the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1069961234],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[148]:=",
 CellID->1957883507],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2888569651995717`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2888569651995717],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->64325918],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28237388560304527`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28237388560304527`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->107170713],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2762019481112037`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2762019481112037],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->95796752],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2620754231729624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2620754231729624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->824325630],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27130818835487147`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27130818835487147`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->524837664],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27702965627620246`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27702965627620246`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1492609609],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29539457602287605`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29539457602287605`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1812054345],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2648334191658074`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2648334191658074],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1204774573],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2785561129338028`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2785561129338028],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1653787195],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26951291666846366`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26951291666846366`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1967842748],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2657839634539137`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2657839634539137],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->1388283531],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2627686191517685`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2627686191517685],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[148]:=",
 CellID->66431071]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.263454850806397`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3238554275098924`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[148], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[148]=",
 CellID->637169717]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->2078239195],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedMetaboliteData"}], ")"}]}]], "Input",
 CellLabel->"In[149]:=",
 CellID->144631910],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.21, 0}, {3.22, 3.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 8.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 17.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 55.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 97.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 169.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 254.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 322.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 352.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 461.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 502.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 528.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 549.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 496.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 452.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 440.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 369.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 292.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 181.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 154.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 91.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 68.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 37.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 9.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2052, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.21, 3.45}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{3.27, 0}, {3.28, 3.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 6.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 23.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 44.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 88.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 142.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 209.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 249.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 328.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 411.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 441.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 466.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 482.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 500.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 486.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 431.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 388.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 353.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 284.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 185.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 145.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 106.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 68.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 44.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 23.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2648, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.27, 3.53}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{3.32, 0}, {3.33, 1.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 3.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 13.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 21.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 50.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 85.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 134.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 188.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 225.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 281.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 370.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 397.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 428.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 446.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 447.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 422.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 445.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 377.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 320.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 262.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 201.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 141.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 97.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 70.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 63.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 30.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 11.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3144, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.32, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{3.45, 0}, {3.46, 1.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 9.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 10.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 17.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 33.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 52.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 82.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 138.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 149.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 171.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 199.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 242.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 274.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 312.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 299.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 323.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 297.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 301.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 300.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 298.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 281.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 262.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 244.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 241.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 185.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 156.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 108.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 76.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 70.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 54.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 44.},
         RoundingRadius->0], RectangleBox[{3.76, 0}, {3.77, 21.},
         RoundingRadius->0], RectangleBox[{3.77, 0}, {3.78, 14.},
         RoundingRadius->0], RectangleBox[{3.78, 0}, {3.79, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4432, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.45, 3.79}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], 
        RectangleBox[{3.36, 0}, {3.37, 1.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 4.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 5.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 21.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 32.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 50.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 94.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 165.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 184.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 203.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 288.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 317.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 344.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 351.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 364.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 393.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 416.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 369.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 368.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 368.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 258.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 226.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 172.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 150.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 129.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 114.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 74.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 47.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 31.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3537999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.36, 3.67}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.31, 0}, {3.32, 1.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 5.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 9.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 23.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 43.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 71.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 164.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 197.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 255.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 280.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 321.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 373.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 378.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 403.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 444.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 429.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 391.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 385.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 378.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 319.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 272.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 191.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 151.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 144.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 114.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 77.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 48.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 26.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3042000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.31, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.14, 0}, {3.15, 1.},
         RoundingRadius->0], RectangleBox[{3.15, 0}, {3.16, 1.},
         RoundingRadius->0], RectangleBox[{3.16, 0}, {3.17, 7.},
         RoundingRadius->0], RectangleBox[{3.17, 0}, {3.18, 23.},
         RoundingRadius->0], RectangleBox[{3.18, 0}, {3.19, 53.},
         RoundingRadius->0], RectangleBox[{3.19, 0}, {3.2, 118.},
         RoundingRadius->0], RectangleBox[{3.2, 0}, {3.21, 193.},
         RoundingRadius->0], RectangleBox[{3.21, 0}, {3.22, 277.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 379.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 467.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 513.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 530.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 559.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 526.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 512.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 449.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 390.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 319.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 240.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 162.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 93.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 76.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 29.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.1352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.14, 3.38}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.44, 0}, {3.45, 2.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 16.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 23.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 28.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 60.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 83.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 143.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 186.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 205.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 243.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 272.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 315.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 392.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 368.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 355.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 361.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 333.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 366.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 291.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 301.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 286.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 220.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 177.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 142.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 121.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 108.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 67.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 55.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 32.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 18.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4335999999999998`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.44, 3.76}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.29, 0}, {3.3, 1.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 2.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 5.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 17.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 28.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 61.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 100.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 166.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 194.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 307.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 324.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 403.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 383.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 416.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 425.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 437.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 410.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 371.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 393.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 338.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 311.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 220.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 172.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 161.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 124.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 78.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 43.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 29.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2842000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.29, 3.58}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 1.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 5.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 8.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 29.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 46.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 92.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 118.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 119.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 190.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 234.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 293.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 306.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 309.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 394.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 366.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 333.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 389.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 334.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 335.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 313.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 268.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 209.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 158.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 133.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 135.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 98.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 54.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 58.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 28.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3636, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.37, 3.69}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.42, 0}, {3.43, 1.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 3.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 12.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 11.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 26.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 56.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 102.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 115.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 155.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 218.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 244.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 284.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 354.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 356.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 358.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 351.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 371.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 363.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 396.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 319.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 361.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 294.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 253.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 218.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 165.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 133.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 115.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 90.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 56.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 39.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 25.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4135999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.74}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.42, 0}, {3.44, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{21.504901960784196`, 26.62306501547971}, {
              18.560274912575586`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.44, 0}, {3.46, 2.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{26.12306501547971, 31.24122807017534}, {
              18.485439040025405`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.46, 0}, {3.48, 18.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{30.74122807017534, 35.859391124870854`}, {
              17.28806507922253, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.48, 0}, {3.5, 58.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{35.359391124870854`, 40.47755417956637}, {
              14.294630177215344`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 58]& ,
           TagBoxNote->"58"],
          StyleBox["58", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[58, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.5, 0}, {3.52, 149.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{39.97755417956637, 45.095717234262}, {
              7.484565775148994, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 149]& ,
           TagBoxNote->"149"],
          StyleBox["149", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[149, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.52, 0}, {3.54, 307.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.595717234262, 
              49.71388028895751}, {-4.339502087779394, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 307]& ,
           TagBoxNote->"307"],
          StyleBox["307", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[307, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.54, 0}, {3.56, 442.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{49.21388028895751, 
              54.33204334365314}, {-14.44234488205365, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 442]& ,
           TagBoxNote->"442"],
          StyleBox["442", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[442, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.56, 0}, {3.58, 591.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{53.83204334365314, 
              58.950206398348655`}, {-25.592889892030417`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 591]& ,
           TagBoxNote->"591"],
          StyleBox["591", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[591, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.58, 0}, {3.6, 667.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.450206398348655`, 
              63.56836945304428}, {-31.280416205844073`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 667]& ,
           TagBoxNote->"667"],
          StyleBox["667", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[667, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.6, 0}, {3.62, 702.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{63.06836945304428, 
              68.1865325077398}, {-33.89967174510036, 19.13511078512576}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 702]& ,
           TagBoxNote->"702"],
          StyleBox["702", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[702, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.62, 0}, {3.64, 681.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{67.6865325077398, 
              72.80469556243531}, {-32.32811842154659, 19.13511078512576}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 681]& ,
           TagBoxNote->"681"],
          StyleBox["681", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[681, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.64, 0}, {3.66, 625.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{72.30469556243531, 
              77.42285861713094}, {-28.137309558736522`, 
              19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 625]& ,
           TagBoxNote->"625"],
          StyleBox["625", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[625, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.66, 0}, {3.68, 560.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{76.92285861713094, 
              82.04102167182646}, {-23.27297784297485, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 560]& ,
           TagBoxNote->"560"],
          StyleBox["560", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[560, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.68, 0}, {3.7, 458.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{81.54102167182646, 
              86.65918472652208}, {-15.63971884285652, 19.135110785125764`}}],
            
            "DelayedMouseEffectStyle"],
           StatusArea[#, 458]& ,
           TagBoxNote->"458"],
          StyleBox["458", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[458, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.7, 0}, {3.72, 296.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{86.15918472652208, 
              91.2773477812176}, {-3.516307489727417, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 296]& ,
           TagBoxNote->"296"],
          StyleBox["296", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[296, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.72, 0}, {3.74, 191.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{90.7773477812176, 95.89551083591311}, {
              4.341459128041448, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.74, 0}, {3.76, 106.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{95.39551083591311, 100.51367389060863`}, {
              10.70250829480672, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 106]& ,
           TagBoxNote->"106"],
          StyleBox["106", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[106, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.76, 0}, {3.78, 41.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{100.01367389060863`, 105.13183694530414`}, {
              15.566840010568399`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3.78, 0}, {3.8, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{104.63183694530414`, 109.74999999999977`}, {
              18.560274912575586`, 19.135110785125764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4124, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[149]=",
 CellID->841573546]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1914505686],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[150]:=",
 CellID->1349581601],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[150], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[150]=",
 CellID->1805328114]
}, Open  ]],

Cell["\<\
We can again plot the data to see what the standardized distributions look \
like:\
\>", "MathCaption",
 CellID->2141940815],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "metabolitesStandardized"}], ")"}]}]], "Input",
 CellLabel->"In[151]:=",
 CellID->1785374157],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
WHpYNCS7FYcVGcpiQVCkMyOOzmURUXdBesSAKo4fP06aCmEwPj4eHx/f19d3
6tSptWvXTkxM7Nu3Lz8/n5bv3LmzsrJS3Iufll108rCWjn67iFOSPaRjhnRm
x+m5LAJL18zo6CiltpjsPT09mZmZwioqdHZ20l9aKKzaunWruCM/MRDJ0kO6
7h63dAclu3I6YyQeCRfksggsXRs07qa+WX19fWtrqxAGjY2NeXl5wlrK7iNH
jmzcuPHs2bP08ty5cxQw4r78hEEkS5cX7D5S23BWskdK55B+O3JciqNzWd5G
w9K1QaPvuLi46upqUjwpKelYkB07dghrKUI6OjpSUlJ6e3vpJf2V/qyz+MPK
9hx6uEvosPSw6Ex261WOlM4hBeS4FEfnctSGG3Iz8sUXX7QEKS0tJYlPnz59
4cIFGpJfDOLz+YaHh4uLi6l3d/XqVfpbUlIi7mt7yx7WtGHpcnQmu2XHGTWd
w1o6rsAIOC6XI90xCasyLF0tR48eFbttDQ0Nfr8/MTGxtraWXlIk5ObmUkik
p6fT+F3cxS5LV+icw9LD4pRkj5rOymth7wLacpmfOyZQ2Qzm5uZmZ2elS6am
pkK2sWukpuDksHRlOE92nZaOqzFhYcxlC4/ofzBKZZi8UdjYS9ds6fg2oxTe
kh2WbhcOtXR8zdVYnNhLh7erBZbuBSwei2m4Y8IYGNZ8BLdisZ+zXEJnt3Sx
YOVHcCIOvfCCkbgqHNpww9KNxXpLZ/dqWLpROD3ZLTt4R+N0lSG3nJDJPTic
6geWbgsO7aV7Occ5z2VYutl0d3cnJyf7fL7S0lJBaz5n/4Cl60dbspt+WF9h
RrJ76gqMI3LZVEv3muJySPctW7a0tbVNTk6S7r29vdzO/gFL1wOS3bJPYRdO
yWVTVZautebj8AaFwZkzZ+jvwMBAXFwclbmd/QOWrhkkuxcS3Cm5DEu3gPb2
duqwpaSkjI6OcjvVj0mW7oVvM3Ke7KmRnwqHpauF/1yGpZvN/Px8IHhZtaCg
YO/evbxN9aPqu4saLF0smPopeEBzsputstp0hqVHgudctqbhhqVPT08nJCT0
9/dTMLzxxhs1NTW8zf6h1plh6WHRk+xmHxss3RA4z2VrVIalE01NTX6/nzpm
+fn5k5OTAc5m/4Cl64fDZA/5cgIs3RB4zmVYupVQIodM7sHP7B+WWbq7L6rz
lux60llbsqd64+tt3Oay9ZbuBbmNxWWWLhYs+FC2wFWyW2/p0rVmfCJH40pL
h9xqcdmFF9dbujZc00uHpSvgygsvkFst6KV7AfTSvYBr7pjA0vUAS/cCsHQv
4EqVPS43V1P9SG9WwtLtxViV5X02WLrh8JPLsHRb6OrqysjI8Pl8RUVF09PT
AQ5m/9DvzLD0sNg+bZch6QxLjwRvuQxLt4WUlJRjx47NzMyQyk1NTTzM/mGv
pbvyC42cJDss3VR4y2VYuvXMzs5Sagt9s4KCAlKZh9k/7LV0aQ0mfUDr4STZ
YenmwWEuw9IVGBoaysvLW7FiRXV1dciqwcHBxx9/vKKiQk/9hw4dWr9+/fDw
MA9T/XjW0sOqnJOT8/2vWL58uYZq+Ul2WHoggsoLCwsk9MMPP/zAAw+8+OKL
Fy9e1Fw/P7nMiaWncvnMUWtrKwl99913U1dKunxubu6xxx676aabcnNztdVM
mV5WVpacnHz+/Hl6ycNUP5619LAq0xLqSLcG+fjjj/XUry3ZdaqcqvhNNluS
3d4cD6syNbXf/OY3SQgaOvn9/pGREQ0185bLnFg6J015WJ588skQS09MTPzx
j3/8/PPPR7X0EydOhF1OFVL3gIbeFA/UVbB99o+Ahy1dIETln//857t372bc
N5LKepJd26cQMSM3japQ50fTQ4jK3/nOd6qqqhj3dUouc6IyD3JHIiQM/v3f
//0v//IvSbhVq1a9+eabyvu+8847mzdvDll45syZGAmCyrZP9QNLl6q8fPly
yvf77rvvBz/4wXvvvae8b1iVA7YmOyw9LFKVp6amvva1r/3Hf/zHP/7jPz73
3HP79u1T3tcpucyJyjzIHQlpGFBLfdddd7W3t1M5kqUvXMvbb78dNt/l2DL7
h/y76LZbui1ffQmx9I8++qinp2dsbIz61TfeeONnn30Wsn1Ule1Ndlh6WKQq
9/f3L1q06JlnniGtya7/9E//tLW1NWR7B+Wy/DobLD0S0jB49dVX77jjjruC
LF68+Oabb16/fr10Y+purb2WF1544fbbb6cemiEHY4alG+XMRlm6WDD2kyoj
v7wmQIn853/+5/v375cu1KOyNcnOs6Wn2ndRXaoyqUC99E8//VR4+fTTT2dn
Z0s3dlYu86ayXG5+7D1SsrNceBkfH1+5cmV3d7dRB2P4YM0Llt7W1rZs2bKc
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
ioTc3FwKifT09NHRUXEXWzpvylfLQ9xb/Bd2ocVHzgOOUDmSV4f4PCw9Eo5Q
WYpaJ4ela2Bubm52dla6ZGpqKmQbW2JAuR8eslZ5ofUHzxt8qhzJq6MWYOlh
4VNlKbB0TnC6pXu5u86O4ywdj5FqAL10ELDvwovCpRVVlo7uOgv8XHhhtHR4
uwYc2kvHfVJj4aGXrsq9YekacFwvXV6w+PidiC25rPmuKLzdJKzsv0W61wlL
NxvLVFa4AQpLV0XIFC7czuSj38nlBYs/As9oCwPTD+sr2P0Zlq4Azypr8GrG
zbxzBaa7uzs5Odnn85WWlgpS8jyTDyzdJBwRBrB0nfCvsnmW7pHuOsm6ZcuW
tra2yclJkrW3t5fzmXzMsHRcgXFKGJhq6a7/9osjVIal64RUPnPmDP0dGBiI
i4ujMudzvJhh6eiuOyUMTLV06VrLPpGVOEJlWLohtLe30+ArJSVldHSU85l8
YOnmoTkMLOvCwdL1w7nKsHT9zM/PB4K3SAoKCvbu3cv5TD6wdJPQEwZmH5va
b57D0iPBp8rp4ebIhaVrY3p6OiEhob+/n7R+4403ampqOJ/jxVRL9+xFdc7D
QK1pw9LDwq3KjG4MS2ekqanJ7/fTICs/P39ycjKgZo4X64/WVEsXC9Z/LtvR
EwZmRwIs3Sj4VBmWbjjUKIdM4cI4x4tlrm7gE0aw9EhoDgOzDwyWbiAcqgxL
5wQLctliJ/e4pWsDvXQvAEv3AhbkssVObpmlC2Ned4BeuhfAhRcvYE0v3X2W
PjY29utf/9rUt7ASWLoXcFMvPd1LkwOoApauDfdZuvsuvLj7MVINuKmXLt3M
pE/EA3xO2wVLtxh+JnQKeULfYksXC2Z8NNvhRGX5d9Fh6YbQ1dWVkZHh8/mK
ioqmp6cDPM3kA0u3DN7CQI9pw9IjwZXKat0Yls5ISkrKsWPHZmZmSMSmpiau
ZvLxgqX/93//d0gfyRZ4CwNYuhlwpTIPlu6+i+qzs7PUTAvjrIKCAhKRq5l8
7LL0bWY+Rhpi6Vu2bBE6SCwMDQ3l5eWtWLGiurpaWEICff9a3n33XbWHxGEY
eNnS5SoTLS0tjz766LJly5577rmBgQEN1fKmMg+WLhYM/3RR+f3vf//444/f
c889P/vZzz777DNh4aVLl1atWkUqP/HEEydPntRT/6FDh9avXz88PMzVtF12
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
    "], {{0, 334}, {497, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{497, 334},
  PlotRange->{{0, 497}, {0, 334}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[151]=",
 CellID->1792329068]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->418653686],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created above:\
\>", "Text",
 CellID->1156073030],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[152]:=",
 CellID->38250836],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1834860801],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "metabolitesStandardized"}], "]"}]}]], "Input",\

 CellLabel->"In[153]:=",
 CellID->640311487],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5963"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 153, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[153], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[153]=",
 CellID->658156183]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->571106757],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteRawData", "=", 
  RowBox[{"TimeExtractor", "[", "metabolitesLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[154]:=",
 CellID->1486846456],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 CellLabel->"Out[154]=",
 CellID->2090185631]
}, Open  ]],

Cell["\<\
We notice a complication: there are three timepoints missing, corresponding \
to the three samples for which we had indicated above that there were no \
measurements (compared to the transcriptome samples). These are samples on \
days \"186\", \"329\" and \"400\".\
\>", "Text",
 CellID->280773926],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data, tagging these data as \
Missing data:"
}], "MathCaption",
 CellID->945801823],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"metabolitesLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[155]:=",
 CellID->417284067],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 155, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[155], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[155]=",
 CellID->1212402591]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->430709602],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolites", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[156]:=",
 CellID->1916390424],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[156]=",
 CellID->1525504201]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1084739385],

Cell[TextData[{
 "We will next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "Text",
 CellID->1226164312],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredMetaboliteData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"metabolitesLongitudinalEnlarged", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[157]:=",
 CellID->890515172],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {4., 4601.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.785228182546035`, 
           69.63751000800642}, {-50.75544747610698, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4601]& ,
        TagBoxNote->"4601"],
       StyleBox["4601", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4601, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {5., 1158.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{69.13751000800642, 109.9897918334668}, {
           39.64008495588685, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1158]& ,
        TagBoxNote->"1158"],
       StyleBox["1158", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1158, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {6., 172.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{109.4897918334668, 150.34207365892715`}, {
           65.52739107785777, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 172]& ,
        TagBoxNote->"172"],
       StyleBox["172", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[172, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0}, {7., 31.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{149.84207365892715`, 190.69435548438756`}, {
           69.22932836304835, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0}, {8., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{190.19435548438756`, 231.0466373098479}, {
           69.9907197195769, 70.54322946830301}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->341844674],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "4601"}], ",", 
     RowBox[{"4", "\[Rule]", "1158"}], ",", 
     RowBox[{"5", "\[Rule]", "172"}], ",", 
     RowBox[{"6", "\[Rule]", "31"}], ",", 
     RowBox[{"7", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->864680193],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$182320$182439 = False, 
       DynamicChart`click$182326$182439 = False, 
       DynamicChart`click$182332$182439 = False, 
       DynamicChart`click$182338$182439 = False, 
       DynamicChart`click$182344$182439 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7056467156813797`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], {}}, 
                    StatusArea[#, 4601]& , TagBoxNote -> "4601"], 
                    StyleBox["4601", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[4601, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182320$182439, 
                    FEPrivate`Not[DynamicChart`click$182320$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182320$182439, {{{1., 0.}, {0., 1.}}, {
                    0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182320$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.925621327638784, -1.7056467156813797`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 1158]& , 
                    TagBoxNote -> "1158"], 
                    StyleBox["1158", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1158, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182326$182439, 
                    FEPrivate`Not[DynamicChart`click$182326$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182326$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.1355704985970502, -0.1470395862009521}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182326$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.106826537704997, -2.925621327638784}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 172]& , 
                    TagBoxNote -> "172"], 
                    StyleBox["172", {}, StripOnInput -> False]], Annotation[#, 
                    Style[172, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182332$182439, 
                    FEPrivate`Not[DynamicChart`click$182332$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182332$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.19843032592021287`, -0.02500811378729119}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182332$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1394856162634417`, -3.106826537704997}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 31]& , 
                    TagBoxNote -> "31"], 
                    StyleBox["31", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[31, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182338$182439, 
                    FEPrivate`Not[DynamicChart`click$182338$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182338$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182338$182439}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1394856162634417`}]}], 
                    "DelayedMouseEffectStyle"], {}}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$182344$182439, 
                    FEPrivate`Not[DynamicChart`click$182344$182439]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$182344$182439, {{{1., 0.}, {0., 
                    1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$182344$182439}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["4601", {}, StripOnInput -> False], 
                    TraditionalForm], {0.5020938512646713, 
                    0.4385729232028062}]}}}, StatusArea[#, 4601]& , 
                 TagBoxNote -> "4601"], 
                StyleBox["4601", {}, StripOnInput -> False]], Annotation[#, 
                Style[4601, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182320$182439, 
                  FEPrivate`Not[DynamicChart`click$182320$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182320$182439, {{{1., 0.}, {0., 1.}}, {
                0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182320$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["1158", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.4519016619901673, \
-0.49013195400317355`}]}}}, StatusArea[#, 1158]& , TagBoxNote -> "1158"], 
                StyleBox["1158", {}, StripOnInput -> False]], Annotation[#, 
                Style[1158, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182326$182439, 
                  FEPrivate`Not[DynamicChart`click$182326$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182326$182439, {{{1., 0.}, {0., 
                1.}}, {-0.1355704985970502, -0.1470395862009521}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182326$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["172", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6614344197340428, \
-0.08336037929097062}]}}}, StatusArea[#, 172]& , TagBoxNote -> "172"], 
                StyleBox["172", {}, StripOnInput -> False]], Annotation[#, 
                Style[172, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182332$182439, 
                  FEPrivate`Not[DynamicChart`click$182332$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182332$182439, {{{1., 0.}, {0., 
                1.}}, {-0.19843032592021287`, -0.02500811378729119}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182332$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["31", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6665533674236807, \
-0.012290354779102602`}]}}}, StatusArea[#, 31]& , TagBoxNote -> "31"], 
                StyleBox["31", {}, StripOnInput -> False]], Annotation[#, 
                Style[31, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182338$182439, 
                  FEPrivate`Not[DynamicChart`click$182338$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182338$182439, {{{1., 0.}, {0., 
                1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182338$182439}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {{}, {
                    InsetBox[
                    FormBox[
                    StyleBox["2", {}, StripOnInput -> False], 
                    TraditionalForm], {-0.6666662966995096, \
-0.0007023456455281167}]}}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
                StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                Style[2, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> 
                FEPrivate`Set[DynamicChart`click$182344$182439, 
                  FEPrivate`Not[DynamicChart`click$182344$182439]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$182344$182439, {{{1., 0.}, {0., 
                1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$182344$182439}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.05]}],FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.982864`", ",", "0.7431472`", ",", "0.3262672`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.544`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.784`", ",", "0.47519999999999996`", ",", "0.2`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6754608`", ",", "0.4848`", ",", "0.7224792`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.4992`", ",", "0.5552`", ",", "0.8309304`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[157]:=",
 CellID->658164502]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,15\"\>", 
                    "\[Ellipsis]", "\<\"ipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 157, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[157], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[157]=",
 CellID->82519417]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Unique Mass", "Subsubsubsection",
 CellID->1252715262],

Cell[TextData[{
 "We may want to match a unique mass to the metabolites. This is a putative \
mass identification based on the uniqueness of the mass feature. If matched, \
a KEGG compound identity can be prepended to the identifier using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectUniqueMassConverter"]],
    "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1581980320],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["OmicsObjectUniqueMassConverter",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], 
     "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["massAccuracy", "TI"]}], "]"}], Cell[TextData[{
     "assigns a unique putative mass identification to each of ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     "'s inner association keys, using the ",
     Cell[BoxData[
      StyleBox["massAccuracy", "TI"]], "InlineFormula"],
     " in parts per million."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->472784104],

Cell[TextData[{
 "Matching putative mass identifications to mass features in an ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObject"]],"paclet:MathIOmica/ref/OmicsObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " of metabolites."
}], "Caption",
 CellID->392942028],

Cell["\<\
We match our identities to KEGG compound identifiers, using a 2ppm accuracy \
(this may take some time depending on the number of matching data):\
\>", "MathCaption",
 CellID->1324534886],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"massMatchedFilteredMetabolites", "=", 
  RowBox[{"OmicsObjectUniqueMassConverter", "[", 
   RowBox[{"filteredMetaboliteData", ",", "2"}], "]"}]}]], "Input",
 CellLabel->"In[158]:=",
 CellID->642344200],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,\"\>", 
                    "\[Ellipsis]", "\<\"id ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[159], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[159]=",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Metabolome Time Series", "Subsubsection",
 CellID->1109625018],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->719686978],

Cell["\<\
For each metabolite feature we now extract a time series (list of values) \
corresponding to the set of times:\
\>", "MathCaption",
 CellID->1151139342],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesMetabolites", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "massMatchedFilteredMetabolites", "]"}]}]], "Input",\

 CellLabel->"In[160]:=",
 CellID->518745171],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[160], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[160]=",
 CellID->824935153]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Difference Compared to Reference in Metabolome Time Series.\
\>", "Subsubsection",
 CellID->1009763177],

Cell[TextData[{
 "Now we need to compare  to compare the difference of each intensity for a \
given metabolite's time series to the intensity of the ratios of expression \
at any time point compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesInternalCompare"]],
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->278067401],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->96962883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesMetabolites", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[161]:=",
 CellID->1862570155],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.32665866089642104`"}], ",", 
              RowBox[{"-", "0.24484346068429885`"}], ",", 
              "0.03077460777441865`", ",", 
              RowBox[{"-", "0.11284688855970915`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6407940659720814`"}], ",", 
              RowBox[{"-", "0.16561264066131298`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.3404546845684606`"}], ",", 
              RowBox[{"-", "0.14390369162531425`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[161], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[161]=",
 CellID->530691439]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Metabolome Time Series", \
"Subsubsection",
 CellID->1412731195],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->966741969],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedMetabolitesCompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "metabolitesCompared"}], "]"}]}]], "Input",
 CellLabel->"In[274]:=",
 CellID->170999781],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4600"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 274, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[274], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[274]=",
 CellID->1856841682]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->245953314],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolomeFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedMetabolitesCompared", "]"}]}]], "Input",
 CellLabel->"In[275]:=",
 CellID->1978811570],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4600"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 275, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[275], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[275]=",
 CellID->1324492706]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Metabolome Data", "Subsection",
 CellID->453326653],

Cell["\<\
We also would like to create a resampled distribution for the metabolome \
dataset prior to classification and clustering. In this subsection we first \
resample the imported metabolome dataset. Then, we carry out the full \
analysis in this \"bootstrap\" dataset, to create a set of random metabolome \
time series. This bootstrap distribution of time series will be used to \
provide the cutoffs used in the time series classification in the following \
subsection.\
\>", "Text",
 CellID->184556424],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->633718938],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->1542785493],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"metabolitesExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[164]:=",
 CellID->878226973],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"88478", ",", "100725", ",", "59680"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"44327", ",", "153862", ",", "33442"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid\"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[164], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[164]=",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Metabolome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->360522749],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1 for the bootstrap set:\
\>", "MathCaption",
 CellID->677226397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metaboliteBootstrapMedians", "=", 
   RowBox[{"MeasurementApplier", "[", 
    RowBox[{"Median", ",", "metabolitesBootstrap", ",", 
     RowBox[{"IgnorePattern", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[165]:=",
 CellID->480725279],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap metabolite median data \
in the OmicsObject, which is now the first list first component for each \
identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->700277754],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedBootstrapMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteBootstrapMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[166]:=",
 CellID->1357825918],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2871523055287482`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2871523055287482],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1877585153],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28037607704250345`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28037607704250345`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->163355591],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2763466764965233`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2763466764965233],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->259759008],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26024284466383885`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26024284466383885`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->778641117],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27025675415129474`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27025675415129474`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->617410823],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2739743911493624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2739743911493624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->71021389],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2947078607539085`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2947078607539085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->901761449],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2650660721998507`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2650660721998507],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->932516019],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2801283174874604`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2801283174874604],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1175383913],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26904171465531007`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26904171465531007`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->290081537],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2651084328101397`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2651084328101397],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1628114812],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26292251438570274`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26292251438570274`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->458717401]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3502234334097394`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3211903759895276`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid [ \"\>", 
                    "\[Ellipsis]", "\<\"96.87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[166], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[166]=",
 CellID->197065877]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1180721070],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrapStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedBootstrapMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedBootstrapMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[167]:=",
 CellID->1630125210],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.023749550672516283`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7142620049001477`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid \"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[167], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[167]=",
 CellID->666411065]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys with labels corresponding to days:"
}], "MathCaption",
 CellID->314732997],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "metabolitesBootstrapStandardized"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[168]:=",
 CellID->465258018],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->1296207012],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinal", "]"}]}]], "Input",\

 CellLabel->"In[169]:=",
 CellID->1277135516],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 CellLabel->"Out[169]=",
 CellID->1243550350]
}, Open  ]],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append the \"186\", \"329\" and \"400\" missing days to the \
transformed bootstrap data:"
}], "MathCaption",
 CellID->115749397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"metabolitesBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[170]:=",
 CellID->1927414844],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->889199561],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolitesBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[171]:=",
 CellID->438322254],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 CellLabel->"Out[171]=",
 CellID->1039879846]
}, Open  ]],

Cell[TextData[{
 "We next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "MathCaption",
 CellID->107474856],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"filteredMetaboliteBootstrapData", "=", 
   RowBox[{"FilterMissing", "[", 
    RowBox[{"metabolitesBootstrapLongitudinalEnlarged", ",", 
     RowBox[{"3", "/", "4"}], ",", 
     RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[172]:=",
 CellID->1335914459],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 75579.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646118, 
          75.1579263410729}, {-48.97193256023675, 68.30012181935953}}],
        StatusArea[#, 75579]& ,
        TagBoxNote->"75579"],
       StyleBox["75579", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[75579, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 21924.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{74.6579263410729, 114.1651321056846}, {
          33.926816797881756`, 68.30012181935953}}],
        StatusArea[#, 21924]& ,
        TagBoxNote->"21924"],
       StyleBox["21924", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21924, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 2352.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{113.6651321056846, 153.1723378702963}, {
          64.16620403927763, 68.30012181935953}}],
        StatusArea[#, 2352]& ,
        TagBoxNote->"2352"],
       StyleBox["2352", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2352, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 142.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{152.6723378702963, 192.17954363490804`}, {
          67.58072712345323, 68.30012181935953}}],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {8., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{191.67954363490804`, 231.18674939951973`}, {
          67.79548672015025, 68.30012181935953}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1038652436],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "75579"}], ",", 
     RowBox[{"4", "\[Rule]", "21924"}], ",", 
     RowBox[{"5", "\[Rule]", "2352"}], ",", 
     RowBox[{"6", "\[Rule]", "142"}], ",", 
     RowBox[{"7", "\[Rule]", "3"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1884409036],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$593535$593641 = False, 
       DynamicChart`click$593540$593641 = False, 
       DynamicChart`click$593545$593641 = False, 
       DynamicChart`click$593550$593641 = False, 
       DynamicChart`click$593555$593641 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.6071759697234667`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 75579]& , 
                    TagBoxNote -> "75579"], 
                   StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[75579, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593535$593641, 
                    FEPrivate`Not[DynamicChart`click$593535$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
                   0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593535$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.984701516469519, -1.6071759697234667`}]}], {}}, 
                    StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
                   StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[21924, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593540$593641, 
                    FEPrivate`Not[DynamicChart`click$593540$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593540$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593540$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.132482034894383, -2.984701516469519}]}], {}}, 
                    StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
                   StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2352, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593545$593641, 
                    FEPrivate`Not[DynamicChart`click$593545$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593545$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19931148083858252`, \
-0.016581121974442822`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593545$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 
                    1., {-3.1414041580305785`, -3.132482034894383}]}], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                   StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[142, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593550$593641, 
                    FEPrivate`Not[DynamicChart`click$593550$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593550$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19999783816574662`, \
-0.0009299080749361384}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593550$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1414041580305785`}]}], {}}, 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                   StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593555$593641, 
                    FEPrivate`Not[DynamicChart`click$593555$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593555$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1999999991117356, \
-0.000018849555893581826`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$593555$593641}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.47990082745119067`, 
                    0.46275224500385403`}]}}}, StatusArea[#, 75579]& , 
                TagBoxNote -> "75579"], 
               StyleBox["75579", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[75579, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593535$593641, 
                 FEPrivate`Not[DynamicChart`click$593535$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
               0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593535$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4421613563049483, \
-0.4989366487190663}]}}}, StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
               StyleBox["21924", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[21924, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593540$593641, 
                 FEPrivate`Not[DynamicChart`click$593540$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593540$593641, {{{1., 0}, {
                0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593540$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6643716027952751, \
-0.05527040658147607}]}}}, StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
               StyleBox["2352", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2352, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593545$593641, 
                 FEPrivate`Not[DynamicChart`click$593545$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593545$593641, {{{1., 0}, {
                0, 1.}}, {-0.19931148083858252`, -0.016581121974442822`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593545$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666594605524887, \
-0.003099693583120461}]}}}, StatusArea[#, 142]& , TagBoxNote -> "142"], 
               StyleBox["142", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[142, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593550$593641, 
                 FEPrivate`Not[DynamicChart`click$593550$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593550$593641, {{{1., 0}, {
                0, 1.}}, {-0.19999783816574662`, -0.0009299080749361384}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593550$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666666637057853, \
-0.00006283185297860608}]}}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
               StyleBox["3", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[3, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593555$593641, 
                 FEPrivate`Not[DynamicChart`click$593555$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593555$593641, {{{1., 0}, {
                0, 1.}}, {-0.1999999991117356, -0.000018849555893581826`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$593555$593641}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.544, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->173842096]
}, Open  ]]
}, Open  ]],

Cell["\<\
For each bootstrap metabolite feature we now extract a time series (list of \
values) corresponding to the set of times:\
\>", "MathCaption",
 CellID->40883495],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSeriesMetabolitesBootstrap", "=", 
   RowBox[{
   "CreateTimeSeries", "[", "filteredMetaboliteBootstrapData", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[173]:=",
 CellID->2081617072],

Cell["\<\
We compare every value in each bootstrap series to the healthy \"255\" time \
point, which is the second element in each series: \
\>", "MathCaption",
 CellID->1475115608],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesInternalCompare", "[", 
    RowBox[{"timeSeriesMetabolitesBootstrap", ",", 
     RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[174]:=",
 CellID->1716802688],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->454276768],

Cell[BoxData[
 RowBox[{
  RowBox[{"normedMetabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesApplier", "[", 
    RowBox[{"Normalize", ",", "metabolitesBootstrapCompared"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[175]:=",
 CellID->725274691],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1396633943],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolomeBootstrapFinalTimeSeries", "=", 
   RowBox[{
   "ConstantSeriesClean", "[", "normedMetabolitesBootstrapCompared", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[176]:=",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Metabolome Time Series", "Subsection",
 CellID->298821825],

Cell[TextData[{
 "In this subsection we will classify the metabolome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1481646089],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap metabolome data:\
\>", "MathCaption",
 CellID->1952930858],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Metabolites", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[276]:=",
 CellID->768869658],

Cell[BoxData["0.8461247616777212`"], "Output",
 CellLabel->"Out[276]=",
 CellID->1856700619]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->1337236679],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95MetabolitesSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap", 
    ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[277]:=",
 CellID->1520498098],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"12", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"0.6705198068392632`", ",", 
     RowBox[{"-", "0.651832513904884`"}]}], "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[277]=",
 CellID->1886752990]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1474915870],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"metabolomeFinalTimeSeries", ",", "timesMetabolites", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Metabolites"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95MetabolitesSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[278]:=",
 CellID->507289769],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[278]:=",
 CellID->1019182225],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1514.0966`", ",", "0.36623535`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.15009402640884575`", ",", "0.15075945952409445`", ",", 
                   "0.33651460690487767`", ",", "0.1975579977785776`", ",", 
                   "0.43038474234090673`", ",", "0.6678462629237746`", ",", 
                   "0.41379036735122116`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
                   TemplateBox[{"12"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"Missing", "[", "]"}]}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"134"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"6"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 278, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[278], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[278]=",
 CellID->1066388514]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for TimeSeriesClassification is an \
",
 ButtonBox["Association",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->754816834],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1020626209],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "metaboliteClassification", "]"}]], "Input",
 CellLabel->"In[180]:=",
 CellID->1712806074],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
   ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[180]=",
 CellID->497917949]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1056863292],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[279]:=",
 CellID->864104307],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[279]=",
 CellID->2040720583]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->575017700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[280]:=",
 CellID->646072400],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"373.8593`", ",", "0.4113235`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C11821\"\>", ",", "184.0236`", ",", "0.6534444`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"221.1087`", ",", "10.306158`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C18218\"\>", ",", "272.2353`", ",", "12.773695`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"294.1655`", ",", "13.049499`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"631.3846`", ",", "13.522097`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"563.3196`", ",", "13.700788`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"779.6037`", ",", "13.962242`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"362.2657`", ",", "14.001`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17873\"\>", ",", "384.3602`", ",", "14.298198`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"390.2971`", ",", "14.359208`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3606`", ",", "14.665766`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"434.3762`", ",", "14.779639`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"392.366`", ",", "15.017344`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"394.3811`", ",", "15.151882`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1599.146`", ",", "15.281029`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"693.6282`", ",", "15.692093`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"874.7147`", ",", "15.911758`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"281.9862`", ",", "0.39045456`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"504.3091`", ",", "14.391079`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"416.3126`", ",", "14.462658`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"735.5212`", ",", "15.179166`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"571.9606`", ",", "0.3881667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"489.9575`", ",", "0.38891178`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"325.9501`", ",", "0.3924723`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"465.9127`", ",", "0.39305556`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"383.9092`", ",", "0.39772224`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"301.9058`", ",", "0.40786114`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"219.9025`", ",", "0.4121111`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"161.944`", ",", "0.4130858`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"139.0609`", ",", "0.45847225`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"115.0636`", ",", "0.4639722`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71.074`", ",", "0.48255876`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"253.165`", ",", "9.127285`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"298.1321`", ",", "9.309667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C20605\"\>", ",", "411.1791`", ",", "9.316696`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"440.2009`", ",", "11.290919`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"355.2179`", ",", "12.744277`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"338.2438`", ",", "12.854486`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1061.1475`", ",", "13.061242`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"210.198`", ",", "13.161266`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"501.3666`", ",", "13.296033`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"594.3745`", ",", "13.370138`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1538.0292`", ",", "13.379565`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"404.3139`", ",", "13.602781`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"692.323`", ",", "13.76518`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"670.265`", ",", "13.873167`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"814.5844`", ",", "14.151257`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"366.3494`", ",", "14.30147`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"442.4017`", ",", "14.35682`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"406.3808`", ",", "14.358058`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278.1517`", ",", "14.363973`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C19658\"\>", ",", "344.2712`", ",", "14.433056`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3577`", ",", "14.4446125`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"311.3186`", ",", "14.611917`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"791.5832`", ",", "15.4236`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1553.1772`", ",", "15.442857`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1545.174`", ",", "15.501686`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"352.0515`", ",", "0.53367996`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17237\"\>", ",", "254.0726`", ",", "12.292558`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"336.228`", ",", "12.510321`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"638.4015`", ",", "13.413879`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"668.3243`", ",", "13.987971`", ",", "\<\"Meta\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[280]=",
 CellID->1348085108]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["True"]],"paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->861507568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"metabolomeFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesMetabolites", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[183]:=",
 CellID->1022947302],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[183]=",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined Data Clustering", "Section",
 CellID->1340833355],

Cell[TextData[{
 "In this section we will combine the omics data classes from the individual \
classifications above using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["JoinNestedAssociations"]],
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "  and hierarchically cluster the information to obtain a second level of \
classification using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will visualize the results in the following section."
}], "Text",
 CellID->834349127],

Cell[CellGroupData[{

Cell["Combining Multi-omics Classified Data", "Subsection",
 CellID->1502510612],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["JoinNestedAssociations",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/JoinNestedAssociations"], "[", 
     StyleBox["associationList", "TI"], "]"}], Cell[TextData[{
     "merges the nested ",
     ButtonBox["associationList (",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     "an association of associations",
     ButtonBox[")",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     " by joining the inner associations for each matching key."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1289482141],

Cell["Joining classification data.", "Caption",
 CellID->2068861910],

Cell[TextData[{
 "We combine the classification data using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["JoinNestedAssociations"]],
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->681556684],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClassification", "=", 
  RowBox[{"JoinNestedAssociations", "[", 
   RowBox[{"{", 
    RowBox[{
    "rnaClassification", ",", "proteinClassification", ",", 
     "metaboliteClassification"}], " ", "}"}], "]"}]}]], "Input",
 CellLabel->"In[281]:=",
 CellID->245414890],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.08553735041954855`", ",", "0.2041353122187633`", ",", 
                   "0.21930279158524527`", ",", "0.3784958694491304`", ",", 
                   "0.5848999163284979`", ",", "0.34601221698539536`", ",", 
                   "0.5457352214922402`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                   TemplateBox[{"7"},
                    "OutputSizeLimit`Skeleton"], ",", "0.`", ",", "0.`", ",", 
                   "0.07591897179810148`", ",", "0.`"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"1081"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 281, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[281], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[281]=",
 CellID->808884430]
}, Open  ]],

Cell["We can check the keys before and after the combination:", "MathCaption",
 CellID->1179244319],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Keys", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[282]:=",
 CellID->764718377],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
     ",", "\<\"f7\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[282]=",
 CellID->729829850]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "combinedClassification"}]], "Input",
 CellLabel->"In[283]:=",
 CellID->432691270],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[283]=",
 CellID->1950743689]
}, Open  ]],

Cell["\<\
We can also check the membership counts before and after the combination:\
\>", "MathCaption",
 CellID->2090161703],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Length"}], "]"}], "@", "#"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[284]:=",
 CellID->810244695],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
     RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[284]=",
 CellID->1387605075]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "combinedClassification"}]], "Input",
 CellLabel->"In[285]:=",
 CellID->75235690],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "1082"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "6724"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "256"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "85"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "64"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "112"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[285]=",
 CellID->916666016]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering of Classified Data", "Subsection",
 CellID->1764557057],

Cell[TextData[{
 "Now that we have combined the classes for the various omics, we can cluster \
them together to obtain the various trends using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". A two-tier hierarchical clustering of the data is performed, using a set \
of two classification vectors, ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
 " for each time series to cluster the data pairwise. The vectors are \
typically the output from ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". Similarities at each clustering tier are then computed using in \
succession from each time series first ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "1"]}], "}"}]], "InlineFormula"],
 ", and subsequently ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
 " (which corresponds to the ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"input", " ", "data", " ", "time", " ", "series"}], "}"}]], 
  "InlineFormula"],
 " if the input is from ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ").  "
}], "Text",
 CellID->32166003],

Cell[TextData[{
 "The number of groups and subgroups for each tier of clustering is \
automatically determined by using internally the \"Silhouette\" (default) or \
\"Gap\" as \"SignificanceTest\" methods (see also ",
 ButtonBox["Partitioning Data into Clusters",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/PartitioningDataIntoClusters"],
 ")."
}], "Text",
 CellID->58096227],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClusters",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClusters"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs clustering of time series data using two tiers of hierarchical \
clustering to identify groups and subgroups in the data. TimeSeriesClusters \
takes as input series data, where each data is comprised of two lists and \
performs clustering of the data to identify groups and subgroups based on \
similarities between the input series. The form of the input data is either \
an association of classes and members, where each member must have a list of \
two components, typically two vectors used in classification: ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
     ".\n",
     StyleBox["I", "Notes"],
     "n the most common case of using as input data that came from performing \
a ",
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"],
     ", the ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
     " will correspond to input original data for the corresponding time \
series."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1813135289],

Cell["Clustering of classified time series.", "Caption",
 CellID->571851293],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ClusterLabeling", "\"\<\>\"", Cell["\<\
Additional label to append to each cluster being computed to prepend to the \
inbuilt G#S# labeling.\
\>", "TableText"]},
   {"DendrogramPlotOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options passed to the DendrogramPlot function used internally to generate the \
dendrograms.\
\>", "TableText"]},
   {
    ButtonBox["DistanceFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DistanceFunction"], 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the first tier of clustering.", "Notes"]], 
     "TableText"]},
   {"LinkageMeasure", "\"\<Average\>\"", Cell["\<\
Which linkage measure to use in computing fusion coefficients.\
\>", "TableText"]},
   {"PrintDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to print dendrograms for the clustering computed.", 
     "TableText"]},
   {"ReturnDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to return the dendrograms as output.", "TableText"]},
   {"SignificanceCriterion", "\"\<Silhouette\>\"", Cell["\<\
Method used in determining the number of groups and subgroups at each tier of \
clustering.\
\>", "TableText"]},
   {"SingleAssociationLabel", "\"\<1\>\"", Cell["\<\
Label to use in case a list is provided to name the class of data produced.\
\>", "TableText"]},
   {"SubclusteringDistanceFunction", 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the second tier of clustering.", "Notes"]], 
     "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1454392793],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1320801797],

Cell["\<\
The output of TimeSeriesClusters is always an association of associations, \
providing a summary of the two tier clustering results for each class \
provided in the input. The output has the form:\
\>", "Text",
 CellID->416113495],

Cell[TextData[Cell[BoxData[
 RowBox[{"output", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "1"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "12"], "..."}]}], "}"}]}], ",",
        " ", "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "12"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "11"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "12"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "11"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "11"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "2"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "21"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "22"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "21"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "21"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "M"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "M1"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", 
           RowBox[{" ", "M1"}]], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M1"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M2"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "M1"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "M1"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "|>"}]}]]]], "Text",
 CellID->1412755833],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Cluster\>\"", Cell[TextData[{
     "Cluster generated using the input ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "1"]}], "}"}]]],
     " for similarity calculations. "
    }], "TableText"]},
   {"\"\<InitialSplitCluster\>\"", Cell["\<\
Clusters resulting from splitting the initial cluster (reported by key \
\"Cluster\") into groups using the SignificanceCriterion to determine the \
number of clusters.\
\>", "TableText"]},
   {"\"\<IntermediateClusters\>\"", Cell["\<\
Aglomerative clustering result of hierarchical clustering of each of the \
initial split clusters (reported by \"InitialSplitCluster\")\
\>", "TableText"]},
   {"\"\<SubsplitClusters\>\"", Cell["\<\
Custers generated from splitting the clusters following the second tier \
clustering (reported by \"IntermediateClusters\") into subgroups using the \
SignificanceCriterion to determine the number of clusters.\
\>", "TableText"]},
   {"\"\<Data\>\"", Cell[TextData[{
     "Data reported in the order of clustering results as rules of ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"classification", " ", 
         SubscriptBox["vector", "2"]}], "}"}], "\[Rule]", " ", "label"}]]],
     " for each time series, sorted in order of the clustering results."
    }], "TableText"]},
   {"\"\<GroupAssociations\>\"", Cell["\<\
Association denoting membership of each initial data label to groups and \
subgroups generated by the two tier clustering.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1608083999],

Cell[TextData[{
 "Output keys for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide clustering information."
}], "Caption",
 CellID->986073698],

Cell["\<\
We now cluster our combined data (a printout of the clusters is included as a \
default option):\
\>", "MathCaption",
 CellID->565513990],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClusters", "=", 
  RowBox[{
  "TimeSeriesClusters", "[", "combinedClassification", "]"}]}]], "Input",
 CellLabel->"In[286]:=",
 CellID->1978491955],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"5"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f6\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"Cluster\"\>", "\[Rule]", 
               RowBox[{"Cluster", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}]}], ",", 
              TemplateBox[{"4"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\<\"GroupAssociations\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"ZNF324\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"CBX6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
                   
                   TemplateBox[{"106"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"O60884\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"RTFDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "246.1213`", ",", "0.9403793`", ",", "\<\"Meta\"\>"}], 
                    "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
             "\[RightAssociation]"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 286, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[286], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[286]=",
 CellID->92211928]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Section",
 CellID->1200455778],

Cell[TextData[{
 "After our data have been clustered, we would like to visualise the results \
in heatmaps and dendrograms. For the two-tier clustering we have performed \
MathIOmica can output all the clusterings in labeled dendrograms and heatmaps \
using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", which iteratively calls ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramHeatmap"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " on each class."
}], "Text",
 CellID->944139540],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramsHeatmaps",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates  dendrograms and associated heatmap plots for clustered time \
series data, typically the output of all classes generated by implementing  ",
     
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesClusters"]],
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". "
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramHeatmap",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates a dendrogram and heatmap plot for one set of time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " clusters, typically the output of a single class of  ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesClusters"]],
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->581300403],

Cell["Visualizing the results of classification.", "Caption",
 CellID->1012763018],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FunctionOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["ImageSize",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/ImageSize"], " ", "->", " ", "200"}], "}"}], 
    Cell[TextData[{
     "Options list passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesDendrogramHeatmap"]],
        "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2015411944],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->768978677],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ColorBlending", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CMYKColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "]"}], ",",
       " ", 
      RowBox[{"CMYKColor", "[", 
       RowBox[{"0", ",", " ", "1", ",", " ", "1", ",", " ", "0"}], "]"}]}], 
     "}"}], Cell[TextData[{
     "Color scheme for the plot. The color list is passed to an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function to create a ",
     ButtonBox["ColorFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ColorFunction"],
     " for an internal ",
     ButtonBox["ArrayPlot function",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ArrayPlot"],
     "."
    }], "TableText"]},
   {"DendrogramColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "]"}], Cell[
    "Color to highlight the dendrograms.", "TableText"]},
   {"FrameName", "\"\<Dendrogram and Heatmap\>\"", Cell[
    "Label for plot frame.", "TableText"]},
   {"GroupSubSize", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", " ", "0.1"}], "}"}], Cell["\<\
Relative size of group and subgroup reference column in plot.\
\>", "TableText"]},
   {"HorizontalAxisName", "\"\<Time (arbitrary units)\>\"", Cell[
    "Label for the horizontal heatmap axis.", "TableText"]},
   {"HorizontalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for horizontal axis for each column.", "TableText"]},
   {"IndexColor", "\"\<DeepSeaColors\>\"", Cell[
    "Choice of color for labeling the group/subgroup index.", "TableText"]},
   {
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], "200", Cell[TextData[{
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"],
     " is an option that specifies the overall size of an image to display \
for an object. "
    }], "TableText"]},
   {"ScaleShift", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Option to reset the blend of the colors used overall. The option is a \
real positive number, and is used as a multiplier for an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function's second argument."
    }], "TableText"]},
   {"VerticalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for vertical axis for each row.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1299131947],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramHeatmap"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1044394180],

Cell["\<\
For each class a separate plot is generated: dendrograms are represented on \
the left, and are highlighted to represent the grouping level. The G, S, \
columns represent the groupings and subgroupings generated by the clustering. \
 The legend shows the corresponding groupings and subgrouping, and the number \
of elements in each group subgroup.\
\>", "MathCaption",
 CellID->1376228890],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeriesDendrogramsHeatmaps", "[", "combinedClusters", 
  "]"}]], "Input",
 CellLabel->"In[287]:=",
 CellID->1880076040],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdcldUbx4975J6plTPN3GXl30rN3OY2Z5o7B0vEgXuBuBExcW8Ut+Ze
OUrLkYriNhxhDhRBEGT+f+ceer3eezkv3MnF5/f5ffi89+XdvNzvec54Ttk+
zu0HZGaMDcuJH+17j/zG1bW3e4cC+PC907BBPzn179fcya3/T/1d6/TJgpWT
8zC2Dtvz5SQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJ
RCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJFI61tOnT219
CSQSiUQikdKsZ8+excXFpWZLFxcXxtikSZPEx1mzZrm6ukZGRlry6kgkEolE
IpmkI0eOlC9fHgTPmTPn999//+DBA/n2gwYNwsZAvPhYtWpVfHzy5Inqifbv
358rV65mzZphecyYMVieNm2a6ddPIpFIJBJJrvj4+CJFioDXoHbJkiWzZct2
8eJF7Q0SExP197p7966yLMe99u67d+/Gljly5Hj58uXnn3+O5cmTJ8tPRCKR
SCQSyXTduXMH2M2XL19ERERcXNzJkyexMjAwEPF+165dK1asmDt37t69e796
9Qrr27dvX/4/zZs3TxxBwf3vv/9eqVKl+vXr41BYv2bNGnxE+aFmzZq//vpr
0n+4hzZv3pwlSxaB+5iYGPzEQbJnz/7ZZ58tXLgQW0ZFRdWtWxdnv379Ooof
FSpUaNWqla0eEYlEIpFI9i4gHjAFefPmzTto0CARtp85cwZrMmfO3KZNm1Kl
SmHZ19cX6728vAYOHFivXj2smTBhgjiCwD1QjjJD8eLFAWis3LVrF1Z++OGH
o0aNKlGiRMGCBcPDwwXuq2gElKMkANAjqMcBO3ToMGzYsJIlS6IYEBISohzh
66+/btq0Ka7k1KlTNntGJBKJRCLZv4DXAQMGvPPOO8ArfiJIF7j/7rvv8NsV
K1ZgGZG+sv2iRYv0cZ8zZ078PHTokFjZvXt3Aev+/fsD7lg+duyYwD0KDPg5
ZMgQpTL/6tWrI0aMwOlQWsBKHx8fcRDRSQByc3Oz5gMhkUgkEinjKTg4GCE2
om8BYgBa4F7Unwu4//jjj8r2BnGfI0cO/GzWrJlogu/cuTM+1q1b1+E/3bhx
Q+B+27Zt+fLlO3DggMA9zp4nTx7E9R4eHj179tRu0P/+++8F7kXdAolEIpFI
JOMUGBiYN2/eGjVqODs716xZE2ydMmWKwH2xYsXGjRtXpkwZLK9evVrZxSDu
jx8/LiL6OXPmYOXatWuxjH29vb3nzZs3Y8aMpP/a7kU7fmhoqCD7nj17sPD5
558jqBf1AAL369atw3KvXr1Kly6dM2dOXKfVnw2JRCKRSBlEwK5Sk58lSxbE
1zExMQL3iLjffffdTJky9evXT7vbvMD9xIkTxcdq1arhI47z7Nkz7JI9e3aB
5mnTpiFsF30A2rVrl5CQIMh+9OjRJE2iHlG0iIqKEr30wfQuXbqIlQ8ePChQ
oEDhwoWx2bFjx3CEypUr48Js8ohIJBKJRMoYAovv378vut8n/ddVr3Xr1lgT
Hh5u4mGjo6Plm6EsERISEhsba/SJSCQSiUQipVXabfckEolEIpEypCIjI0+f
Pn379m1bXwiJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
IpFIJBKJ9HaJkUgkEolEynDSx71NihkkEolEIpEsJMI9iUQikUgZXoR7EolE
IpEyvAj3JBKJRCJleBHuSSQSiUTK8CLcm0U+Pj6bNm2y9VWQSCSSeRQZGfnP
P//Y+irMr+3btw8fPtzo3e/du9e7d++7d++a8ZKsprcW9y9evMCd5siRo0iR
Is2aNbt8+bIpR+vRo8eUKVPMdW0kkrbu3LmTKVMmZZb5qlWr4isrrQd5+vTp
uHHjtNfMmzcvb968MTExWJ47d26uXLnMcrUke1dISEjTpk3x3Zg7d+6aNWv+
/fffFj2dmMTZz8/PomdRhP+CypUrJyQkyDfT/38R+uOPP4oXL37ixAnLXJ1l
9Zbj/vHjx0+ePBk8eHChQoXCwsKMPhrhnmQ5Afd4V1+9eiU+AvdbtmxJ60EC
AwMrVKigvQa4x2F37tyJ5a+//jpr1qxmuVqSvatBgwZNmjQJDw+Pj4/HS/Ls
2TOLng6x9qefftqwYUOLniWt0v9/yQAi3GMZAc4777zj7e2N5fv377dt2xb0
L1Wq1OzZs8XGo0aNwmvfsmVLREP4LbbBShQPOnfunCdPnipVqlSrVk3Bvaur
644dO5ycnEqUKJEvXz5xir/++qtu3booLaNgqYRmQUFBn3/++QcffFCmTJmy
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
BfdimuaA/7Rv3z6xQVRU1Mcff5w/f36stOqdZGgR7kkkEolkilKD+/r163fs
2DEiIuLff/8F5QXu3dzcPvroo7///hvLoaGhor0e6t27d8+ePU+dOlWoUKGr
V69a+34yqAj3JBKJRDJORYsWzZw5sxiIh4Xg4GCszJMnjzbuN2zYgIWLFy+W
Ll0avypTpsy3334rcP/y5UtgPWvWrOXLly9RooTYct26deXKlUPBAMtz5sxB
mB8dHW2rG8xIItyTSCQSyQpKTEx8+PAhfuqsB80R8uuvJ5lXhHsSiUQikTK8
CPckEolEImV4Ee5JJBKJRMrwItyTSCQSiZThRbgnkUgkEinDi3BPIpFIJFKG
F+GeRCKRSKQML8I9iUQikXQUGRmp5LizvhITE3H2mJgY+WY///yzPWbZTenu
tm/fPnz4cMudl3BPIpFIJEUhISFNmzbNkSNH7ty5a9asKTLcWlOnTp364IMP
3nnnnZw5c3bq1EnMimtQvXv3njBhghUvzQyS3N24ceMqV66ckJBgoVMT7kkk
EomkqEGDBk2aNAkPD4+Pj583b96zZ88sdy5PT09leerUqWKhTp06Q4YMiYuL
wzWA5pIMuukB9wZvQaLU353ZRbgnkUgkktCFCxeyZcumX41/8OBBJycnf39/
xPvYYMWKFVgJYAG4hQoVKlas2PDhw4EwrGzTps3+/fvFXkOHDl28eDEWjh49
ivWdO3fOmzdvhQoVxAazZs365JNP3P5TrVq18BMHqVat2pgxY7TPHhwcXLFi
ReXjhx9+eP/+/SQN7ps3b/7pp5/mzp0bRZSHDx9i5atXr3r27Pn+++8jiC5b
tixOd+PGDax3dXXdsWMH7qJEiRL58uV7/PgxVv71119169bF7girt2/fLjnX
6NGjXVxcateujY0bN24szpXSLWhfvM4UP/p3B1WqVAnXWb58edyFshIPucJ/
wq9w/ViJMtj48ePfe++9ggUL4nlKqj70RbgnkUgkktDatWurVKmSpIHmDY1E
dL9161ZgHZHpn3/++VwjrOzbt2/Dhg1BHAARe3l4eGAlygNbtmwRR+vUqdP0
6dOxsGfPHlAyICAAh505cyaKB1hI0syIp5x62LBhYmH37t0oFQCj4J3YDJeR
OXNmZctMmTKJJgbgHqe7cuVKRETEN998069fP6xcuHAhrhM7BgUFFShQQEy1
A3Xt2rVIkSIogdy9e1cQ/MWLFyVLlpwxYwYAvXfv3ly5cmGXNJ0rpVvQ1sqV
K7X5rn93EJ4nHuOmTZvAfWXL2NjYMI08PT3xxMT0Q15eXihyoLDx5MmT1q1b
Ozg4pPIvm0S4J5FIJNJ/Aptq1KiBhdu3byNqBh/BlyQN7osXLw7EaG9cuHBh
hO1iefny5Z999llSyrhH+CxWgmLgKbiZlDIrUcYAhRGhI9AG2iQIVirz169f
LwoqKE6gEIKFBw8eZMmSRUTxSRrcd+nSRfv6jxw5AowqU/M0a9YMJ03TuVK6
hcQ3tWTJEm3i69ydsn7fvn3auBfavHkznnNgYKD4WKtWrW7dus3TqEePHviY
lGoR7kkkEokkdOrUKQS5Snv9gAEDFNzrkyVfvnwnT54Uy+vWrRPlBGzm7+8v
VhrE/Z07d0CZmzdvJqmFxtHR0dWqVQO+sTGwi3KCWG8QwWvWrBFXeO/evaxZ
syLA/+CDD0QFuBBwP23aNO3j79+/v1SpUsrHNm3aTJ06NTXnwiUpT0P/FgIC
AhzeVK9evQoWLKgUPHTuTlmjj/tff/21QIECJ06cUNagmNG5c+eA/4RdklIt
wj2JRCKRhBCKIkhHFBwZGZmQkNC2bVsJ7tu3bw+gx8XFYeMvv/xSgA9oAxnj
4+P/+OOPIkWKKLgvXrx4cHBwTEyMi4tL2bJlcXCDDd///vsvDnvu3LkkTcGg
aNGiK1euxCny58+/c+dO7IW4GJBSENyhQwccMyoqqm7duuIC5s6diyNg39DQ
UO2r1cf906dPcdgNGzZgGeFz7ty5cc2q57p//z4KNoLsqWm7f/HiBa7n8uXL
WH7y5In+3Slb6uD+woULhQoV2rFjh/bRcPyPPvpIXBJuME2DJQn3JBKJRFJ0
9+7dBg0aZM+ePW/evOCaqEbetm0buKaz5YMHD+rVqwemIwIFxQB9rDx27Fi5
cuWwL+Lrnj17KrjHNhUrVgRJS5YsqdQJjBgxQjmagDVYOWnSJGAuT548mTNn
FiUHrJ88eTLWFC5c2MnJCaUF0ZCN3zZs2BAFCRy2cePGokfB8ePHQbESJUpU
qFChevXqSkiuj3to79692PKDDz7Ily+fj4+PWJnSuSpXroxzZcuWTTmXwVvQ
0ZQpU5Sq+JTuTujAgQNAufLx448/xo3k+0+NGjXCypcvX+KpZs2atXz58rhy
UVZJpQj3JBKJRNJRREREKnt9Y7Pw8HDtNYmJiQictdcA94AX1oeEhCht5XIh
zAfatNegOIEoXn/L6Oho7XryNm3aLF68+NGjRyiN/Prrr6DqvXv3JCcSSW90
QnL9c4nKfJxL59aMk/7dpUm4DBwhlU9SEeGeRCKRSBaVdtu9pdWnT59u3bod
O3bs9OnTDg4ONWrU0I6gjVZ6GONvogj3JBKJRLKo7ty5s2zZMuucC9G3l5dX
x44dAej58+crA/FMFEosv/32m1kOZSsR7kkkEolEyvAi3JNIJBKJlOFFuCeR
SCQSKcOLcE8ikUgkUoYX4Z5EIpFIpAwvwj2JRCKRSBlehHsSiUQikTK8CPck
EolEImV4Ee5JJBKJRMrwItyTSCQSiZThRbgnkUgkEinDi3BPIpFIJFKGF+Ge
ZGnFxcVFRUW90NPjx4//1SgkJOTOnTvBwcF///33kydPdGaiJJFIJJLpItyT
UlJiYmJ0dMzz5+FhYRFyP30adv/+/Xv37ml+3rl69cqlS5cCNcLC8ePHN24M
WLt2zbp13FiAV65cOWnSpBEjRowcOdLR0bFPnz4/auTj4/Po0aM0XecAEsnc
stD/FIlkQxHuSTqKinr56FHoo0dPbt68fejQ7i1blm/bZtjbty/fsWP5zp0r
1q//edgwJ2dnB1dXFxeXn7p379yxY8cO/6lJkya1a39aq1YNxTVr1qhWrVrx
4sXza5QrV65MmTIxjVq2bHn9+vU0XTC+nD9mrWzlCRPYW2t8WUhs22vzHSKz
fF/CPSlDinCf8YSoPDY27uXLGMTmKRlM//ffh7du3VYshMD8wIHta9fO9fef
M23asP79v3Fyqjp8eFU3NwMeOLBq//5VBwyo1rVrpVKl8hQqlLto0bxFimTP
mZNly8ayZmWKcuRguXOzXLkYfoWfWNbxO+/wXcD8hg0bBgUFpel+MzDuZ7qp
eOIEmVWPP2eozOkZ9/Ibh5f0k5lwT3oLRbi3C0VGRl+7djMo6PqVK3LfCAoK
PHp0z+bNyzdv9tu8eZFBb9myeN06Xw+PUc7OvV1d+wg7OfVxcOjTp0+XNm3q
tmpVoXPncl9+WaRatSz16rFGjdi33+q6YUP28cesQgX24YesTBmObPAazp49
+SdwD3wL58/PihRhhQuzAgVY0aIGXKwYJ37mzOybb74h3NuL03N0v7eZzPJ9
CfekDCnCffpXTEz4uXPbZs1ymjt38Jw5Q6R2mDWrV69eXzVsWL516zKK27R5
w23blmne/INPPilQqVLWKlWywRUrZitblv+sWDFzuXJMuGRJVrAgJzUYrW2s
xE+sB9YBaFUB9wjqQXMUCcSCQaOEgC2bNWt29erVND0fwr2tbFHcm1jzsPF7
mQn3pLdQhPv0pujo6HPnLqxdu9Hff6vwkiULJ0z4Zvr0wgEBhTZskBkbBATk
mzo1W//+bMgQ5uDAPXAg692b/fjjG+7Zk3Xpwjp1Yp07czdtyqpUYZUqsRo1
WOXK7P33ebiNeDxv3mRMi/p2sZwjB4/cAfosWbj/a3U3j4D7a9eupemJEe4z
JO5N9OYOMi8aIDPhnpQhRbhPb3r4MGTevLFDhlQZM6a6u3v10aOru7hU6tYt
19Kl7No1duWKzJcvsz172OzZbMQINnQoc3Vlw4Zx4gPuXbuybt3eMNYI1mOh
RQteLQ++Fy/OfyJyz5ePO0+eNwJwwX1E6KA8cC8q6s2r5s2bE+7txRbF/VwX
k3yhhswLBstMuCdlSBHu05vu3r05Z05HUPvSJW4Q/ORJNmsWG4wvogVs/vwU
7evLZszg+K5dm33xBfvsM+7PP2e1aiU3r5ct+9rlyrHy5TniYcTyQDw4LqJ1
BeVK/C7WaNvslLdf3I+bzOSWQ81tpswzhqt4yliZB/2sYm9nmT3dVSzH/Yjp
MnuNVPH0ETKrdmI8VUfmhQNlJtyTMqQI9+lNwL2fX7sbN/BXSParV+z8eebj
w5YsYYsXywziI6j/4QfWvz/r1y/ZvXqx7t151b1ihPOdOrHvvmNNmnCjbAD6
ly6d7JIled+5woWTXbAgb1XXliWCekV2V5k/ZiqTW457Z2+Zh85RsXx3Vdyv
/FHm0R4qluN+8jiZ3T1VLB9JN2m8itd3kVleVCDckzKkCPfpTQL31669xr0g
/rNn7OlTFYeGslu32Jkz7PTp1/7zT+4//njtU6fYokWsTx9eMEBhoHNnQPZ1
f/sqVXjDPUCPkB/cN4h7y6lx48ZXrlxJ0xOjynyjPd9BZnnVAWzRynz/rjJv
6qjiXxvILD814Z6UIUW4T28yiPvUOzGRxcWx2FiZo6LYhg3M3Z35+bHly9nS
pdxLlnBjjacnb/EfOvQNu7q+YZ3fGm0XF25nZ+bkxBdat2bffff15cuX0/TE
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
lfl2Y8I9SV827JkfFBSEGBwERyg9efJk7cm2gHvRdh8fH79u3Tps4+Dg4OLi
cvz4cWWb3bt3S3CPo82fP19/pB5KC9o986GBAwcK3Itzubm5DR8+/MqVKyY8
VPOIcG8Vxd+9e2ns2M4DB2YKCTED7u/cYW5u7PvvWd++rE+fN9y7N1/v7c0n
mEv/uN+7lw0axD1gANu4kd9Ou3aEe7sx4Z6kLxviXuiVRvKLRIQeHh6e1lsz
bgR9TEyMzsB8W4lwbwXFxb24eHG5i0uBsWPZP/+YAfd//81mzWKnTrHAQF1f
vMg2bOBpdtJ/dB8Wxn7+ma1fzy5c4P30KLq3OxPuSfqyOe5NSbNjxP3qJ+dJ
J3DXF+HeCsKbdfGiz+TJvEOaWdruEd0vWsSePjX8WxQDdu5Mv233kZF8JqBn
zzjfu3blvQrxcelS9ssvPLpv25Zwbzcm3JP0ZfT/42dZ+6XV5kqz8/jxY29v
bycnp7lz54aEhKTpfnWS8wD9np6eBw8eNPU5WkCEeysoLu55YOB8Dw/eqp5K
3N+4oYL7xYtTjN/TT8/8+HgWE8Nevkw2lv/+m4fzeA4orri58Wp8XAluZPZs
Hul/9x1r2fJLwr29mHBP0petcG9Kmp1169atX78ea3QG72tLP82OweQ8W7Zs
wRrC/VsrBfdgtCrugXJvb3buHI9/Eb8b9IULHI7pDfdxcZzmQUHJvniRM33a
NG4vLz6yHvcFvuPrdM0aPgMvYvmmTXniXCcnVqcOq1mTFSnCGjX6JigoKE2P
l3BvKxPuLaG4uDgbnt102Qr3pqTZwa9QAEjSDMlPKf2dfpod/eQ8V65cGTNm
zKJFiwj3b63ShPt//uF8dHRkY8ak6KFDeVf2lCrzLYp77HLmDFu7lvn7v2HE
7KD56NHM05NNn86n2cXXZuPGrFs31q8fJ3uTJuzTT1mFCqxVKzZ4MBs4kNWu
zQoVYvnzs4IFWY4cLGtWlikTa968uXYW69SIcG8rE+7NrjNnznh5ednq7GaR
dXCvP+7e9DQ7ALqrq6uyWZJamh0hZfheRETEqFGjgoOD16xZQ7h/a5Um3EdF
cV4vW8ZWrjRsxMUA6+TJJuF+7152+DAfp6+svH+f7d7NR/Bt2CDzkiX81FOm
8L6CCNgVz57NR81XrsyqVuVxOlytGnvvPY74//2P1a3LypThWM+ThxUowIoW
5YF8rlyc7zpq3LhxWkesEO5tZcK9ebV///5BgwZNmzbNJmc3l2wV3ZuYZufk
yZNgfWBgoPa9SNLsKFJwv3LlyokTJ+7YsQNlCewI7lvuIRsnwr0VlCbcJyZy
HD97JvPFi7zXnymV+Zs28TAcIXlAADcoD17jiw5RuTbB587lRQvFPj48fv/p
J163gN21PW0ac3BgjRqxevVY/fqsYUMevIPvuXOzd97hxkLOnNyI4rNk4Qbr
4cyZXxv6+uuvtcvbqRHh3lYm3JtXq1atQnRPuDcO96ak2Tly5Mjo0aNDQkIS
NDJ4XzppdhQpuL927ZpIvDNr1qwlS5boz6djcxHuraA04T41Fj3zJbhHnI5S
gaREgQKDnx8HOiA+bx5f6N2bN6OPG8cmTuRGCO/oyNq0YS1a8Op3uHVr1rYt
r59HwI7g/ZNPWK1ar42P1avz6L5SJfbRR9wI5wF3Eb/jJ/ieLVtyjb2wkPJR
rGnYsCFF9/Ziwr3ZhZCQcG90z3zj0uwkJiY6OjoqrQMppb9LKc2OfnIeqsx/
m2UJ3ONQksr88ePZ2LHJ3eR0DKAjDAfZAe6vvkr2l1+yDz9k77/PqlTh1BYu
W5Y3rOfN+9r58vGfuXKx7Nk5u3WMldoWZE+rmjVrdvXq1TQ9XsK9rUy4T6sG
6ElnA8K9KbgXSm9pdtKPCPdWkNlxL9LsnDvHrl/nI/S1jTV797KePVmNGuyz
z3iNuo6BddGGrtSuC4vQW2E3mI4NsCZzZmOobbSoq54dmXCfVvEjaz0iCe5B
Fv08MHYho/8fG+Qam1ZTmp00iXBvBcXFhQcF+Xp6mg33ISF8aNuAATxO17Gj
I59X7pNPeB/4qlWTXa3aa5cvz7vJFSjAoV+o0GvjI6CvCJQXzetiWTSsE+4J
99om3KdVqcf9w4cPhwwZYqHLsKhsiHuj0+yEhobOnDnT0dERe6G0kKb7pTQ7
GUN4Me7du3/w4KHDh381wUcPHtyzapWTuzvPHaeaRFfiuDiegA5++JCPhtu1
iwfyOt63j0+H5+vLpk5lHh5s5Ejes65fv9fu3ZvH/igS9OjBOnbkNfk1avDG
95o1WcWKvC99iRKsZMlklyrFe9FrFwOEtBvfzasWLVoQ7u3FpuDe013FNrwv
G+I+A8hWuDclzY7o1Y818+bNU6as1RGl2cnYev7837FjW/fpU3PkyJrDhxvv
YcOqDxr0npMTGzGCp40Vk8Kk1YjlO3fmDe6NGrFvv+Vd3xs0MOz69XnWGkFw
hPYffsgjeoMuXZrTHHG9cP78vJJfdKRXLPrSa3eosxzr30Lczxomc3pmoom4
T88m3JsiW+HelDQ7Dx48iIyMRFyPwFx75nptUZqdjK3Q0OApU0odPpzpyhWT
HBiYeefOTHPn8mz2AQF8EFxavXkznzAOMfvQoczZOVVG6QJGOeHHH3k4rxhB
PX4ixsd68SusQbAPd+/Os+J06cI6deJG7A936MCaNUsuRcBinN3//sc73qN4
IJLk5M3LG/q1+++JRn/tEXap1NtWmT9pvMyW5tr6LjIT7s0uwr25cG/2NDth
YWFjx451cHC4ffu2shel2Xl7BNzPnfvugwemNrXHxvKBb8uW8dlhTPGzZ7wt
IPW+f593FQgO5l37FN+8mdyp7+rVN3zlSrJPnuQFjFWr2OrVPHvevHmc+J9+
ylPl1KnDQQ/Xrs1rGKZO5eP4UIyZPZsn3unfnxcVYJQZsMEHH/Cu/vgJozAg
pFQOpFQGaNas2VuFe7mnjlGxfPddLVVs4uXZEPc/D1Ix4d5WslV0b0qanYSE
BNG/DgWGyZMnK3tRmp23R8C9t/e7//5rHtwvX277+eXFiHtcyYIFPOu+jhcu
5OsdHfkQ+86dObUR8mO5ZUue87ZdO058LMNNm3L0g+mff877/9esyUfwId5/
7z2OeFgk2MmVK7mHf+oDfLurzHeax+SWk6XbOpmX9lWx20yZ57qoWF4YcJ2t
YjnuV/4o89gpKnb3lHnUNBWv6imzf1eZCfemyFa4NyXNDuh86NAhrNmzZw+2
NHhflGYnYysD4B58f/r0dYB/7hzPrjNpEg/JDXrOHJ7fvkEDDvRmzbgbNeLd
+QD3Dz/kbf2VKvEefQjY8+Xjie5Bc9G4by7ZXWW+szeTWyWQXCTzxAkqlp9a
3lIAL+8ts+ructzL6yVUn5v8xkd7qPhAY5mX9JOZcG+KbNgz37g0O0maARHY
fsSIETNmzBCxv74ozU7Glj3iPiaGRUS89r17PB3ud98lN8Q3b84D9s2b2e3b
hn3rFvvzT97uMHo07ycg7OTE2rfnvf7KlmXlyvE+fsB9gQKsWDG+BrF8/vxm
I77d4d6iVdYmWrUtYHsbmVWPL8f9lvYyTxmrYhPv3ZRWDMK9KbL5uPtnz55F
RETorNQZdx8TE3P//n2dbaKiouRD5lMamK+zV7rNxkO4l8jucB8Wxie+AaxX
rOBeuZJH6wD3mjXs9GnuI0d4df3s2XxNSl66lHfkA9xr1eLV9Z99xkfxA+ti
qL5wnjy8Px6ie5GrB8vmEuFe2yt6qdi2xQnqqpdWEe4lbpnPN60217h7ofPn
zzs7O6f1frX3On36tJub27Bhw7Zv3278E7SYCPfaSkhIjI2Nj4tL9qNHt+fO
Tde4x5GB+KdPk6fOAc2HD+fxuKcnH3SPnyNG8F7669ezwEDu8+c5zfv1S+6f
r+8ff+ThP0AvaukBdDh79uTcelmyGNPZnnBvtC9XUbF898X9VSwPwE3Evbzb
gM2ZTri3kGyFe1PG3Sdp6gScnJwcHR1Tui/9cfc6e0VFRWH5+vXr4eHhuBLR
PSBdiXAvlJiY8OjR3W3btm3ZsvE/b161asGoUQVSmonG5riPiUlui1+8mHvJ
Ep4nH4hHFH/3brKvXOGd5/v3Z66uyR48mDMduO/e3bC7dePV/nXr8hr7YsWS
XbQor7FPUxRv3Nh8u8P9+ElMbjlZRkyX2WukiuVd6XquUrHfTzLLrw2W4362
q8xfH1dxvyUyD/pZxfLChrybH+HeFNkK96aMu0fIjw22bt0KXqd0X/rj7nX2
QnHCy8sLm2FBFCfM/3BNE+Fe6NWrqEOHlnbs+KGra4Vhw7ixMGRI6Z9+ympb
3MfF8SF1f/7Jzp7V9f79fCocxO+zZiUbgTxwf/kye/Ik2bh4FAm2bWNbtiQb
yxs3Jlfyu7sbMMoM+BXKA82b8275sJgRDwUAcF9MhYOfcppLhtplMNzLh66r
jl6XR9/yJDywfPc5Q1V8qarMJuL+x5UypyKDkEyqnRhHesksH8RHuDdFtsK9
KePud+3atXDhwrCwMB3cy8fd6+x15MgRXI+vr+/SpUuxWWxsrGUfdNpFuBeK
jn6xZ8+sRYv4FDOKgdRp03jGWnPhHgtp3fHGDd7a7uSkC2UQGSv79OHD5O/f
50ap4MAB3jEP4fyyZbzSHhYLuC8/v2Rjefp03vXuyy95x/umTd/wt9+yL77g
DfcVKvDkul9/nTxlHhZq1mTvvssz6ohUexaqz7c73A9cyOSW437aKJmX9VGx
x2iZT3ylYnnH++EzVCzHvbz3+5ipKpZH9/JherC8WkP+JyPcmyLr4F4/zY7R
4+5v376N42DfgIAAfNTOqicZd//48WOdvXA0bCC67Xl6ep45c8Zajzy1ItwL
RUdH7ts3e/v2N2j79ClPMmOWtvsLFzh54+PTsNerV+yPPzjTEbPv2MF++42d
OPHav//OM+QPH85cXHgz/dSp3PjYtu0b09rWqcOHxsOAOCyGyYPmJUrwHvUf
ffR6enq4cmU+2q5QIR6/i0F2efK8du7cfKWSMc9Csjvct9/C5JbjXs4d3yEq
lg9dl48uh1vslll12L4c96fqyJyKnvkyqZYW5JY/N8K9KbJVdG/0uPsHDx6I
8fKHDx9GyC9a//WlM+4+MjJSZy/ReeD58+fR0dFubm5p/R6zggj3QgL3W7e+
AdzQUB4pm477hAT211+8C5yjIxs2LFV2c+Mb9+jBJ7kbO5ZDX0xhr3jcOF6N
37w5b2HXToOPj++9l/yzeHGO9dKlk12mDP+YPz8Pz8Fu/BQZ8kUyHGEAXZkI
zyayO9y32snkluNeTvON36tYXjmgWlpwmSuzak8/Oe7nO8isOqhfjnvVrHqd
N8j83S8yE+5NkQ175hs97l4IpJb0zE9p3L32Xrt27cIxhw4dumbNmnQ4DS7h
Xgi4P3hwroVwDz96xBPS+vryzHWp9Ny5PON9hw68I/3//ser0/WN4P2TT3hH
+k8/TY7i4QoVeA4ccBzsxs+CBfkYOuG8eXl4DqCL+F0spyvZHe5Vm9dNqcyX
14fDGzrLrNo+Lk+zoxqAy3EvLyqo5smR416engiWpzqUN1IQ7k2RDXEv9Eoj
+UUiQg8PD0/rraVmQH1sbGxMTExaj2wdsbcP93Fxcdev3wwKuqH4ypUbFy5c
XrFi9JYtlsJ9fDyfuBYHTL1RQjh9mueinz6d/4QnT9Y1Vk6dyrPkDRzIu9O3
b5/cKP/++8nd6fETMb62332XG2F+qVJ8ilsUBkT9PAoA2jZjorw0iXLm25Ft
OO5+bzMVm3Jwwr0psjnuX7x4oQ9cnTQ7gDKicrPcr04ZIN3m2El6+3D/6tWL
gwfn9+zZZsSIVsOGKW7t6vpdz55VNm2yFO51HBnJO8zv388OHkzRhw6xX37h
I+wWLOA1+c2asRYtDLt5c97FDhu0bMmXxRT2VauyatW4sSCWq1fnDfRgvYj0
RcIchP9iND34LoyPYo0VprvVl91F90N8mdxyssiHwk0foeLVPWQ+/rWK5WPl
ZrqpWI57eWX71nYqlkf38huH5znJLK+QsSjuEzMxxYR7bbcovT6tNleanceP
H7v9p7Vr16byTsPDw318fJydnefPny/qCvbv349j4iAnTpww5zM1k9423EdF
ha5Z08XTM+eRIzkPH37tfftyzp6dTT+69/HhUbl5WY9I/8IF3jQ/Zoy63d3Z
yJE8Zgea33uPh+Q6xkoE6VgoV45bNNnruEgR3gEPBuVz5Xo9Ta0YUie63mmT
3Wqz2+vL7qJ71aHxctyrVtfLLW/Z93FUsbygolrYkONe3h1Onr9Xk8JXJvkM
OHBAJ5l/aSkz4d4U2Qr3pqTZOXPmzOzZs8M0ioqKMnhf+ml2xEA8HGfRokW7
d+8ODQ11cnLCEXAKBwcHGndvc0VGPlm3rv2ePSw6+g2HhbHdu5l+2/3QoXzI
uZjX1Szu3JnXurdpwzkO6KfG58/zdHnag+n0jfC/Wzd+qfXqvY7otV2zJm/l
r1SJN+sD7iKEN2jL9bpPjewuut/Rmsktx/3kcTLLY394ZyuZf/JTsXwcn4nj
7jtukll+47Ac96pFEXnuo6FzZCbcmyJb4d6UNDtbt24FuA8fPnzr1q2U7ks/
zc6OHTu8vb0fP36MogXOjqPdu3cvISHhjz/+wCni4uIs8HRNUnrAfVhY+K1b
t2/f/tvS/vvv4KCgS76+TQ8f1o24Qfz9+3Vx/+oVO3OGBQS8zlFjunGKDRvY
xIl84jnt7Ddy4xpWrkzOhK9jrF+6lHfd792bD8TDwsCB+Bp5w1gzeDCvT0BJ
o0yZ5BF2OXLIyC5S5ioWlfxWCPNbtmxpX7i3eQO6DW3RtvsrlWU28eDyboSE
e1NkK9ybkmZn6dKliO5RKpg0aRJ2VPaSp9m5ceMGDoI1+AmAiZU4NWL8xYsX
U3Svp4SYmLPjxzf64Yev+/a1guv16lW3Xbsihw4ZwP2+fbq4T9IMmX/5Urcq
wERHRvKYHd8548al7TsK2+tYDMobPZpPRg/cT5/O8wJ5er42Pg4axDvv1ajB
o/uPP05uuxcV+4B+3ry82x7KAKVL8+F7YgSfcMmS3MWKJdf/o3igtOzr21yy
u+heNQSW/01nDJdZ3m8fXjhQ5mP1VNxmu8yqAbgc9/KOASZG96q5i+VTAcrz
CVgU9/FZmGLCvdG4N2OaHe0+e/jyGTZsmPJRkmYH8vDwOHr0KBZOnDgxefLk
JE2HwCRNP0BsqZQu0o9sjfv4ly/3ubpmOXIk85kz1vDx41lmzMh08KBh3G/a
xBvW4+JMtThITEyKfv6cp8u7fPkNX7qku0YxigcHDvCOBGJWem/v5Cy4rVvz
kXrt2/PuebVr86F59erpumrV5LnpxZQ3SsO9aLWHQfN33kl27txvWHskvsFm
fbPL7nBvYlY91d3Ts+W4d5sps80vXmKL4v5VdqaYcG/G6N7oNDvAvbe3t5ih
fvfu3fPnzzd4XzppdiDsJbrk4aeXl9etW7dGjBgRExODggTKDDdv3rTYMzZS
1sQ9/gqRkS+jorQd8fTpL6NGcfwlJlrDL16wdeuYQdxv387b09euZatXm+o1
a3hT+08/sW++YU2apOjGjd9wo0a8g72+sR7HAdAbNuQz18OtWvGfWF+zJu9s
j/AcMXuRIqxwYR62FyyY3DFPGKwXCfGU6e20ia+DfqtV2qcku+uq12cZk1uO
e/k8L/JEsrCjj8zy3umwvB/ghIkqluPe2Vtm1YHz8moN1Sw9R+vLLM8+ZFHc
v8zFFBPuzYj7JBPS7Pz999+TJk0aPnw4ovK7d+8avC/9NDvBwcGgvLu7O8J8
0ei/YcMGEB8H0W4RSD+yGu7j4uJ27tw0dqzLpElu2h47tmOnTiwqyvyD3VIa
Aefvz4l88ya7du21g4J4dO/gwFu6gWnjPHAgrzmHxaxzVaokt3qnxiJpraCt
MsmsjrFB3ryvs9qKeFw0wcu73inW73Jv0DZUixYt7Av3qZjqRWZ5r37VDmk/
rJFZnmoGlk/uM2yWiuW4l9Nc9eD9F8ssr6uH5f32FwyW2aK4f5GHKSbcmxf3
Qkan2YmMjFTdS39ldHS0ztnTYSc9IavhHoG8u3uVtWtzbt6ca9OmZGN53boc
vXtzClsH97Gx7OhRHjLrTA0jXL++Sf7f/1jFinw0nMhnW7r063ZwiUuV4lsi
SC9blreVI0IX8bh2bltt58yZbIAe9BcRvbaxUpmqXljZRdsI85VaetsiXlt2
F93Lh5vBctx3XyuzPA8tLMd9pwAVyxPLyzPNwnLcy2kuzwcIm9h2L58aWD7e
waK4f56fKSbca7tR7f1ptXnT7BiXIUdnr0SNjDiOFcSshfsXLyKmTi336BHv
+abtZ894FXpEhKkcDwtjt26x27fVfeMGn5/OoAMDjfeFC2zXLj5ffM+eukak
L3evXtzaa/QPAov56Lt25e7YkU9207w5r47o2/e1UXZq357X8zds+Npff82L
InXqvOGqVXlvPdEHT7Tpa9cDEO5TaXmHNFiO+5P/k1n14PJx9/ubqFheUJEP
XYfluJcD18QJcFUT/DrMl/n7jTJbFPehhZhiwr15cW90mp2oqCgfHx9HR0dP
T8+QkJBU3qn+XseOHXN3dx89erR2Kv70I+vivjzgroNpEH/QIN4l/sABPhTO
OGPf8eP5ZHCdO6vbjIPotd2pE29/B459fNjs2W945kyzecYM7lmz+FA+cPzd
d1/PgCP8/vt83H2LFvxOcUnC2LJmzTdcqxaviMifnzcfKM332o37SuV/hsf9
Z1n7mWI5lTSS4V4eX4fnU7G8xlu18V3e9C+nOSzvV9DVX2bVCevlz1R1ZqIu
62WWH9yiuH9UlCkm3JsR96ak2REj6LFm27Zty5cvN3hf+ml2dPZCoQLov3//
Pq4Ep1BtULC+rIz7p091cR8Tw8n13XfJ+d6Nc5s2PM51deUDz23oH37gFfJV
qvDxbtr+8ENdKGvPUid3SjsC6yVKJGfFR5CeL1+y8+ZNbghQOtuL9n2DffN0
ovj0UKtv/bZ72+J+X1OZf/lOxfKxbKoJfuW8VsW9fDjbogEyq05YL3+mgxcw
udVGR9oM9w9KMMWEezPi3pQ0O5MnTz516tSff/4JUqfUgq+fZkdnL+B+8ODB
gYGBQUFBWEgpO58NxWyNe/j5c56X/uFD443dz53jw9MQWdvQc+caGB0/fjzP
hTtqFG+zgLEwcqQBiwKDwclwUYyBhw7VNVY6O/MovnZtXrGvbaxBkUCMlNdO
mZsz5xtz3YooPl2padOmV69eTdOrZde4l0e4qtPGyQeULeuj4sdFZVbF/cFG
MsuTDY70UrH8maremryrng1xf/89pphwbzTu9cfdm5Jmx8XFZcSIERs2bBgz
ZsyRI0eUveRpdnT2Qpjv6+vrpJGfn9/bnGZHgnuzOD6edwCwucPDUzRKNSY6
LEzXDx7w3L9Tp/IEfdreupWXPRwcXg8WEHZy4uUHUVrA8oABvK2/Vy/Wowev
mujWLblVAu7YkY/ob9eOD+1v1Yr/FAvCYjygxC1bvnZKM/voGwWVZs2+Fv+A
qZeJuG+Qa6wpNhH3BxrLrNp2L8+Cq8rrlrtkVp1T3mWuzE33ySzvowjLn6nq
+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
5i/vLbOJXfVUK/PrnJJ50M8yq/YDlONenjEAlh9cXmthUdxva8MUE+7NiHtT
0uzcuHEDH0eOHImft2/fVvaSp9kRQjHA1dVVOfjx48fT7Rh8C+D+rqtr8aZN
i3bv/oa//75It25Znj+3PXTSj9823N+4wWbP5n0Lp05lU6YkG8tubmzoUHbr
ll3iXp52Hpbjfn0XmeVp52F5pfSqnio2MbqXNzTIBx3IbxyW435dNya3PEGQ
vEeERXG/uT1TTLg3GvfmTbOD2Pzo0aNYeeLECW1Yy9PsQIjiwfrAwEBlDV5O
UauQDmUB3AePHJn5yhX26NEbvnePf88juLM5dNKPnz5lO3e+Rbhfu5b3wJ8z
hy1ZwmvvFU+fzkaPZrdv2yXu5VOxaGZjkdm/q8yqs8TKM8tpNxMbtBz3K3qp
2HeIzPKaB+06bYOW4161lCVP8iMfA2hR3Ad0YooJ92aM7k1Js+Pt7Q3QJ2lw
j5Df4H3pp9k5cuTI6NGjQ0JCEjRK0rQgDB48WHtsfrqSJXDv7p75zh0DYPLw
YG9t231kJDt/np04wX777bX37OF90Q8cMP6w6RP3//zDrl5lQUFvGCVAHx+2
YwevvcfTwJUrRlFw0SJ7rcxX7U0nx7184LzTPBXLq6yX9FOxHPduM1Us7wco
bx9XTdknx73q/LmbO8gsr1iwKO61i3OEezPiPsmENDvBwcGgvLu7O8L8W7du
GbwvnTQ7iYmJjo6OSiXDmDFjsBJhPi7AQg/WdFkI93//bQBMU6e+pbhPSOC8
c3LCfzcbMiTZDg6sXz/2449s3z7jj5wOcf/8OQ/YDY4c/OEHfqm4Zp1d7Lqr
nmrmOlPG3cvnoIHlielUa+PluFetuLhTWmZ533jV2ng57lVn65PXPMifm0Vx
b50+gTaUDXEvZHSaHdU56+1oiL1BEe6t4JgYPqjc15ddu8Zu3kz2rVvs3Dle
rZ3BonvcF0L1/fvZ6dNv+MwZNmsWv1l93OOtWLWKx/hr1tjfQDwTe+bL+5vJ
89jA8oNrZ3QxaDnuVbvDyfvGy1MAySvbYTnuPd2Z3LNdZZ4zVGaL4l67tYVw
bwncWznNjo4SNTL9OJYQ4d4KBu7Bu3XreNpbRPqKHz/OaF31fvmFDRzIW23A
7tjYNxwXx2k+fjz7+Wf+09mZ29WVDRvGMwV98w3r0oV9/TVr3PirwEB7wr0c
uOncctzb/PJsZYviflkfpphwr+1vxoSk1eZKs/P48WNfX18HB4d58+apxviK
vLy8lKQ6Y8eOTdL03MMxcQGi4196E+HeCha4B+yAe+31GaxnPgowCxZw3M+c
yfP/6G8QFMQD/7lzOeVdXHhvfCcn3qgxaBBnfdu27PPPWdOmX126dDlNL5xt
cZ+KqV6Mt2oyGXlVv+ogQRPT7Mgzz8ujb9VeiPLoXl5XD6vWHkhsUdxrj2Qk
3JsR96ak2fH391++fDlAj11SmttOP81OREQEShQ4lIeHR0BAwIsXL3Dk4ODg
GzduoOQQGRlpsWdspAj3VjBi24sXeb90C+EeBzH9Ig8cYH36sA4d2PffG+lW
rViPHrz9fdkyjnvtegwYp8DK/v3ZV19xrNepw/73P/7ziy94tvxatVi1aqxk
SdaggZ3hXjVznRzo8rZ1VeDKE9OpNnDLca/aC1Gewle+r7yyHZbjfms7Jrd8
zIIN2+4XDmSKCfdmxL0paXYQmwcFBSVpMuekNGpeP82O0O+//z5+/PjY2Fgc
QenVj4WLFy+a8amaRYR7MxpR/J49bN48HuRqG2vGj+fTvQnq6eDelKx6EREc
08Dr7du80dygL1zgY99++IEbODZoBNf47ezZbPduI40b9/dnEyey48d5tN6x
I+veXdctW4LmbNQoXtsvjFdCGMvTp7OePVnr1l/a1xQ59Y8yueW4l08To5qL
ZvgMmVUTy8tx7+ij4m1tZZbPHKQ62Z8c9+6eTG55vwJ570qL4l67CoJwbzTu
9cfdm5JmZ8OGDb6+vgC6t7e3i4uLspdqmp34+PhRo0aJI6NcsWDBArH+559/
FiP70pUI9+ZyYiJvsB4z5jXCFE+axCuuwX0d3D95wtPdm9JVLzaWnTrFQ+a+
fXk/f33jV+Bs06asWTPWpk2KBojr1uVN54jQhbEmTf7uO34KROgI2IsVYzlz
GnCOHKxQIVa1KvvkEx7O6xgrK1TAQb4RxezUy0TcN6q93xTbvKHZTi0vadi2
54BFcW+dVgMbylbRvSlpdiIjI7G9n5/fjh070pRm58yZMwjtRd+8s2fPorSg
7CgqE9KVCPfmMlCOUBqB/J077P79N4zQG8HvypW6lfmIzbGyenVWr56RBqAB
yqJFWYECKTpvXvbOO3wBqE3JBQuyXLlY9uycyEYbu2fNyrJkYZkysZSUOTPf
AJsZNH7VtGnTq1evpumFI9zbo99a3FtnCIANZSvcm5JmB5THjlgTEBCQUtu9
fpodaMWKFbt27RLLOCYu4KlGLi4uT548scDTNUmEe/PifulS9uoVj/S1HR3N
B+Lpd9UTnfNPawapmWIcXFhyKPGrs2f56L/z59X9119v2NeXR+UgsiC7weD9
m2+YoyPvae/mxvsAYPsPP2QVK3IjbM+TJ7kYAOJL1KJFC9FXNvUi3Nuj31rc
a3dgINybEfdJpqXZGTNmzOjRo2fOnPny5UuD96WTZkfIw8NDO4o/cuSIu7u7
q6vrvn37zPhIzSXCvb4BaJ1uZqn0jRt8HH1srO4BU+qZL4yVZvHLl7zr+4ED
vO+fQR85wlav5s301auzGjXSYGwPZA8ezI+A46BI4+nJpk1LtpcX74o/cSJr
3Zp3uqtZk1fLlyuXXG9QuDA3FnLlkkX9ipo3b064fxv81uJeu+sF4d68uBcy
Os1OSqDX3kv19uPi4mJjY1U3s4kI9zoOD+fztiAyBePSapAO96jTQK/gftUq
Hvgbh/LHj3lBAjxF1GzQHTsClLzTe+PGfESbwQb6du1Y/fr81mrV4v3hP//8
tfFRx9jmo494VI4IHX7vPVaiBP8Ily7Nu9DDWKO4eHEev4v6fKVKX9uplB3i
XlW2Z2s69FuLe+0Zjgj32m684HlabfY0O9rBu9EJc3T2Sj9Zdwj3Og4N5f3Y
Qee7d9Nm3PKJE8zPz0B0D8ofPcq6deMt+wsXptmLFvHwGcH1hg18dvvDhw1Y
zHo/fDhnumSsHEoC337LSwU6rlOHffopj8oV4yNKLygbfPxxMvfLlOHQL1WK
vfsu74yHgD1/fo74d97hNfnZsnGL2n5AX8dYb1D6hQE7xL1JZFEbjGZLy+eR
geW7yxPwquJePhWg/eJeO+Mi4d68uDc6zY7QqlWrAgICxLLRCXPOnz/v7Oys
fET5wdPT8+DBg8Y9TPOKcK9jXOH8+YazxMittN3HxRn4LQ4IcOObZPJkA1Zm
gzVoDw8+eK1vX16Rfvkynx3eoC9c4M33v/+u4t9+48USHc+YwVq0YI0asSZN
eP2AMD42bGigcyCMEoKyoLhaNV42aNCA76htHLNy5eTKfG2jeIDSQu7cvMCg
lAfeNty/tTYxuv+1gYpNuTaL4n7CRKaYcG9G3JuSZic6OtrPz4/PV6jBfWoS
5uhn3UnSjAF0cnJydHRU1mzZsgWHJdyby8Dry5e8O5xZDC7PnWs87hcs4JP8
hofrOiyMD7t7+NCw7959nUvfoE+e5L3gypXj3NQ3Qm/8Ci5f3hiXLctj9i+/
5MPeu3XjTQNt23JjoX795Pp8cFycCwvarlLltXGofPk4u0XIr22E/4jxRQ2A
YlHnr9OTn3CvbdU5buS7q4bn2hne9D1pvIq1M8bo20Tc72gts+qj29lKZhvi
XjtLEuHejLg3Jc3O3bt3/f39AzRK0nT5U02Yo591JyEhAWfZunUriC/WXLly
ZcyYMYsWLSLcm8UA/Y4dfDjb6tXmMWJwV1eOYCNwf/s2H18/ezZvDkilUbSY
OZP16sWR+tFHhl2pEu8pV7o0r0XXbi6HS5bkK0FSncA5TRaV6jlycEyLcFsx
VgoopzR0TrHAt+lq1qyZvQ3EM6nt/lolmXutULF8Ah3VrHryPDneziqW4/5w
Q5lTEd3LJJ9dFzYlZZ9Fca+dC4hwbzTuzZtmR2jXrl0C9yklzJFn3cHuCxcu
DAsLE7iPiIgYNWpUcHDwmjVrCPemOzGRz6L+2WfJCdhNN44zaBDr3dsY3Iuy
x7ZtvLM6CJ5Kz5rFt+/b9412c4P+9FPDrl2b96yrUyc5La3ITGucEeDrN+sb
51KleCHBoFAq+OADA3UUVaqw999njRvXv3zZvtLsmIT7fU1l7rJexbtbyCyf
1R2+UEPmX75T8cQJMstnnDcR96o5eOU9B2yIe+3UgoR7M0b3pqTZEdsouE8p
YY4k687jx4+xjAvAEXDMffv2rVy5cuLEiTt27EDRAjuC+5Z/9iqya9wjoL5+
nbd9g7Pm8qNHRrbdC8fF8X74aXJ0ND8vno9tHRrK5+cVY/NNNA7Svz9vtW/R
Qjf5XrNm/Ccwt3Qpz66/fPlrr17Ni1vt21s7Z75tcb+lvcynP1Px+ZoyH2yk
YvkMO2u7q1he1S+veTAR9x02M7nlE/TYEPfaD4Fwb0bcm5JmR2yj4D41CXN0
su5ERkae0ujw4cODBw8+d+7ctWvXxJpZs2YtWbJEv6Hf+rIm7j09eSu2eaP7
W7d4ilozHhMFEl9fPvDNONbfv5/mLv3Cd+6wS5fYH38Y6VOneOJ6MNTPj/fk
1zbWqHrJEjZ2LM+j+957vA9A2bKvLXoFpMllyvC2iWXLDPQJhL29eR+/atUM
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
r1mzZsiQITjIypUrY/y72gFH2H1ISGR9sjW6fJke+DZX5scLwcvOn6fp4eQ8
cfYVyksTJkQKb82F9d7elPGvdm3qiKjWl1/SwH+E3sbpfdq2pUi8QgUaNdmq
FUmWAdq0IaFgYJtwnLJlxeef06x5H38sqlQp61Z2P+9bldThM/RnUZXUg/qh
HjNVGjRWR+qqCfWVf/mLjmJo9+ohD060++y3hCa2e/vaveTp06f+/v4mK03G
3SPovn37tsk2JuPuEZUHBwcrvqnFgfkmK2VVg+IgsYkj7D5aiklXvdjUmzeU
R/ePP2ggnqZTp2hinU6dKN2NlhLHoooXpzleq1WjegzZz81maf3lpL79lirD
8+enWXUKFiQVLkz66COSTMIDFS1KiXk9PGiAnhyplyIFLVuU7PafNu074wu8
vKhDnUzNZ3GMgM2S4/3lazzsmR8ju/+5qUpLW+lInVnOe5qOOs1XacxgHant
vv8EldRV/VAM7d544jlzOdHus9wVmtjujXX4SXh05bhx9+ERJYRx48bt2rXL
yi/+5MmTSZMm9ejRA6eW098cOXIEp8D17Nu3L4a/ql1guze/nufPxa5dlOhv
61bStm00tH/AAPG//9FweMS2Ulhu3pwWihSh4Ne4j7q5unWj9LbwZTh+lSq2
SE6Wh2soVoyM23hi3GzZyI7ffz8yeT6cWmbPMxb81HjUnu4IPqdMqxf74+4b
bHgTEzm0zxjLKXKo3Xs9EJrY7u1o93Ycdy9Zv3491kRl9+bj7mVfQRx2xowZ
27Ztg+PjRNevX798+XL37t0DAgLs/1tHExFn7D4gQGfLkBDx11/i6FFx7Jij
dPw4ZcUZOJDS2MqBYxCC9/btqRIby7hOWX8uB77BweG8cNtcuUTu3CphA5kl
z1wyw61MdRuVpH3LnDnGee+1oNg8OV48JfanyGG7Z5nIoXaf4bHQxHZvR7u3
47h7cOHChcGDB8+fPz8quzcfd3/v3j14Olx+3Lhx27dvP3/+/Pjx4+VHWPjr
r7/s+zvbgIgDdn//PsXOGzdSEK2Yo3bqVGrhbdCAGqAdpPr1Rd26FIOvWiVO
nyb3lzpxQqxdS9Xm2pw1EJbLlLGQe9YGafPemuS2NZ7LBkSV8NY4+o6zU91Z
Cds9y+lyqN2nfSo0sd3b0e7tOO7e39/fx8cHgfmyZcuM7V497h48e/ZsyJAh
iOWvXbuGYsbs2bPl+jlz5kQ3Ga8jEM62eygoiFLKtGxJSVeiEry1Vi2qP58z
h4Zpx1DTphlS1kyZ8o7kmjZtKBjPl48axDUhQkcUnzUrvWrSZqKxKHyaI4ch
262saZez1spwHgF76tSG/LcmKXBlq7p5y7hJrntzr4+KeOT+sPtYbrtnu7dZ
uyur5PTLs1kOtftUL4Qma04U1QQrcWfiFRNix+7N0+zYcdz94sWLR4wYsXnz
ZpQKpk2bBt+XGyjG3YdH9AqQfxSUOkaNGnXy5Mnp06drO8q6Beci4oDdh0d0
hFNPUBsQQHPS4T+xd29K9RZD4SAoP8gO4SaS088Zzzpns4oXt2WXTz+lgoSH
R2QxQCbARxlA2r2xNOs3X2lehxAvov7Yb7u3YdpNYx35XKildhb1hPVdZ7us
ho3U0fReKunm81f/sOoSmkPtPmWA0KR7onXr1vXt23fw4MEwKeP1CF0RVw4d
OlQzEbhPnwiw4KCLtxJnRfd2HHePR5AcRD958uQff/zRPDd+uNm4+/AIT//9
99+xsG3bNpwOp8D1+EXg7e39+PFjR/3iViPiht1bXw9gw0w65nr2jKrrv/mG
Rv3PmuU0zZxJ4+NGjaJuAFJjxlAem6ZNqcghu/SXKEHd7D/8kJbLlKEiCl4h
OR8uhBKCLCQUKkS1EHnzUtVEliyRlQxyDtx06ahfvZxEL2lSMlbznnhxoSGg
du3a8cvunR6KsmyQE+3+vUChSX0i+NfIkSMRhB44cGDChAna+itXrgwcODAo
KAhR55AhQ8IjAlU4S2AE5nO/xjJO7Jlvx3H3EpPKfGPMx93jz4GT9u/ff+LE
ibICYc+ePfhL9e7de/v27fb4aWNK/LJ7ewllhg0bxKZNsZop11x374oFC2hs
nfncvjJHvTWS1R1t2pDXm1Tvyy58MuRPkoRM/5NPqGM/ygDGUb8JzrX7WrVq
sd2zHC0n2n2SYKFJfaJffvkF8WZ4RCAJe9Imalm/fv2mTZv++uuva9euSXOX
BYPDhw9jpc2ztNsLk/9H6/89TXzcBruXvIlAfZH4lV68eBHDb2rxpzaZCgd/
NfXg/dhEuKXdv3pFdr95s8NP9PYt5Y3/4w8LowCOHBGrV9MAPV9fWvj5Z8ta
u1Zf69ZRsaFLF+pn2KCBQfXri0qVKOovXJhm0c2alcL8FCkMPfyNh9jLXgHa
3LiyycBZs96z3bNiQU60+4RvhSbjE8EmnhgBH1+yZMn+/fvlp3369Hn69Klc
XrhwIQJGxKHTpk1btGhReMT47tGjR2Pj+fPnT5kyxUEXbyVOt3smKhxn92Fh
NHQuNDQuKiCALDIW7P7ZM+pbmCePIemNiT78kEbuI8bXppgx1pMnAr8zigon
TugLm505Q4mANP35p1i+nGbHk4G/7BMIHzdBTq0ruwhq0koF+Mh8F4fClfms
WJAT7d4E7SPZXVzj3Llza9as0WqSe/TooQWJS5cuXb58eXhEGIv1xgO6EUti
jXFf8djH/Ds6FCd+03iHg+ze318sW0azuC5cGOf0008UC/fqReP+HG33Dx9S
ueL4ccufXrlCGXhwJdp0tMbq148GI8SE7NkNc9C8/75drDg2iHdd9ZzuXCwb
5Cy7jxYnTpxA/B4aGor/iOHDh799+1Z2Kjtw4MD06dPDwsIePHgAc4fF79mz
R6aUuXPnTt++fZ1en8/ETYRj7B4GV7w4ZaGRydXjmhBTV6tG6fIcbfeI0Ddu
FPv3W/40IIAmiJk3j8YhmgglJawfOpRmpdHy+JmoWTPRpAmlC6hbN1IVKtCY
wcyZqfY+UybDWL8MGai9Xg4DlJJvZXZchPNxh9gfd89274aKF3YP1161apWc
Y+Xy5csw927duoVHdDabO3fu0KFD4ezHjh0Lj0gKN2PGDBQJevXqJXPLMIw5
wjF2D4NDdO9oM7VZgYHk9VplflgYtbCvXGmI/e2oadMoco/K7q2RbBMxV2go
pR3+/XeadmfiRMPkOJMmUWcAlGfGjhWzZ+uMC5DX1rUrtfKjbFasGEkbD6hQ
iRLUDJEuHTX9ywp/8/wAWh8A4yy+JqMIzQcPgkqVKkV3pki2e1Z0FS/sXhIU
FGRxiD0s3iSKN1/DMMY4yO4RtCI+dbqtRyWTrnpv3pBvwsXsnqavZk3RuLHY
ty96lyd9HPYtM/9Y1PTpNHCvYUPK1W880R7svksX6jCwapVYsSJKoWwzfz61
F3zzDTk+DiKF3Tt21Kkbad2aZs3LmZOSA3h60quxtDRBWuu/XDCX+fQ6CRKI
L76I7QlwY2z3MZoih+UUxSO7Zxh74c52v3274W1QEAXga9fa/0RPntBwPxwc
QTp+NMTUcnC9QtgALtymDVXmr1un0sKFlG8Qjo+NtSnpa9emanwrSZiQTFbz
X9lR37n59qtWrRrLWfXY7t1QbPexxvPnz80nhdfdJe4MXnMlhFva/evX1NZQ
tSoNWvf2pqi2eXOqe7f7ibSueqGh9Ao7Rsw+dqyO+vQhHz90iEoI//5rWVeu
UEGiUiVDCh1NGTJQjp3s2U2FMgBC76jQBuAjvpZD9Z01+p4H4rFiQWz3scD2
7dv79+/fu3fvbt26rVixQssboODKlSs+Pj5du3bt0qXLokWL2PTti3BLu4f5
Xr0qZswwaNo06h7v62v/Ez17JubOpZHvJUqIcuXE5MlUUe/vb1n4SOYMxM8L
00fY3qGDhbkD5DQ9KDnA67Nls5CqVzavlyr1jkqWpMuQ2ftTpzY0lGuYzLDj
xACfu+qxYkFs947myJEjAwYMuHv3Lpb9/PwGDhx49OhR3b2mTp26YcOG0NDQ
p0+f9unTR05Xx9gL4ZZ2LwVjDQigiv2nT2lQ3po1DjmLn584eFDs2CF++EGM
GEGB+cWLFvTPPxT+L1liyOs7dCi1oXfqZCp4fcuWNOSheXNDIp1q1aiaAq9S
1atT5/y8eQ2T6iLYN5ZMooswX3aoi4Pz5PJAPFYsiO3e0YwdOxaOr729dOnS
1atXdfeaMmWKr6+vTGiP7e/du+fAS3Q/hBvbvbHvr18vvvySerjNnGlZMGvr
Bb+ePZuMG8Lv4OtLLQVDhlDee3hxVEJUnilTpE17eVmW5t3YTJtQTw64k/L0
JCs3J66lx7cI2z0rFsR271AQnnfu3FmG9leuXJHT0Rq7f1T4+fktWLDgu+++
69+//8qVKwMDAx1/sW6EYLuP0KNH4vvv35mtxlhYP3iw6NuXOtFZoz59xNdf
i48/NqhwYbLp5MnfsVeLE987EVmH7/R4nyvzWbEgtntHM2TIkNOnT4dHZP45
dOjQ0qVLp06dqt4lODj4+PHjYRHcunULkf6KFSti5WLdBRHf7D40lDq6jxlD
7mxHjRtHg9B9fCyrc2fKXaPZt66KFBEFC1JjfdOmlAnnq68oJU7LliQUA+rX
pzZ32KtiHLqJEK0nShTpyFFJMcmdNbF8XAj2ObpnxYLY7h3Nb7/95uPj8++/
/8K7/f39fX19de3+7du3/fr127VrV2hoaEhIyE8//SRzBTP2QsQ3u3/1inqp
4R/WYhgeEykGx/XqRcPJ5TBzaySHn0PGK2WtO4RPTXrKMRoVKlQ4d+5ctO5h
tntWdMV2Hwvs2LFj8ODBXSP44YcfrGmIR/FgyJAhXbp0wS6I7mM+aR1jjIhv
dv/6NY2ew2tszlQbGCju3xe3bonbt6MhbB/vdPOmVcINoBa2uXJFLF4sxo+3
qnalTRuaCLhJE1GnTrxLs+N882JFV2z3sUZAQEB0x91jFzmxL2NfbLD7YcPq
XbhAfdqj0suX1BHdGrsPC6PK+bdvoyEcv08f2ssRZYl4KvyMQUGGQXzmwvpX
r1R/L+2vdukS5RbeuJFG9EelzZspH1HfvjQcoHr1KFWjBo3+++ADyvlvnAXI
or7+mqbymTSJxiN89RXbPcvhYrtn3BAb7H7kyLpp09IcKwp5elLvdLVJhYTQ
CDW1uZgIG69ZQ4PRYHBON9m4o9u3xbff0ii8OnVMVa+eKF+eEu/IGe3VSpaM
/nDp0tF4PWMZp/GRSpnSsL1aFvPkqzsEcmU+KxbEds+4ITbYfXh4x/DwHGod
PpxBHd3Dr2/doi5tX31FVbjWq359sjCnO6wNQpRtfW259bp2TezaRUMI9+4V
hw9TLj4TYf2yZRQ7T5xI0hbMheC6WzcqOXTuTK8QSlatWlH0baJmzSgLEP4W
COQrVxb/+59VqliRBht+8gn1ZkSZ0MODejLIzL2y8BA/c+Y737xY0RXbPeOG
2GT3+hw4sFXX7m/cEMOG2WKa/fs7vDL/1StDA7S9dPEiVXdkyyY++oimk4u5
cBwI5SUs49XXl2pL1F8Kv3lwMFX7R6XAQMo4dP++Qbdviz17qFFm7lxDDgFN
cpbe6dNFlSo0BqFQIRIW1MqZk36BL76gCgdcfKlSNHghRw5Dt0ZYP0y/XLly
HN2zHC22e8YNcZjdr7PG7gcNssXu+/XTOew//1jOXGel/vqLkuR8+aUheV0M
hYNAjRvTAeH4xn4aE8GLL12ib3r+PLWnjxlDLR1bt1rWr7+SFi2iH7xnTxpo
YC5vbwrqYcFp0lACH5nDJ0kSir7N6/PlBthSjhDUpq+NOfFwIB5PkRP/xHbP
uCHxzu4Rd7dtS10Bd+2yoC1bqJNYgwbUQ8xm1a9PEeiwYZQKT4axtglRMIoN
U6ZQqvxx48j6Yabt2+v0W4PatFEJXx/b4CIRL+fKJfLkoQA5WTL7uK3TqV27
dnyze+ebFyu6Yrtn3BAR3+we0X3XrqaTwmgqVowsdepUclibNX48lRkQw+bM
SU4aEyEE1pCTzTkOdZIcmaInLiTSUcNZ9VixILZ7xg0R8c3u1Xrzhry+Tx9q
37dZAwaQevcW330XU/XtS6nyBw8m4csOHEjCweWJZLpdKXk6Wa/esyfNydu9
O3Wcg1C86dLlHXXuHCnZp85EJhPryJUtWlBbOQpFZcuKMmXE559bVunSkXPn
qZU5s6mwMksW2jdDBpEihS0peWH38W2+e+ebFyu6Yrtn3BAXs3uWQteuiZUr
qSn/wgVq8Vdo716xfDl1/9PV4sWmWrqU9p07V4wcSZP6tWtHffKLF6dSBISF
YsVE0aLUVQ+FioIFRb58NH9frlyGypBq1SpfuHA+Wjebc+1+6Cihltp3dHdn
OUJs94wbwnbvPrp4UaxbJ/7+O7bPu2ULZUs4c4YuAGc/dYqm+j14kAoVO3dS
8WPzZpqRcPVqquVo2LAsD8RjxVzLW6rEds+4IWz37iO47dq14uzZ2D4v3By2
/uKF/pa7dom2bb84e5btnhVT+bZVie2ecUPY7t1H166R89rd7g8fNgxAmDrV
gqZNo84D69bp2/2jR9S7oGpVTrPDIu2urFIMD852z7ghbPfxSKGh4o8/KJ1d
qVKGpnDrhV0++YQa08+cseclvXxJ6fgGDKBH6IgRFjR6NA0bXLNG3+5RGqlW
TVSp8sW5c2z3LDGni0q6u6tLC2z3jBviILvfv3/dsmU6j/cnT6i/utM9NB4p
MFDs20epbrdts0Xz54sZM+wc3fv5iR9+ECdPiocPLQsx++LFlORHbfdBQTRO
4eOPRY0aX5w/H7/sntPsxEVtraUS2z3jhjjI7o8fX4eIsl49ynhjUfXrU/7V
nj2d76HxSK9fiyNHKFK2bffLl8WGDXa2e1zSokVCPSEyTrpnj/D3f2fl8+fi
8WMq8j19Ku7epTuhdm1Krlu/fryze+dbG8tc5z5Uie2ecUMcZPevX69COLl2
LTXaRqXZs1XpcFnmQgiMOPrnn23c3fquejDxJUsMsxHhNSqh2Fa9Ok1y9M8/
qqPhUL16UcX+uHGk8eNF06ZU2KtYkVSunChZkobgZclC2XorVeKc+W6h2V11
NKubSrrHP1VMJbZ7xg1xkN2HhweEhl4LCYlSwcHXrl49OGiQp9M9NG4qOJhS
9w8bRs3iPj4G9e5NOXaWLrXxmHIg3rlz+lveukUePWcOde1TzEe8ZQtdzODB
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
YSQ22z08t2nTpqv/A7vonqtJkyY4mvYW/gWf2rVrFyLonDlz7tu3LzzCl81L
DsZ2v2zZMpMNzO0eofrJkyeN11g8rMULCI+w+6tXr1q8hrlz56q99cqVK7B4
uLN8a9HuS5cubVzLYf4Vdu/enSdPHvODHzt2rF+/flmyZOnZs6fx+kaNGiku
iWHcGbZ7hpHYbPd9+/YtWLCg9DK8vXPnju65YJfauV6+fInjXL9+Hcv79+/3
9PRU2z0cLSgo6NWrV2XKlMGpjT81t3sURRYsWBAe0ZMtLCzM4mGjuoDwKOz+
4sWL77//ftGiRVE8UHxH/FwI/7ds2YJTT5w4Eaewwe4vXLiQLFky2Y4gC0go
RWjt9Tg4PsUfQr7FF2zWrJnikhjGnWG7ZxgJjEOzIY2dO3fCyuWyZvczZswY
NWoUXEy+ff36devWrRMnTpw3b97MmTMbd3WLCviU7CMnadOmTZo0abB7nTp1
ihQpIt1248aNxYoVM9kRdl+5cmUvLy84adWqVWXLuwa80qTEsnr16hQpUuAr
wKDlt7N4WIsXAPClzO0eNG7cuECBArL8oAC/koeHR/r06RGD586dW5YosMbY
7k1+LvOv0LJlS5RAcLqSJUvi7alTpypWrIivg5IMNp40aZK25aVLl4YNG6a+
JIZxW9juGcYuBAYGIgjVdUAJwvPmzZsbr3n06BGibOvPhe2t3xg+izOqN7P+
AvAdK1WqhDKPNRsHBATIEQEx4fHjx3fv3jX+bd+8eXPnzh2tpUAycOBA2YWP
YRhz2O4ZxinMmTPn2LFjzr6KaDN//vwaNWoULlw45iZuX54/f96rVy9nXwXD
xF3Y7hnGKSAyvXfvnrOvItrMmjULBZUXL144+0JM8ff3f/r0qbOvgmHiLmz3
DMMwDOPysN0zDMMwjMvDds8wDMMwLo9Fu2cYhmEYxsVwSjGDYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYZi4iZ+fn92PGRIS
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
jLksfi8F5nZvfkyLjoNSR4sWLeRDACu1Qgh+efxEuH48N6I6qXvaPX4Z/Cz4
AyHoxsoffvhh9X/IMNzY7rEZHndYQAkWt65caWL3MmbX2LFjR9asWbW39erV
GzNmTHhE70o8Y1FkRaEXd6a2Aez+6tWrxkeArefPn3/ZsmVY7+3tLe86tns3
wWJlflT3qsVbBezevTtPnjzGh5V2jwgOdw4Ortk9gi/cWrt27UK4lDNnTvmM
NX7+4DGiFS2Y+AsiR/zRtfZ6xDua3WuuoYEn5JEjR+QyypyynIDNVq5cKVda
tHt566IwiWAne/bsCD9bt26Np2XixInv3bsnt0G0jidhqVKlcN/K4Do8Ir7G
TY4iKwJq3IpRXQBKLChyRPUFTeze4o0dbulfw/hba3bfoUMH/EPJ5aCgIBQY
Ll++HP7uv0bp0qVXrVql+F5RobB77ZgWHQcPf/xK2kNA85FXr14VLlw4derU
WBnVSd3Q7p88eYLyHoqOz549Cw0Nxd8dpTh8im3w+8s2F4t2jwJq48aNUczD
zYPfXGH3fn5++NllaxFuHvzVjh07huUyZcrgdsU9ExgYaLy9ud3XrFlT/ifi
XGXLlmW7dyss2n1U96rFWwUgwkqWLJlsG5LhhrR7+alm9/L/4vr161jev3+/
p6enZvcyTEAohAedvIGZeA0sGCW3Zs2awYxw89SvX19h93i8wNBx52Bj3Fd9
+/YNj6hexrMRtyLuhwwZMmh27+XlhVsIngh/zJ07Nw4Op06bNq02ugQWBivE
jvPnz5c3MO5APCRxaixv3rxZazGHr+GJGtUF4Cy4b5cuXRoecVfjFtWaRMPf
tfuobuxwS/8aGsZ2D89FXCbbZ1Hcld8r3JI1R/W9FFhj9xYdB79DwYIFZUcC
eJnWEwN/F5SsUKJLly7dP//8Y/Gk7mb3uFVg9LVq1dJaN/766y/c6liPZ2mR
IkVu3boVHvHTabWXsPtGjRrJLVFE9PDwyJUr1//+9z+F3YdH9NzArZIjRw7c
P7jP5coePXqglIvbBsU/WL8sxAKsNLH7NWvW4P7En1WW5TS7x02FQjLbvWtz
8+ZNi131LN6rFm8VScuWLfFRgQIFSpYsGR5RuSSfmeERDyWUQuWy7B6QN2/e
OnXq4LCa3eNceKQnSZKEQ3uXAbdWxYoV4TW4MRAvS2vbuHFjsWLFTLbEc6Z8
+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
/jtaf0Hn2v38TkIttd13mq9Sr+k6+t5Hpf4TdPTNApXUfg3V3azS+AEqdZul
o5/aq1T4vI7WNlZpbmeV2O4Zd0A+cp19FbFHWFjogwdXfH1nLV06cfnyyTZo
xYrJvr7ju3WrtW6duHJFXL6s0qlTYts2gS2nThXDhokRI1TCBr16iS+/FPXq
iaZNRbNmpObNDcJyo0aiRg1RvbqoVo1UubIoVw52SYWEUqVEiRLis89EsWIi
Tx4qFSROTOUBTXibMKFzjd0y8c7uxw0UaqntXm3HI4fpaNhIlXy+11HL5Sp1
/0FHFfeqpP5q03vpaGN9lVot1dG+Cir9WlsltnvGHZCPXGdfRewREhL4xx+r
OnbMMXdu5vnzs9imWbOydOqUau9e8fKlePFCX+fPi8mTxahRYsIEC5o4UUya
RBtAQ4aIFi3E2LFi9mzxww+RmjVLTJ9On377rfjuO+HtTerdW/TtS8Jyz56i
a1fxzTeibVtRsaLIkYPqB3LnjlSuXCJbNqoxyJhRpE8v0qQRyZI51+cNxDu7
n9FTqKW2e3WE22WOjoaPUEm3wlztmLp1C2UOq9R1tkq6NQ/Lvlap9q862lJH
JXX7C9s94w7IR66zryL2ePPm1ZEj82Cst2/bLoTtsOBBg8TChWLBAh3NmyfG
jBEDB4pdu8T+/WLfvkjt2SN27BC//io2bhRLloj588n6Yfdw7T59DJ6uqVs3
Cu0/+ojC+bJlKaLHQoUKpPLlKczHytKlKcCHs8PWEePnzx+pAgXoNW9ekTMn
NRZ4eVHTgIYTGwXind33nSTUUtu9umZA9+DqBu5+E3XUe4pKc7roKPstldQF
lZk9dDSrm0rq2nho6ncq7aqiEts94w7IR66zryL2gN0fO7YA3oqvbrOCg8XJ
k2LcOIrHEZgrhA0Qv/fvTw6+eTOZ+/btkdq0ScyZI2bMoC179BDt24tWrcT/
/ieKF6fKeU0wcQgrYdOJExsa7t97j8JzKePlpEkN1fgmLf549fAwLMjdEyWK
9Fy2e+ulW9+utvvZXVUqfVRH6uBdbXmQuueAbmmh6k6Ves5QSR28Q+r6dt22
AHVh4IfuKrHdM+6AfOQ6+ypiD2n3vr4xsnvo1SsK82/d0tfNm+LIEXrOjxpF
wbuxfHzI3D//nPryIfrOnZtCcq3WPX16kS6dQalTk1nDpuHmsPKECUnwaBNJ
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
9KF2h88/pxntixal1/z5yfFlOp2o5OHhyiUBd7P7cgdU0g2Bp/dSSbfGW123
oB6mB6mz9KiT6Op2S1D/puqWAmhRO5XY7hlGPnKdeAER0b3vihU6XhwUJGbN
cqzdm3QJgNHfvUvT20G3btFMN7q6fl1cuSLOno2czRY6cYLKAOPGGWbDgenX
qkWtAE2aUJK9YsUMc9dKyfnsjJU3L1UIJEzoXE92IPHO7mOYM1/dfv3hOR2p
0+Dots6rU/iqa+MhdRJddUFldlcdqYfGf71MR+rpANT99tnuGXdAPnKdeAGw
+z17llhp9//8Y61fh4TQxnL6+OgKex06RJUJc+eS5s0jzZ8fpX78kZr+NS1a
FClfX0rY27499eFv1Uq0aEG9+2D3HTpQAwEcv2BBatOHoWfMaEFyfcqUBmd0
SdOPd3av7uMNxWQgXoFLOlJn6VG7OaQex6c7H5+6rDKxn0q6VQfqHLy6+YHV
SX7UvQ7Y7hl3QD5ybd49JCT8339vXLp01WZdvHhl6dJJ1tg9QmOEySdPUrys
1vHjlLJ+9Ghqdp8yxRb170/d82RzvEXBu7X2+tq1aWNzlS0rypWjrvsffijK
lxf/+5+oXJmG5ONtoUIkhPOpUlFFvdY536K0mny2e4lz7V5doQ2p7X5uZ5XU
rgSpW6h1+9qpY391fA2VOKGSujrdt62O1Nc2ZrCO1DUP6qkK2O4Zd0A+cm3e
/dy5pSNGdJ80qfOkSV1sVufOlZYv17H74GDqeN+3L5n+99+rhA3GjKFMtnXr
UjM6jDu66tePOuDBrxGSW5zOpn598u4SJWjO2c8+o053cii9ibSB9niFradO
bch+nyyZBSt3W+Kd3etOvK62e7Udd56rI7Un6qbFU1+57li53P+qpLZj3cb3
njNU0i1lVd2pUq2tKrHdM+6AfOTavPuaNSX79PFYtSrlypU2avlyjyFDkulG
92Fh4uZNwxxzv/6qoy1bxNSp1CkOT1c5ns4aDRlCOXWlBg6kXLg4AtShg6na
taNZ5tOkoZp2OUud8RQ22kQ2cpS9nJRWmrucwA6vMqmOzIVrPjutqybQs0i8
s3srupyp9L2PSupEsrq5ZHWT6Krr6ntN11GOmyqpSxq66YnUbj6tl47UGXq1
ie8tiu2ecQfkI9fm3VesKLB+vXj92nb5+4utW4Wu3UvHDwqySoGBNLZu3z5D
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
AHrZ8dcd7qX54zzu+c1xaWV4fj1cilR+PVy6d990Byc+k05bXM6s+ChE6dY/
PwfjcwDtinttJWFd4MaJ+6pq4pFrxYWW4P7mzZvZ2Tk2W+aNG1sGD7YI9/n5
5H2//rryzjtmKt6owqtvvUW4tyJUD8S/ckU5c8ZYe/cqQ4cSoxctUhYuNC+8
NHeugr+lfXsaDJTzGjKE9g7eeIP68jz/PPn4jRpRO92HHiL016pFEvX5tcKr
oqCfmAOIpX6HNd3hfmF3hReP+6gPOElvzkenS9P2p7lw+vlTifidAj6uQFoz
n19YkNYE4Cv28xX/7Ir7wIGKKl3gxon7qmrikWvFhVLc5+XlrVmzvEuXD3r1
+vy77z6zRT17toQ3DbfaEhzDfb5wwTiOzkhxccqcOUpUlJnZQkYGBQBIZZqb
f/kydch1cyux149fjULxe/emxXngftKkEol7wcElpJ4MDCTiv/wyZeTBcxcu
vOiNK8L5RAC/2j9XjdlTFH1E7ukO941iFV487v1GcJK22+OT3fgqOhAf9i/N
leN3wPmKfEu6SbS5BSfp4gC/tjD/S052xb02a0MXuHHivqqaeORaceHatWt5
3GdnpwUFvThr1i3r1t22Zo1Nioq6pUcPinsvl0w6CHResYJ87eTkYl28qGzf
rgwYYI0GDlQ8PChiv3t3g/CBu3UjTIv0+XvvJdWsaWhrCz3wQPF5Xv/9L2Hd
8cFtnekO958sV3jxuOc336UF+XncSzviffozJ+nWPz/P4fMTpaF62s5xppK2
7+F35/kSPXbFvTbWURe4ER/Slv/FKvL/R8tV6MR9kfFj8vPzr5vYsmXLZLj/
Ozi43l9/URi8jbp+nRbALQnVs1A5OZRV17Rpibi4zp2V5s2VQYOUgADl++/L
IIz39ye3HXfQxtWLknpffEHx9h9/rHzwAYXZt2pF74K3btxYefFFqq7z0EPE
fdHjXjS4h3tefUx3uLexzA4fXi5dzOc9XGkfmY9XcJLuBfCB/XxkPj/Pgfj+
ttradGYV3ZoTv7BgV9yPG6qo0gVunLivqiYeufyYX3/9dezYsT/88EPAPxYY
GPjVV19p+wuYGnAfElLv5MlyoHNWlmJhqJ7lSkuj6PqYGGX/fhKO8RPgfvVV
yp7DzzLppZfIkTfbi+ebb0jiQLTgUdWjB80HOnakQIJ77iFHHsQXvrzaKrc0
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
BfC8ljaZPfo8Jz6tnp/nQF2X2iS+XgFfUd+uuC8RD6kH3DhxX1VNPHL5MdUQ
90b6+2/y1jt1KtHctnNnqq4Db/2XX5SoqGKtWUN7AfDZjcYbXduxI6Xhm1Wr
VpSF9+9/Gzrg6BHilpvucM/ni0E87vnFdmntOD42XrqYzzvv0tkCj3s+z05a
VY9P25eGJfD1Cvh6+3bFvbYngi5w48R9VTXxyOXHOCbu8/KUv/4y9K4tTfC+
161TxoyhonxGl2MCsGABFb2BJy4VnPFmzZRVqwjlqkB2f38KyG/Z0riBDgbD
SX/5ZVqEF8Lxc8/RYAgHTz9NOXdqHr2RatSo+gH5qukO9xZEmHPit7+lcwl+
cWBSP4n4wH5+PRwaP4TThjacFvSQSNs5zlTSlYdFX3Da1oyTXXGvnVDpAjcV
jHsb/3+0XIVO3BcZP8YBcV9QQKxv0oRK05TmQQu1b0+Vb3NyzDjsYWFKeLhy
5Ihy6BCnw4eVPXvIkW/QwFDsTlW9ehRL/8ADpAcfLCFxUtVDD5EwWKhmTdpt
t9D+9a/i/XqttJn4IklfjyV3dId7qZvJ477JLk7S3fN26zlJi/KFf87Jxr17
vn5vl2USdV/ISbrNwWc48qsidsW9NtZRF7hx4r6qmnjk8mOsxv2kSfbC/c2b
hOmAAGpSz+jiReX335UffjDj3QP3s2aR+49b5edLlJdHpfXPnStV8fHK0aP0
XvhUpSk2tli7dlGQ3iOP0IShbl0zqlOHVLu28thjyosvUuS/SBPAAdS/P8nT
U+nXjyr4tWxJCwgvvUSp+tp9fKMefEbb/Q6yTaA73PMdbCEe97Z0mYF43EsX
83nq8UsHEO+e84l40rJ4/Na8tMzOgCBOfNi/XXGvDa7QBW6cuK+qJh65/BgL
cX/jxt/JySnJyVeEEhPPfP997bg4e+EebJ06VT4MLDa7dy9wf+BAOXyY7Gxl
yxZup95UHTtSyH1EBC0dHDxoLHwq/MRUJDqaPnzr1kT8//2vWK++WnzcqBHt
CwhnX7j5ouCe2p5PKwcM59Md7m3sd//ZYpvE7wXwNXIhfl1CWsqGj7XjP1v7
tRLx+wjSlQf+cr78r11x//kiRZUucOPEfVU18cjlx1iC+7y8GxMmDHdz+9TT
s5uQq2vnbt3uTEiwI+6nTJEPKy1Ur1xwn5FhiB+YOVOZNInYjWNGv/5Kfv2e
Pcr69eSqd+lCqXaiDr+2rN8331AF/i++oN2KBg0MTXPMCq/Wrm1m7wC67z4q
ynfnnRTPL2rs3367YVYgIgAdJLVfd7iXxrPxuOdxzPv+EI88aSUcfjWed5Ch
Lc058V9L218k4mca0sv5XQx+QcauuNdOqHSBm+qG+7S0tOzsbKOTRhVycnNz
Tcvcma2iIzWjqwqKrEwDrDbxyOXHWIL7y5cj+va9ZfXqf69da9CKFf8eOFA5
daqScX/2rBIcbGbvPi1NmT3bJtzn5io7dpDfDSi3akUELyigdyxN164pmzdT
Vv7ChRQlGBREuG/Z0tA2F2renMICmzWjY3j0+BU0B6MBa/wEr02F8wLcYq3e
yJd3ZKdeNd3hni8VC/G4D/HkNM1FIn7BXJp3v/pDTtIetXw7P/5avggP1Gwb
p06REvGrIq02crIr7rXxCU7cOxTuY2NjQTcvLy83N7eJEydeu3YNJ48ePerv
74+Ts2fPxjQA8J03b56Li4urq6uPj8/x48cLi8rhhoSE9OvXLzg4+MKFCxZ+
saZX7dixY8iQIUOHDhW1eU0H7N27F2+KD7N9+3bb/2XFI5cfYwnuk5Ii8CjL
yytWejo5vPbbu7cQ9wkJVNbmjz9o4qHVkSO0p3/okPWfITtb2bSJ6uokJlLI
n5+fsnEjp+nTiey9e9OGu4cHZeqJSjv4tW9fgzuPCUDbtuS2i373ZgkuNuJv
uaU4Tk/XffGqG+55F3ju1xLxiwN8uhnEVwyQLg7wKQl8xb+PVkrElwCS9s/l
d/ZXdeRkV9xrF2ecuHcc3CcmJgKjBw8eLCyqoxsaGgqsFxbx7sCBAzgzYcKE
PXv2xMXFeXp6pqam5ufnR0VF4dXColr3S5YswZmIiIi5c+ea/RozMzO1ze5N
r8JcwsPD4/z58/gkeAu8o9GAtLQ0nE9ISDh58qS7u3t6erqN/7LikcuPsRD3
o0eTe6ulYUhIJeMen+fCBVobB08HDDBEuKlxbp9+StC3BfdbtijLl9PBhg2G
/DtGTZrQO+7bp8TElND+/SV+jY6mmnuAfvfu1NnHVN26URddTAnq1TNE+tWq
RUV4AH2xd++wjrxZ0x3utQ3OzIrHPb/mLI1n41vYSBPx+Lp20tkCX3Kfr6r3
ykGJ+KmI9Jvh8wKWdeFkV9xrAxicuHcc3BuROiUlZf/+/bm5uXCoxXL6jBkz
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
jfe+pbzmZwvSyQYfDsffXOqe8+se0tmCLSkJdsX9bVmKKukbRUREDBo0aNiw
YdpHbl5e3pIlS7y9vceOHXvx4kWzZ5zmNKmJRy4/plJwb53wAa5do9r48fFl
U0IChd7Nn09b/z4+Bnl7UwwAZgLduhl63tki0SwPs4gHH6RVArHOL/Tww4b9
ejj+Rtl2eom4s9p0h3sb8+6l1ONl4949791Le9TyDjifYyitk8PXyOVnGhD/
zfCTAbvi/pYcRRX/RidOnBgzZkxGRsbOnTt/+OEH9fyRI0fGjx+flZV16NAh
DDB7psIsLS0tOzu7At7o+vXrubm5FfBG1cfEI5cfoyPcq9C3Trm51I9Pqxs3
lP37KdTfFm3bRs341qwhzZxJGXxPPUXuvFEj+9tvN9/gXgTe4+COO0hiu5+R
vlYDdId7fskasiUyX+rd27gXwPv+0q3/1tGc+Kh+aQdbntfS/rn8RKUS9+7/
laeo4t9ozZo1a9euLSyqte7m5gYXXpxfunSpOI8zffv2zcnJMT1jp8+vtdjY
WLDAy8sLn23ixInXrl2z0xvFxcX5+vq6urq6uLjMmTPHCf3yMvHI5cfoDvfl
NWdIS1POnDHubGuFEhKoLP/06cqsWcqcOXTg7k4bB7VrFwv+vurpGwmO/113
0fh69SgCsE4dQ6Tf3XcXS91rqFGDJhI6WhPQHe6lbeN43PP7/lJe88np0n73
PM2l784viXtP4CTNMeQnA1Lvnl8c4OcSdsX9/ytQVGnfCF78FY3BZZ4/f/6O
HTvEqwMHDkxNTRXH4Ozo0aMBQcwHcIekpCTTM3b6/KolJiYC9AcPHiws6ikT
Gho6b948O70X5hIrV67Mz8/HN4Dv4cCBA3Z6o+pm4pHLj9E77vPyyG0vq+DX
L1xI2Xm9eyu9elkkbZMdbbedr7+mGIC6dZV331XeeYdi/555hhLuRL/7Ro3o
J0APTMOLh3terUx3uLcxVI/3r6U71Dy2pLy2cbLB477fJE7Smvn8LoY0LOGd
nZz4lQe74r60vG+Q3V9jIPjPP/+8adMm8aqHh4fq1RYUFAB5s2bN2rx5s4+P
D2hresZOn1+1iIiIuXPnqr+mpKTs37/fTu8VFBSE9xIt5k+dOuUMTigvE49c
fox+cZ+To+zdS41uZ86kFrdl0uTJVCdn1SqqjLdli1wbN1L1vPnzlQULSghz
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
/HbtqGpuixYkHLz+Ou2kN2lCEj1whYD+hg2pAl69eiSgHz/x61NP0UGdOjQB
APRVfx/HNWrQgrwT9xZa5eJ+9CiFly2R+dKedOOGcpJmq/Fb/9I0QL7JrC11
7SD+k0v7DvNZ+W02cHLi3mnVwcQjlx9TXnv3Fy6c++ijuwMClAkTrBFc9Q4d
lJkzqYW9VGFhlPTn4qLExSl//WWso0eVlStpgJEGDqSguFatShS7U0vetW1L
xBfC8bvvUrqBQDxwr83rB/EhtWzOK69QaP3ttxfn32lb4oqteS3r1bq4VSb8
njHd4V6arcbjnnfPpf4177xLW9zyn7ztLxLxq/F8UkDnCIn4cv3SFjl8IR0n
7p3mNPHI5ceUF+4zM8/OnUtPPD+/MmvMGMIxwApMR0TItXw5BciBwu3bkxdv
qo4dDUvxWuH8E08Y8uAeesggs6n0+Hn//YYleuGqi043Rh1wxKs4ALgtMaNC
uKLrfdU23eHegmKwnHgnVOoC84VuvveVaOVHnKQtcvi0fT5s4K29EvGB/dKF
i2AvTnwCoxP3TqsOJh65/Jjywn1hYXZm5s7Ll7clJ1ujxMR1gYH39u1rSFuT
Cq59164UR2e5MAeA546roE8/VT7+WOnUicLwOnQw9Ltp2VJp1oz8+iZNyLUX
7vyrrxqy6Rs1MlTeE+v2tWvT5OGxxwyVdkTivGiKB5SLYPs77iB/H8ciDl9t
c6Nu6Du9e1PTdc18fjV+iptEPM2H+0vEbyVIF/N58XH7DY9JxH+n0qwB2Q6L
s2a+06q7iUcuP6b8cG+j3bx27eiZMzGW69y5MuvChZikpJjLl2MuXSJdvEhn
oMTEmPPnSRhz9izdPCGBFB9POn06Ji7OoJMnY06d+u3s2aPnz/9x7twfZ8+S
EhJI8fGkuLg/jh//49ix31etiujR45tPP/2iefNW/5+98wCPourC8NhQqvTQ
a6jSQUAUBQRpIggoCAJSFOk9NCkJvSU0qSIg0nuk9yZNmlKkKB0poSeQEFL+
72TyD8tm99xNNpvNZs/7fE+eyey0nUzmu+eWc9OnT6ZPhWOmzJmpZR/Wb4yv
1wfXJxniZvcfV9weZ/1+N9IezWul8eLtfn0dTkpLXdyUEx8gQ/x4NL4wAPHh
Od+RT3lwvgPkr80V4r+4jLsXBP2Vy2+TaOzeZbhx4+b48VN79Rrs5TXUovr1
8+7Zs/9339X28fGYPDlTt25vp0//KgJ8PdeuqfTYHzF+8uTk+7rR46dRCWCW
UcdoBXCVTDsuZ/ez22m8eLv/sSOnz1cpxI/jazlPId71lJUDfFc9/uD8kH+I
nw6ArxWBPvXnxF+52L3gDuivXH4bt7L78PCI//67tXLlmlWr/OOg1avXLVu2
ZNy4Vh07pp4+Pfm0aSksavr0FL6+yZs3f+2jj6hzYK1a1DSgd/CDKlWK7u1v
qg8/pEYEfRkb58kTPV+eRQzHT/y4nN3vqKrx4u2eD89/bm2XlIME+QbuyV0U
qruOE98Tj58KEFrShJMx8b018R0F+ZoHsXvBHdBfufw2bmX3Dx7c6dGj5ief
pGnXLk2bNnFRq1ZpGjVK5uNDk/Zeu2ZZ169rV6/ScP558yjhz5w5lInXyM/v
50c9B6pXf2loAIoEEBbKln3RAzBVKor633qLfhrS6wRs7BzodFzO7td+pvHi
7X5cb058JliIj3CVo9X4woAy5X7265z4HD7Koggf+ysHRPAT9PAlDbF7wR3Q
X7n8NknA7kNDQ/ft29u+/XedVbRv/+3XX3ucPUtz48ZNQUHa9u00u72nJ3Xb
46WPzTdTzpy076efkurWJdWsSQeEuadPH93PXx+pp7fjm2bNda2E+ZoL2v2s
bzVevN3zIWr5Qwrxje/KwW58JhzlMEC+SpzPGLCurkJ8fiHlXIH87nxRQexe
cAf0Vy6/TSK3+4iIiPBwhR4+vO7nV3jUqFfnzn11zhxO06e/2rXrK+fO0Xy7
tigkxFxYCdO/d0/77z+aaTemENofOEDz6y1cGK3p0ymZT+XKlMAHQf1HH5G5
61PsFSxIo/xcpWY+Dric3dvZM5+PcJUt1HzPfOU4vvz/cFJG9/xQu3J/cOKj
b4i/p8ronrd76ZkvCPorl98mMdt9YODjXbt2btmycevWTYx++23RwIHZT59W
5+579Ijmr3nnneiMuLzKlqUEevnyUa48U+XJQ2Pu9A51pgPrzLLmGhl1THPs
mA29T6oub+Buds+HqMoabz4vvdIT+Z54SkfmcwTxs/+8GaIQf0+V8+eqch+J
3Qvujv7K5bdJtHb//Hno8uUz8ud/kezOomrVokR5devSZLXWXD48nOLxq1dJ
2GzvXm3fPrU2baIR+voQOTMlT07FAL1bHVSpUnSevQoVKPsugneE7foI/dy5
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
MMHbtez+21kaL97u6/lz6jJZId7NlX7Niy9LQLyl8gUVPniHqm/l9N5+hfiy
BF8UEbsX3AGxe4OIiIjbtwOWL1+zaNGqxYtjoalTJ/n4FHr8GLfRqiIitIcP
tZMntT//5IQNTHXokPbLL+T7vr5qoWwwcKDWooX2xRfaV19RmI+fpmrW7IWa
N6fNSpbU0qbV0qXjlD69A4Wzjxgx1LUq82tt1Hjxdj/Gi5Py4Lw+X6UQv3sP
X4XsvLxEK7F7wR0Quzd49ix4166l335bql+/Ev36lbRdXboU6t07JdzcosXD
xI8e1Y4di4s2bNC8vMgjhg2zSR07avXraw0bktfD07/+2qpQKsA2FSpo2bNb
lYcHOTJfGLBTUXbv7Vp2z8eJEG/3fAP399MVarKE03czFeKrDpRN/3wE3Xc0
pzZzFCp7hFPNTQplvs2pyk5OYveCOyB2b/D06YOVK7tNnar99Zd24kQstGkT
BeAxo/unT7V9+7SRI7WxY7UxY+IieH2rVtQWsGOHTVq0SBs6VOvbV+vdm3wf
wXuxYlrx4tEqUYLWlCr1QkWKWK1mz5dPy51b8/S03PEvvlS4sObr62Jt942X
a7x4u+dr45V+3WwhJ2XbPe/mHaYpxFfm8/v2nKBQ08Wc+Kp+KMNdTqWPcRK7
F9wBsXuDJ0/ur1rVxt+fq5O3qPPntR9+0NauJV821erV5PWTJtHCqlVx0Y8/
kt1PnPhSAz2E9TE1bZrm50f9/eApsPt69bT339eqVXuhDz7QChaksD1nzmjl
ykWeblH4NEcO2h6lAhQSHCQUQiZPdjG77zZR48XbPV9U6DVeIb7bAB/7Q52m
cvpqkUL113Dir63OeoX4foB8eA553OJU8gQnsXvBHRC7N4Ddr1zZLg52f+0a
xe9wfNN6ddjuwIFat27a/v0U+MdNly9rv/5KLg8r1wWv1z3dokaMoALG6NEU
43fqRHX7PXpEq1cvrXVrrUwZLXNmLUsWm5QxIylTJgcKxx850sUq85WV0rzd
d53EqeV8hezsa8c3JbSbrVC5Pzi1/YmTciAeX3Wg7KrH9wOUynxBELs3iLPd
h4RoZ89qu3Zpu3e/0J49Gg41aBCVBJYsiaMWLdLmz9dmzdJmz47W9Onk6Qje
+/blBHNv3pwi+ipVtKpVSVh+7z0K2GM1KB5Kntyq+E9tlLf3kDt3XMnuO/6o
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
qu2fNeul/L3TplFW/G+/pXjfVLVqUWRtljXXorJlo0b2ZMm0t97S3nwz/uXt
PcS1pshRNq/zds/XxivDc75yQJlVj2+GUO7O56Xnc+YrK/N5N1dOgMtfm2Iu
P7F7wQ1IALsPDw8/duyYv/+adet+c678/ZfOmlXLxyc+7f7ZM+3332mAGww3
bmlvoSVLtKlTKeGtaRWBcka858/p7CEhpIcPKWOAt7cFDRpEbQRmatqU6vk/
/9yqGjQgYaFOHa1YMQuz58SLcNixY71dK6seX50O8XbP71t/jUJ8xYKy6Z8v
LShn/+GnyOEPriwm8SMQlcP2+ax6RU9zErsX3IEEsPvHjx8PHdrcx6fMiBHv
OlfDhpXt0SMT7C8e7R4GjcB8+HDKkTtyZBw1YgRNXo8w3KgiCA2lifb27VML
hY39+2n0PUy8Rw8aEqhr8mSrE+P6+dHGnTtzw/O7dKFKgCZNKD9P2bKOav3X
2+7v3XMlu7ezMt+egXIQf2o70+wo6xbK/cGJH4inPDjfvK6sHMh1hZNU5gtC
Atj93bsBfftm+e8/mhTeibp1i3LX791LQ9fj0e4jozrzP36s3btnl44coTw5
RmX+lStkDT17UinCYsxuKh8fShcA+/b31x49It2+Tf389dDeYn8/Ly9q92/T
RvvmG3O1bk2dAKtWpe79iOv1UXsOUurUNBDPtSrz7cyqx/eFU5oa75h833iI
r8xXjuPjo/u+ozkpEwbyZQk7J8DlM/yI3QvuQALYfUBAwODBWWxplXa0cA1/
/63Fb9t9fOn8ebqwhw+p5ACdPEnuf/Sooueeob/+ooJBs2bUvb97d2qsb9uW
vH78eJqdBz/NNGECnQ4xPqJ4ffC+MYQf6tSJ7D5rVurjlyqVljIl/XSEcORh
w4a6lt0rB6fzds+H58pcNHx4riyK8PXtypQCvCMP9uZUfatCtTdwUnbVK3OU
E19QEbsX3IEEs/vnz51vqbD7M2cSqd2fPUtu6+dHlfCTJkVPXIuo3/avdu4c
ZdNFgI+fv/5KPt6gAdXGQ19+qTVsaN46X6cOxe/lylEuvvffj1bFirTy3Xcp
rs+b18KY/fhVrlw07t61euYrfYe3e356HaXh8i37ysZ3O9vuebvnu/kps+Dy
w/SUu1c4yIm/crF7wR0Qu08kun9fW72aGtbh9fhpavcREZRZ9+ZN7b//OF2/
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
yM+DNV9+Sd3yP/iAmuaNrPgW9emnFMhnyKClTRutNGkc23zv4+Ni4+6Veel5
u+cNV5mhl3dMZcd+vvs638AN8a3nvOHyaWwh3u7zXtR48WUwvhHEoXZ/Kbdm
SOxecCKOsHsvr7Jbtrx+/Hi0dux4vW9fRTDrCLsfPZrmu7Fxe9hr3Hrmw+7X
rCG7t32X06eplfzzz8mF4yC9/X3JEm3vXkqKG1NYv3kzFV2GDaMyz8iR1FWg
Y0cqBrRqxY241wfdo1SQOXP0RPa60qd3lFCcGDnSxbLqKevbebvn65yVHQPs
GboO8WdXZhDiG9/5kgzfqx/i7Z7PkQvxhs73UXSo3f+bTzMkdi84EUfY/bBh
JRFWG9HorVvUWp3AbfextXtmIJ4+tA26ds1cWAnvnj9f27o1Ftf2+DG1IGAX
a6PweK1cSX0SPvkkOhOORdWtS431DRpQ8UDPjIewvXp1mvT2449fyOKsuBUr
0rj7YsUSSH5+LtZ2b6fd2xnd11nPSdn7na9vVw7b55Po8vG1ctw9b/dFzmi8
PlvLyYlt9+cLaIbE7gUn4gi7Hz68pKnPIv51Xbt/8oS6tdevT6Fxs2YWBDNt
0kTbsSN2lxcebrWuXikUP86f1zZupJH7FoXQfsUKiuu7d6fhdT17Uj1/zBH3
+FKVKlGimyJFXpIx330CqFAhbeLEYa5l9/wcspA9XfV6j1OITzXDFwYgPrrn
q/ohvjae35fPaQ/xds9PeAfxzRx8u79D7f5sIc2QS9j9d+6Es292gpIAdh8Q
4MJ2j0h8yhTqiWdt+jmE29ggVtG9/YqIoKb/kBCrwmXv3EmD/ry9KaUPnN1s
zly9BqBoUapOT5dOoTRpHNVwnzKlNmzYENeqzG8/Q+Nlj90rD85XWfP99iF7
JtCB+G7//LUp57jh7Z4fFADxDQ1OrMw/XVQz5BL+4hIXGS+4zzfVEbtX2v2M
GdrJk1Z3vHcv1m339ksfpmetOWD7dppbp18/aq8fN04bNIgq82HuzZrRbHqG
mjalvnkoBljTxx/TvHgVKtAAvWTJKPdOvOv117WhQ12sq56yxpu3ez487+Gr
EB/DKjPX8VUHreYpxHeW44sKFQ8oxNt9qeMaL74pgb/tDrX7v4prhlzCX/SL
dOK/WMIoUuw+PnAru9e76sFk4+WyEbY/eqRdusTp33+1334jB//mG8oVYFEt
WmitW1OyHXypw4epbt/XNzobv5ksJu3Xt/TxodQ9jRqR43t6vjQ6L76Ew/r5
udhAvL6jNV683fM959vNVogfx6es8eY7zyvHGHpe4MTPv6McJMjbvbIkw5+d
/5M51O5PlNQMuYS/iN0nVcTuTe1+9mwLdj9zpsLuly4l3b5NnRLt1D//UOmi
dm3qZWdNn31GG+BS9b6CFoXjIK4vV46S0ufKxc1Tny2bVXl40KD7smW1d9+l
QzlCOLjLpdmxM6seH+GO660Q3/FeGUHznqgcd88fvNwfnOzMmc/nA4SU7SCM
HGr3R8tohlzCX8Tukypi94bdHzlCGWkQXD98+EKwzkmTuKlqHjzQFi2iAe9D
h9LXtEc4Qt++FJuvXk0FDLOZ7g0dPUqd8wcNohx9Zul0DOEj2H2XLtTNHnYP
07clwY6ZcueONn3HKVMmmgDXteyed3Ol7JwRz54p4yE+eFdO9sdPgMs3BNjZ
VU+5Oz+iwYl2f/hdzZBL+IvYfVJF7F6XPu4eVjt9ujZ1arR+/JG8vl077exZ
qzuGh1OuvCVLtJ9+osrzmJo/nzLdLV6sFg6CmB2Oj/PC8eHp1oTDtmyp1arF
qU4d6ngPS33rLbvkiCZ7Q8mS4SU/2LXa7nlXioKze37KuY4/KsRXSue4phBf
lhjfSyHecPnOcnw5B+LvaYk/NV72jPJzqN0frKAZcgl/cXO7DwwMDAkJMVsZ
FhYWHh5u/BoaGvrw4UOzbbABNovt3VbuZXpeO0mqdo+ge+zYWNh9RARtPHky
hdg+Pi+EILp5c8XMdHD8p08pL59F4esfPEjt+/7+Cv32G+Xj7dUrulGbb/XW
Z6TNn1/RMo4N8uWzIKyHsIHT5evrctG9XXbPd1/n56OH+IR+6e4rxNu9bw+F
+EH9/Ow8/Ix1EH9PSx/TePG9Gpxo979X0gyJ3SceRcaw+1OnTuFh6N69e6dO
nXx9fR88eKCvh/t7e3ufOHEiMsp8582b16FDh44dO3p5eZ09e9bYff78+UuX
Lo3t3Tbd69dff+39f+5EMXHixK5du/r5+d24cSOuf88XuJbdP35MQ84vXFDr
jz/IqXFq2w8Ox8fxTWvyoWvXaN4cpu3emp48ofT4//xDvfiaNqU29y++UKhR
I8qN8+GH2nvvUSU8owoVaH6ZcuWo53yNGlzvemvCjjjLu+9q5cs7U/gKU6a4
WNu9nXZfz5+TsvW85wROyq56fBbcMV4K8ZPU8MP0+CH/kJ12z5dknGj3eypr
hsTuE48iX7b769evw+iPHj2K5WfPnk2ZMgW2HklTwNyC12PL48eP49cLFy50
69bt/v37CMn9/f3x8GBlcHDwjBkzsA1j90+fPsWhTNfE3Gvw4MF//fXXgyhQ
rli4cOHixYtxohUrVsydO9f+v6wL2f2zZ9F13cpGcLxUvbwoYez9+/FQwOB7
5ltUYCClu+nfn9LY9u5NSfBs6ad3/Dhd/MCBNjX09+xJ3e+bNKHKh9jq66/J
8fPkoWS5Hh6KDnsOVZYs2tix7hXd8+Puv16gED9MT5lYnnfkIUMV4ksLfMd7
PqEfxN9Tvh8gZM/sug61+10faYbE7hOPIl+2ezNLDQgIOHz4MBb27du3ZcuW
8ePH69H9uXPnYPcnT55EkQB+feTIEay8cuXKokWLlkZh7a5ixz59+pg6vtle
OCCu59ChQ3v37g0KCsIanBHlCizs3r17xIgR9v9lXcjuES9//z0Fy/v3qwW3
7dMndtF9PNr9f/9RH4BZsyh9/YIF1IzeurXVQXO62ralcfHw+p071dq1i36u
WKF17UoVAqZz3dqiunWpDqFIEarwz5mTct28+mrs9Npr8SMcCgVat2q75y1P
Obsub/eFzipUeQ+nH4YpxCfR5Svz+VYMiL+nyl6IfN48J9r99mqaIbH7xKPI
l+1+3LhxO3fuxAIcds2aNatXr0bwbnzq6+urR/eRUeY7bNiwjh07jh49+tSp
U8Y269atM7P7mzdvXjdhzpw5ffv2vXv3ruk2xl7Xrl3r2bPnb7/9tmTJkq5d
u+qOHxlVTsB64+z24Fp2/8MP1BoeGqoWLiBWXfUYu585k+uqZ1EI1Zcupb5/
uBIsL19OXf6MHoAW5etLHek7daLZ7mzUxInagAHa8OHa+PHUD58RNoDGjn1p
uP3IkfTTy4vS77/zjlaihE0qWZLKCdmzWx3ZFyt5eOBivFGQjtUD5tJ2z3et
HzBCIT5dvzJzHe+YyrPz0T1flrAzZ77yq1X6nZMT7X5Ldc2Q2H0iUcwkur/8
8gt8NjKqqx4i+s2bN7dv39741LD7y5cvX716FQtPnjzBZh06dDD67MW0ez8/
v+Em9OvXD2dcuXKl6TYx94qMKnvs2rULC/v374fX//XXX/Hyl3Utux80iDrF
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
VHBiCVX1bKkzn16kBmRMVb1hUyWiy9jSdgyio3tp5gB9dHpefKN/JKLtXjpO
8dVVSnTPg1ntfuIooYrt3mrtPj5h9BxicHBwiKYnTJhw9epV9Smwe2XsPiYm
Zt26dfCavn37gikfO3YsLi6uX79+anfByJEjdV5V2NvcuXM159wp7Ny5U83M
h2aDi4vLoEGDNGN5aE7YUGZ+bCzONz90SBw+bJR270YXA5dMmb1GRIijR3Et
eM0EdUsJTmPcOJy4B97dogWG4RCM169PqV49nBdfrRqOztepQwle8PPPONWu
alVcUN6a9eWXuN69bY3dL+glaBlTVU+aG0+X3Jcm9tOj51K7pyfi0WkJdOa8
NHmeLokPousDW3DsftxYoYrt3prtXiEyAfoSQYT+5s0bQy+sPhPzo6Ojo6Ki
DN2znqSC3cfrymNPgd68MSpV7/lzHNeGPUycaGFNmoRe36YN9rErjly4cOJS
NbSKFhX58plrCjycjGZVvaQZ++YQHMjRVsSjk9vHjJeIrgyvGUjqFG33dFME
RHfX02mEdOY8iL6m0nEKup1D79ysdq/552O7t367t2NSx+5NImMy8+PisIIN
fNneuWNUCoGp5OcnLl1KTONfs0bfafUrVhimlSsxu2/TJon+/htr7nXujD0D
detiVb38+VNp3n2GDA43757ubJcugkMHyNJJgvS8ezoEBtG98fTOjVwiR5rY
X/U8JQvavWbnjE34C9u9veI4dv/kCa5NEx6Oj61B0dGYw//2rWkEuwoL09bz
52LqVKyNX6YMrnWbnMqVw74F8Pr+/XGJ3m7dcHAhV67EQX+zKndu4ebmWFX1
aMuT5sbTlioNz+vuo0SH5yC6rULvXDrQQF9TenEfkNXavbOrUGUT/sJ2b684
jt1DdO/mhiP4Jj8xa9DDh1jTr337D6bht2qFKY5r1mDuxIULyersWewH6NED
Z9K1bo2T6b7/HlsIqbPevc2N3RtZZoceHB8xWSI6sb/VRomcp1CSZg7QyXL0
R6Mn8YFoRy7yQNCqeIkS3TNgVrvXzLS0CX9hu7dXHMHuY2LE/ftY83bkyFS1
e6JYrp6Cy7h1K3bL0538YOhKPsCGDcLbO1E+PlipD0z/r7+wWN+0aboFT/Xq
JWrWxIo3EOaDIN5X5u6VLJkadp9QVc+WOvM151XpFG33PRZT0kzr0qm+cylJ
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
NAl+/RUDfwjhy5Z9r3LlRIUKmN1npGDPc+Y4lt3TZXboBe9AdH/4urYS0WVs
6Xr+ILpzgJ5jKB18p68pPTQPstpUvVI3hSq2e8aCsN2ngt3D1Vi/Hgf6YT96
Ci74jRv4ls2bk90teP2QIVjVZ8SIRMHjdu3Q0J88wcZAcoLzuXgRZ/FXq6aj
Jo+m4AVVq2LCXvPm79WiBbYBvvgCR96NVI4cDjd2T4+e0yXxQSs7UpLOu6dF
L3gHoi2V7uqXlsWjr6m0Bi/djrKg3Ze4I1Sx3TMWhO3eeLtfuVIEBVE7gWe9
vTG73tBVb8DQ3d3FwYM6dOAA1tSdNy+xTK66HhBsATtu3Vr8+WeioAGgpQ4d
cGHc+vVxuv20abgfVa6uiQ/gik2dir8OHYphvtLtr+ivv7A+T/78WGMnUyaj
9MknYuLEcbY1dm+k3dPz4unOdhDdZS1Nh1vRiZKRy9Bsb0zJyM586duNWX/H
rHZf9L5QxXbPWBAHsfsZM1L49pAQsXgxZffwlLMzztRzccEHOtW/P2a5Hz5s
8JlfvYpuq3OuPeywTRvswNdsIcTGimfPsBQAtAcOHULBQY8exZ+aOnIEx/cn
TkTvhnPr1+8DwZ6hkdCyJU7lg58NGmCYrzWBrkoVHNYvUEAULGiUYA/u7o7V
mU/bvU9TiTovpyTtMKc9UVqxn3473dUv7Vugr6n07XRDxYJ2/8VDoYrtnrEg
dm/34IDXr4sff0RHToG6dcNI+dEjqj0AMTg0J2bP1q05czBSHjwYTdbQkw8P
x7bKlSvo+0k1dy72PEBEf+fOe929i3X7FcFf7fhxzMpTpvJpztSDLeXLY/W8
pBPocuZEFy5XDsfWK1dGZ69aVVvKRkPX00kq2Imjzbun3ZzOTgdNHEVJ6ol0
dzodnoPoc6Mr6ksr/tHXlN65VBa0+4KPhCq2e8aC2L3dxyd0yG/ejJVnli41
WGCpEEr7+SW7c4ipwZSDgxOXndUpcOHVq1Ni98r+ocWiU7t2Jc6na9FCt5RK
O99/j40WaG8MHJgoeAxtAPg5ZAj+1BI0cqCFA3F9w4ZYaQei+GLFzCXYuaNl
5tNDzNJkOfchlKR16enhb3ouG8ioNe9+kIi+ptLMfKtd7z7fE6GK7Z6xII5g
9/EJYTKYvkET2BU9fozL0xCd+foIrga0N06eNPGHCgvD01NjeZ06exZ7AIYO
xSw+RUrqfo8eiSPySdW1K7Yi2rXDfLxChUS6dCJ9ejNqzJgxL148N+imtWm7
p6N76dj93L6UpJVm6RBYenS664A+ND0QIB1el3ZcWG1VvTzPhCq2e8aCOIjd
p1jSVD19BLH/woXa+e3GC+J3iMGVQXad+uMPfLZ+fayfrwgi/apV0cRB0qVp
IfTOn/+DdXNMrly5hKvruMBAB0rVo8vs0In3oIEelKSz1eijS99O5wHS0be0
zA59TaWJ/cak/ZvV7nMFClVs94wFYbtPBbuPicEwfPduTJBLmXbuTFZeXliN
x9NTWwsWYCAPjt+s2XtBI6FRI8y102ftm1RQyZJi1qxJDtWZTy9nT6+AA6IL
+kmHsOnkdmmZHbo3nh4poGcgguhrSq/lB7LasfscL4UqtnvGgrDdp4LdxycM
wad46dvwcPHqFc7m01JwMCbmubhg4pzWfPmaNRM9vVQpTLrTrJADUnwWpETx
5hual6pIETF9+vigIAeK7uk1buiRfZCLK6VLFSWi4+vpgyWSztQjJM1CpK+p
tCVjzPo7ZrX7bK+FKrZ7xoKw3aeO3dOC8D8sDIvkJ9Xbtzh1rmJFNMek0XHR
ojjC7u2NvQda8vPDgXt46u+/dWjLFqz8M3o0ZuXVqIHL1n/0Ec6CT2V9/LEY
P36sQ827p3vjpaZJr58rrUVDV8Gl0/5BdKoebcdGjt1Lo3urraqX+a1Qpc+B
4uLiDNrOMHrCdq+P3ROZ+cYrOhqz+H77TTRuLJo00VbDhjhvbtQovKRJdesW
ZtdDkA5RvM6u8uSG5uEpiOt/+AGT9uvXF3nzYoE746vkcVU9qd3TnfnSYjJ0
Vz9dhAdE+/X83hLRo/NmnSsnbS1YbWZ+xjChSnqgv//+e8iQISNHjnz48KHm
dm9v7+HDh48ePfrSpUvw69atW4do8Py5YcmujGPCdi+1ew8PXLAGroCZdO0a
TtObNg0Xoj19+gP5+mJLYOVKrKgDV3XixMSq+/BYFUTow4Zh7r1ODRyIEwmT
1hOAjV27YjkCpWGQ4jVujBQ0PBxt7H5BL0p0pRoQXRJfOj5Oe6KRE/HojgUj
o3tpvwddMcCCdv9xhFBFH+jWrVvjx49/9+7dsWPHpk6dqm6/c+eOi4tLRETE
gwcPRo0aBVuio6PDE/jnn39mzJjBgT+jD2z3tEJCsJAsGKLxy8Ekp3LlsDT9
0qXJzq8PDMQVdpRl6EHwACy+Sxdcxg4ED5ITPNuoEe48aX2bb75J/FmlCi5/
o/QPSFe+M7nguDNn2pjd034Nou1euqI9LdrupUP/tCNL1+OjY//X2ShJZ/nR
jiydNUAvj7u4ByWz2n36aKGKPhB4944dO+BBbGxsnz59wNOV7Vu2bPHx8bl8
+fK9e/fA9NXXv3jxAkL7oKAgM508Y2ew3UsVEZHCOft66ulTnJUPkfiuXWL7
dt36559E7diBw+4DBojSpRMtm1DlyqJ6daxvDztPWk5HKbMDTYKyZUXmzDh8
rypHjlQSHMvV1cY680dMFrRou6dT6zf9LhFtedIVduia+dLOfGM6B6SL89J2
f/NLQYseBKFX6zOr3aeJFao0DwRRfJAG4OOrVq06evSo8uzgwYNfvnypPF66
dOmgQYO8vLxmzpy5fPlydQ/wem9vbzOdOWN/sN1bXBC/X7iAKXNNm+IIvlS/
/ip+/hnXr/HxQevXKW9vfBbaCXPnik6dkt1zs2ZYTRei7KxZPxC4/8cfiwwZ
UkM2l6pnpN17dqe0tKtEdIBMR7igVR0ozesj0do/KdEdC3TmvDR5/nEBQYtu
ilysTMmsdq+F+hQ4+0QNrl27tmnTpv379yvP9uvXLyoqSnm8evXqtWvXwoPI
yEjYHhoaCo9DQkIGDBjw5s0bM505Y3+w3Ztc0dE4RS4gAFeh1VOBgSI0FPPw
4adUsPO9e9GsGzXC7D6d+vZbzMQrVAhnusEDopwOeH3p0tpr2SuJf+XLm11f
fSVmz7axIrrS/nba7mnHlM58p4vwSCvN0tE93eMNoscC6Kp33r9JRNv9i9yC
Fh3d0x/cSubHnT17FuL3mJiYmzdvwkeOjY19/fo1bD927NisWbPi4uKePXsG
dq908sOL58yZY+lTZmwJtnvTCkL1W7cgYsVcevNpwgSM7nVq2jRcM7dVK/H5
5xikp0BZsmCAD80AaDOYW//3f2L+fBtbIkcagNN2T/uONDGAbgxIx8evlaMk
bcnQU+Hm9KMkredP2/3tkoIWPamfbiZZid2Dv2/YsGHUqFHOzs63b98Gc+/T
pw9shwbAwoULR48ePWTIEF9fX+XFPj4+3JPPGIT92T0E1zdv6l5Czty6dg2n
us+ejT3zCxfi0vNaWrBALFsmVq3CZHszCfY/cSL23n/3Hfb5p0B162K53TJl
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
jMOSYrsHz23VqpXX/4C3SI/1+++/w97UX8G/wKf2798PEfQXX3xx5MiR+ARf
Ttpy0LT7NWvWaL0gqd1DqH7+/HnNLTp3q/ME4hPs/u7duzrPYeHChbS33rlz
Bywe3Fn5Vafd16hRQ7OXI+lHOHjwYLFixZLu3NfXd+jQofnz5+/fv7/m9hYt
WhCnxDCMCts947Ck2O6HDBlSunRpxcvg18ePH0uPBXapHuvt27ewnwcPHsDj
o0ePZsmShbZ7cLSIiIh3797VrFkTDq35bFK7h6aIp6dnfEImW1xcnM7dJncC
8cnY/c2bN/PmzVupUiVoHhCfES4XhP/bt2+HQ0+bNg0OkQK7v3Hjxscff6yM
IygNJGhFqOP1sHN4Fv4Qyq/wAVu3bk2cEsMwKmz3jMMCxqHakMq+ffvAypXH
qt3Pnj17woQJ4GLKr2FhYR06dEifPn3x4sXz5cunmeqWHOBTSo6cQseOHbNn
zw5vb9y4cfny5RW39fb2rlKlitYbwe7r1KmTJ08ecNK6desqI+8q4JVaLRYv
L69MmTLBRwCDVj6dzt3qPAEAPlRSuwdatmxZqlQppf1AAFcpc+bMn332GcTg
RYsWVVoUsEXT7rUuV9KP8Oeff0ILBA5XrVo1+PXChQu1a9eGjwMtGXixu7u7
+spbt26NGTOGPiWGYRTY7hkmZYSHh0MQKnVABQjP27Rpo7nlxYsXEGXrfyx4
vf4vBp+FI9Iv0/8E4DP++OOP0ObR58WhoaHKjABjCAwMDAgI0Ly2kZGRjx8/
VkcKFFxcXJQUPoZhpLDdM0zqsGDBAl9fX0ufhcEsXry4fv36ZcuWNd7ETcvr
168HDBhg6bNgGJuB7Z5hUgeITJ88eWLpszCYefPmQUPlzZs3lj4RbUJCQl6+
fGnps2AYm4HtnmEYhmHsHrZ7hmEYhrF72O4ZhmEYxu4RDMMwDMM4AJZucTAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
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
DMMwdg7bvS0Te+7c0cmTBw8f3mnECJuUi0unI0d2v3sXatDH7sEwpsZM/6IM
Yz2w3ZuVqKjYkJDQN29C4afJ9fr1082bR44enXXxYrFsmY0qzeXLSyMiDLb7
sqKxpeTZXdAaO5bS6vaUdteXaGMrSvTOQWv/pDTTSaJHBSlNH0xpazOJJo+g
NKefRBtaUzryAyW2e8YRYLs3G3Hh4a8uXz66desGH591ZtD6LVsWubrW3bRJ
RETAX9BGlS4+flN8fIRBV5btnu2e7Z5hDIXt3mxEP3t2asmSujNnVlmxwixa
tqziiBG5N2wQkZEWd222e7Z7tnuGsWrY7s1GpJ/flvnz0/n6Cj8/8fCh6fXg
gVi5UkyZInbsEHv32qjS3r+/KirqnUFXlu2e7Z7tnmEMhe3ebEQ9euSzalWG
x4/NGB2fPCnGjRMjR4rx421S48alOXFiUVhYiEFX1rJ27/2boEXb/aK/KJ2s
KRH99m1NJPq7BaXFPSQ6XYMS7ebSnS/tSon+4CCvPyjtrUeJ7Z5xBOzV7mNj
48LCwi2nCLCwu3c3LV2aAUJ789l9cLA4f14cPWq7Suvvvyo62paie7Z7tnuG
sUXs0e5jwsJu+vgsmjvXY8GCmRbSrIULZ0yZ0nn48HRmje5B0dE4dm+zShcT
s9G2xu7Z7tnuGcYWsUe7Dw8KWte7d4FJk/JOm2ZB5Rk1KsfgwWkCAsyd7WbT
sr1UPbZ7tnuGsUXs0e7DgoI8hw8X4LPPn1tSFy+KRYuEv7/FLfW9AgPFuXPi
yBGL9+En6siRtP7+q7kzn+2e7Z5hzI1d2n1w8JLRo7GX27Le+ugRZs6bdeze
IEVFocO6uooJE8SkSVaiNCdPLratVL2xcii7/82bUt+5EnkMpDTFWaJmWyl5
OElEtxbotP/7RSWir2mBx4LWyEmU6J2z3TOOgB3bvcVno4Pdr1hhRXYfGiq8
vbHD4eBBcfiwlSjtw4c2lqrHds92zzC2iD52HxcXF2tLhAYGelqD3fv7i8mT
hYuLcHe3Ck2cKAYNEtu2YZgfHW0lShcba2Opemz3bPcMY4voY/e3bt3auHHj
Zpth3YoVPXv1EjExFrb716/F9u3Yc+7qanlNmYJeM2AAnhJcmdhYK1G6uDgv
tnu2e7Z7hjE3+tj9/PnzR44cOcU2cJsyZfLYsc07d0Y3sazdg+AcIJS2BkEo
Dc2PtWvFvHni9Glx5oyVKG1AgI2l6rHds90zjC2ij92D1x8/fvz27du3bINr
585NHjIEPc7idm9VAsffuVOMGIHl7CydofdeqZ+qV/OjAcao+RZBi7Z72nAb
b5foDy9KE0dJ1HYdpYEeEmV/Rcl9CKW/FknUawGlCaMloj9ak22U2O4ZR0Af
u4fWr5+fX+qcjykICw5eNmaM5cfurVBPn4pjx8SuXWL3bitR2nv3VqZyzXy2
e7Z7tnvGAdHT7h8+fJg652MKrCUzn6WHLFBmh+2e7Z7tnnFA7NXuR47EVeAt
nYfGkipdXFxqZ+az3bPds90zDog92v27oCDPgQPFiRPi7FmWlSvNkyerY2Js
qTPfyFS9Bb0ozesj0T+NKNHpaiDaE1d1kKjbEko/HaCU96lE9DX9t5KgRTc2
OFWPYezR7sNfvdo0ZkwZZ+cyo0ezrFqjRpU5enRdWNhbg/7AbPds92z3DGMo
9mj3MZGR98+e3ejtvdHHh2Xtun37ZlRUpEF/YLZ7tnu2e4YxFHu0e8bOYbtn
u2e7ZxhDYbtnbA62e7Z7tnuGMRS2ezsmMjLq/PnLa9ZsWrXKy2p19er1iAiD
O/ON8etfs8w2RkbaPZ36XuO0RIdrU5Iuzjt9MCW34RK1X00pID+lXQ0koq9p
16WCVndPSmz3DMN2b8e8eHF38eLBffuWdXEp6+xsnSpz6NDad+8MTtVju2e7
Z7tnGINgu7cqYmPj3rwJvX//4f37fkbqwYNHx45tmDfvG29vceOGuH7dOpU2
KGhNTEyYQVeJ7Z7tnu2eYQyF7d6aiHv58sGmTTNcXZ1mzBhopGbOHOzi0mzc
uM8vXrR46TzTV9Vju2e7Z7tnGINgu7cmoh882D9xYv4ZM7KuWpVt5UojlX3q
1E/d3NL9+6/FPZ3tnu2e7Z5hLAzbvTUR8/DhLk/PT27fFiEhJtCVK2LGDFzp
fsMGK9X69WmuXVseGRlq0GWyabtf34aSiJeIzpynLQ+0oTUlaaHa2f0pze1L
iT40iL6m9XcLWnRThO3erPSwVix9YawLtntzExERcfv2bV9f3zNnztLy9T29
ffscD49Pnj0zTez86pXYuBFXvJ0wwWqV5sSJRSlYAJftnu2e7d56sM4LaJ1n
ZUHY7s1KXFzY3buHJk/uOGFCo8mTG9OaNKnx8OHVhg9PZyq7j4sTQUHi9m1x
65bVKl1w8DqHStVju2e7tz+UC2hMNQxziP+sWrDdm5WYmODz593BwXftSrtv
n1zr1qWdOlWYyu5V07dipYuP93KosXu2e7Z7+8OG7P7t27cREdpfODExMbGx
seqv8Pjly5eaW5SN8DJDr4zWTiwL271ZiY4OvnTJbckSEROjlzU/eCA8PcXd
u+LdOwdRuqiolCyAy3bPds92bz3YhN1fu3YN/tZOTk59+vTx8PB49eqVsh3c
f/z48ZcuXVJ+PXz4cL9+/Xr37g0/9+/fr7591apVXl5e+l+ToKAgd3d32Akc
C9oYxl5iU8B2b1bA7i9fNsDu798Xzs5i5Egxc6bw8HAEpTlzxjM8PFXL7NQv
tcUYGWn3e36htLKjRHTiPV3kFtRlGaXNLSWid04bbr29EtHX9FFBQYsuL8x2
b1as3+4fP34MRn/hwoV4LDcaOXfu3JUrV8LjZ8+egdfDK//99994/MaO7tu3
75UrV+Li4q5fvw7b37x5Ex4evmjRInhM2H1YWBjsSnPL6tWrN27cGBMTM3v2
7F27dpnpyhsE271ZMdTuQ0LE/v1i1iwxf76DKM2FC54REWz3bPds9zaM9dv9
33//vWLFCvXXwMDAs2fPwoMTJ07s27dv+vTpSnQPLQGI/Q8ePKjE47ARHvj5
+a1fv94rgeSuwK1bt4YOHarp+E+ePAkNDYW3u7q67tmzx/QX3XDY7s1KTMzL
69fdly3T1+7j4rCL+9kzx1G60NANcXHhBl1Vtnu2e7Z7q8La7D7pRDx3d/fD
hw/Dg5cvX/r4+Hh7e2/fvl191sPDQ4nu4xOMG34F04cbY//+/RDmK9t37Nih
ZfdPnz59rMGyZcuGDx8eFBSkvuDVq1ejRo3q27fvvXv3zHXpDcEcdh8bG3v3
7l1oO51zeHx9D2za1G/OHH3t3vFkgTI7bPds92z3psXa7D5pdK90rccnpOpB
RL93796//vpLfVa1++Dg4P9n7zzAoyjzP/6SYOMUu9grouKpWE48PTn0RFFP
UUBAFEUsRw0QIBCaBAi9hNB7SyGUhBZaaKGE0GsgEEhIIEh6zybZ3ez/N5m7
+a/ZzTvbZ3fn+3m+T57N7OzM7OzsfN53duY3SUlJ9KCqqooekL5pNy6OY6r7
6dOnjzViyJAhNMd169aJz5IHxaYCNTNGjx7t1PVvIc7QPa3PPn36tGvXrpPq
6dCh7ddfN6OdPHXbHeJHajYUFbG8PJaf7x3xLS9H7x66h+49G/fXPfXZ+/bt
e/jwYfJ4ZWUlKdis7qnDTp3x5ORkMnVxcfGoUaPEY/4Gc7o3huQ+derUefPm
SafiU2Ng586d9GDLli00fSesdatxhu6pgRQQEHDs2LETJ04cVzfHju3duNF/
9mzH9O4rK9np02zePOHsfW9JvZMnF6nqt/uFv/AiW8aWL9zPN8vkyw28jB8i
k+aJvHywm5cHs2XCX6fDxjJ++NcFQPdOxf11T1BvnfrgvXr16tGjB3W3z549
Kz1FOpbOzN+/f3+/fv169uxJY4aFhUkX38XGxnJ0T1ObOXOm8ZV6aWlpNBdS
4aRJkzIyMhy4tm3GGbrPycmhtVpebl3tFK9Ep8s7e3aS5afq8ZObyxYvZv/5
D5s82UsycWK9Q4fmazQuraoH3UP30L1j8Qjdi1TWIPuOioqKrL3K3uwl9mVl
ZVZNxKk4SfdjxowpLbWuELpXYu2Z+fxkZwt15tevZ9eueU18i4sj9XoVHcyH
7qF7Y6QzwSwZrtVqnbw4NuJBulcz0L1Tcazuc3JYdDRLSHDMaQDuEQWq6kH3
0L2b6H7t2rUDBw4cNmxYrR1sTEzM4MGDR4wYIR1hJo4ePTphwgSXL6NFQPce
AXTvVETdL13qmFP1cnPZhg3s4EFbXksLoNGwkhJ3i09l5SqDAb176F51ur94
8WJQUFBZWdm+ffsmTpwoDU9JSQkMDKyoqEhLSxs+fLg4cPv27T169Bg/frzr
l9MSHKt7e77dxoHuawHdOxXS/ZEjE/r1Y7GxbNs2e7NmDZsyxZbePbk+MVFw
jZ8f8/d3o/Tvz3bunFNWVmTVWvVo3Se/wIvsufGdInn5cZlM2q7jZfJAmbRf
wwtf9//YLxP+Ot3wJeNnTg9e3FD3mzZt2rx5s6HmN99evXpJB+rXrVu3fv36
06dPX7lyRaruvnz5curdQ/f2696emvk2rBmvr5kP3UtUV+empASPGsWGD+cp
wJLQRIYMYX362KJ7vZ5t2cKCg9myZSwigoWHu098kpJcfb976B66dwfdk8Hj
4+PFxwMGDCC/iI8XLVrk7+8fFRU1ffr0JUuWSONTZx+6t0f3NtfMz87ODgkJ
8fPzo08kMzPTwnVi26ucCnTvZCo0mhPnz89PTHRAduyYGBr6kVnda7Xs1Cm2
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
eKHw7OLFdmXJEjZtGvP3d/VlfQcPCmX0/vMf1quXW2f79jmlpSqqqgfdq033
i35mUrxVQOL7sudb6cBvqBRvXds2Y4nulyxZ0q9fv6GWMWzYsL59+3bt2lWj
se78K+dgo+4rK9mBA2zhQrZiBVu+3N5MmcIGDGC2Fe2prhYWpriYlZRYkdJS
tmGD0FY5f144tuC2uXzZNz8fF+JB996s+wW/MineKiAP0r09NfOt/TXf7Kvo
X6XK71ui+6ysrH379u23mE2bNg0cOLC83Lp9uHOwUfei8UVv2p9z54SfBmw4
VY9cf+mS0Env0oX9/LMV6daNtW8vHFigd2FVwQGXB6fqQfdervt5/2FSoHsF
dW+2Zj4NHDlyJA0MDw8XLWxaM19k+fLlUVFR1q6ZWq+ilkZQUNCpU6dsXtX2
YInuq6urK60hOzvb00/Vc2xs/u2+qoodPSroPjycrV5tXcaOZWvWMJ1OyTdu
QUj3a1Sl+2n9eeHrmPLJNl7+uVcm/KJ5Y4fJhD9x/lUDz1+SCX+d7vqQ8dNx
FS8K6n5ODyYFuldK92Zr5pPfR4wYceLECeqc0rOXL182WzNfo9HMmzdPqJhU
t+5Na+abvopGINfTEOPSfK7EEt1bS25uLnRfS/e23WuedH/ypPBzQHm5cM9c
qxIRIdzjfulSFhbmzvE5e3ZxRYV1mwp0D917kO5n9WJSoHuldG+2Zj7pPjU1
lf5mZmZSX54em62Zn56eHhEREVVDXWvAtGa+6asOHDiwY8eOKVOmuHPv3lq8
4EI8xyYlhdEyHDzIUlOFkjuWJzmZxcYKytZqrZ7p2bPCLwjDhrHhw9059fbt
m1teXmzVhwrdQ/cepPvQPkwKdO8a3VtVM5/62gEBAbQZFBYWGuqumb958+Za
uufXzK/rVTRxb+rdQ/e1kpEhqO2rr1jnztalUyfhJ/iQEFuOyVdUCD8fWNW6
UCKqO1UPuleb7qf3ZVKge6V693XVzBfPoyOnL1iwgEaoq2a+wZy4LamZD927
ENL95jFjFNZ9ZaVQNv/YMeHI/IkTVuTIERYVJZxxV1Vly3yrqxU/E8+SU/VW
4bd76N6LdT/Vn0mB7pXSvdma+RUVFf37909PTyfph4aGxsbGmq2ZL07BVNzG
mNbMr+tVatM9rckbN27s3bs33vls2TK+Xz9WVKSk7kXzUg/d2pSXC42EsDD3
P+PO5qjuzPwvNvLy8yKZjPqdl7brZMI3ctMkmXQO56XVDl7s1L3szXkHTeJF
Qd0bX9oA3Sule4O5mvk08ODBg4GBgQEBAfPnzxevJqtVM1+6jI4aAxzdm9bM
r+tVpHtV/Xav0WgGDRr09ddf//zzz92cy0/ff9+qXTvhkjqlvWZLKivZ4cNs
3DjhF/ytW70yPleuLKuqUlFVPehebbqfGMCkQPcK6l7EtGY+9cdNq8Q4qma+
W6GI7gsLC4ODg0+fPp3pdNLOn18WGMgKCpR3tw2prhZ+BQgKYr/8wrp3985s
3TpbVVX1oHu16X78ECYFuldc92pGEd0XFBRMmjQpKyvLsfM1R2V+/nrFT9Wz
Jzqd0FbJzhbK+HtjfMvK1HUDXOhebbo3vqWgtwoIuvcIFNR9dna2Y+drDrc4
Mx+pO/jtHrr3ct2PHs6keKuAHKv7Fr9dcUi8dW3bDHTvrVH6lHtLz8yvrlaX
7r9fyYvx7VTMJuw7XhqnyOSvZ3lZ30Ym/LbKN6t5+TpaJvx1Omws42fgZF4U
1L1xe8xbBeRBurenZr4Na8atftCH7r0vlZXswgW2cyeLi3P/+KSlLVfVqXrQ
vdp0PzKISYHuFdS9zTXzSVUhISF+fn7Tp0+3/F7wtr3KqUD33pe0NKGY3ief
sG++cfe0b18vJmZmSUmhVR8qdA/de5Duh49hUqB7pXRvT818aglERkbqdLpa
lXiNMa2Zb8mrXAx0bzbl5YI0U1OFvx6XHTvYokUsIUGo0u/28S0rW1VdjYP5
0L3X6n5oMJMC3Sule3tq5tPf/Px8+jc+Pj44ONjsGjCtmW/Jq1wMdG+aigq2
e7dwfxnqI3tcRowQrm4jrSQlKX+cwYKo7lQ96F5tujc+nxC6V0r39tfMp+H+
/v7GBfEsqZlv+ioFge5NU1jIxo9n06axyEjPS1SUsOQhIcLtdZRWuYW6V9cN
cPmn1s/uKZMtn/Ly4S6ZPJPKy+4PZMK/p3yb9bzILht/nS75ifHDL/+roO4D
JjIp0L1rdG96ixw7a+YnJCSQtc+cOWP8rmVr5pt9lYJA92Z1P326ULK+vNwj
c+qUsPwk/TVr3D8+Fy4sqaxU0Q1woXu16X7AZCYFuleqd29Pzfzdu3cPHTo0
MzNTX4PZNWBaM9+SV7kY6N40RUVC7/jcOcV7vjaGlj8ujs2cyWbNcv/4HDu2
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
Ixg/i7vxoqDuP9zFpED3rtG9w2vm05jk+jNnzhi/a37NfBGv131RUdGXX37Z
qlWrNnXw6aeftm3b1vhMCQAsB7qH7j1I9y33MCnQvVK9e3tq5u/evXvo0KGZ
mZn6GsyuAdOa+SJer3udTrd//356j+vMER0dTQ2t/v371zroAVzAoUOJP//c
8913W7do8W93yPvv/zssbBW1D616F9A9dO9Bum8Rz6RA90rp3mBrzXytVtun
Tx/pcMGwYcPMrgHTmvki/Er7LsYZujfUGJ/zc21WVtaECRNwMN/1bNsWNWPG
y1u3+u7aVd8dsnPnLVevrtBqrSsrDd1D9x6k+/f2MynQvYK6F3FxzXy3wkm6
5+Ppp+opTlWV9uzZ8zt37t65c4/l2b173/TpoyIinigtZTqdm8S3unqVDdfd
Q/fQvafo/u8JTAp0r7ju1Qx074FUpqVt/uWXx7/5plGXLlbl4S+/vGf+fN/K
SsWL6dlbVc9zdR/Slxd+lVpKSmNeZHU/eSAvsZ/JhH/e/pZPeZG96MBO3Yd3
5kVB3TdPZFK8VUDQvUcA3XsgFWlpq9eu9UlPZ/n51mXdOrZmjXDnWa3WTeKr
16urdw/dq033fzvCpHirgMT31fKjRIdk6gmdQ+Kta9tmoHvXo9frKyurbE5F
RUlKSuTmzT6FhVb3pmNi2DffsLZtWceO7pKYmJklJVZX1YPuoXtP0f2bx5gU
bxWQB+m+rpr5xtRVM9+26vfG1fiVBbp3MWVlxfv37wwJmThjxoTQ0Ik2ZObM
8aNHf7dsWb3iYqt1Ty2E48fZ9u1sxw43iU9a2rKqKhWdqgfdq033r59gUqB7
BXVvtmb+oUOHBv4PemwwVzNfxLbq9ydPnuzbt6+969dBQPeuRZuaum3AgIbd
u9/+++8257b+/W9duFA4Jm/Dz+V6veKn59U6VU9dv93/PooX2TvY8k+H45/I
Rxk7jBe+ryl7WvLCP8lwVUeZ2Kn7pV15UVD3r55iUqB7pXRfV8388PDwmJiY
ghpouNma+ZZUvzetmW+oqeDn5+dHzQanrHTrge5di/bata1LljS4etWu28Rf
vsy2bmU29O7dL6o7VQ+6V5vu/3qWSYHuldJ9XTXzx48fv2HDhl27dok+Mlsz
35Lq96Y18/V6/ZQpU6Kjo8n4jl/jNgHduxb9tWs7VqxokJFhlyVTU1lYGLtw
gV2/7unxLSqK0Os1Vq1E6B669yDdN01iUqB7pXRvtmY+/Tt48OAVK1Zs2rTJ
399fLJ9bV8180/p4/Jr5NP7cuXNJdtC9o3RPLSj6jPbv33/AM4iPiZk6efLt
167Zpfu0NObvz/r0YYMHe3YCAurt3j2nrKzYqg8duofuPUj3L15gUqB71+je
wpr5xm+B+vgLFiyoq2a+wZzuOTXzyW70mOZIL+nRo8e2bduc/AlYhKfrvrS0
9JtvvmnduvUXnsC///35xx83/+kn38xMu3RfUcH27xc6+OHhwl9Pjs+5c4sq
K+u8eaJZoHvo3oN03+QikwLdK9W7N1szX6PRUKf+6tWrOp1uxowZ1AYwWzNf
nAK/+n2tmvkkJrEa/65du3r27CmeM6A4nq77oqKifv36ZXsGOdnZN0+dWjVv
XoP0dHt/9dbpWFWVF8RXr3f1b/d21u6wU/e/zeflpyUyeek8L/y761L8p/Ly
wW6ZvHWUlzbreeHfe5fCX6cDJzN+eszhRUHdN05hUqB7pXRvqKNm/v79+6lX
TtKfPHmyeNP2WjXzpYvv+NXv66qZX1hYiDPzHah7+rDsn46r0F27tnXFigbX
ryt7gpz7xNdgWA3dQ/derPtnrzAp0L2CuhcxrZlP/fGystrXAqNmvqNwoO6L
i4tJ9+5Tx0AOXWrq1uDgBrGx7OxZduYM4pOVRe3ncqtWInQP3XuQ7p9KY1Kg
e8V1r2Y8Xfdi795zdK+9cWPT+PGsc2fWsyfr3h1h27bNLC116Q1woXvo3pW6
fyKDSfFWAUH3HgF071qqKyszr1yJ2r07Yu9eREh6+kWttsqqlQjdQ/cepPvH
rjMp3iogx+r+YK7BIfHWtW0z0L3LoYXV6nTIf1NdbfUPXvQtVrDvYKfuR3Ez
q5dMrj7FS2JzmfCNufJ7mez9p+2J6iAT/jrlrzdK2He8KKj7R24wKd4qIA/S
vT01821YM271gz50DzwO6B669yDdN7rJpED3Cure5pr5pKqQkBA/P7/p06dn
ZmZauE7ITaGhoX379p05cyY9dvAatwno3k2oOTtUU1xcqrZUVlZZ++lB99C9
B+n+wWwmBbpXSvf21MyncSIjI3U6Xa1KvMaY1swXq+rRq+bPnx8bG+u8lW85
0L07kJeXN3v2nDfeeL1Fi2bvv6+i/OMfzVauXFpUZPUNcKF76N5TdH9fLpMC
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
toSux/Qt5OXl0UdgyWuTk5MTEhKctmgAeBvQPVAtt95669mzZ102u379+tnQ
jeXo3iwvvPDCiRMnrJ2L+3DmzJnGjRtbMiY1yb7//ntnLw8AXgN0D1RLLd2T
KEk0zz333McffywO0el0r732Gv37wAMPBAUF3X///b169RKHjxw58vHHH7/3
3ns7duxYUFAgOy/qcf/444/Sv5GRkc2bN2/QoMHbb7+9atUqcWBcXJyfn19E
RESzZs1uueWWpUuXGmp0/+mnn7755ps0Mi3JzZs3DTUth8b/gzq54ssnTpz4
0ksv1a9f/4knnhCfKisrq2uyZheAaNq06cWLF1u3bk1PffHFFxqN5tVXX5Vm
cezYsffff7+u95iWltakSRPp3+eff/7atWv0gNbh6tWrX3nllQcffDAwMFB8
1uxb+PDDD5988klaSHF4t27dxOH0KlrbDz300FtvvRUdHS3NYsGCBRs3bpRd
+QAAA3QPVEwt3RcWFpK416xZQ94Xh2i1Wvp2kBl79uxJJjp58iS9pKKiYsKE
CeQdMm9OTs6XX37Zu3dv2XktX76cpmP878GDB6nZsG/fvvvuu6+yspIGksjo
8TvvvHP48OHCGgw1uidNnz9/vri4+IMPPvjll19oYHl5eUENd911F3WHxWnS
gtGQu+++Oz4+XnxWHG52smYXgPD19X366aejoqLo5X/88QcNoabCr7/+Kj5L
c+ccab906ZKPj4/0b7169VJTU+nBX/7yF1pLWVlZhw4doumLhzjMvoWioqKY
mJhnnnlGfKq0tFScLH0K9Jce00dw5MgRaRaZmZliAwwAIAt0D1SL2YP527Zt
q6X7vLy8kJAQ6t2THOnf3Nzc119/vXPnzjNq6NKlC/0rOy9qEly9elX6l6ZM
Fu7fv//nn39OiiTzGmq83KhRI2pCGL/Q+GA+NRhefvll42cbNmwouVLk3nvv
rXUw3+xkzS6AoUb369atMx4zIyOD5kKyJhdTW0LssJuFo/tz586JA1999VXq
6XPews6dO2sdzK+qqvroo4+aNGlCH0GtN0t8/fXXdS0PAMAY6B6oFpt1T87t
2LFj1P+gl8jO65tvvqGpSf+Sv8hTcXFx1IN+6qmn9u7da6jxsmnLwVj3K1eu
rDWCqe6pq37s2DHjIWYna3YBDDW6v3z5stllmDt3Lt+tKSkppHiys/ivWd2/
8847xkc5TN/Crl27nn32WdOJJyYmDho06NFHH/Xz8zMe3q5dO84iAQAkoHug
WmzW/cCBA1988UXRZfTv9evXZedFupTmVVJSQtNJS0ujx/Hx8XfddRdf92S0
ioqKsrKyd999l2Zt/Kyp7qkpsmDBAkPNmWzV1dVmJ1vXAhjq0H1ycvLDDz/c
rFkzah5w3iOtLur+b9y4kWY9adIkmoUNuj9//vxtt90m/o4gNpCoFSH9Xk8T
p2fpgxD/pTfYqVMnziIBACSge6BaSByShiR27NhBKhcfS7qfMWPG6NGjyWLi
v+Xl5T/88EP9+vWfe+65Rx55xPhUt7ogT4nnyIn8+OOP99xzD738iy++eOWV
V0TbxsTEvPHGG7VeSLr/8MMPGzVqRCZt1aqV+Mu7BLmyVoslKiqqQYMG9BZI
0OK7MztZswtA0Jsy1T3Rvn37Jk2aiO0HDrSW7rzzzvvvv5/64M8884zYoqAh
xrqvtbpM38J3331HLRCa3dtvv03/Hj9+vGXLlvR2qCVDI0+ePFka8+LFiyNH
juQvEgBABLoHwDY0Gg11QmUNKELd82+//dZ4SHZ2NvWyLZ8XjW/5yORZmiN/
NMsXgN7jBx98QG0eS0YuLS0Vrwiwh5ycnMzMTON1W1lZef36demXApHAwEDx
FD4AgCzQPQCuYc6cOYmJiUovhdXMnz+/devWTZs2tV/ijqWwsLBv375KLwUA
HgN0D4BroJ7pjRs3lF4Kq5k1axY1VIqKipRekNoUFxfn5+crvRQAeAzQPQAA
AOD1QPcAAACA1wPdAwAAAF4PAwAAAIAKULrFAQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ADiMhISE7t27t2/fPjAwsKKiQunFAQAAAICDOX36tK+vL2PsoYceeuyxx7Ra
7YwZM/7xj388/fTTrVq12r9/v9ILCAAAAAB7mTJlCrm+b9++9LiqqiopKenW
W2+9/fbbGzVqRMMbNmyo0WiUXkYAAAAA2Eh+fv6rr7563333kdYffPDBxo0b
L1myhIbHxsbm5ubq9fpHH32UnkpNTVV6SQEAAABgI8XFxd27d3/jjTfI6e+/
/z493rNnj/hUaGjoRx99RMPbtWun6DICAAAAwAEMHz6ctL5o0SLjgZ06dbrr
rrt8fX0DAgKqq6uVWjYAAAAAOART3ZeVldFfnU7XoUMHeio2Nla5pQMAAACA
A6il+7179959991+fn5BQUEPP/wwPbV582ZllxAAAAAAdiLqfvHixeK/ly5d
atmyZf369WngX/7yF3pW2cUDAAAAgJOorKy8fv26VqtVekEAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAiDAAAAAAqQOkWBwAA
AACcCHQPAAAAeD3QPQAAAOD1QPcAAACA1wPdAwAAAF4PdG8boaGha9asUXop
AADAakpLS69fv670Ujie9evXDxo0yOaXZ2Rk/PTTT+np6Q5cJEfhEOOoR/cl
JSX0Tm+77bYHHnigdevW586ds2dqXbp0GTNmjKOWDQBjrl69Wq9evaqqKvHf
v/71r7Qfs3YieXl5I0aMMB4yY8aMu+66q6Kigh5Pnz79jjvucMjSAg8iMzPz
k08+od1ggwYNmjVrlpqa6tTZHT16lPa68+bNc+pcJGiDf+mll/R6PX8006+G
SGJiYqNGjfbv3++cpfsvDz300C233EKrhb7j9MDC1oVDjKM23WdnZ+fk5PTs
2fO+++4rKCiweWrQPXAepHvaVisrK8V/Sffr1q2zdiJnzpxp3Lix8RDSPU12
48aN9Pj999+vX7++Q5YWeBAtW7b8+OOPi4qKdDodbQ/5+flOnR31td98880P
P/zQqXOxFtOvhuu59dZbz549a/n40L1VSLqnx9TB+ctf/hISEkKPr1279tVX
X5H9H3vssalTp4ojDxkyhL4Ln3/+OfWG6FkahwZS86Bjx4533nnnyy+//Mor
r0gr39/ff8OGDX5+fo888kjDhg3FWZw4ceLdd9+lJjS1NqWuWVJS0ttvv/3k
k08+/fTTzzzzzKeffioOb9q06cWLF1u3bk3jf/HFF+KY33zzDS3V448/Tl8Z
saPXq1ev9u3b0yINGDCAFoAsIM4LeBl16d7stmp2U6EdLG1m1HdoXEO3bt0M
Nbp/6623fvzxxz/++IN2wvQVEKcQGRnZvHlz2vZo41y1apU48NVXX/3999+f
eOKJe++9l74OLl4DwBmcOnWKNgnTw/hxcXG0+4qIiKD+Po2wdOlSGkhNgp9+
+om2K+qN0nal1WppYJs2bbZv3y6+qn///gsWLKAHe/fupeG0b6RdE21s0ggE
7eh27Nhx++23Z2VliUO2bt1Ku7uHH3742WefpcmKPXF6lhohNJB2obSFX7ly
pa4FEN9Fq1ataE9L34KAgABqt9DAF154gWb93HPP0XSkuZvdsM1+Nfr169f4
fyQnJ0tTmDdvHr0F2ufTzlk6EvLaa6+tXr2a9sAPPvhgYGAg531xqKV7s9M0
axx6vyNHjqQvO30x6Vmx03rs2DH6woqf7KxZs2iHYHam6tS9oWa77d69e3V1
Ne33aJuhbYmafLRpxcfH07O0mdH6TEhIoB3jO++8M2XKFBrYtWvXFi1a5Obm
0t6YPh1J999+++0DDzxAG396errYMKB5Pfroo5MmTaLJ0mZwxx130D7ZULOl
jR8/nh6MHj26U6dO4oZK+Pr60kYVFRVFnx3NkYacPHly2bJlxcXFeXl59EFv
3ryZBn799df0+dLXhzYA2lTeeOMN2kJcvBqBCxB1//333/9Ywz333EO6r2tb
Nbup0K4yJiaGmpQFNZSWlhpqdE97ddqhhYaGBgUFSQfzly9ffvDgQdoa9+3b
R5MVmxnUGOjZsydNh/autL3RVqfc+gCOISwsjMRBD+gjvlSD2LuPjo6mz512
dIcPHy6sgQb+/PPPtL+ijYf2afSq4OBgGkjtAelAU4cOHSZOnEgPtmzZQkql
3RdNdvLkyWRncRNKTEwkfdN2+9FHH82ePVt8Fe05xUnR5ipNiobQtq2rYc2a
NbQx17UAOTk5NP1Ro0ZpNBraVZLaxCnQMtOY9FryvvR+zW7YZr8a5eXl4r/U
YqEvl/jybdu20VePTEovpK7W66+/Lg6nr8aXX35JTZRDhw7Rrls8Gm/2fXGo
pXuz0zRrnAkTJlCj/ebNm7Qq6CW9e/cWp0C9zpYtW9LC33///dR5NDtT1eq+
Xbt2v/32W0pKCg2kTXRGDdSNGjdunKFG99S1EceklSw2lmiD2b17tzjQ+NAK
6Z7cbTwvGo22SdrOxX+pZUjqpwd/+9vfxJ+xaCv95z//KY1Pn6/pFnL8+HHa
J5PfqeXQt29fQ43u6eWZmZnid7Zt27Zz58511PoB7oOoe9pZhddALU/aPOra
Vg3mNhVi586dpgfzBwwYQBKnHgRNTdI9tR9oh0/t1c8//9zHx4f2kIaa/Y90
fgttabSDddGbB06DmoVkDXpA3WfSK3VSyB2GGt03atSI9GE8MlmDuu3i4yVL
ltC+y1C37l966SVxYFVVFW1C58+fN9QIiPZysbGx1GSVdnfTpk2jHemvv/5K
rzLusFO/+JNPPlm0aJG0GGYXgDrpTZo0qesNkqCNdW92wzaY+2pINGzYUNI9
9QfpyyI+phZIvXr16Itp+PNXg/rUYp/L7PviYKp702maNQ61Ojp37izuBGig
1AihNU+riJaf9ht1zVSduqc1Q6uFPiDqdNPAmTNnRv0PsRturHsajXZ39IBa
sLTpigNr6V7ss0ts3779sccek/5t06bN2LFjDTVnV9I+lpqs1OilLVMagXR/
+fJl4ymQ1p9//vmVK1fS8H79+olbHXSvEswezK9rWzW7qRC7du169tlnjScr
6p56cLTl0MQl3VPnizatuLg46i499dRT4j7WeP9DuxGpaQE8F+o50ocu/V5P
/R1J95I1JGgPmZCQID6mNqfYTqDRIiIixIFmdS9uutSYpM7OE088Qd3PH374
gfaW9evXv3HjhjgO9dZpT9i8eXPabsXOtaGmf00bOTVZqUNNm2JdC0AtFmpy
1PUGa+ne7IZtMPfVMH7Xku5//vln+kKJjysqKqjBcOnSJcOfvxrvvPNOZGQk
533VBUf30jTNGod2/rSWpJ2A5JGysrKmTZvefffdNLCumapQ97m5udTeo6Zj
QUGBTqejz51acfQsjUPrX/zNxazuqYHavn17aubRxkPrnKP7vLw8Wu3ir0W0
8dCnlpiYSI/fffdd2lxpm9FoNMbjm+r+008/Fb+JNK/33nsPulcVZnVf17Zq
dlMhqId12223ib8Nid0NUffis5Luxe9FWloaPY6Pj7/rrrsk3YvdBOoK0Y5O
3ICBR0MKppZbp06dSEa08Xz11Vcc3dPuhYROWw6NTNvVwIEDDTWHl2nfSJsi
bQ8PPPCApPtGjRrRJkROJD8+88wzNHEy9b333itdXUIKIxXSC+fPny9uwLQF
0k6SZk2PN2zYIP1iTl6jPWpdC0Bzoe12xYoVhpqtmjZR6SdRw591X9eGbTD3
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
Y8eOjR8/nqZPUwsMDKQRnPYRmcdTdF9SUjJx4kSv1D2wFugeuofuFcQ7dE/O
Jb9Lh9bpwe7du6kNkJ6eHhEREVWDoaZV0KtXr127dpGD6N9Tp06JD+bOnbt3
715O7760tDQgIOD48ePSkLQa6MEff/xBi0Hed87nUyfO1j01YK5evUqr6Kwd
0OeSkJAwYsQI6B4YoHvoHrpXFO/Q/caNG+fPny8+3rRp0/r162NiYvLy8sQh
1HmXDuZfvHhx2rRpJP3ff/89Li5O6pWnpKTU6t3n5+dfN2LPnj00O1JYrXHo
VWvWrHHWx1M3ztY9tXCGDh3apUuX7vbRtWvXH3/8sbCw0HmLCjwF6B66h+4V
xEN1X6vMzuHDh4OCgsTH1J08cOCAv78/GVwcIumeGgBJSUmGmrPy6MHgwYOP
Hj0qjmOq++jo6LFG0LM0u/Hjx0sjpKenU5efJu7cT6gOnK377OzsYcOGbd26
9eDBgwfsgKYwZMgQqekF1Ax0D91D9wriobpv+ufefUlJCZl33bp15eXler0+
OTm5b9++prr/448/evfuTc9Sp764uHjUqFFHjhwRxzHVfS02bNgwYsQI8bd+
Q83B/P79+588eVJfg3M+HB5O1T2tn6ysLGrbFBQUaO0jNzfXK0/Vo1WUk5Oz
Z8/B7dv37dixX4VJTU239mIW+sLa4+vPH1lhTwLHMX742tramhfZG+DyXx79
tUxC+vIie9n+5ed44V9WH9pHJlEdeElsLpNZvXjhTxy6twrv0D1B+95p06aJ
Z92T+nft2iVdfBcbGysdzN+/f3+/fv1onF69eoWFhUnjkO45v91Tc4LaBvn5
+dKQmTNnGtfyNX7KNTi7d0+6nzhxov0H4b31zHyNpmLfvtjBg/86d+5fZ89W
Y44fj6qoKLVqpUH30L3X6L6u07NNh7v+RO668Brdi5C+y8rKZN81ddKNr8S3
BAUvsTcLdK8sZWWavXsjFi1i16+za9dUGJ/i4gi93upb5ED30L0X6P7/2DsP
sCiuvY0fLMmNqaaZxHRNvdcUY8pNvniNN2pMYoy9JDH2qKgoVhRQsKGi2LEX
FBAsgAULFkCj2LuiqAiKAlZ6Xfb7D3Pv3A0sZ7bvzuz7e97HZx12Z2aXYX/n
zJw5//Xr1w8fPnzs2LHXrl3TXR4RETFq1CgvL6+TJ09WtcSOqEz3zgN0z6Gw
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
mTQ+0D10ryDdh3ZmUqB7x9G9OQVwk8vRCl/1t2iF5P3Kn5LeArhRUVGBgYGe
np6OrHtq4RQZT3Fx8c2bN6kVBN0rJbt2sbFj2bRpbP58Nm+eDeJy7NiSgoIc
oz5e6B66V5Dug7syKdC94+je/AK41Crw9fVdt26d9MnwC+DSeqiBkZ+f78i6
X7ZsWcuWLTsYT/v27X/88ceePXsaMiOxmlCu7mNiWHAwS0lh2dksK8sGqV5U
FKqsG/Gge+jeqGNVdxgndG9H3Vu2AC75mjrvW7Zs0f1k+AVwPTw85s6dSx38
IUOGBAUFiacLbIkhuh8zZszSpUujjWfr1q0hISGjR4+uUAFQ9WRkHA0Pt4Du
CwpYUhI7dYqdOWOLnD3Lli1jq1ezBw9s1sDAUD3oXuW6X/k7kwLdO07v3pwC
uMnJyUOHDqW+v/icqj6oCgVw6YUHyxk2bBi1E2i71v9d/QVDdO/t7X316lUT
TuYXFhamp6f7+fmp42R+aanm4sXkgIB506bNmT59btWZN27cCHf3544fN0uF
1L8OC2OtWrHff7dRundnP/zAZswQNg3dQ/fQvfnQmm2zIVuiDt1rzSiAS530
vjpUrnKrrboALkFtgNTUVGv9eqrGEN2PGzfu2rVrpq1fTSPz8/LSVq78dvDg
ujNnvjR9epXx939p/Pjnhw6tYabu795l4eEsMJCdPi108G2TpUtZUBB697wM
CWD88HXfbCcvsnXf+BXr+i6SyQ9beOEXlaN8cZCXSWN4abNRJgv68yJbKzDq
J15CuvBiVd0v6c2kQPcOpXsRFMDVBboXycm5umzZC9HRLpmZLhkZvJw540Le
NPNkPuk+MpLt2MFKS22XnTvZ+vU21n04dA/dq1j3i/oyKdC9A+reeYDuDYd0
v2JFnYMHWVmZTG7eZKGhFtB9VJTgX1uZV8jWraxnT9arFxs40EbZuXNBbq5x
Qzuge+heQbpf0I9JUYdroHuFAt0bDul+5UpB97LSvHVLqbrPyBAG569Zw0JC
hCH61s6aNdXOnl1WVJRr1C8CuofuFaT7ea5MijpcA90rFOjecJxB9xoNKypi
+fk2S/WSkrVarZJuxIPuoXujjtU5g5gUdbgGulco0L3hOIPubR4M1YPuVa57
3dsT1OEa8V2Y8zdo1b9QTrTQPXRvGNA9dE/RHXmlN3zd/7iZl1abZOI2i5eG
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
dnaOIyQrK+fYsb1z575UUmKzWWdVFhPnzIfuoXvoHgCjUJzu7969O2TIHx06
/Ltz5xZ2T6dOLdq2/WLcuL+VldndmwoNdA/dQ/cA2AJl6V6jKTt37nz37kJZ
dltN6s7Ljh1CuVh/f1ZaandvKjTQPXQP3QNgCxSn+wsXLvj61rS3pP6XpCS2
YAF0b3Kge+geugfAFhio+9TUVNvsDx/S/cWLF8ePdyDdnz3LRo5kkZFs0yYW
FYUYm2qXLq0woSIedA/dQ/cAGIUhuvfw8Dh37twDB+DevfuHDx8ZN86BdJ+c
zAYPZo0bs6ZNERPiEhIyKyvrvlEHrZm6//OO1pxMG8H44XunYxgv/RfIZJg/
L7J3q3Vay8uvq2XCtLxMGc1L12CZLO7Dy5tXZOIxmZeIn3mB7oEzYIjuJ0yY
4O3tPXXqVD97Q/swdOjwMWOq293yiIVCv8p1Wm2RUQctdA/dQ/cAGIshuj9x
4oSvr+9EB2DChIlubkPGjKlmb0khloodrt1D99A9dA+cEEN07ziUlZVdvXrN
oa7dI+YFuofuoXsAbIGydC+OzIfuVRToHrqH7gGwBUrUvY9Pzdxchqgi1YuL
w6F76B66B8DaKEv3ZWVlFy9eaNSoZtu2rF07RAVx2bBhdk6OTUvkQPfQPXQP
nBBl6Z6En5d3ftu2x9ate2z9ekQNSUxcVVSUa9RB0BcAS2OlLywAHAel6Z7I
12qPaLWHEVWEfpV3qRVn74MKAABUjgJ1DwAAAADjgO4BAAAA1QPdAwAAAKoH
ugcAAABUD3QPAAAAqB7oHgAAAFA90D0AAACgeqB7AAAAQPVA9wAAAIDqge4B
AAAA1QPdAwAAAKoHugcAAABUD3QPAAAAqB7oHgAAAFA90D1QOpmZmaWlpaa9
tqSk5NatW5bdHwAAcECge6BcZs6c+e6779atW/exxx7z8vIy9uUjRoygF771
1lu0hq1bt1pjDwEAwEGA7oFCWbRoUZ06dc6cOUOPk5KSHnnkkYSEBMNffuPG
jVq1aqWnp9PjTZs2vfzyy9baUQAAcACge6BQXnvttZiYGOm/27dvT0xMNPzl
GRkZ1LXfuHFjWVlZaWlpVFQUPbDCbgIAgEMA3QMlcunSpaeeeooEnZOTM+G/
ZGZmGrWSvXv3NmrUqH79+gsXLrTSfgIAgIMA3QMlEhsb+/rrr9OD+/fvBwcH
z5w586GHHiooKDDw5cXFxdSvFx//+eefr732WlBQkLX2FQAAHADoHiiR0tLS
OnXqbNiwgR5nZ2dPnDjxiy++MGoNH3/8MYmeHuTl5X3yySdLliyxyo4CAIBj
AN0DhbJp06YXX3zxhRdeeOSRR7766qvdu3cb9fLo6OiGDRvWr1//ySef7NWr
l+FnBgAAQIlA90DR3L59u7i42OSXP3jwoKSkxIL7AwAAjgl0DwAAAKge6B4A
AABQPdA9AAAAoHqgewAAAED1QPcAAACA6oHuAQAAANUD3QMAAACqB7oHAAAA
VA90DwAAAKge6B4AAABQPdA9AAAAoHqgewB0iYyMHDFihL334n8sWLAgLCxM
749SU1N79OiRkpJi412yICp4CwAoBegeOBvu7u41y6Ej38XFhR40bdpU+qmX
l9d7772n0Wgsvt309PStW7ca+yqy4bhx4/T+KCEhoU6dOvv27dNd6OfnRw41
bQ9tT+W3cPfuXfoVGPLaxMTEAwcOWG3XAFAb0D1wWh566KEzZ87YbHNDhgwx
oRvL0b1e3nnnnePHjxu7Fcfh9OnT9evXN+SZ1CT79ddfrb0/AKgG6B44LRV0
T6Ik0dSrV6958+biktLS0g8//JD+++yzz/r4+DzzzDOurq7icm9v75dffrl2
7dqdOnW6f/++7Laox/37779L/w0NDf38889r1ar12WefrV27VlwYExMzePDg
kJCQjz76qGbNmitWrNCW675ly5affPIJPZn2JD09XVvecqj/X6iTK7586tSp
7733Xo0aNV555RXxR3l5eVWtVu8OEO+///7Fixe/++47+lGrVq0KCgo++OAD
aRNHjx79+uuvq3qPycnJb7/9tvTft9566/r16/SAPsPw8PAGDRo899xzHh4e
4k/1voWmTZu++uqrtJPi8p49e4rL6VX0aT///PONGjXauHGjtInFixdv2rRJ
9sMHAGihe+DEVND9gwcPSNzr1q0j74tLSkpK6K+DzDhgwAAy0YkTJ+glhYWF
fn5+5B0y7+3bt3/66aeBAwfKbmvVqlW0Ht3//vnnn9RsiI+Pf/rpp4uKimgh
iYwef/HFF4cOHXpQjrZc96Tp8+fPZ2dnf/PNN71796aF+fn598t5/PHHqTss
rpN2jJY8+eSTcXFx4k/F5XpXq3cHiOrVq7/++uthYWH08lu3btESair06dNH
/CltnXOm/dKlS9WqVZP+6+LicvXqVXrw6KOP0qeUkZFx8OBBWr94ikPvW8jK
yoqIiHjjjTfEH+Xm5oqrpd8C/UuP6Vdw+PBhaRNpaWliAwwAIAt0D5wWvSfz
t2/fXkH3d+/enTVrFvXuSY703zt37nz88cddu3adXc5vv/1G/5XdFjUJrl27
Jv2X1kwWHjp06A8//ECKJPNqy71cp04dakLovlD3ZD41GP7+97/r/vSJJ56Q
XClSu3btCifz9a5W7w5oy3W/YcMG3WempqbSVkjW5GJqS4gddr1wdH/27Flx
4QcffEA9fc5b2LVrV4WT+cXFxd9+++3bb79Nv4IKb5Zo06ZNVfsDANAFugdO
i8m6J+d26tQp7L/QS2S31aFDB1qb9F/yF3kqJiaGetCvvfZabGysttzLlVsO
urpfvXp1hSdU1j111Y8ePaq7RO9q9e6Atlz3ly9f1rsPgYGBfLcmJSWR4snO
4n/16v6LL77QPctR+S3s3r37zTffrLzyhISEESNGvPTSS4MHD9Zd3q5dO84u
AQAkoHvgtJis++HDh7/77ruiy+i/N27ckN0W6VLaVk5ODq0nOTmZHsfFxT3+
+ON83ZPRCgsL8/LyvvzyS9q07k8r656aIosXL9aWj2QrKyvTu9qqdkBbhe4T
ExNfeOGFjz76iJoHnPdIHxd1/zdt2kSbnjZtGm3CBN2fP3/+4YcfFq8jiA0k
akVI1+tp5fRT+kWI/6U32LlzZ84uAQAkoHvgtJA4JA1J7Ny5k1QuPpZ0P3v2
bF9fX7KY+N/8/Pxu3brVqFGjXr16L774ou5Qt6ogT4lj5ER+//33p556il7e
qlWrBg0aiLaNiIho2LBhhReS7ps2bVqnTh0yabNmzcQr7xLkygotlrCwsFq1
atFbIEGL707vavXuAEFvqrLuifbt27/99tti+4EDfUqPPfbYM888Q33wN954
Q2xR0BJd3Vf4uCq/hV9++YVaILS5zz77jP577NixJk2a0Nuhlgw9efr06dIz
L1686O3tzd8lAIAIdA+AaRQUFFAnVNaAItQ979Kli+6SzMxM6mUbvi16vuFP
Js/SFvlPM3wH6D1+88031OYx5Mm5ubniHQHmcPv27bS0NN3Ptqio6MaNG9KV
AhEPDw9xCB8AQBboHgDbsGDBgoSEBHvvhdEsWrTou+++e//9982XuGV58OCB
m5ubvfcCAMUA3QNgG6hnevPmTXvvhdHMmzePGipZWVn23pGKZGdn37t3z957
AYBigO4BAAAA1QPdAwAAAKoHugcAAABUDwMAAACAE2DvFgcAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABgMQ4cONCvX7/27dt7eHgUFhbae3cAAAAAYGFOnTpVvXp1xtjz
zz9ft25dabm7u/vXX3/dq1cvO+4bAAAAACyCv78/ud7NzY0eFxcXiwvXr1/P
yvn444/tuncAAAAAMIt79+598MEHTz/9NGn9ueeeq1+//vLly2l5RkYG/ff1
11+nXj90DwAAACia7Ozsfv36NWzYkHT/9ddf0+O9e/fS8jZt2lSrVi0uLu6h
hx6C7gEAAAAV4OnpSbpfunSp+N81a9bQf9u2bXv06NEaNWq88847iYmJ9t1D
AAAAAJhJBd136dKF/ZWvvvrKvnsIAAAAADOpoPvLly8n/Bfq3devX//8+fP2
3UMAAAAAmImo+2XLllX+0UMPPdSwYUPb7xIAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFoEBAAAAwAmwd4sDAAAAAFYE
ugcAAABUD3QPAAAAqB7oHgAAAFA90D0AAACgeqB705gzZ866devsvRcAAGA0
ubm5N27csPdeWJ7IyMgRI0aY/PLU1NQePXqkpKRYcJcshUWM4zy6z8nJoXf6
8MMPP/vss999993Zs2fNWdtvv/02YcIES+0bALpcu3bNxcWluLhY/O8//vEP
+h4zdiV379718vLSXTJ79uzHH3+8sLCQHgcEBDzyyCMW2VugINLS0lq0aEFf
g7Vq1froo4+uXr1q1c0dOXKEvnUXLlxo1a1I0AH/3nvvaTQa/tMq/2mIJCQk
1KlTZ9++fdbZu//w/PPP16xZkz4W+hunBwa2LixiHGfTfWZm5u3btwcMGPD0
00/fv3/f5LVB98B6kO7pWC0qKhL/S7rfsGGDsSs5ffp0/fr1dZeQ7mm1mzZt
osdff/11jRo1LLK3QEE0adKkefPmWVlZpaWldDzcu3fPqpujvvYnn3zStGlT
q27FWCr/adiehx566MyZM4Y/H7o3Ckn39Jg6OI8++uisWbPo8fXr13/++Wey
f926dWfMmCE+efTo0fS38MMPP1BviH5Kz6GF1Dzo1KnTY4899ve//71BgwbS
h+/u7h4VFTV48OAXX3zxiSeeEDdx/PjxL7/8kprQ1NqUumbnzp377LPPXn31
1ddff/2NN95o2bKluPz999+/ePHid999R89v1aqV+MwOHTrQXr388sv0JyN2
9FxdXdu3b0+7NGzYMNoBsoC4LaAyqtK93mNV76FCX7B0mFHfoX45PXv21Jbr
vlGjRr///vutW7foS5j+BMQ1hIaGfv7553Ts0cG5du1aceEHH3wwbty4V155
pXbt2vTnYONPAFiDkydP0iFR+TR+TEwMfX2FhIRQf5+esGLFClpITYIePXrQ
cUW9UTquSkpKaGHr1q137Nghvmro0KGLFy+mB7GxsbScvhvpq4kONukJBH3R
7dy5829/+1tGRoa4ZNu2bfR198ILL7z55pu0WrEnTj+lRggtpK9QOsKvXLlS
1Q6I76JZs2b0TUt/BSNHjqR2Cy185513aNP16tWj9Uhb13tg6/3TGDJkSP3/
kpiYKK1h4cKF9BboO5++nKUzIR9++GF4eDh9Az/33HMeHh6c98Whgu71rlOv
cej9ent70x87/WHST8VO69GjR+kPVvzNzps3j74Q9G7UOXWvLT9u+/XrV1ZW
Rt97dMzQsURNPjq04uLi6Kd0mNHneeDAAfpi/OKLL/z9/Wlh9+7dGzdufOfO
Hfo2pt+OpPsuXbo8++yzdPCnpKSIDQPa1ksvvTRt2jRaLR0GjzzyCH0na8uP
tClTptADX1/fzp07iwcqUb16dTqowsLC6HdHW6QlJ06cWLlyZXZ29t27d+kX
vWXLFlrYpk0b+v3Snw8dAHSoNGzYkI4QG3+MwAaIuv/1119/L+epp54i3Vd1
rOo9VOirMiIigpqU98vJzc3VluuevtXpC23OnDk+Pj7SyfxVq1b9+eefdDTG
x8fTasVmBjUGBgwYQOuhb1c63uios9/nASzDmjVrSBz0gH7Fl8oRe/cbN26k
3zt90R06dOhBObSwV69e9H1FBw99p9GrJk2aRAupPSCdaOrYsePUqVPpQXR0
NCmVvr5otdOnTyc7i4dQQkIC6ZuO22+//Xb+/Pniq+ibU1wVHa7SqmgJHdul
5axbt44O5qp24Pbt27T+8ePHFxQU0FclqU1cA+0zPZNeS96X3q/eA1vvn0Z+
fr74X2qx0B+X+PLt27fTnx6ZlF5IXa2PP/5YXE5/Gj/99BM1UQ4ePEhf3eLZ
eL3vi0MF3etdp17j+Pn5UaM9PT2dPgp6ycCBA8U1UK+zSZMmtPPPPPMMdR71
btRpdd+uXbu+ffsmJSXRQjpEZ5dD3ajJkydry3VPXRvxmfQhi40lOmD27Nkj
LtQ9tUK6J3frboueRsckHefif6llSOqnB59++ql4GYuO0n/961/S8+n3W/kI
OXbsGH0nk9+p5eDm5qYt1z29PC0tTfybbdu2bWBgoKU+H+A4iLqnL6vgcqjl
SYdHVceqVt+hQuzatavyyfxhw4aRxKkHQWuTdE/tB/rCp/bqDz/8UK1aNfqG
1JZ//0jjW+hIoy9YG715YDWoWUjWoAfUfSa9UieF3KEt132dOnVIH7pPJmtQ
t118vHz5cvru0lat+/fee09cWFxcTIfQ+fPnteUCom+5rVu3UpNV+rqbOXMm
fZH26dOHXqXbYad+cYsWLZYuXSrtht4doE7622+/XdUbJEHr6l7vga3V96ch
8cQTT0i6p/4g/bGIj6kF4uLiQn+Y2r/+aVCfWuxz6X1fHCrrvvI69RqHWh1d
u3YVvwRoodQIoU+ePiLaf/reqGqjzql7+mToY6FfEHW6aeHcuXPD/ovYDdfV
PT2Nvu7oAbVg6dAVF1bQvdhnl9ixY0fdunWl/7Zu3XrixIna8tGV9B1LTVZq
9NKRKT2BdH/58mXdNZDW33rrrdWrV9PyIUOGiEcddO8k6D2ZX9WxqvdQIXbv
3v3mm2/qrlbUPfXg6MihlUu6p84XHVoxMTHUXXrttdfE71jd7x/6GpGaFkC5
UM+RfunS9Xrq70i6l6whQd+QBw4cEB9Tm1NsJ9DTQkJCxIV6dS8eutSYpM7O
K6+8Qt3Pbt260bdljRo1bt68KT6Heuv0Tfj555/TcSt2rrXl/Ws6yKnJSh1q
OhSr2gFqsVCTo6o3WEH3eg9srb4/Dd13Lem+V69e9AclPi4sLKQGw6VLl7R/
/dP44osvQkNDOe+rKji6l9ap1zj05U+fkvQlIHkkLy/v/ffff/LJJ2lhVRt1
Qt3fuXOH2nvUdLx//35paSn93qkVRz+l59DnL15z0at7aqC2b9+emnl08NBn
ztH93bt36WMXrxbRwUO/tYSEBHr85Zdf0uFKx0xBQYHu8yvrvmXLluJfIm3r
q6++gu6dCr26r+pY1XuoENTDevjhh8VrQ2J3Q9S9+FNJ9+LfRXJyMj2Oi4t7
/PHHJd2L3QTqCtEXnXgAA0VDCqaWW+fOnUlGdPD8/PPPHN3T1wsJnY4cejId
V8OHD9eWn16m70Y6FOl4ePbZZyXd16lThw4hciL58Y033qCVk6lr164t3V1C
CiMV0gsXLVokHsB0BNKXJG2aHkdFRUlXzMlr9I1a1Q7QVui4DQoK0pYf1XSI
SpdEtX/VfVUHtlbfn4aEru7JudQvE6/PUnNXfF9afWqu6n1xMET3eo1Dn8O7
774rDiQgl0kjMej3Qi0ratE9/fTTFy5c0LtRZ9M9HSok+u+//166unHq1Ck6
1Gk5fZc2aNAgNTVVW/7RSWcvSfft2rUTn0lNxMcee+z111//97//zdG9tnzk
Bh0qr776Kh0/dJyLCwcNGkStXDpsqPlH6hcbsQQtrKD78PBwOj7p1yq25STd
00FFjWToXt2kpKToHaqn91jVe6iI/PLLL/Sjt99++7PPPtOWn1wSvzO15V9K
1AoVH4vDA+rVq9eqVStaraR72hZ9pdesWRNde9VAh1aTJk3INXRgUH9ZVFtE
RETDhg0rPJO+Zxo3bkwHAB0b9FUjdlfJm3Ts0WtJSSQXSff0HDrMSHMvvfSS
2CWnLhWJW1obtStobVlZWdReff755+lYpZfQ9zD1SemnS5YsqV+/Pq359XIO
Hz5c1Q5oy2+ur1u3Lm2ImhNkQ1qntJWdO3fSH4L0X70HtkiFPw0J+rrWtfDI
kSPpC582R9/YR48eFRfSEl01U7euqvell+eee47az+KNePRAbJBUXqe2CuPk
5+fTJ0/KoPdFihGfGRwcTJ+eOOaBhEXd/Ao9ShHn0T2fe+XIPo2ax+np6dJF
edknU9NLaj1Sl58OG+raU1ON/uhGjx79z3/+k/NyOmAw8B5UpvKxyjlUbt++
nZaWJnvE0svFvomE2N2gg5a+XszcYeBokBcMvA2ZnqbrU2351xodFbpLSPfk
F1puyJEmQt+BFVYrbouWV1hD5R2Q1mDIkVn5wJYw8E+DvEnf+bIbkvZK796a
TFXGEUcqGvhpS0D3NoOOOtI99bCOHTu2ffv2zz//HMOfgMOie3YRAA661+6B
IwPd25Ljx48PGTKkXbt2AwcOFG+YAsAxoXZphaHaAOjl2rVry5Yts/deAHmg
ewAAAED1QPcAAACA6oHuAQAAANUD3QMAAACqB7oHAAAAVA90DwAATkVubm7l
ung2Q5yQpLCwkP+0BQsWcOaDdViqeneRkZEjRoywyy5JQPcAAOAkpKWltWjR
4uGHH65Vq9ZHH30kFXW1GQcPHnz11VcfffTRv/3tbx07duTM9qM7k7lS4Lw7
Ly+v9957T7YwrlWB7gEAwElo0qRJ8+bNs7KySktLZ8+ebchUoiajO/eyWCNM
Wz5DrKura0lJCe0D2VzvXK8ijqB7vW+Bg+Hvzi5A9wAA4AycPHmyZs2alU/j
x8TEDB48OCQkhPr79IQVK1Zoy+vCk3Cffvrp559/fsSIEeJk4K1bt96xY4f4
qqFDhy5evJgexMbG0vJOnTo9/vjj9evXF5/g7+/fsGHD4f/l448/pn9pJQ0a
NBg7dqzu1pOTk3Vr2r711ltiVRraesuWLT/55JNatWpRE0WcybaoqKhbt26v
vPIKdaLfeOMN2pxYpc7d3T0qKorexYsvvvjEE0+Ic0ofP378yy+/pJdTtzoy
MpKzrTFjxgwZMqRRo0b05GbNmonbquot6O58hWI0ld8d8c4779B+1qtXj96F
tJA+5Pr/hX5E+08LqQ3m7e398ssv165dmz5PAyc6NhzoHgAAnIE1a9aI1bVI
mpfKEXv3GzduJK1Tz/TQoUMPytGWl39t2rQpGYeESK+aNGmStup692TJsLAw
Wu306dOpeSBWd5LqMRFSKcatW7dSq4A0Sr4Tn0a7Ua1aNemZLi4u4iUG0j1t
7vz589nZ2d98803v3r1pYWBgIO0nvfDcuXNPPfWUWBRGW16n7Nlnn6UWSEpK
imjwnJycl156adq0aSTobdu2PfLII/QSo7ZV1VvQZeXKlbp+r/zuCPo86WNc
t26dbnHe4uLi++VMnjyZPjGxUI6fnx81Oaixcfv27Z9++mngwIEG/mYNBLoH
AABngNwkVo2/cuUK9ZrJj1IB3Dp16lSYM/mZZ56RSsgtX778008/1Vate2nO
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
7kCZ8G/EM1P3sr376cN54a9cdhwgf9P8z41yrCEv0D0AatK9tnyQ/JEjLCHh
f/nzT2EC/IkT5c8M7N8vWHXVKqFavQWzYoVwbuGXX4SzB4GBxmXuXEHKbdpY
eHIbcSJ928yKL5vISIUN1YPuoXsLUlZWZq9NA2dDZbrXlo/N0z2RXlDALlyQ
H6pXVibMmpuZaZWcOiXsAH2rTJ4sM6MdPW3qVOFfKbSQXijdQ2dUvL2F0ANP
T4cN9e4Vdu3ezFn1+FP08K9fU/jnw5f0lgl/2L+s7pf24oV/fVz22j3/U02q
LxP+yfx5rrzYS/fr168fPnz42LFjr127Ji3cuHHjcB0yMjLssm9AfahP9xUi
3ncvq3urht7jtWvCFHznzvFy+rRwhiE6WpgiQMr27SaOwN+5U7gcQEpFvXvL
hj97G4Wve/4suLKT6PKv3fN73xT+qYMdzWWyojsv48bzwq9vS+HPuXfhXZns
/4oX/mwGdtH9xYsXfXx88vLy4uPjp06dKi0vKSkpKGfz5s0zZsxA9x9YCtXr
XrwRz9/fnroXWx0lJbzQfiYnCxcd3NyESYHMz4gRwp1ujRuzZs2E8X7mTMZr
zbhs2qSwk/nQPXRvEcjmW7ZsoQcajcbV1ZUsr/vTzMxM6trfuXPH9jsG1Ioz
6J661dTDXbFCuDTvyJkyRbgdfv16tmmTMCHerl3mhlYith+ojz92rGPGJTZW
YbPqman78+/xIjswgH8PYMAQmazqxovsNDv8U+L8metkdR/dkhf+pXkK/1rA
4j682EX3q1atiouLEx8PGzbs3r17FX4aERFh+70CKkb1ui8rE66eT50qXDcn
nzpm/PwEL1OXnP7NymK5ucIZCdrhYcOEYfkmh17etSv79luhg++YoX1bu3ZW
draSbsSTdSJf9/wL0LK9e35VOH7BOwq/MJzstXu+NMdO5GVnM5nwb8Q73UAm
/Gv39urd962E9KPw8PCYmBjx8aBBg4qLi6UfZWdnu7m5ZWUZN/0UAHxUr3tt
+Q16qans/HlhzJ5jJjFR2D3q1LdpI1zRbtdOOB3h6iqUnl+40KwsWCAM73fY
zJlT7dAhhfXuoXvo3qhjtcyFSdHd0OHDhwMCAkpLSxMTE8eNG6fRaB48eCD9
aM6cOVbaJeC0OIPuxT5+aalDh9okd++ymBjhZH5YmDDYoHVr+98lJ6VrV/br
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
UcydixF68+aP9L//iW++wTL769fjGyF05QpOE5g1S0ybJqZPt5a015nPds92
b9S9qts9wnavIbvP59QxMTFhYWHw4ODBg7t27Zo5c6YS3V+4cAG8+OzZs2DH
6enpx48fh43wFBh3bl54PmnSJL2fM7zQ1dVV1/FzcnLgsJs2bQLHz82ze3t7
+zNnzkRERMCD+/fvm/iXZbu3ot3DuwgLwyi7Uyecl2esunZ9tHqOry8W0VUV
EYH18z//XNSoIWrWLFTwbNWqmDRYqZI15e09MyEh3qhbx7p2Lx2Dpu3+2vuU
vBwlolsabdZLRI8UbP5Joma/U6Iz83Wnn+uVbgZ7QdHL44J0V6IpKCtm5uvW
GmK7L7F2/9vfqJ/DjBkz9u3bl5sXcQcGBgYEBEDwrj7r7u6uRPe5eZ4+YcIE
cOSpU6eeO3dO3QcM3cXFRd0NuHPnzi0dli5dOnTo0NjYWOXZrVu3LliwICEh
QbH77OzsuXPnDsjD29sbfjXxL8t2b0W7T0rCkvienjjFYMeOosjfH5193Dhc
5E7N04O4fulSzMGDd0HLw0OPpPMLzKoyYWGLtBXdmzjvnl5eZ5aLRPSppSvs
uE2mtKG1RD9tpkQX0ZVO6qer6kW9JZFurdqCohMgLWr3urV82e5LrN0XjO5X
rFixbt263LxUPYjod+7c2adPH/VZ1e7BHG/cuAEPIPqG3fr166fk7B0+fBi8
HmJz3c/Ww8Njog7Dhg3DqZr+/rl5w/3wGM7o5+cHB9mxYwe8FnbIzGPEiBG6
zYaiwXZvRbtPTETLDgrCD6FoSk/HI7i4CHt74eDwjxwdH/u1oPr3zy94Sb9+
WPSvVauiVy4qgvz956SkaClVj+2e7d6oe9W7j1DFdq8hu1d66Y8ePQpu++DB
A4j09dr9/v37wSLBrOEx+L6DgwPY/R9//DF8+PCoqKicPPR+zrB91qxZELYr
O6Smph7JY+/evfb29uHh4ZcvXx41alRGRgacHew+IiLCxL8s27117R7iemXN
uyIrI0PEx4vYWCN09664deux/n9FoaFYCAgcPy+JLr+6dcOkPpCBFYAN1LZt
87RVVW9dO0GLtvurH1CiC7+D6KJ8s50kol2PTgwAfbOHkucAStK1BughEunY
Pf1HmTiCkkXtfn4/oYrtXkN2D4DDQgwODg7h9vjx48+ePas+BXavjN1nZ2ev
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
pJ35ugnwBUUXCLKo3es2aWzD7nNycuLjjRuAM+N5i3lZGVvC6nYPxm0Ddn/p
EnZN375t0PJ5Z88KT08z2L0SfRdc6f7cOfxwwO6LcEz4SH/9VXz3nWjeXL9+
+AFH8OfOxbccHU0pKAh3g3dKyu748eJeANdEu5emnNF2T9fIpZecA9F2T49Q
g+iZdLrdznpF16aj5wDWCDdJdM4DiE4MoPtMLGr3Xx0QqrRu91lZWUuXLnV2
dnZxccm32Kul2bdvX//+/e3t7eHn7t27i+28toR17R7CQIgoU1ONVkKCWLGi
pNh9bl7A3rMnLjM3caKYMIHS+PFYt3bsWAtezPnzOP4OYbhRob0i+GyTkvCP
QmjXLpzl99Zb4u23Kb3xhkHy9JwWHx9n1K3Dds92ryG7171Irdu9j4+Pu7t7
amoqPI6MjATzjY2NLYbzQjPD0dHxzJkzDx8+jIjAIj9FWG2WsaLdJyev79JF
jB5dlGps4Krw2pJj98nJmCQ/axaOWdOCfeAtg+lb7mIuXnw0XW7pUpyRp2rZ
MrNp4UI8hTlUJjx8cUaGlqJ7uuw8yJTMfGldO3r8WvpyuricdI4hPWtgXTtK
0rbEB1cptVkvUdPtlIZPomRRu9dtCmra7tPS0vr06aPr72FhYcVj9w8ePHBw
cNi7d29KCn5XnDp1SnnAGIX17D47O3v7H398OmPGp7NmGa0ZMz7p3fs5CDOt
bvSqsrOxr/7BA7kiIswzdl+Y4DJ+/x3H0HWL7trbYy99q1aY2me62rQxj+BQ
AQFzUlK0lKrHds92b9S9qjtTUtN2D+G8i4uL8vjIkSOBgYEBAQEXLlwonrPD
idzd3cH0wY92794NYX7xnNeWsJ7d5+Y5fnJGRlGUmnpn/fpvSk50b5TMlapH
SEnSS0v7p5f+4EFc475tW9Gpk3Hq3Bk7Urp2lSTdFVmaS9Wjc+NBtN1/dpqS
NDOfbmmMnCARnTz/Y5BEdLGarc0p6a4Uo1evxlDSzW/XK93idQVFD5FY1O51
hyQ0bfcJCQlw/UpPfkRExMGDB6dPn75169ZiOHVcXBycER5kZmbCg6FDhx47
dqwYzmtjWNXui05mZqqfX2O2ewOVk4NjDUuW4MR5pYSO4TpwAF+7erWYMgXH
IMwrqyyAa6LdS1PEabunw+fuyyT672FKdF07EF1mR2r3/eZTCm5ASXfZd70q
F09J2sr6bSGlYVMoWdTuPz8pVGna7gFPT08PDw8wX3h8+/btSZMmFY/d37lz
x9HRMTIyEoL65OTksWPHhoWFFcN5bQy2+5Jp95mZ4soVrKKzb58ZtGsXThwI
DMR4X+9U+sIUG4uT++BqO3TAIng1a5pZNWqIZcvcExOLdQFctnu2++K0e93p
hFq3ewiuly9f7uLiYm9v7+TktGbNGiXYLwYOHDjg7OwM53VwcFi1alV2dnbx
nNeWYLsvmXYfHY25ds2a5S+hUzS1bClatMC5DBkZkmuLisLF7yCWX7MG0/sn
TcL+9v79cejfxQXr8E+bZl7ZhYYu1NZEvJrHBS3a7uneeGml2WonKUnL5NLJ
8/TkdBDdJb6sOyW6qQD6zzlK0nr+tY5RsmIR3U8jhCqt272KtTLlkpKS2OiL
DNt9ybT7mzexxt3Bg+LOHbRgE3X1qtiwAScyQMBOX9vWraJ9e/Hjj8rqtOLb
b3EtvLVrsVBenz7maXvoqk0bO82l6tF1ckC03dMxrInRvftAiaYMo0TP8gPR
ZXYOfEWpi69E9ND8D9sksp9HSV34Xq8savef/ClU2YzdM1qE7d4qdu/lJdkH
PHrlSixlk5srWbDeQIGPd+2KVk5k5XXsiC6/bBnOK1TqG1y7hmV4R4zAQgGg
cePMrLFj7UJCNDZ2z3bPdm/UvfrxRaGK7Z6xImz3xa+zZzFkVjrM9QqiaW9v
nJ5/5YrZTnrjhti4ESv9ErPg58zB6XubNmFqn/KqkBC81ObNMdJv1QoX3DGv
2rbVXnRv4gK4H12mJF3B9ucASvP7SUTPlZPWupnsRoleEU+aGKBriwVFz7MD
0ZME6ZV/LWr3un9ftnvGirDdF78gcp85E0vwubnp1/DhYuBAHC6H4NpcJ4UA
PzNTXhMAmgRg6y1aYE9769a4xg00ALZvx4n8s2Y96gEwozp0sNu82Utbdk+X
xQOZMu9euv4ObffdfCSiq+p1WCMR3ZaYZ0+pyQ6JPj9FiW4mgehPhl6JwKJ2
r1s9gO2esSJs98WvrCxx9664cIHSwYNYUv7y5eK+tuvXMYHfx0f4+qL690dT
HjsWV72BxxMniqlTzSu7I0c0lqrHds92b9S9+t51oYrtnrEibPfWUk4ONdR+
8yaO3f/1lxWuClojmZmP9OefaPpeXmLUKKyTX7Xqo9lz5lL16mLZslnamohn
YlU9elW4FoES0WkD0vFxOkGdTm4HzXKhNGo8JelaA3TivXT+I91QoecnWtTu
374lVLHdM1aE7b5kCux+3jyxcycWwI+MtJoiInAl3CNHsALA8uU4N9DcKqO5
iXj0Oq0g2u5pv5ZOhaPX3pWud0+X2JWOj9Oz1+kFdL48apKkS+TQKY50sUGL
2v0bt4UqtnvGirDdl0zFxGBM3aSJ+PlnK6tlSxzHb9fuUYl7s8vf3zM5WUtj
92z3bPdG3auv3xWq2O4ZK8J2XzKlVLS7fNkkXbmCY/E3b5qko0dxyL5jx0eT
9X791Zzq2NEuKEhjNfOfSxG0aLvXXf28oDqtlKitH6UeSyWiM/Ppg4Po7PeF
v1GiV8AB0SP70pL79OdGN6IsavevxApVbPeMFWG7L8kyca49OLWzM9bMKXJo
/8sv4rvvRM+eYvZsMXeuJWR3/PgSbXXmS9dqoe2eHqGWToWjF4KZ7SSRTzdK
0nn3dDIeXVWP7pcA0Z+qNK9gyDRK40dRsqjd69ZVYLtnrAjbfUlTVpa4dw/H
zS9eNFXLl+O6Nps3Yz29XbuM044dqL17cYS9Zk3x2mvizTfNrzfeEF5e0+Pj
44z667Pds91ryO5fSBKq2O4ZK8J2X9IERt+ypahWTdSvj8nwRVa9euKLL3CC
f1ycuH/fOMXH41p4fn6oVauwnO+8eViixwIqEx6+WFvRvXRGGG33tGdJy+zQ
49d00TwQ3RigZw2A6LH7pT0oSasR0i2ZypES0ZMOPAdQsqjd6w70GHKiwlZy
L7id13xnjILt3rqCWB7sValYC0pJEefOYXW7O3fwsYlat0707YtFeyZMMGJR
2okThYOD+OYbTBRs314tbm8RtW4tAgI0VmaH7Z7t3qh79Zk0oUp6oo0bNw4e
PHjEiBH5vnIDAgKGDh06atSoU6dOwa85OTm+vr5ubm6TJk06ffq0hS6esTHY
7q0o8Pe9e9ECwGEVgdsOGYJlbcCsTT/+7dtYEdfdXXh44OC7pyf+lAoaG9BC
aNECB/07dzZzbl6BVD2huap6Jtr9T5spSefd0/3hY8dIJKklS64hC6LzADf9
QkmaWk83hOgUR9DEEZSGT6JkUbt/OkOook904cKFcePG3b9/PyQkZNq0aer2
S5cugbNnZGRcvXp15MiRsAVMf9asWVlZWZcvX4Y2gIUunrEx2O6tqCtXxODB
wskJjRhMGTRrFno9BOPQEjD9+A8fYu+BUh33zh1x6pQIC8N59ISOHxfh4TjR
fu1aHAiwvMocPbpIW535jfcKWrTdV7xE6a0oiejSc3P6S0RH99/uloiumU+3
JaSzBui0AenL6XKCVlwi54ksoYo+0ZYtW7Zu3ZqbF7w7ODiAmyvb/f39AwMD
IYr/66+/wPRhS1Qe8CA2Ntbe3l7dk2EI2O6tqFu3sHTe5cuPVa0/f15MnoyG
e+aM2QQ+7uYmatUSdetSY/3Vq4tPPhGVKqEqVy4OwYkWLpyZkBBv1F+f7Z7t
XkN2b/dQqNI9EUTxsTqAj/v6+gYHByvPDho0KD7+0f/FkiVLXFxc/Pz8PDw8
li1bph4hKSlp8uTJQUFBFrp4xsZgu7eo0tLE6dNYki44WI82bhTTp+evlAsh
v6OjaNQI15o3l+rXx8VuVqzAnP+7d/Xr6lVcJHfevGKWXXj44owMLUX3v2wS
tGi7/24XpZcSJKLnntPz4kH0yL50bvviXpToloa0IP+rMZSkEyLozvwNrSlZ
1O7zoT4Fzj5Bh3Pnzq1fv3737t3Ks/3798/MzFQer1ixYtWqVfDgwYMHsD01
NRUe3759e8SIEbt27bLQlTO2B9u9RQWhesuWonZttO+GDR/T119jQN2pE/ps
vlelp6P/gjWbSzduoLd27iz69NGvfv3wOr/4AtsGylp4xSU7f3+Njd1/GiFo
0XZPr4Cju5yKXnVcTWnERInofDbpGrV0JZypQym19JeIrqpX87hEXZdTcvSi
VELmx4WFhUH8np2dHRkZCd+6OTk5iYn4rxESEjJ79uyHDx9GR0eD3WdlZUVF
RQ0dOhRaCNa+ZEZLsN1bTg8f4tp2CxZgjJ+VlV/Z2bi+ra+vORe1J5SYiF36
27c/mlCfT7t2iTVrcNXd9u1Fly7Fqi1bNFZVj+2e7d5CgL+vXbt25MiRw4YN
u3jxIpi7g4MDbIcGwIIFC0aNGjV48ODQ0FDY4u3tDdfs+DfJycnWvnZGA7Dd
W9ruvb3R7vXucP06FsY/eBAD8OhoC+ruXcwQCAoSixeLpUv1C57y8MBEwVGj
xOjRxaRRo+yCgxekpRn3ZWVdu68fImjRdv/1fkpv3JGIzk6n889BdGe+dOy+
9QZK9MGlNXzoIRLpJEH62uilBEqI3StkZGTonVCfnp4O7YHivx7GZmC7t7Td
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
wzBMKcDaLQ6GYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGMRuHDx/u27dv69at3dzcMjIyrH05DMMw
DMOYmdOnT//rX/8SQrz++utvv/02bBk0aFB9HWJiYqx9jQzDMAzDmMTMmTPB
652cnOBxZmYm/KxXr57Q4datW9a+RoZhGIZhikh8fPxnn3328ssvg6e/9tpr
FStWXLZsGWxXNkb9TU5OjrWvlGEYhmGYIpKcnNy3b98aNWqA3devXx8e79u3
D7ZXqFDhqaee+vzzzxs1arRu3TprXybDMAzDMKYycuRIsPslS5aoW/r379+5
c2dHR8cXXnjBzs4uNDTUipfHMAzDMIzpFLT7tLQ05UHv3r3hqfnz51vp0hiG
YRiGMQ/57D4sLKxcuXIDBgwYPnw4PIDo/vjx49a9QoZhGIZhTESx+6VLlyq/
Xr16tVmzZk899RRsfOmll7y9va17eQzDMAzDWIjMzMybN29yTj7DMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAxj2wiG
YRiGYUoB1m5xMAzDMAxjQdjuGYZhGMbmYbtnGIZhGJuH7Z5hGIZhbB62e4Zh
GIaxedjui8acOXM2bNhg7atgGIYxmtTU1Fu3bln7KsxPYGCgq6trkV9+48aN
7t27X79+3YyXZC7M4jilx+5TUlLgnT799NOvvvpq06ZNz507Z8rROnfuPGHC
BHNdG8Pocu3aNTs7u8zMTOXX//u//4PvMWMPEhcXN2rUKN0tnp6ezz//fEZG
Bjz28PB45plnzHK1jIaIiopq0qQJfA2WLVu2WrVqV65csejpjh07Bt+63t7e
Fj2LCtzwVapUycnJoXcr+K+hEBoaWr58+QMHDljm6h7x+uuvP/nkk/CxwP84
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
z7n3lPzHH398ypQpFNA7d+6888476S0GbetWH0GfwMBA/Xyv/ekIOp50GNet
W6c/OW9ZWVlONRMnTqQjpp0ox8fHh4ocVNjIyMho0aKFp6dnPf+y9QRxDwAA
zgBlk3bW+EuXLlGtmfJRNwFuw4YNa4yZ/OCDD+qmkFuyZMk///nPqlvHvW7M
fEoxylPKzapbZyWVMSiFqYZOFW2KNiaCdRfzg4ODtQUVKk5QIaSqer68Bg0a
6GaGorhv166d/v7v27ePYlQ3iUyzZs1oowZt61YfofLPLFy4UD/xa3w63XL9
yXl1rF+/no6zbsrdN998s3379jOr6dixY+1ZiU0EcQ8AAM7AoUOHqJKru1/f
vXt3Zr77e++9VzuVbVX1/KracgK9bNWqVdqFdcb9lStXKFAuXLhQpVQ1Li4u
btKkCcU3vZhil8oJ2uV1RvDy5cu1e5iUlHTbbbdRBf+pp57SXgDXUnsW8l27
dj3xxBO6X1u2bDl+/Pj6bIt2SXc0an+ENWvWeP6ZLl263H///TWmpNR9Ot2S
2nEfHh5+3333HThwQLdEO4f1mv9Bb6kyK4h7AABwBqgqSpV0qgUXFBRUVFR8
9913TNy3atWKAr28vJxe/MEHH2iDj6KNklGj0Rw+fPihhx7SxX3Dhg0TExNL
Skq8vLyeffZZWnmdN76vX79Oqz1+/HhVdcHg4YcfDgwMpE387W9/27JlC72L
6sWUR7oI/uGHH2idhYWF77//vnYH/Pz8aA303szMTP29rR33WVlZtFrtdPBU
fb7rrrtonxW3de3aNSrYaJO9Pvfu8/PzaX+0c0dmZGTU/nS6V9aI+1OnTj3w
wAObN2/WXxut/+WXX9buEn1As3eWRNwDAICTcPXq1U8++eSOO+645557KNe0
l5FDQkIo12q8MjU19aOPPqJMpxoopRiFPi2MiIh47rnn6L1Uv+7UqZMu7uk1
L774IiXp448/rrsmMGjQIN3atGFNWent7U0xd/fdd7u6umpLDrR87NixtOTB
Bx/s3bs3lRa0N7Lp2aZNm1JBglb7+eefa1sUREZGUmA99thjjRo1eu2113RV
8tpxT+zcuZNe+dRTT917772zZs3SLrzVtl555RXa1u23367bVp0foQbjxo3T
XYq/1afTsnv3bopy3a+NGzemD3Lv//jss89oYVFRER3V22677fnnn6c915ZV
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
LDMYtIm0NJmzmzbJ/a9TKkVs3ixGjBCdOsnEHzvWgnp7i6go/6IiNd273/Nf
wcvH/cJfOYPbKcj3Lp8yUEF+ipyN3ytY4crpPpdTcd/46+2K0/fwvf77+nJa
7kue1nz8LaFTFWmiip20EI792RH3xmmhuC8pEfHx9aoXh4fLUenWrxfl5YYN
pKPRyK0oTrcXGytWrJCN5+t/p8AoXU+cWFRSoqaOeIh7xL1B5+rRd4ROVaSJ
didt+C9mK6sQ94j7W8T9tm3mj3utVGFXlFJ740bZVO/wYXH0qPmNjhZ798ru
AxbW9fJllY2Zr//tXad83M/szckP7U7ypYW9TRXkx9zjL6eT9H3ByL9XcdB7
Pu4V+93zQwoMmMpp0bg//C+hUxVpgrh3VJwt7ikos7JkGzn6RKb4+++yg/ym
Tbb8LPv20beHaNVK/PijkbZta2PbtKEi0yx1NdVD3CPuDTpX9UciUkWaIO4d
FWeL+9xcMWGCaNpU/PCD+P57423ZUnz8sbyeb8PPUlIiMjPlvXijpWJPbKzs
0Gc7G2RkrNBo1NQRD3GPuDfoXNXvyaiKNEHcOyrOFvdUtZ88WU7pTllz5ozx
njwpB6bbvNn2n6igQAb39esGe/SoHE7nt99Ez562VHXz3W/9VvDycb+8Ayff
rZ4M7MzJFwZIfojdue4KahpwrmzP2cNfwdVtOccPV5DvU8BPj2vRuI/4SOhU
RZog7h0VJ4z7GTNEaqqpM8dRyFqiqZ6hpqeLNWvkWD3jxxvmxIlyhprBg2Vj
v507TZqz3jRdL15U2b17xD3i3qBzdd+nQqcq0gRxX4P8/PySkpIaCzUaTUVF
he7XsrKymzdr3pSkF9DLDD3++qslKqsxdCV14rRxb+J6LNQyX2tZmRw8vz4X
w5cvl4PheHsb3CQ+IECMGiVH8Js1Sz62lQsWuJw8uUhdY+affk3w8nE/hvWl
eAX5NFecwZYvLSjGvf4AcbX9Zhtn8y0K8ncxFO8F8J0Ovt/IadG41++1gbi3
Z6tqxX1cXNzo0aO9vLw8PDx8fX1zcnK0yyn9vb29T506VVWdzoGBgW5ubu7u
7oMGDYqPj9e9fdmyZWvWrKn/kc/MzJw6dWqvXr1oW1TGoCURERFDhw4dNmxY
ZGSkyX9YxL09xr12XjwvLzmmLuPAgXJEXB8feQs+P99gk5LEqlWyZz3lvq0c
OdIlIkJl/e4R94h7g85V/esniHt7turPcZ+cnExBf/z4cXpcWlo6e/ZsinV6
nJaWRllPrzx58iT9euHChT59+mRnZ1NFfsuWLVQ8oIXFxcX+/v70Gibui4qK
aFX6S4KCglavXk3rmTlz5o4dO6hQQdF/7do12hPaBO2DiX9ZxL29xX1lpRxN
d/hwuXL+SnhoqPwsI0bIWWj37jXYPXvE7t3ySr4N3bHD9dKlQHVdzD/0nuDl
456/oK049Bwfat6jFNzQipMvipAJL3K6zeN867iCfLd6vlM/OXIsJ1+Ismjc
72wmdCLu7dmqP8f9+vXrly5dqvs1IyMjJiaGHkRFRe3evXvatGna2n1CQgJl
cWxsLMUxpfyxY8do4dWrV1etWrWmmlsdZ3rjwIED9RM/NTW1oKCA6vUTJ04M
DQ2luHd3dz9z5szZs2fpQWGhYd+TtUHc21vck1Rbnz9fNg8oKVEwMVFOXk8V
/KlTjXHaNAWnT5eD+VhSl5iYgOJiNV3MR9wj7g06V/WbECDu7dbag+hOnTo1
PDycHlDNfdOmTSEhIVR51z3r6+urrd1XVV9yHzduHCWyj49PXFyc7jXbtm2r
EffXr19P1mPx4sWDBw/OzMzUvSAnJ2fEiBGenp6XLl2iav6cOXN6V+Pv729E
M4AaIO4tFPelpeLgQeHmJu+tG6S7u7xEP2SIHC5PcTcqKuQU9teuySvzvPQa
I7xwQU6Ya8kx811VN2Y+4h5xb9C5uqW50Im4t2er/ly7115ar6puqkc1+l27
dvXo0UP3rC7ur1y5kpSURA+o9k0vc3Nz07XZqx33fn5+4/UYMmQIbXHDhg3a
ZysqKrSt8qiYMXbsWKrX0wvKqhk+fLiudGE0iHsLxT2lcHCw6NNHtoubN88A
586VTe/GjJEFhnruTH1G4TPO0FBZAune3YId8XbunKOujnj8MLYkH/evneZU
XPmPazk7LFeQH2lWcZJZvizxw3rO9isV5Pvdt1kjePkjw2/aonEf8p3Qibi3
Z6v+HPfaq/RHjhyhtC0tLaUIrjPu9+/fT+dneno6Pabc9/DwYOJeHwr36dOn
U7Vd1xSfCgN79uyhBzt27KD1X7x4ceTIkSUlJbR1ivuzZ8+a+JdF3Fso7jMz
ZR83eo2hLejy8v7o1F//uFf04EF50eDrr8W339bX5s1Fs2biyy/lnQKq4MfE
WEjX1NQgddXuEfeIe4POVf3rJ4h7e7aqVst8Sliqg1OCU52dqtuxsbG6pyiO
tffuNRrNypUr6TWenp5eXl76Tei3b9/OxD2tbfbs2fqX6BMTE2krgwYNmjJl
ivaKwdq1a0eMGEF1/FWrVpn+l0XcWy7uN2yQbeEMXbO2qd7EifIKfHq6GUxL
ky3wJ0wQ69bJcYHqLxVXPD1l9FNRwdBbEvW+c+Gya5fKhtnhU6kaLu7/Ecup
OGRf3Kucip3T+VsJikMK8N32PeZwKrbM54+p4gw7fL97fuUWjXv9eXgR9/Zs
1S363ZdWwx80qqHn5hr2PVZVq4u9lhpN8srLy8vKygxdc50g7u0t7snff5cz
zn/zjUnD/Gpt1UrOlkuV9IULRXGxctu/GsbGymF8goJkB3/L6Bobu6i0VE0z
4iHuEfcGnavBbYVOxL09W3WLuHcYnC3ub96UA8uYK+6ZMfOpXEHPGhf3tHKq
4B85Yrbp7aZOFePGySl1Dh4UUVH1lV68f7/YtcvSo+qprCOeiXH/1Q7OFpsV
5BvL8c3VyH9HcwZ1VHBxV86e8zkbXVCQP6aKJZntX3PaMO71hxZURZog7h0V
e4t7qhRTpW/RIjnfnCWkrO/fX9y4Yep+Uk157Vrx7LPirbfqtkkTOREPJZpx
69doZMt8cxkRIfr2FZ07i65djbFbN0tJK9+2TWVN9RD3iHuDztWgDkKnKtIE
ce+o2FXcl5WJ1avldWxvb0sN4zZokOwcZ3rcV1bKtvdnzsjL3XV64IBsZk9V
Y+sUk+rcQ50FBSIlRXbnT0y0Nxvk5KysqCg26KRF3CPuVRT3+uMWqiJNEPeO
ir3F/apV8mZxVpbIyLCI58/LK9umX8zXysyhQyWK9esVLuZTvbu0VH5q83r6
tJz75quv/tTS/ptv7NGvvxZr187Iy7PqfPcHM6tMsR73oDn5CWoV57hZ04Zz
1U8KPpHMufF7BflJZkd5c4Z9piCfyIpv7z+NM7gdp0XjfskvQqcq0gRx76jY
W9wHB1u2RmyupnqKKjbVo32YO1eOez9smDkdPlxetO/fX2zbJiIjLTpCjnmG
2bl6NdDKHfEQ94h7a8a9/p9PFWmCuHdUEPeWi3uq3YeG1j18TUmJOHRITnOz
dKlYssScBgXJxPfwkK0UaOV27pIlLqdPLyopsWrLfNvGfeiXnPpzo9cpXxiY
7algxyBOxX73/Lh2M/pwJj6j4NIunMfeVpDvdDB2JKdF496/u9CpijSxedyb
+B9qtFWIe8S9sXG/YoW8cRATI5u41zAiQixbJubMEYWF8sa6eU1MFIGBchje
oUPtXdrJ/fvnWXlGPMQ94t6acT/PTehURZog7h0VxL2FpBzfvFk2zm/ZUrRo
UVPtbWtfX7NtjlL+8mVx9uwfnj4tjh9XhQ2uXw/SaIoMOmltG/f8sHgkH/f6
86PVVn9u9Dqd1p9z8iAFf17BqdhUj497ftB7vs8+yXecv/ysgvzMv759OS0a
9/rFLVWkCeLeUUHcW8jKStl9/vr1uk1OFuHhYtIkcfGieQwKEm3byuZ5uhIF
FTPsX9rP9etnqaupHuIecW/QuTqzt9CpijRB3DsqiHubWF4uR7/p2lWOUtur
l6n27i0H0Bs6VN4moNXGWGp8e0uNma/RqKmpHuIecW/QuWqdDZkRxL2jgri3
lXl54tgxOQ5PaKip0hGbMkXm/oQJYvJkdely6NCCoiKrzndv4neC52zBy8f9
utac+rOn1SlfWhgwVUG+a/wcDwW7L+Dk2+0X3akgf+9ecfKgqQM4+aNq0bjX
L4+pIk0Q9zXIz88vKSmpsVCj0eiPeF9WVqabCE9HnUPi1wftNLhmB3FvQ6mO
b+gg9rcyJUWWHBYulAMSqkrX6pb5iHvEvcPGvf7VFcS9uuI+Li5u9OjRXl5e
Hh4evr6+OTk52uWU/t7e3toZ8SjTAwMD3dzc3N3dBw0aFB8fTwvT09NnzJjR
u3dvPz+/lJQUg47/yZMn+/TpQw+OHz/eXw/9ufaMA3Fvorm58i786tVyvjkb
un69HJ6Ijp7adD17drGVp8gx8Tvh+42Cl497U4atIxd0N8kPojhn9VKQnwRn
fk/Ok28oqD+2fG358QrIMaM5+U4BFo37SUOETsS9iuI+OTmZgp4yt6p6UrzZ
s2dTrNPjtLQ0ynp6pXa++wsXLlA6Z2dnU31/y5YtVDyghStXrgwODqYl69ev
X7p0aZ3HuaioiFZVYyGthwoJvXr1qqq+YpBTzbFjxzw9PbOyskz8yzpn3Kel
mW2Fv/8u+vUTM2fKXnU6584V/v5iwQLrGRAgpdq92nQ9eVJl/e4R94h7g85V
/ZF+EfcqivsaSZ2RkRETE0MPoqKidu/ePW3aNG3tPiEhgeI+NjaWigTFxcUU
zbSQnqLgpgcRERETJkyo8zjTGwcOHKif+BUVFbTajRs3UuLrFlLojxw5Mjo6
2vS/rBPG/bRpsil7QYG8e26iVLU/dkz4+ckH+sszMmSTuc2bxdatkNf1/Pml
ZWVqinu+fzfJx/3+jzkP/0vBue6cfIM0sq8vp/7o7nXKX2/nN33uFQWHj+dU
HJFg4lBOfuJgi8a9dTr4mxHnjPvu/0N3HKZOnRoeHl5VXePetGlTSEgIVd51
z/r6+mpr91XVmT5u3Dh3d3cfH5+4uDjdayjQ+/Xrp3sZcf369WQ9Fi9ePHjw
4MzMTO2z27Ztmz9/PlXn9eM+MjJy7NixZvnLOlvc5+TIiXJatZIjzZrFtm3F
mDF/2kRlpazy9+0rB80bNAjyuoSHzy8sVNMwO4h7xL1B5+roMUIn4t5u4752
7T4oKGj16tVV1U31qEa/a9euHj166J7Vxf2VK1eSkpLoQWFhIb3Mzc1N22aP
6uOU9WfOnNE/tn5+fuP1GDJkCG1xw4YNVdW3++kxbXHNmjW0ktDQUO1bRo8e
rb2qYDrOFve0iTNnxMaNsuptups2yQvp06fXjPvYWFmooIq/Wjx5Upw7Jy5c
sL4NsrJWVFSoaZgdxD3i3qBzVX9GQsS9iuJee5X+yJEjZWVlpaWlVNOvM+73
799PiUxhTY8p9z08PCju9+3bN2zYsJSUlIpq6jzOtHz69On+/v7aFxQUFByq
Zu/eve7u7to2AxkZGfRYo9GY5S/rbHFfZdb28MXFMiipIn/gwB9GRckBcleu
lLcMzDhhvaVNTZWFlmbNxJdfWlmX4GCVzYj39XbBy8e9/pCqtT3/goJDJnEq
9hrgB9Hl598hvfw42wVzKn60T8I5FYsigyZzbmjFadG4HzZB6ETcqyjuibNn
z1IdnBKcqttjx46NjY3VPUVxr713T1m8cuVKeo2np6eXl1dkZGRlZWWvXr10
dweGDx9e53Gmtc2ePbt2lFNpQdsynzhz5gztgLn+sk4Y9+Y1MVHOQ9e9u3Bz
+8MePUTHjmLcOBvsTHS0vKrQp48sgRhk167Cy0vOPrxnjwgLs567d7smJi4t
K1PTMDuIe8S9Qeeq/h8Ica+uuNdSWg1/0KiGnpuba+ihNrpjvnEg7k20tFRc
vSri4v5vvPozZ+R1/pkzrb0nJSVi7VoxdqxYvNiwzu+BgWLkSPHbb8LHR77X
ui3zXU6dUlnL/GY7BS8f9/wUNny3epJPc77vOflhJCef5iTf717/qnVtUx5X
kM9rvuE9yY/pd/UpTovG/cApQifiXo1x7zAg7k23slJoNP8nFQBiYuRcbydO
WG+uGdpWZKSYPVuEhMjmiNnZBkivp78vVe0p9MlRo6ypS2TkfHXNiIe4R9wb
dK72nyZ0qiJNEPeOCuLeEsbHy8pyu3bip5+sZPv24ocf5BY3bzZmhysqRH6+
HI7gVnP6GGFysrzuoWSDvLxVFRXFBp20to37V+MELx/3q9tyKl6N59N8eQcF
+TRf1E3Bvydx8k3pNn6v4GiWrd8KXv5SPz8cgUXj/k/lJTWkCeLeUUHcW+iD
pKbKOEtKsp7nzolly8TOnfLygs09eVK0bi3eeEO8+SYnvWDJkuk3b+YYdNIi
7hH3Kor73jOFTlWkCeLeUUHcO4wlJbJX4DffiB9/FG3a2NK2bUXTprIVQUyM
OH+eMyFBfR3xEPeIe4POVf2BB1WRJoh7RwVx70impopDh8S+fXIYfxsaFSVH
EnZzk30WxozhdYmK8lfXvfsmZwQvH/f8DLbfhSjIr7ztagUbn+XUn5m9Tv9z
gPOnVZzB7RTkZ7Dd/bmCP6zn5AtRFo17t3lCpyrSpD5xb+L/oNH/obRdxL3R
IO4dycpK2YmeDqNtpX3IzZVj5AYEKMwd4O/vcuKEymbEQ9wj7g06V//UoFEN
aVKfnbTVB7H0dlXxBzIaxD2sj2lpcvC9Q4cM8MABOeIQ7/79DZKSlpWXq6nf
/WOpgpdP5H7TOTstU1B/zBYjfPMEJ79vJH8xX39w+Noqzu2rP5VMbRUnD+q2
iJNv9m/RuP91odCpijTp7tzY+vBbEMS92dVoxI0bsq3aiRPypwMYEyMvy7/3
nvjvfw3ws8/qoxxVLzdXTaPqIe4R9wadq78sETodO02AnYO4N7vZ2XIAmaZN
RfPmDuKXX8rxdefMkTMJmtsG2dkr1dVUj79oTPJxP3kQ5+e7FeTHzNcf0aVO
P4rgVLyY71LJ2WYNJ98vnvQexclPHEw238LJ99m3aNx3DhQ6EffAhiDuTbGy
Uo5Rk5b2J8+elTes6VOkpIhr1wwzOdnupE+RmCg/0a+/yuF5zWvv3i67d88r
LDRs8EnEPeJeRXHfYbnQibgHNgRxb0rW37ghZ5aZMEFMnPiHkybJgekoyE6e
/OM1jiEVYw4cEDt2mF2XS5dUNmY+4h5xb9C52n6l0Im4BzbE3uI+JEQ1ca/R
yNZrbduKGTOEr+8f+vnJyXEGDJB1fENXWFIib/fPmSPmzbM758+XUh1f+8B8
uhw/rrKW+Xz38Gq4uJ/fk/PFBAX5kgY/SQ3JN/tXbDnQchMnX1BRHAWXP6aK
nQ6eSeTkV27RuNffSceI+4qKiuzsbFtt18rTyjgSJsY91fuoStuunXls00Z8
8onYvdv2UV4fy8vlYPWUWTUGlEtKElOmiO+/F716Geavv8qDMHWq2LBBrF9v
X9IuWcL1610TEhaXlqppihzEPeLeoHO19VqhU+1xX15evnjxYi8vr379+mkn
e7XapsPDw3v16uXu7k4/w8LCrLZdR8LEuM/JEd26ycgLCDCDtB43N5XFPVV4
aywvKhKHD8uaPtX66+/MmfKmQIcOcuKY6g7pTqLLyZMqmxHPxLj378HJd2wn
W6/j5C9ok5+Fcf53j4LvH+TUb4Je2wnDFOSPqf4d8Dp9/iKnDeO+1QahU+1x
v3TpUl9f34IC+Q8bHx9P4ZuZmWmF7VIxw9PT88yZM5WVlWfPnqXDaMRss8DE
uE9NldeuzTXQekGBnMJVLRfzbxX3VVV/zItXUmKYWVkiNFSONTd2rPD2toG0
Xfprjh9vTV2ioxcUF6tpVD3EPeLeoHO1ZYjQqeq4Lyoq6tGjh36+x8TEWCfu
S0tLPTw89u7dm58vb/ydOnVK+wAYhIlxf/26zAgKPrMEqLqa6jFxb7TFxQY3
5jeXycmyBf65c+L0aWvqeuPGco1GTR3xTIx7PvIUQ42Pe8XSQq9ZnIpz+752
mvOt45zucxXkj6n+yPN1+so5ThvGvX5xS9VxT9X5fv36aR8fOnRo06ZNISEh
CQkJ1tk6bcjX15dCn/5eYWFhVM23znYdCcS90VIVnsLRvHFfZbvG/PRHpIP/
3Xdykh2r9ej/9luxbt3MvDw1DbODuEfcG3Sufr1d6FR13Ofk5ND+a6/knz17
NioqasqUKdu2bbPCprOysmiL9KCsrIweDB48+OjRo1bYroOBuNeXPsipU2Lg
QNG3r+jXT0EvL9Gpk2xIb6u91Xr0qPjtN/Hvf4uPPjJJWgNl/ZIlIjbWmjZI
T1+B2j3i3oHjXv8AqjruiZkzZ/r5+VH40uPU1NQJEyZYJ+6vX7/u6ekZHx9P
lfq8vLwxY8bExMRYYbsOBuJe38JCERgou9EtWqTczGzePDFihJg715ZZr9GI
sDBZ5Ni2Tezda7z79skukPTBO3SQgwZQScZqhoXNKyx0onv3k4ZwThmooH5V
sbaf7lOwy1LOr3Yo2GIzp/7g8LXd/rWC/DF994jg5Qf4tWHc63dPUHvcU+U6
MDCwX79+7u7uffr0WbVqlbaybwUOHDjg5eVF2/Xw8FixguoIGuts15FA3Oub
ny+WLZPDv+TlyTndeLOyRGSk+S/mG2RFhZxwlrKedpii3xRLS8WZM2LFClnU
WbzYarqePu1cLfMR984W9/ptHdUe9zps1VIuNzcXQW80iPsacb98uZyprT4v
tkRTvdqWlMjBfKZPl335p06tqY+P6N9fHrSiIjNsi8owZ8+K6GjDZr4zTdeU
lCB1zYjH9z0n+bjnO84rdk7n81p/avU65dNcsdf/Gyc5+TsFgZ0V7OHPqdjv
nu81wHeIsGjcfxIudDpM3AM1grjX1w7jno78iBGyOcGkSf83VK9OOvh9+ohV
q+RtCGYl2sq7ouvXi5Yt5UR1zZpZz9WrVdZUD3GPuDfoXNUfphhxD2wI4t7O
4z4xUcyaJbsAFBfXIe3wjh3yYn5BwS2b3OfkyAF8XnpJPPuseP75W0rPNmok
CxWpqfLPah1TUxvk56+qrCw26KS1bdz/tErw8nH/8wpO/mo5yTfk4xOT5Pvd
8/tGPnuZ08uPU7HfPV9Q6bpYQf5i/pBJnBaN+w+ihE7EPbAhiHv7j/s5c8Tl
y3U/q22qt3SpOHJEdmM/daqmZ87IF9BO7tsnr9XfvHlL6dlVq8SPP8rhf+mn
dWzdWmzcODM/X021e8Q94t6gc/Xf0UIn4h7YEPuMe1phSooNJns9f162tI+M
NCDuvb3FhQuy9m0J4+Nl2YNq3LeKe/LQIdGli3j3XfHBB3X71lvi55/lfHaK
A/1lZMhufXT8d++2mq6JiYHqmhEPcY+4N+hc1W9PiLgHNsQO437vXpl0X38t
u4FTTdOatmwp5+ihAK3P3lZUyP385z/Fa6+J11+3lK++KneMiiK32g2q4BcV
yZb5+fl1m5goG9tPny6P7cqVClIF37q6xsWpbIocxWlo+Ljnb75/u1XBzoGc
/DC2JL9yxdLCo9c5+Qlw+8xQkG/Yr1gU4ccE6Ded06Jx/85RoRNxD2yIfcY9
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
44SEhGbNmtFTzZs3Ly4ufu2113SbOHbs2Icffnirz5iYmPjiiy/qfn3hhReu
XbtGD+gYrl27tkmTJg8//PDQoUO1z9b5EZo2bfrUU0/RTmqXd+3aVbuc3kVH
+5FHHnnnnXc2btyo20RAQMCWLVsUDz4AoApxD5yYGnF/8+ZNCu5169ZR7muX
lJeX038HJaO7uzsl0cmTJ+ktJSUlPj4+lDuUvBkZGS1atPD09FTc1rJly2g9
+r8ePHiQig2RkZEPPPBAaWkpLaQgo8fvvffekSNHblZTVR33FNPnzp3Ly8v7
9NNPf/31V1pYVFSUU80999xD1WHtOmnHaMnf/va3iIgI7bPa5XWuts4dIBo0
aPDMM8+sWbOG3n79+nVaQkWF3377TfssbZ250n7+/HlXV1fdry4uLpcvX6YH
f/3rX+ko3bhx49ChQ7R+7SWOOj9Cbm5uSEjIs88+q32qoKBAu1r6K9BPekx/
gpiYGN0mUlJStAUwAIAiiHvgtNR5MT80NLRG3GdlZc2YMYNq9xSO9GtmZuab
b77Zvn37mdV07NiRflXcFhUJrly5ovuV1kwp3Ldv32+++YYikpK3qjqXGzZs
SEUI/TfqX8ynAsOrr76q/+y9996ry0ot999/f42L+XWuts4dqKqO+w0bNui/
MikpibZCYU1ZTGUJbYW9Tpi4j4uL0y587bXXqKbPfIQ9e/bUuJhfVlb22Wef
vfjii/QnqPFhie+///5W+wMA0AdxD5wWo+OeMrdt27Zr/ge9RXFbP/74I61N
9yvlF+VUWFgY1aCffvrp/fv3V1Xncu2Sg37cL1++vMYLasc9VdWPHTumv6TO
1da5A1XVcX/x4sU692H+/Pl8tl64cIEintJZ+2udcf/ee+/pX+Wo/RH27t37
3HPP1V754cOHBw4c+Pjjj/fu3Vt/+Q8//MDsEgBAB+IeOC1Gx/2AAQNefvll
bZbRr8nJyYrborjUbSs/P5/Wk5iYSI8jIiLuuecePu4p0UpKSgoLC99//33a
tP6zteOeiiIBAQFV1S3ZKisr61ztrXag6hZxHx8f/+ijj77xxhtUPGA+Ix0u
qv5v2bKFNj1lyhTahBFxf+7cub/85S/a+wjaAhKVInT362nl9Cz9IbS/0gds
164ds0sAAB2Ie+C0UHDoYkjH7t27Kcq1j3VxP3PmzLFjx1KKaX8tKirq1KnT
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
W6/zxK7zX8PLy6vR/4iPj9etwd/fnz4CfefTl7PuSsjrr7++du1a+gZ++OGH
hw4dynwuhhpxX+c660wc+ryjRo2if3b6x6RntZXWY8eO0T+s9i87Z84c+kKo
c6POGfdV1edtz549Kysr6XuPzhk6l6jIR6dWREQEPUunGR3P6Oho+mJ87733
pk2bRgu7dOny0UcfZWZm0rcx/XV0cf/TTz899NBDdPJfvXpVWzCgbT3++ONT
pkyh1dJpcOedd9J3clX1mTZp0iR6MHbs2Hbt2mlPVKJBgwZ0Uq35/+ydCVxV
Zf7/H6CaX0775rRMy2RN1r9pmymnZpqyTWsqSyfLykpNE1BxAXcTV9xAxV0U
UQFRFPd9wQ2R3EVFUUECQUD27V4u9/6/D6dON7g8517ueu79vF+fl6/L4ewc
7/t5znnO88TF0d+OtkhTjh8/vmTJkrKysuvXr9MfeuPGjTTxk08+ob8v/feh
C4AulRdffJGuEAefRuAAJN1/9dVX39Rzxx13kO6bulZNXir0VZmQkEBFyuJ6
KioqDPW6p291+kKbOXNmcHCwfDM/Kirq4MGDdDXu27ePVisVM6gw4OvrS+uh
b1e63uiqc975ALZh+fLlJA76QH/iC/VItfs1a9bQ352+6A4fPlxSD03s3r07
fV/RxUPfabTU+PHjaSKVB+QbTZ999tmkSZPow+bNm0mp9PVFq50yZQrZWbqE
kpOTSd903b799tuzZ8+WlqJvTmlVdLnKq6IpdG3r6lm1ahVdzE3tQEFBAa1/
9OjR1dXV9FVJapPWQPtMc9Ky5H35eE1e2Cb/a1RVVUk/UomF/nNJi2/dupX+
65FJaUGqar3wwgvSdPqv8dFHH1ER5dChQ/TVLd2NN3lcAhro3uQ6TRonJCSE
Cu15eXl0KmgRf39/aQ1U63zjjTdo5++++26qPJrcqMfqvmPHjj179kxPT6eJ
dInOqIeqURMmTDDU656qNtKcdJKlwhJdMLt375YmGt9aId2Tu423RbPRNUnX
ufQjlQxJ/fThH//4h/QYi67S//znP/L89PdtfIUcPXqUvpPJ71Ry6Nevn6Fe
97R4Tk6O9H/2008/nTt3rq3OD3AdJN3Tl1V0PVTypMujqWvVYOpSIXbu3Nn4
Zv7AgQNJ4lSDoLXJuqfyA33hU3n1gw8+8Pb2pm9IQ/33j9y+ha40+oJ10MED
u0HFQrIGfaDqM+mVKinkDkO97lu2bEn6MJ6ZrEHVdunz4sWL6bvL0LTuW7du
LU3UarV0CZ09e9ZQLyD6ltu0aRMVWeWvu9DQUPoi/f7772kp4wo71Yvfe++9
iIgIeTdM7gBV0p988smmDpAEbax7kxe2wdR/DZnbbrtN1j3VB+k/i/SZSiBe
Xl70H9Pw+/8aVKeW6lwmj0tAY903XqdJ41Cpo0uXLtKXAE2UCyF05ukU0f7T
90ZTG/VM3dOZodNCfyCqdNPE8PDwuF+RquHGuqfZ6OuOPlAJli5daWID3Ut1
dplt27Y9+OCD8o8ff/zxuHHjDPWtK+k7loqsVOilK1OegXR/8eJF4zWQ1p94
4olly5bR9ICAAOmqg+49BJM385u6Vk1eKsSuXbv+8pe/GK9W0j3V4OjKoZXL
uqfKF11aO3bsoOrSI488In3HGn//0NeIXLQA6oVqjvRHl5/XU31H1r1sDRn6
hkxKSpI+U5lTKifQbDExMdJEk7qXLl0qTFJl589//jNVP7t27UrfljfccMPV
q1eleai2Tt+Er7zyCl23UuXaUF+/pouciqxUoaZLsakdoBILFTmaOsAGujd5
YRtM/dcwPmpZ9927d6f/UNLnmpoaKjBcuHDB8Pv/Gm3atImNjRUcV1MIdC+v
06Rx6MufzpL8JSB7pLKy8umnn7799ttpYlMb9UDdFxYWUnmPio7FxcU6nY7+
7lSKo9/SPHT+pWcuJnVPBdROnTpRMY8uHjrnAt1fv36dTrv0tIguHvqrJScn
0+dXX32VLle6Zqqrq43nb6z79u3bS/8TaVuvvfYadO9RmNR9U9eqyUuFoBrW
H/7wB+nZkFTdkHQv/VbWvfT/IiMjgz7v3bv31ltvlXUvVROoKkRfdNIFDFQN
KZhKbp9//jnJiC6eDh06CHRPXy8kdLpyaGa6rgYNGmSov71M3410KdL1cM89
98i6b9myJV1C5ETy42OPPUYrJ1Pfeeed8tslpDBSIS04f/586QKmK5C+JGnT
9HndunXyE3PyGn2jNrUDtBW6bpcuXWqov6rpEpUfiRp+r/umLmyDqf8aMsa6
J+dSvUx6PkvFXem4DKbU3NRxCTBH9yaNQ+fhqaeekhoSkMvklhj0d6GSFZXo
7rrrrnPnzpncqKfpni4VEv37778vP904efIkXeo0nb5Ln3322aysLEP9qZPv
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
8dNz8Z5TxLpXfBFvfk9RukaJYlfdX36MyVGFTaB7dwW6V6PuyeAbNvxO9yUl
/L22zp1Z//4sIOB3+f571rcvb7Tf1BB7zcvp07xJP9X0Q0OtibfqXsSD7qF7
i67V9FZMjipsAt27K9C9i+tep+OP3SMj+bPyxYt/ycyZXLUZGb/NptWylBT+
K5qzQaZP513n0eHY/BQVFlo/AK5PZaXK+syH7qF7i67V808yOaqwCXTvrkD3
TbnMRXRfVMRWrWKjRrGJE3/JpEncGlStNtY9hWrcVMcvLm6YS5d42WD0aBMl
AReI18mTETU1amqZP2w8E0ese/EQOeJxXijT+4miOGC95iZRxCunhAaIIi4q
KD58F+te8T2+2b6izPITxa66P9uayVGFTaB7dwW6d3HdUxU4Koq3vac1SJHe
sl++/Hc38wWpqWG7d/OmelTHt23kEkizM2GCV1KSyp7dQ/fQvUXXauozTI4q
bALdN6C8vLympqbBRJ1OV1dXJ/+o1WpLSkoazEMz0GzN+BPo9XrjlTRjDSaB
7pvSfXKyS+g+N5ebnfxuPJLd1ats7VpzdW+ofxEvI4PR3yg93dXic/16dF1d
lUUXHHQP3atI9yf/xuRA964cQyPdp6am0rUXEBDg5+cXGhpaXFwsTSf7BwcH
nzhxwlCv4yVLlvTu3dvX1zcoKCgtLU1ePCoqKi4uztLzf/z48X79+kmft23b
RuscNGjQ/v37m/v3/A130r1ez+9mJyVZG3Lrvn38rfbFi11F91T2MJ7YuGV+
U6Etnj/PR8pz1XhfvbpUp1PTiHijf2TiiHW/+DtRxO+LUcTaEg8TQym6UxTx
42+KeOti4VrZq57i4nN6iyIuithV98efZ3Kge1eO4fe6z87OJtEfPXqUPms0
mvDwcNI6fc7LyyPX87/s8eP0Y3p6Otm5qKiIKvLr16+na5UmVldXz5s3j+YR
6L6qqopW1WAiradv3759+vShz4WFhfSZyhi0CX9//+bdKDDGnXRfUcEWLmSd
OvEu5hq0Trc0/fqxr7/m3dLaXPdUJrEoVJEX6F68LG131y7Wp88vjfPpgwtm
+/Y56hrvHrqH7i26Vo+8xORA964cw+91Hx8fHxkZKf9YUFCQkpJCHw4cOLB9
+/apU6dKtfvz58+T7k+fPk1FArL8kSNHaOKVK1diYmLi6mnqPNOCgYGBxsav
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
115AQICfn19oaGhxcbE0newfHBwsjYhHdl6yZEnv3r19fX2DgoLS0tIM9YPX
T58+vW/fvmFhYTk5OWae+cZLJSUl0TppBxITE63/y0L3as/x4/z1vf79+XsE
o0erLl7798+rqiqz6KKF7qF7Fel+UTcmB7pXke6zs7PJs0ePHjXUD0sXHh5O
WqfPeXl55HqaUxrvPj09vV+/fkVFRVTfX79+PV2rNDE6Ojo2NpamxMfHR0ZG
mjzPVVVVtCrjKQ2WKi8vpzVnZGRcuHDB39+/osKyh56Nge5VGo2GRUfz7u7/
+U/etv/0aVZQwJ/+qy0+VVUxer2abuZD99C9Rdeq8QmE7lWk+wamLigoSElJ
oQ8HDhzYvn371KlTpdr9+fPnScqnT5+mIkF1dfWRI0doIv2KCgD0Ye/evePH
jzd5nmnBwMBAY+M3WOrMmTMhISHSr+jDyZMnrfzLQvcuGL2et9wjoQuSk8Ni
YrjxFy1iY8fyUe3owA8fVl28r15dWlurpvHuh41n4oh1P7+nKIplidm+oijq
vvBuURQH1PObJYq407zIbxUi1r1x33QmI346L35J0K66d0wjARvimbrv+Svy
eZgyZcqePXvoAyl47dq1CQkJVHmXfxsaGirV7g31dh47dqyvry9JOTU1VZ6H
hD5gwAB5NiI3NzfbiEWLFg0ePLiwsND4/MtLUbli9uzZ0sQ5c+bs37/fyr8s
dO9qIddfvcpWrWJLlvBefE1m2TIWHs7Gj+djyJ4/z++K//e/fMg81eWTT9jq
1TPLyho2cRED3UP3KtL9nN5MDnTvsrpvXLtfunTpihUrDPVN9ci827Zt69Wr
l/xbWfckx6ysLPpQWVlJs/Xu3Vtqs5eUlETWPnXqlPG5DQsLG2fEkCFDaIur
V6+WZzBe6siRI9OnT5cXlG4mWAN072opL2crV7IPP2SBgU0mKIi/tD5gAB+e
vraWFRfbd7w8e8anoiJWXTfzoXvo3qJr1fjVBuheRbqX7tIfPnxYq9VqNBqq
6ZvUfWJiIl2f+fn59Jm87+fnR7rfvXv3sGHDcnJy6uoxeZ5p+rRp0+bNmyfP
0GApWiftwPV6AgICCgoKrPzLQvf2S10d36X8fP5U3fxkZPAB7mNjWVGRKBcv
8jv5cXHszBlVx7ugYLlOp6ab+YNDmDhi3YuVN264QhZ/J4riMDTiIXKM66Em
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
b0hISGpqqjzPxo0bG4g7Nzc324hFixYNHjy4sLDQeJ7GS9kK6N51dH/pEh9B
r7RUYTZznt3X1rJNm/gYNHRcWi0XPR3a9u3mPqqQsnUrv91BFXw6UrvFp7pa
ZTfzP1zPxBHrXmwl48FSTUbxVTtx9v1blAXfK2TKIFGMO4dvHEVfi3X/09+Z
OKs6iSIuJtlV9z0WMjnQvcvqvnHtfunSpStWrDDUN9U7cODAtm3bevXqZahv
Skd18FGjRl27do1+JDlmZWXRh8rKSpqtd+/ecpu9xuIOCwsbZ8SQIUNoi6tX
rzaeB7r3HN2XlJile3K3oJUgzUPVfyoS1NXxH69eZcHB7PXXebc25ufVV3nt
PiPDxPrpqKnuT2fM6nhnZy+trVXTEDnQPXRv0bXabRGTA92rSPfSXfrDhw9r
tVqNRkM1fUn38+fPnzFjRkVFBXlfr9cnJibS9Zmfn0+/Iu/7+fkJdG8MLT5t
2rR58+Y1aOQP3UP3DXQfE8M727l40XTS0vixUAVfr+eL0L+0n7TD4scExiku
Zvv3s4gIlpzM8vN/F/ptfPwv5YH//MeqUAlk+XKV9aoH3UP3Fl2r30QyOdC9
inRPnDlzhurgZHCqs48ZM+b06dOXL1/uaURUVJROp4uOjqZ5/P39AwIC9u3b
Jy++adMmgbhpbeHh4Y3fuRMvZQ3Qvep0T+4moQ8YwJvt9eplIj/8wEfi++IL
3srOmv05c4aFhLDAQH6YY8f+Fvrx229ZXBxvRVBebmV8NJqV6upmB7qH7i26
Vr9eyuRA9+rSvYSmHvFJoxp6aallI3saGr28b2+ge2t0P3Eir2vbSveXL7M5
c5R1b6h/Ze/IEf5sfft209m8mU2ZwlvrSbX75qWqilfwZ89m06ezGTN+C5VJ
evfmPQpu2cKH/LMu3llZS2tr1dSJ7idrmDhi3a/5RBTxeHmUhT1EieqqkENt
RFFc/MfRooh1f/hlhYh1rzignvjMOLGpXpflTA50r0bduw3QfbN1X1DArUeL
xMbaJqTRESN4ndecrVMxQxCtlhtffnbf7NCqpDf3GyQlhfXty776irfbtyZf
f802bAgvL1fTePfQPXRv0bX6eSyTowqbQPfuCnTfbN2XlvL2bx062Czt29O3
gW2eDtTWct3v2GGDVTVVDMjN5bcjzOlwWBif4uLoujo1tcyH7qF7i67V/8Ux
OaqwCXTvrkD3zda9ob4jGrKzrZKaataLeGbqODaWP2TftInfcrdHtm5V7gDQ
jHhnZKhsRDwr37sXDxunqHtxJ7qKz8fTW4miOCKeeLS+EWNFOfGcQsS6j+jO
xBkcIoq4RYRddd8xnslRhU2ge3cFurdG97aNmU31zIlez3vXGT6cBQSY7iHH
ZeK1c6dndbMD3Xua7o3v/KjCJtC9uwLdu6XuKeXljP4ox46x48fZiRM8J0+6
YLyvXVum06npvXvoHrq36Fr9aB2TowqbmKN7mscpuqftQvfNBrp3V90b6kfJ
kaLT8YcFRUX2Hu+mGfGuqVmhrl71hk5g4oh1Lx64TewsyrQBoigOaUf/4QWZ
HKgQcRe7QyaKouhrse7Fg/FRxAWViUNEsavu/7uByVGFTczZSWcdiL23q4o/
ULOB7t1Y91LI9evWsc6deVPA//7X5RIXN6OsTE3d7ED30L1F12r7zUyOKmzS
07Nx9um3I9C9S+l+7lzbnArj0Ao3bGALF/IRfg8fdq0kJ3vn5KjsvXvoHrq3
6Fp9byuT4942AS4OdO86uj97lr+H3r07f6XdhunVi3eyR8anar58e99l4mMw
rFJXr3qKTrSmVz3xu2wUca93igPqaW4SZV4vhYhf0zPuPq5xlN/yEzLLj4kz
aIoo4rNqV92/vYPJge6BE4HuXUf3paVs505+CBERtkx4OBs1ir8311QPe5mZ
bNgw9tprrG1b9uabDs0bb7CYGJX1mQ/dQ/cWXattdzE50D1wIu6n+yNHmqn7
5GQn6550TLthwxf5pVy7xqKi2Lx5vJV+47bxp0+zVavYtGm8x92DB3mvuY6N
d1ZWlLpu5kP30L1F1+p/Epkc6B44EXfSPdWOJ09mffoofN82Du3ASP5fni1e
7Ezd268UQSrv0IG9/TZr165h2rfnI9ONGMG7yKO/gsPjU1e3wmBQU8v87xcw
ccQXm/g9O/EYNJTRP4oi7juOIn52r/joX9yr3rDxoigO3yPWvfgFRoq4DDZ8
nCh21f2/9zE57qH7urq6oqIiZ23XwcPKuBPupHudjqWn/24wF/MTGsoGDXJP
3VO0Wv4aPhWHTGbXLjZkCOvfn9/Sd3CGDvVKTJyrrm52oHvo3qJr9dWDTI7a
dV9bW7to0aKAgIABAwY0GOzV3uzZs6dPnz6+vr70744dOxy2XXfCnXRv+PV+
eDNCNty/38k3852VigqWmMjv9jsjXseORdTUlFt00UL30L2KdN/mEJOjdt1H
RkaGhoZWVFTQ57S0NJJvYWGhA7ZLxQx/f/9Tp07p9fozZ3gnP80YbRa4me6b
HVd4du+sUBmJqv/V1U6JT22tym7mKz5eF+t+VLAoA6YpZOBUUZZ9pRCx7oNH
KUTcq5742boZbR5EiIezp4j7zRO/wGhX3f8jhclRte6rqqp69epl7PeUlBTH
6F6j0fj5+e3atau8nFcNTpw4IX0AFgHdS3GFlvnOSl4e276dRUc7Jd6pqYs1
mgqLLlroHrpXke5fOsLkqFr3VJ0fMGCA9PnQoUNr165NSEg4f/68Y7ZOGwoN
DSXp08WwY8cOquY7ZrvuBHQvxaN0X1LCX77LyPgl8+ezzz5j33zDX893cHr0
8Nq8eXZFhZrGu4fuoXuLrtXnjzM5qtZ9cXEx7b90J//MmTMHDhyYPHnyxo0b
HbDp69ev0xbpg1arpQ+DBw/+6aefHLBdNwO6l+I5uq+oYCtXMj8/5uvLQx/+
9z9u/MpKVlXl+PjU1jq6mx0rx+8QD1hPEes+3F+U6C4KGTlGFP9whfSbLori
6D+n/58oIYNFUWwYYDxQbOOIfU051EaUuM9Esavu/3aSyVG17okZM2aEhYWR
fOnz1atXx48f7xjd5+bm+vv7p6WlUaW+rKxs9OjRKSkpDtiumwHdS1Gj7vV6
i3uxo0UuXuS9E8ybx8es37SJbd7MgoN5I/mEBP6jw+N98aKjx7uH7qF7R+r+
mVQmR+26p8r1kiVLBgwY4Ovr269fv5iYGKmy7wD2798fEBBA2/Xz81u+fLlO
p3PMdt0J6F6Nutdq+XsEzehhb/FiFhLCxo1jKSmstvaX7N3L+xx47z32wQeO
zvvvezl+iBzoHrp3pO5bn2Vy1K57GWe1lCstLYXomw10r0bdFxXxjnE6dmQ9
elic//2PBQSwo0d/WxsZv6qKv4po8w79zIiPVhunrpv5az9m4oh13z1ClJwH
FCIeCEY8SI1iPo9ViLhbPPE7hgFhChEXBozHlTOZFZ1FceJ490+mMTluo3ug
RqB7i3RfV8fbsV+54sxkZfHOb2NjWWpqcx6X01+KKviDBvHR9+bM+SX02SmZ
M8cJ791D99C9I3XfKp3Jge6BE4Huzde9Vsv27eO1427dnJnu3VnXrrx2f/58
c46U6tRr1/LF6bS7QLz2759XVeXQXvWge+jekbr/yyUmB7oHTsRWur94sZme
LSpSje6pahwfz4YO5aPLOTcrV/Lmds0rYun1vBH+tWvs6lVXiE95eYxe79Bu
dqzUvfh9sXpEuv/XflHm/qCQze1FMR5r1WTEb/kpLi4eNV7cbMCMFxhFPHeC
iWPNyu2q+0cymRzoHjgRm+g+IMD75Mlm9sxG3/n0HUi2VYXuN2xg69f/1sjN
WcnN5YPcJSTwfW5GkpN5U73Dh10h3levLtXp1NQyH7qH7i26Vv+cxeRA98CJ
2EL3l4YMYf/4B2/abWnefZcPx9atGx/dRhW6J9evW+fkXTXU35CfP/+3e/uq
zqZNsxzczQ50D907UvcP5DA50D1wIrbQfXVm5t69exMPHLA4+/fv2bhx3eDB
d6qldu8iutfreYvBM2d4az2Vx7ugYLlOV2XRRetc3Se/wsQR677HQlEUx7gR
j3ffc75CjJuNNY7fLIXEdxRl3HBR3tuqELGRFR/9i99wFL/AaFfd/ymXyYHu
gROxhe4Ner2u2Vy/Xjh6dEu1PLt3Ed0bmtXHjkvGx2BQ2Yt40D10b9G1em8+
kwPdAydiE91bQ2FhPnRv89CBvPwye+YZ9v/+n6tnwYJpJSVFFl0z0D10ryLd
313I5ED3wIlA926me+lARozgfehdvOj68Skqiq6rU9PNfLGV6hHpPvUZUYIm
KaT3HFHEr5tRPlonypu7FdJ3hijiIWz6zFSI+Jz+J5GJIx4bSLxyu+r+jmIm
B7oHTgS6dzPdp/AxtXn/tGvW8AaQLh8fvX6Fum7mQ/fQvUXX6m2lTA50D5wI
dC/rPimJv8xeXt5k8vPZqlU21n1dHX8LvqxMtF2Lsm8fW7aM1+7J+J06qSCr
V4eXl6upz3zoHrq36Fr9YwWTY86GmhrJvfF0jPkOLAK6l1Jby3X/17+y559v
Ms8+y/+lCr4Nt3vuHPv4Y/6QXbBd8/Pcc/xpOLn+1Clezd+5k+3a5eLxzsyM
qq31oPfuoXtP0/3NVUyO4obi4+MHDRo0fPjwBl+5K1asGDJkSEhIyOXLl6Up
CQkJgwcPHjly5IkTJ+y088DNgO6NjV9QwF9wayo5OWz5chvX7s+fZ5Mns+xs
0XbNT34+27GDRUfz1ZaWqiI+Gs0Kj+pVL6K7KF/EKEQstVHBCvlmiSiPZihE
vPjyL0VR7AVXfE4VF58cKIoTdX+ThskRb+j8+fPBwcGVlZX79u2bNGmSPD0j
I4MKADqd7tChQ7NmzaIp6enpQ4cOrampoV+NGDHCTjsP3Azo3vzY49n9hQts
5kzeIaGtVnj8OJsyhfdLPHGiKuKVlDS/ulpNfeZD99C9RdfqDbVMjnhDGzZs
2LhxI32oq6vz8/Orra2VplONnqr2165d27p169SpU2nK6tWr165de/LkyUuX
LpH07bTzwM2A7p2r+4sX2ezZttR9ZSWv4E+dqpZ4HTpEulfTiHjQPXRv0bXq
pWdyjDdEtfhCI8jaUVFRe/fulX47cODAoqJfXlAtLy8fM2YMGb93795JSUk0
JSIiYsCAAXFxcWFhYYsXL7bTzgM3A7p3vO7Lyng7AZIyZelSNmGCxX0I6/VN
tnWvq+O/dfq5Mjs+BsNKj2qZv/tNUX6Yq5DYz0VRLC2I89IRhXReIYq4+1/F
QxOfU8Vn9/N6ieJE3TdA/hWZfawRqampK1eu3LFjh/TbPn36aLVa6fO6deuW
LFli4N+Whf7+/tXV1UuXLl2+fDlN0Wg0NGdFRYWd9h+4E9C9+bGJ7snFycns
xRd5Nzht2vB//f0tEHRtLUtLY4sXs0WL3CNeJ09G1NRY9mUF3UP3atG9RaSk
pFBtXafTpaWl0V7V1dWVlPCXVqgMEB0dTR+ovk+1ftL9vn37pk+frtfr8/Ly
SPfybX8ABED3DtY9VcBPnmTz5v3yo8mb+dXVLCODa/38+YY5fJgNH87+9S/2
5ZfukC5dvNavDy8v96AhcqB76L4pyO+xsbEjRowYMmTIhQsXSOV+fn40nfw+
d+7ccePGjR49WrqZT0UCmjJy5MhBgwYlJyc7e8eBOoDuHa/7U6fYnDm//Jie
zsLDf6d7cv2BA6x/fzZwIBsw4HehKX5+rEcPdvSo88+GjeJjMMQbDBqLrhlV
635FZ1GGj1OIuKvYfyYpZJafKMbdvZrM4BBRxM0GvlqmEPE5/TyWiTNlkCiq
0L1ETU2NyRfqG0+nYgCVEBy1X0D1QPfmRxrvftMmq1ai1/Nq+9y5v/x44cJv
6pdSXMxiYtjQobxbvFWrfpf4eBYZyfr2ZcOGsbg4tmKFG8T77NnFGo0H3cyH
7qF7AJwCdG9+Kit5h3Xff89vxZOvmxFacPZsFhzMJk36ZZ0nTrD33mPvvsva
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
vjk5Odn8xbOzs1u0aJGXl0ef169f/9BDD9lrRwEAwAWA7oFKeeSRR3bs2CH/
uHXr1rS0NPMXv3btGlXt16xZo9frdTrdunXr6IMddhMAAFwC6B6okQsXLtxx
xx0k6PLy8rG/kp+fb9FK9uzZ8/e//71Vq1bz5s2z034CAICLAN0DNZKYmPjo
o4/Sh+Li4ujo6NDQ0Jtuuqm6utrMxbVaLdXrpc8HDx585JFHli5daq99BQAA
FwC6B2pEp9O1bNly9erV9LmsrGzcuHFt2rSxaA0vvPACiZ4+VFZWvvTSSwsX
LrTLjgIAgGsA3QOVsn79+vvvv/9Pf/rTzTff/Nprr+3atcuixTdv3vziiy+2
atXq9ttv7969u/l3BgAAQI1A90DVFBQUaLXaZi9eUlJSW1trw/0BAADXBLoH
AAAA3B7oHgAAAHB7oHsAAADA7YHuAQAAALcHugcAAADcHugeAAAAcHugewAA
AMDtge4BAAAAtwe6BwAAANwe6B4AAABwe6B7AAAAwO2B7gEwZu3atYGBgc7e
i9+YM2dOXFycyV9lZWV99913V65ccfAu2RA3OAQA1AJ0DzyNAQMG3FgPXfle
Xl70oW3btvJvR44c2bp167q6OptvNy8vb9OmTZYuRTb88ccfTf4qOTm5ZcuW
+/fvN54YEhJCDm3eHjqexodw/fp1+hOYs2xaWlpSUpLddg0AdwO6Bx7LTTfd
dPr0aYdtLiAgoBnVWIHuTfLXv/712LFjlm7FdTh16lSrVq3MmZOKZF999ZW9
9wcAtwG6Bx5LA92TKEk0jz/++LvvvitN0el0zz33HP14zz33BAcH33333X5+
ftL0UaNGPfTQQ3feeWfnzp2Li4sVt0U17m+++Ub+MTY29pVXXmnRosXLL7+8
YsUKaeKOHTv69u0bExPz/PPP33jjjZGRkYZ63bdv3/6ll16imWlP8vLyDPUl
h1a/QpVcafFJkya1bt36hhtu+POf/yz9qrKysqnVmtwB4umnnz5//ny7du3o
Vx9++GF1dfXf/vY3eRNHjhz597//3dQxZmRkPPnkk/KPTzzxxM8//0wf6Byu
XLny2Wefvffee4cOHSr91uQhtG3b9uGHH6adlKZ369ZNmk5L0dm+7777/v73
v69Zs0bexIIFC9avX6948gEABugeeDANdF9SUkLiXrVqFXlfmlJbW0v/O8iM
vr6+ZKLjx4/TIjU1NSEhIeQdMm9BQcFHH33k7++vuK2oqChaj/GPBw8epGLD
vn377rrrLo1GQxNJZPS5TZs2hw8fLqnHUK970vTZs2fLysrefPPNHj160MSq
qqriem699VaqDkvrpB2jKbfffvvevXul30rTTa7W5A4QPj4+jz76aFxcHC2e
m5tLU6io8P3330u/pa0L7rRfuHDB29tb/tHLy+vy5cv04Y9//COdpWvXrh06
dIjWL93iMHkIpaWlCQkJjz32mPSriooKabX0V6B/6TP9CVJSUuRN5OTkSAUw
AIAi0D3wWEzezN+6dWsD3V+/fn369OlUuyc50o+FhYUvvPBCly5dZtTz9ddf
04+K26IiQWZmpvwjrZks3L9//w8++IAUSeY11Hu5ZcuWVIQwXtD4Zj4VGJ55
5hnj3952222yKyXuvPPOBjfzTa7W5A4Y6nW/evVq4zmzsrJoKyRrcjGVJaQK
u0kEuk9NTZUm/u1vf6OavuAQdu7c2eBmvlarffvtt5988kn6EzQ4WOKTTz5p
an8AAMZA98BjabbuybmdO3eO+xVaRHFb//vf/2ht8o/kL/LUjh07qAb9yCOP
JCYmGuq93LjkYKz7ZcuWNZihse6pqn7kyBHjKSZXa3IHDPW6v3jxosl9mDt3
rtit6enppHiys/SjSd23adPG+C5H40PYtWvXX/7yl8YrT05ODgwMfOCBB/r2
7Ws8vWPHjoJdAgDIQPfAY2m27gcNGvTUU09JLqMfs7OzFbdFupS3VV5eTuvJ
yMigz3v37r311lvFuiej1dTUVFZWvvrqq7Rp49821j0VRRYsWGCob8mm1+tN
rrapHTA0ofu0tLQ//elPzz//PBUPBMdIp4uq/+vXr6dNT548mTbRDN2fPXv2
D3/4g/QcQSogUSlCfl5PK6ff0h9C+pEO8PPPPxfsEgBABroHHguJQ9aQzPbt
20nl0mdZ9zNmzBgzZgxZTPqxqqqqa9euN9xww+OPP37//fcbN3VrCvKU1EZO
4ptvvrnjjjto8Q8//PDZZ5+VbJuQkPDiiy82WJB037Zt25YtW5JJ33nnHenJ
uwy5skGJJS4urkWLFnQIJGjp6Eyu1uQOEHRQjXVPdOrU6cknn5TKDwLoLN1y
yy1333031cEfe+wxqURBU4x13+B0NT6EL7/8kkogtLmXX36Zfjx69Ogbb7xB
h0MlGZp5ypQp8pznz58fNWqUeJcAABLQPQDNo7q6miqhigaUoOr5F198YTwl
Pz+fatnmb4vmN39m8ixtUTyb+TtAx/jmm29SmcecmSsqKqQ3AqyhoKAgJyfH
+NxqNJrs7Gz5SYHE0KFDpSZ8AABFoHsAHMOcOXOSk5OdvRcWM3/+/Hbt2j39
9NPWS9y2lJSU9OvXz9l7AYBqgO4BcAxUM7169aqz98JiZs2aRQWV0tJSZ+9I
Q8rKyoqKipy9FwCoBugeAAAAcHugewAAAMDtge4BAAAAt4cBAAAAwANwdokD
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAsBlJSUk//PBDp06dhg4dWlNT4+zdAQAAAICN
OXnypI+PD2Psvvvue/DBBxMTE//9e+bOnevsfQQAAACAVUydOpVc369fP/qs
1WpX/3/2zgM8qjLr429YXVdXXbur7vqpuK66ioq6Kq6KCgiCgPTeS4AAISEQ
SAIhdEiBECBAKpCEXgMp1NBC7yChht4DSUhv3zm57N0xmZx3JjOTmZs5/+f3
8Aw3d27Lm/t/6znLl4vfa+LEida+RhaLxWKxWJVUWlparVq1nnvuOfD0F198
8e233w4LCwPHv1qqlJQU2Ag75OTkWPtKWSwWi8ViVVIZGRmOjo61a9cGu//m
m2/g85YtW9SfDho0CLbv27fPehfIYrFYLBbLPPL09ARbDwkJ0d1448aNxx57
rEGDBta6KhaLxWKxWGaUXruH/8JGX19fa10Vi8VisVgsM0qv3ffu3Rs2xsXF
WeuqWCwWi8VimVGK3YeGhupu/Pnnn2Hj/v37rXVVLBaLxWKxWCwWi8VisVgs
FovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovF
YrFYLJbpEiwWi8VisexA1q5xsFgsFovFsqDY7lksFovFqvZiu2exWCwWq9qL
7Z7FYrFYrGovtnsWi8Visaq92O4rp8DAwKVLl1r7KlgsFstoPXjw4MqVK9a+
CvNr1apVbm5ulf76pUuXunfvfvHiRTNekrlkFsexH7vPzMyEO33sscdeeOGF
hg0bHj9+3JSjde7ceezYsea6NhZLV6mpqQ4ODvn5+cp/P/jgA3iPGXuQu3fv
enl56W6ZPn36U089lZubC58DAgIef/xxs1wtS0O6evXqTz/9BK/BJ5544uOP
Pz5//rxFT7dv3z546wYHB1v0LKqgwL/33ntFRUX0buX/NBTt3r375Zdf3r59
u2Wu7qFeeumlRx99FB4L/I3DBwNrF2ZxHHuz+1u3bt2+fbt///7PPffcvXv3
Kn00tnuW5QR2D2U1Ly9P+S/Y/fLly409yNGjR99++23dLWD3cNg1a9bA52++
+eaRRx4xy9WyNKS6des2aNAgPT29sLAQykNaWppFTwdt7U8//fSHH36w6FmM
Vfk/jarXH//4x2PHjhm+P9u9UVLtHj5DA+fPf/7ztGnT4PPly5ebN28O7v/a
a6/5+fkpO7u7u8PfQuPGjaE1BD+FfWAjVA/atm375JNP/utf//rwww/Vh+/i
4rJ69epBgwa98sorTz/9tHKKgwcP1qlTB6rQUNtUm2YnTpz497///frrr7/x
xhtvvvlmo0aNlO3vv/9+SkpKw4YNYf9ffvlF2bN169ZwVX/729/gT0Zp6A0Y
MKBVq1ZwSa6urnAB4ALKuVjVTBXZvd6yqreowAsWihm0Hd4uVY8ePUpK7f6z
zz7r2rXr9evX4SUMfwLKEWJiYr744gsoe1A4Fy1apGysVavW6NGj//73vz/7
7LPw51DFT4BlCR0+fBiKRPlu/A0bNsDrKzo6Gtr7sEN4eDhshCpB9+7doVxB
axTKVUFBAWxs1qxZQkKC8q0hQ4bMnTsXPmzduhW2w7sRXk1Q2NQdQPCiS0xM
/NOf/nTz5k1lS1xcHLzu/vrXv7711ltwWKUlDj+FSghshFcolPBz585VdAHK
XdSvXx/etPBXMGzYMKi3wMZ//vOfcOqaNWvCcdSz6y3Yev80nJ2d3/6vTp06
pR4hODgYbgHe+fByVntCPvrooyVLlsAb+MUXXxwxYgRxX4TK2L3eY+p1HLjf
UaNGwR87/GHCT5VG6/79++EPVvnNBgUFwQtB70nt0+5LSsuto6NjcXExvPeg
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
VZrk0KQC41aPBvUKOFp6ejrUV1966SUoq/AVeA9DmxR+Om/evLfffhuO/Eap
9u7dW9EFlJQurn/ttdfgRFCdADeEY6pnSUxMhD8E9b96C7aiMn8aquB1revC
w4YNgxc+nA7e2Pv371c2whZda4ZmXUX3pVcvvvgi1J+VhXjwQamQlD9mSQWO
k52dDU8eLAPuCyxG2TMqKgqenjLnAQwLmvllWpSK7MfuaaWVSrobVI9v3Lih
DspLd4aql1p7hCY/FBto2kNVDf7o3N3dv/rqK+LrUGB44j2rvMqXVaKo3L59
++rVq9ISC19X2iaqlOYGFFp4vZh4wSxbE/iCgcuQYTddPy0pfa1BqdDdAnYP
/gLbDSlpiuAdWOawyrlge5kjlL8A9QiGlMzyBVuVgX8a4JvwzpeeSL0qvVdb
aVXkOMpMRQOftiq2+yoTlDqwe2hhHThwID4+/osvvuDpTyyblW7vIotFSHfs
nmXLYruvSh08eNDZ2blly5ZOTk7KgikWyzYF9dIyU7VZLL1KTU0NDQ219lWw
5GK7Z7FYLBar2ovtnsVisVisai+2exaLxWKxqr3Y7lksFovFqvZiu2exWCwW
q9qL7Z7FYrHsSg8ePCifF6/KpAQkyc3NpXebNWsWEQ/WZlXR3a1atcrNzc0q
l6SK7Z7FYrHsRFevXv3pp58ee+yxJ5544uOPP1aTulaZkpOTX3/99T//+c9/
+tOf2rRpQ0T70Y1krhURd+fl5fXee+9JE+NaVGz3LBaLZSeqW7dugwYN0tPT
CwsLp0+fbkgo0UpLN/aykiOspDRC7IABAwoKCuAawM31xnpVZAt2r/cWCBl+
d1YR2z2LxWLZgw4fPvzoo4+W78bfsGHDoEGDoqOjob0PO4SHh5eU5oUHw33u
uedeeuklNzc3JRh4s2bNEhISlG8NGTJk7ty58GHr1q2wvW3btk899dTbb7+t
7ODr61u7du2h/9Unn3wC/8JBPvzwQw8PD92zX7hwQTen7T/+8Q8lKw2cvVGj
Rp9++ukTTzwBVRQlkm1eXl6XLl3+/ve/QyP6zTffhNMpWepcXFxWr14Nd/HK
K688/fTTSkzpgwcP1qlTB74OzepVq1YR5xo5cqSzs/Nnn30GO9evX185V0W3
oHvxZZLRlL870D//+U+4zpo1a8JdqBvhIb/9X8GP4PphI9TBRo0a9be//e3Z
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
j4mJ8fT0dHd3P3369I0bNwYMGADboTk/ZcqUMaW6cuUKbAkODoYvOv1XGRnG
VY9ZLEVs90aRkyNu3zYzd+5g8vqtWzHynu654JanT8c++dLMcXpC6XbtKurV
w1l58JnItWfLuLtjRjxtxcxnu2e7N6qs5v1RqJQ/UW5urt4F9Tk5ORa6JJbd
ykbsvrhiZWdn2I7dW4iiIoy816iRaNJE/PLLQ+rXF82bi7VrxbFjelAG96dN
w5EFLy9cdqdNtBcz38SpehZFaqlJ31LM6yWBPvv4kRSzHSX89i6F9N73fUax
uA2FRe0+9zGhwuH7WFaU1e0eDD019XxiYvymTRv0Eh+/bsiQ94wKf6dFMjLE
nj3Yxk9KesjSpQ+j4vv5ialT9TBpEs7eHzBAw/Tv75CQoLHOfKt7uikc+pjC
utcW0pNC+vUbL1PQCxYsavfZjwsVtnuWFWV1u8/JSfP0/LFLl3eHDn3PxUUP
gwe/277943fuWN+Rq4AyYXa2bBEBARXG0TUjM2bgzIFKZNQ1GYfkZPtaiMd2
b292/+DPQoXtnmVFWd3uMzNveXu/tG1bhavIjxzBQd5bt6zvxVVv/dnZGNX/
xg38Vy9KbN7ffjMVqFf4+OAy/+7dq5rY2BnaWognzcRKuxI9vVyaJZZOMjvD
ScLZmhTh3STQ+Xfox0JHrQfoBLgrmwsaeloC/V2L2n3mk0KF7Z5lRdmC3U+Z
8vK1axW6Xk4Ortiq3mP3lSY1Fafz9e4t+vevPE5Oom1b9Prx4zHRHhywypg2
rcbevXO11bpnu2e7N6qs3v+LUGG7Z1lRNmL3V6/and0XFuLKPlPIzxc7d2JX
/KJFuDw/Pr6SbNiAKwHB7n/9VXTogIF9qjJLztq1GkuRI3Vk2u6nDqWQLup3
DqCQLpyn0+3REfUBFz8KetGBNOLf/M4U0mR/9Mz8Nb9QWNTu054VKmz3LCuK
7d4qpKfjZLxVq8SaNZUnNhZH9mfNwvR58JQqTW4uxgc+cUIkJ4v160VoqBFZ
Ak0kMLDG/v0h2mrds92z3RtVVnUz9bDds6wotvuqp6gIV9L17o296EOGVB4X
F2yST50qiKGQirh5ExcCbN6Mo/a6TJuGDfxWrUSbNlVB69ZixQpo3d83qsxY
1+7dpgga2u5pw22zWELQAAo65h5Ax6WnV74DPUIp6M58aVi8dT9T0On2ADpm
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
XjpZrv9MCunXix0opFls6KEELx8KOjsPQNv9+JGCZlFbCjoXgEXtXjdPkCb8
he2+uortXqMUFWHruGlT8fXX4ptvJHz7rfjkE5zyFx0t1q4Vq1fbDjVOnw7P
z88yqsyw3bPda8juIzsLFU34i53bfWZmZm5ubpmNhYWFRUVF6n/z8/Pv3y87
BAk7wG7GPu3y34KDl9nB2GNWJLZ7jZKdjXYZHi727RMHDshZuBDj5yuZhmyH
778XUVEB2sqIR7tSqSi7nzCC4j/bJbRcRrGhnoTf3qWg59oB9Kp8OtggvQJx
zCiJ3UtTFdABA+mDW9Tuw7sJFbZ726GknN0fP34cCoOzs/OAAQP8/f3v3Xv4
XgL3HzNmzOHDh0tKzTciIqJfv379+/cfNmzYqVOn1K9HRkYuXrzY2Kdd5ltX
r14dOHBgdnY2fL5169a0adMGDRoUEBAA2yvzu/y92O6twsmTom1b7Mr+4otK
At+tXx9j6RQWGsSDBxiTPzZWzJ+P1m8z1DhxIlRbY/cm2j09xCxtX/eZQ0EH
kgWOfUAhtdTgvhR0p8eCThLoZyoN8EvfmhXtXjdPENu97VDye7u/cuUKGP2B
Awfgc15e3owZM8DW4fONGzfA62HPQ4cOwX/PnDkzePDgtLQ0aJKvWbMGCg9s
zMnJCQ4OxmmZFds9ODgcSndL+W8dPXp0yJAhsEWx+6ioqJiYGDjRsmXLwsPD
Tf/NWtTu4Trz8vJp0tKuTZpkX3afl4dNcn9/cfAgTsOrBMeOieRkMXeuiIsz
IsduUhLOsW/cGJv5rVrhUnqr06KFWL48UFsZ8dju2e6NKqtzewsVtnvboeT3
dl/GUm/fvr137174sGPHjsTERF9fX6V1n5KSAnZ/7NgxqBKAX+/fvx82Xrx4
MTo6enGpKnqq8EU3Nzddxy//raVLl8JZ+vbtq9g9fIZ6BXxISkoaP3686b9Z
y9l9fn7+ggXhzs59hg51qghXV6dBg3p27frEzZvWd+FKAK3m/HyjycwUu3fj
bHn4XFRUSXJyMHZuw4YIOLiUn38W9eph4CCoLezciVWFadNwUb91mTbNYd8+
jWXEM9Hu5/WioHPQAHR63NmOEk7/g2LqUAn0on66opLyjgT6mdIh+wA6iK4V
7V63RsR2byOUD6I7derULVu2wAdw2FWrVq1cuRIa7+pP/f39ldZ9San5jh07
tn///pMmTTp+/Li6T2xsbBm7v379+hUdhYaGDh8+/M6dO7r7lP+WaveKoJ7g
4uKint0UWc7uMzIy+/f/MCLiiQULKmT+/CfmzXti4EAHLdp9drbYtEksWoQL
3Axn2TIREyP8/DCAD7i2KRdw+7Y4fFjs3WsoERFoN5Mmie7dcRF9v34YdNfq
xMUFaSsjHts9271RZXVmf6HCdm87lPy+dT9//vxFixaVlE7VgxZ9QkIC2K76
U9XuU1NTL126BB+ysrJgt379+qlz9sobd0BAwDgdubu7wxmXL1+uuw9t97t2
7QKvP3r0qFl+s5az+/T0jJEja0JLll4gducOxk7XXGc+OPXp06J5czSsgQON
o39/jEYLjWsTr6G4GLsXCgoMAva8cUMsXiw8PHCKfo8eD7PmWRcvL4ekpNna
yohnot3TveU/bJLQPpoirqEEujtdmg6ADhpAz0KkO9ul/e30on5AN618eaxo
9zOchArbve1Q8nu7V3rp9+zZk5+fn5eXBy19vXa/detWKDC3bt2Cz+D7AwYM
IOxeV0VFRX5+fsHBwWVm2hN2v3nz5pEjR169erWoVCb/Yi1r956eNfPyJJ4F
9YEpU7Rn9+CeJ06IgACsrhjL9eti+3aMe0OfAjz61i1x+bI5uXBBnDkj4uMx
uv7w4WZLj2sCDlu3st2z3Vdnu9fN1MN2bzuUlJuZf+LECWiDg4NDm93Hx+fY
sWPqj8DulbH7wsLCqKgo2MfJycnZ2Xnbtm3qPuvWrSPsHo42Y8aM8iv1yn/L
0dER7L64uHjgwIHqoIOHh0flf6P/lf3YPbSFb98WGzaIhATzMG8ehretRIc8
PJPdu/G7J09iF0FFbNsmPD3F0KGYis6MgMu7uYkhQ4Szs02QmKixBLgm2j29
ePyzfRJm9aPY+KMEeuW77pIxvbRdREFHrjtQWwL9TOlUgIApi/otave68wnZ
7m2HkgrW3eeVin5E0NZOTzduCLLErCvoKyf7sfvcXFyo/p//mGdS+q+/ikaN
hJcX1iIq0TOwfz/2qPfqhQPoeunbF6+zQQMxbpwYM8b8+PjYCA47dsyxq9Y9
27292b3u5Ae2e9uhpAK7r8ayH7tX4tKsWoVD2KYDF3zggJg1q5IXk5WFTfsd
OzDTXEXExGBimorqA9UFh/j4WdqaqtczRNDQdh/TjqLzfAn0ZDnpfDbdRWHl
2f2FhH/voQjuQ7G6qQR6jiKdzh6I6EpB5wKwqN1XTfg+M4rtvrrKrux+zRqR
mGieo0EL/dQp7BuPjcWh8EoQFydh5UoRGIit+/Hjqy3jxjns2qWx1j3t1wBt
97pBV8pDR6kFottTjPaWQKffPfG+hPqJFHTmoFXNJHSJpOgbLIGuDFgxAa7u
BAZN+AvbfXWVvdl9QoJ5jlZcjDPuhg7FPvlu3Yyme3d5Qluga1fr07OncHTE
1QSWAVr3M7XVume7Z7s3qqyO8xAqmvAXtvvqqupk99DiTk+vkNu3cRmauey+
pHQt3r17lRkIuHXLUOCarc769djr3rSphXBYunS6tvLdmzh2/91Wik4LJDSO
pQhwljB4GoV0Zj6dAPeTgxR0khqAfqZuUwSNKdl1LWr3Y7yEiib8RWr3Vf8H
aIkzlrDdm09VbPfgvCNHYsO5Vy/9QGO5RQuxbp3Z7L5ygIkHBYkOHSrTJ1D1
QOu+USPsi/D3txAOe/faV1Q9tnt7s3vd3hVN+Iv0Iqv+Lix0Rk38OsyoamP3
0Gru2ROnt1UUzm7hQpxIHxdnTa8vLsYVdmPGoOMvWGBB4GajojDdrem4uoom
TUTHjhYZKejSxWHt2hna6sw30e5bLKeos1MCvSpfmiWWXrq+tJUEOlsfPdeO
TlAL0M+UTrcH0DH9rGj3ulmANeEvfexJ1n7YVapqY/c3b+K7NDu7QtLScPKb
GTvzK4ESi2/ePGzj08EGTeTBA5xaAOc6c8ZUNm8Ws2djSzwgwBLU2LNnnl21
7tnu7c3uR44XKvbmLyybUrWxezBQaDUXFla4g3mn6lXa7lNSRGgoDj1Y9ETr
12NfR6dO2A9v7BzCXr3gpYS58xTgOD164HZLAGdct05jMfPp/nCAtnt6Pttj
uRLohXhjPSXQC/GkWedoQ6fXAErn2tHTCNsslqAbq7Y89GO3qN3rRk1ku2dZ
UfZm9+ZaiFc5iouxvQx2n5Ym2RPqA1FRol07tGyj6NgRv9W8OT7VffswOIBR
bNwogoPFhAli4sT/MWmS5XBITp6jrdZ9s1WChrb7UWMopK37rhEU9MEBel0A
nd8W+NdxipCeFLSbA3Q0g17zJCxrSUEn57Wo3etOMGC7Z1lR9mP3WVliyRJM
/Hr5sjh/3jqcOye2bhUzZ8pb91euYH7YoCCcdbB4sRHAPUI9YcgQDJZrVKo+
AL7r5YXTCB0dhZNTFVEaRFdLrXu2e7Z7o8qq7nAJ2z3LirIfu4crgab9t98+
DIFrFZo1w2lvbm541/TtQJ0kJASz8FRu4H77dgxR6+KCkQEMBK4K9v/pJ1Gv
Hn4YObLKUuRoLGa+tFeZtnu6P/ybbRKarqag++oBOgbvwo4S6GUF9Mx5+tQA
PQwhrWXp5pktT/cwCovavXOAUKkedn///v3yqV4serr8/PwqO101lv3YPQA+
eOoUjp5bi99+wyoHtNnVzvzcXFwb+Mkn4rPPfketWlg3uHatkk8DDgsP5MoV
o0lKwl+Hh4fEs8yHw7ZtwdqKqsd2z3ZvVFkdNF2oaN3u4+Pjhw0b5uLiMmDA
gKioqIKCAoue7syZM+7u7v379+/Xr19YWBibvomyK7svKR09tyJK6F1otqt2
D7e/YQNWAMqnw5s2TaSmGnFwONTatdgqd3d/2HaGDwR6m9uurhjsTp2nZ2l6
9RJxcRqLqmfizPwmayk+3yvhg2MU9HQ1gI5ar5vMRS9jRlHQ0f6lqwboZyrN
JkAPJVhxZv6AIKGiabvftWvX8OHDr169Cp/v3r07YsSI5ORki57R399/xYoV
hYWFaWlprq6u+/fvt+jpqr3sze6tizozX9fuN2/GcfMy3n3xItr9kiUiOVns
3Cln926xbBlGoff3F+HhIixMzty5YsYMnCFgVRz277evhXhs9/Zm9/1mCRVN
2/348ePB8dX/pqSknD171qJn9PPzCw8Pv3XrFnyGc127ds2ip6v2YruversH
n715E/vbgdu3sXsfnLrMnnfuiDlzcIJ927aiTRuD+PlnMWgQ9sZfviwuXZKz
eDFm3INTtG5tNVq1EitXBmZm2lEQXd2Xf3lqH5BA55CV9sbTOWSl6+47RFHQ
vfFxDSXQz1Q6VY9Ov2tFu+8zR/wPzdo9NLEdHR2Vpv2ZM2dWrVq1cuVKXfe3
hO7evTt37twhQ4YMGzYsOjo6JyfHoqer9qo2dg++qQm7P30a2+DBwWL+fBEZ
idbv46PH7mHPBw+MC8V/6JDw9ETTN2TSYNOmuKerKzbzIyKsSI2jR0Nycx8Y
VbQ0bfef7qegp74D83pRSGMCxP9E4TFOwrDJFPSqgbVNJNDPVJrb12btXrdO
ol27B3l6eh48eBA+XLlyZceOHfPnz/f397fc6fLz8/fs2VNcqkuXLkFLPyoq
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
My0N59T5+Ql/fwmwT7duWNno08eG6N3bYf36IG1lxGO7Z7s3qqw+ni1UpCda
tmzZ0KFDPTw8UlNTdbcvWrTI3d190qRJ58+fh/+uWLFiqI5u3rxpoetnVSex
3VvI7nNzcZx93jw9nfmzZ2MGPXBqEyPkwBGWLBE9emCCnnHjcECfwMdHdO+O
jBqFiYltBodt24K1lRFv9xeChrb7gYEUUlOjxwJm9ZNAr7OjQwAB9NfpGYz0
jQN1dlJIIwjRMfPpWIUWtfs/5gkV+kQpKSljxozJysratm3b5MmT1e0XLlyA
CkBhYWFycnJQUBBsKSgoyCnV2rVr/fz8uOHPMkRs94TdK2P3xcWVAex+9260
+zJHhifp7o4J71xc0KZNAY7QqRNGvr1xA09Hk5kpDhzAOxo5ElP42QwOW7dq
zO6XtxA0tN3TdnykloSw7hTSxemmZNcFlrWkoJP7zOkjYYg/xZLWEr7aRUFX
RSxq948UCBX6RODdsbGx8KGoqGjAgAHg6cp2aNFD0x6a8PHx8b6+vur+t27d
gqb9nTt3LHTxrGomtnu9QDMc7H7AAJy4Xgni48WaNTi9f+bMskeGB3LiBM6E
j47Gf01h8WJcKgjt+uRkjBJAcOoURs9zcxP9+2NSXbgv2yEhYaa2OvPZ7tnu
jSqrDsVCRfdE0Iq/o6Pc3NzIyMikpCTlp66urmlpacrnzMxMHx8fcPx+/frt
2rVLPQLsv3LlSgtdOav6ie2+IqDJDG3nunUfRpc1FuWLfn6Wvci9e8XgwTi/
vW1b0aZNhfz6q/jxR4wk4OuLkfRsCYfkZI0lwF3ZXNDQdk8vq9/+Hwkb6lFM
cZNAG+7UoRIWt6EI70Yxw0kCnVY4rqEEemV9gDOFRe2+jNQfgbOP1dHx48eX
LFmyYcMG5acDBw7Mz89XPq9evToiIgI+QK3AyckpJycHPmdkZAwePDg93biq
MsuexXZvIQoLxbFjIiTE4ie6excb77/9ViHwU7iSuXNFz56ia1ecsGdLOMTG
amyqHts9272FtHfv3oCAgMLCwlOnTo0ePbqoqOj+fVyjCnWAqKgo+ADtfWj1
K3YPOwcGBlr5ilmaEtu9hcjNxaZ3aKhJB8nMxEg4K1eKVasqZO1aeSaa9evF
8uUYPsjfH8Po2Q7+/g57987VVuueNjWAtvv1jSiSv5RAWx69uhygp/1LI9fF
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
AwcO1LNMRvPy8hxuS+LSsq3r16/Lei5evCjD6enpXbt2Vce9JNrNmzcrKyuf
fPJJ2bT13KZxL12RjRs3mhufZGtoaLC72ls1wHyLuM/Ozu7Vq9ewYcOke6DY
RzlccvqfnJwsm16+fLlsohVxn5WV1alTJ/0+gt5Bkl6E5X69rFzmyh9CH5Ud
fOWVVxRNAmBB3MNjSXBYYsji0KFDEuX6sCXu4+LiPvjgA0kxffTGjRuvvfZa
+/bt+/fv37t3b+tH3W5Fckp/Rk43bdq07t27y+Ljx48fMmSInrZJSUkjRoyw
WVDiPjg42NfXV5J07Nix+p13C8lKmx5LQkKCt7e37IIEtL53dldrtwFCdqpp
3IuXXnopICBA7z8oyFHy8fHp2bOnnIP369dP71HIFOu4tzlcTXdh8uTJ0gOR
zY0ePVpGT5069cwzz8juSE9GPrxixQrLJ3NycmJiYtRNAqAj7oHWqaqqkpNQ
hwmok9PzV1991XpKYWGhnGU3f1vy+eZ/WHJWtqj+WPMbIPsYFBQkfZ7mfLii
okL/RsBfUVRUdOXKFetjW11dnZeXZ7lToIuKitIf4QPgEHEP3Bnr1q3LyMhw
ditaLD4+PiQkZPDgwX89xG+v0tLS+fPnO7sVgNsg7oE7Q85Mf/vtN2e3osXW
rFkjHZWysjJnN8RWeXn5tWvXnN0KwG0Q9wAAGB5xDwCA4RH3AAAYngkAAHgA
Z/c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACe63+n7EnR

    "], {{0, 3202}, {677, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{677, 3202},
  PlotRange->{{0, 677}, {0, 3202}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[287]=",
 CellID->866798143]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Annotation and Enrichment", "Section",
 CellID->2035743524],

Cell["\<\
Having carried out the classification and clustering of data base on its \
temporal pattern, we would like to perform annotation of these data for gene \
ontology (GO) and pathways from KEGG: Kyoto Encyclopedia of Genes and Genomes.\
\>", "Text",
 CellID->1722961908],

Cell[CellGroupData[{

Cell["Gene Ontology Analysis", "Subsection",
 CellID->2013711891],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from the \
Gene Ontology consortium, and by default uses human data annotated with \
UniProt IDs. The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1112357573],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GOAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GOAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis (ORA) for Gene Ontology \
(GO) categories. We note that the function utilizes ontologies obtained from \
the GO Consortium, and by default uses human data annotated with UniProt IDs.\
\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->329777640],

Cell["\<\
Performing an over representation analysis for Gene Ontology (GO) terms, \
using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2064986220],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BackgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"GOAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GOAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GOAnalysisAssigner"]],
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
        RowBox[{"BenjaminiHochbergFDR", "[", 
         RowBox[{"#1", ",", " ", 
          RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], "]"}],
        " ", "&"}], ")"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BenjaminiHochbergFDR"]],
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
MultipleList option specifies whether the input accessions list constituted a \
multi-omics list input that is annotated so. If this is the case, \
MultipleList is set to True and each input list ID should have the form \
{ID,\"Omics Type Label\"}, e.g. {\"NFKB1\",\"Protein\"}, and the different \
omics type are treated as different for each ID. If MultipleList is set to \
False, and labeled IDs are provided, labels corresponding to the same ID are \
treated as equivalent to avoid overcounting.\
\>", "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"OBOGODictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "OBOGODictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OBOGODictionary"]],"paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the GO annotations."
    }], "TableText"]},
   {"OBODictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "OBODictionaryVariable can provide a GO annotation variable. If set to ",
     
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OBOGODictionary"]],"paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default GO \
annotation."
    }], "TableText"]},
   {"OntologyLengthFilter", "2", Cell[TextData[{
     "OntologyLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding GO terms that have fewer items \
compared to the OntologyLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GOAnalysisAssigner"]],
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"OutputID", "\"\<UniProt ID\>\"", Cell["\<\
The OutputID option takes a string value that specifies what kind of \
IDs/accessions to convert the input IDs to compute the GO enrichment.\
\>", "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in ontologies in selecting \
which terms/categories to return. It is used in conjunction with \
ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/categories to \
return. The default is to use GreaterEqualThan. \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", " ", "-", 
        RowBox[{"N", "[", " ", 
         RowBox[{"CDF", "[", 
          RowBox[{
           RowBox[{"HypergeometricDistribution", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
           RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}], "]"}]}], " ", ")"}], 
      "&"}], " "}], Cell[TextData[{
     "The TestFunction option provides a function used to calculate the \
p-values for the enrichment of each term. It can be a function of four \
inputs, f[#1,#2,#3,#4] (e.g. the default is using a hypergeometric \
distribution CDF, 1-N[CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->740180373],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1986245587],

Cell[TextData[{
 "The input data for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:\n",
 Cell[BoxData[
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["ID", "1"], ",", 
     RowBox[{
      SubscriptBox["ID", 
       RowBox[{"2", ","}]], "..."}], ",", 
     SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"],
 "\nThe IDs may be provided as ID strings, or as labeled strings in the case \
of multiple omics being considered. Labeled IDs are provided as ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "1"], ",", 
       SubscriptBox["label", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "2"], ",", 
       SubscriptBox["label", "2"]}], "}"}], ",", 
     RowBox[{"...", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "3"], ",", 
        SubscriptBox["label", "2"]}], "}"}]}]}], "}"}], "."}]], 
  "InlineFormula"],
 " The labels are typically a string, e.g. typically \"RNA\" or \"Protein\".\n\
The default output contains each GO:term that was considered and found to be \
statistically significant. For each GO term we schematically have an \
association with keys ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"GO", ":", "Term"}], "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"testing", " ", "outcomes"}], "}"}], ",", 
     RowBox[{"{", "statistics", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"GO", " ", "term"}], "}"}], ",", 
       RowBox[{"{", "Membership", "}"}]}], "}"}]}]}]}]], "InlineFormula"],
 ". The output has the following structures: for a single list input:"
}], "Text",
 CellID->296707676],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "1"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "1"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "1"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "2"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "2"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "2"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "n"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "n"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["term", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->308882198],

Cell[TextData[{
 Cell[BoxData["GOAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesSingleClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding GOAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->915126987],

Cell[TextData[{
 "We also note that GOAnalysis provides a multiple-hypothesis adjusted \
p-value. By default, it utilizes a Benjamini-Hochberg false discovery rate \
(FDR) using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BenjaminiHochbergFDR"]],
    "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->875538647],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["BenjaminiHochbergFDR",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "[", 
     StyleBox["pValues", "TI"], "]"}], Cell[TextData[{
     "calculates for a list of ",
     Cell[BoxData[
      StyleBox["pValues", "TI"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["p", 
          RowBox[{"1", ","}]], 
         SubscriptBox["p", "2"]}], ",", 
        RowBox[{"...", 
         SubscriptBox["p", "N"]}]}], "}"}]], "InlineFormula"],
     ", the Benjamini Hochberg approach false discovery rates (FDR). "
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1158915490],

Cell["Calculating a false discovery rate (FDR).", "Caption",
 CellID->215962140],

Cell["\<\
We carry out our GOAnalysis for all the classes and groups/subgroups. We only \
report terms for which there are at least 3 members, and additionally correct \
for multiple omics (2 sets of GO terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->54495101],

Cell[BoxData[
 RowBox[{
  RowBox[{"goAnalysisCombined", "=", 
   RowBox[{"GOAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"OntologyLengthFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}]}], " ", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[288]:=",
 CellID->1071128885],

Cell["We see that the classification is maintained:", "MathCaption",
 CellID->618975626],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[289]:=",
 CellID->712560114],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 CellLabel->"Out[289]=",
 CellID->1709177902]
}, Open  ]],

Cell["\<\
Let us extract the top 3 results from all the \"SpikeMax\" data:\
\>", "MathCaption",
 CellID->2051853087],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMax\>\"", ",", "All", ",", 
    RowBox[{"1", ";;", "3"}]}], "]"}], "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[290]:=",
 CellID->1202429683],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.013519380713489`*^-9", ",", "0.000011067333582765886`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "2480", ",", "39544", ",", "41"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrion\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1683\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GK5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPATA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPARGC1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GDAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXorf23\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75323\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SYNJ2BP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9H9B4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55084\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P49411\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P17568\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P83111\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N4H5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O96008\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P51970\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22695\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P40939\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75947\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22307\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10606\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P28288\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.568056155078778`*^-7", ",", "0.00012371963063571558`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "728", ",", "39544", ",", "19"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrial matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMAA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005814\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00006891724327877277`", ",", "0.03625046996463448`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "282", ",", "39544", ",", "9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"centriole\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AHI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1731\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SASS6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SCLT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP128\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP152\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC146\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CNTLN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP135\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6.39793691308638`*^-10", ",", "5.745347347951569`*^-7", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "19258", ",", "39544", ",", "63"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13612\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8IUZ5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P01732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q15819\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14745\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N8A2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7Z4H3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UBE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P85037\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q2TAY7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94776\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06127\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P07766\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF624\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF772\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43813\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRMS1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99623\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2.038192020994288`*^-9", ",", "9.151482174264353`*^-7", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "10070", ",", "39544", ",", "44"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43252\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P56192\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLEKHA8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0003723\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.8522421153683706`*^-7", ",", "0.000055443780653359885`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"76", ",", "2774", ",", "39544", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"RNA binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9BSD7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0051301\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "6.931887033069759`*^-9", ",", "0.000012311031370731892`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "690", ",", "39544", ",", "17"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"cell division\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FSD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM64A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP44\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UBE2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TIPIN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0062023\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "4.733950597024732`*^-7", ",", "0.0004203748130157962`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "720", ",", "39544", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"collagen-containing extracellular matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXCL12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FBLN1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PXDN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL26A1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL4A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDH2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MFAP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RARRES2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"APOE\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MDK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005876\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.572169357708226`*^-7", ",", "0.0004482724259763269`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "74", ",", "39544", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"spindle microtubule\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NUSAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[290]=",
 CellID->1411736642]
}, Open  ]],

Cell[TextData[{
 "Let us extract the names of the top 10 ontology group results from all the \
\"f1\" Group1 subgroup 1 data (G1S1). These are in the 3rd list, first \
component for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->430804357],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
   "\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "3", ",", "1"}], "]"}],
   "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[291]:=",
 CellID->1361454062],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"membrane\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}],
    ",", 
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"protein binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043312\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"neutrophil degranulation\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"extracellular exosome\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"RNA secondary structure unwinding\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0035196\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"production of miRNAs involved in gene silencing by \
miRNA\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0006986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to unfolded protein\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0051787\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"misfolded protein binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"focal adhesion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0035198\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"miRNA binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell surface\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ATP binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[291]=",
 CellID->500244026]
}, Open  ]],

Cell[TextData[{
 "Let us extract the corresponding p-values/test results of the top 10 \
ontology group results from all the \"SpikeMin\" Group1 subgroup 1 data \
(G1S1). These are in the 1st list for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->170022261],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "1"}], "]"}], 
  "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[292]:=",
 CellID->1410890117],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.2119400579352567`*^-8", ",", "0.000015658265548523517`", ",", 
      "True"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2.6750076470946446`*^-6", ",", "0.0017280549400231404`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043312\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "4.344497815751073`*^-6", ",", "0.0018605718870358173`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "5.760284479987051`*^-6", ",", "0.0018605718870358173`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000012714222794490848`", ",", "0.0032853551700964354`", ",", "True"}],
      "}"}]}], ",", 
   RowBox[{"\<\"GO:0035196\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0000895042174695781`", ",", "0.019273241495115816`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00020754919749131162`", ",", "0.03683335126456907`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0051787\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0004652266830912129`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0006061341815932293`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0006232231925990837`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0035198\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0007083971952717376`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000751938927678804`", ",", "0.04223935193743542`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000808237870607684`", ",", "0.04351013870104699`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0009399209877797305`", ",", "0.04784404807503774`", ",", "True"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[292]=",
 CellID->948909842]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pathway Analysis", "Subsection",
 CellID->113475317],

Cell[CellGroupData[{

Cell["\<\
Enrichment of Genomic KEGG Pathways (KEGG: Kyoto Encyclopedia of Genes and \
Genomes)\
\>", "Subsubsection",
 CellID->794541302],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from KEGG: \
Kyoto Encyclopedia of Genes and Genomes, and by default uses human data \
annotated with KEGG Gene IDs. The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1511547068],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["KEGGAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/KEGGAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis for KEGG: Kyoto \
Encyclopedia of Genes and Genomes pathways. We note that the function \
utilizes data obtained from the KEGG databases, and by default uses human \
data annotated by \"KEGG Gene ID\".\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1987511513],

Cell["\<\
Performing an over representation analysis for KEGG:Kyoto Encyclopedia of \
Genes and Genomes pathways, using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2145353553],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AnalysisType", "\"\<Genomic\>\"", Cell[TextData[{
     "AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based analysis. \
\"Molecular\" analysis uses molecular analysis. Setting the option to ",
     ButtonBox["All",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/All"],
     " carries out all possible analysis types for the input data."
    }], "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BacgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
         RowBox[{"BenjaminiHochbergFDR", "[", 
          RowBox[{"#1", ",", " ", 
           RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], 
         "]"}], " ", "&"}], ")"}], " ", "&"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BenjaminiHochbergFDR"]],
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysisAssigner"]],
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "KEGGDictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGDictionary"]],"paclet:MathIOmica/ref/KEGGDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the KEGG annotations."
    }], "TableText"]},
   {"KEGGDictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "KEGGDictionaryVariable can provide a KEGG annotation variable. If set \
to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGDictionary"]],"paclet:MathIOmica/ref/KEGGDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default KEGG \
annotation."
    }], "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "MultipleList option specifies whether the input accessions list \
constituted a multi-omics list input that is annotated so. Each ID ",
     Cell[BoxData["j"], "InlineFormula"],
     "  input must be a list form, i.e. enclosed as ",
     Cell[BoxData[
      RowBox[{"{", 
       SubscriptBox["ID", "j"]}]], "InlineFormula"],
     "}.  If this is the case, MultipleList is set to True and each input \
list ID should have the form {ID,\"Omics Type Label\"}, e.g. \
{\"NFKB1\",\"Protein\"}, and the different omics type are treated as \
different for each ID. If MultipleList is set to False, and labeled IDs are \
provided, labels corresponding to the same ID are treated as equivalent to \
avoid overcounting."
    }], "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"PathwayLengthFilter", "2", Cell[TextData[{
     "PathwayLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding KEGG pathways that have fewer items \
compared to the PathwayLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysisAssigner"]],
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in pathways in selecting which \
terms/pathways to return. It is used in conjunction with ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/pathways to \
return. The default is to use GreaterEqualThan \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", " ", "-", 
          RowBox[{"N", " ", 
           RowBox[{"CDF", "[", 
            RowBox[{
             RowBox[{"HypergeometricDistribution", "[", 
              RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
             RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}]}]}]}], "]"}], " ", 
       ")"}], "&"}], " "}], Cell[TextData[{
     "The TestFunction option calculates the p-values for the enrichment of \
each term. It can be a function of four inputs, f[#1,#2,#3,#4] (e.g. the \
default is using a hypergeometric distribution CDF, 1-N[CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->706732141],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->315042230],

Cell[TextData[{
 "The input data can be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:"
}], "Text",
 CellID->1844849291],

Cell[TextData[Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["ID", "1"], ",", 
    RowBox[{
     SubscriptBox["ID", 
      RowBox[{"2", ","}]], "..."}], ",", 
    SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"]], "Text",
 CellID->420108894],

Cell[TextData[{
 "The IDs may be provided as ID strings, ",
 Cell[BoxData[
  SubscriptBox["ID", "j"]], "InlineFormula"],
 " (e.g. \"NFKB1\") as strings enclosed in list brackets ",
 Cell[BoxData[
  RowBox[{"{", 
   SubscriptBox["ID", "j"], "}"}]], "InlineFormula"],
 ", (e.g. {\"NFKB1\"}  or as labeled strings in the case of multiple omics \
being considered. Labeled IDs are typically provided as:"
}], "Text",
 CellID->1991433769],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "1"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "1"]}], ",", 
      SubscriptBox["label", "1"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "2"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "2"]}], ",", "...", ",", 
      SubscriptBox["label", "2"]}], "}"}], ",", 
    RowBox[{"...", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "n"], ",", "...", ",", " ", 
       RowBox[{"optional", " ", "label", " ", 
        SubscriptBox["items", "n"]}], ",", "...", ",", 
       SubscriptBox["label", "n"]}], "}"}]}]}], "}"}], "."}]]]], "Text",
 CellID->446395410],

Cell[TextData[{
 "The ID labels are typically a string, e.g. typically \"RNA\" or \
\"Protein\", (e.g. {\"NFKB1\",\"Protein\"}) or for a molecular ID obtained \
from metabolomics experiments, can also contain other optional label items \
such as mass and retention time ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "\"\<cpd:C00449\>\"", ",", "276.133", ",", "11.0041", ",", 
    "\"\<Meta\>\""}], "}"}]], "InlineFormula"],
 ". The main label must always be the last element in the list."
}], "Text",
 CellID->1407276899],

Cell["\<\
The output has the following structures: for a single list input:\
\>", "Text",
 CellID->1865437082],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "1"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "2"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "n"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->1474295269],

Cell[TextData[{
 "The input data can also be an association of multiple ",
 Cell[BoxData["L"], "InlineFormula"],
 " groups to be tested:"
}], "Text",
 CellID->814266997],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      SubscriptBox["Group", "1"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "1"]}]]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "2"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "21"], ",", 
        SubscriptBox["ID", "22"], ",", "...", ",", 
        SubscriptBox[
         SubscriptBox["ID", 
          RowBox[{"2", "n"}]], "2"]}], "}"}]}], ",", "...", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "L"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "L"]}]]}], "}"}]}]}], "|>"}], "."}]}]], "Text",
 CellID->1619619895],

Cell[TextData[{
 "In this case the output for each group has the ",
 Cell[BoxData["listOutput"], "InlineFormula"],
 " format described above:"
}], "Text",
 CellID->1596349540],

Cell[BoxData[
 RowBox[{"associationOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     SubscriptBox["Group", "1"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "1"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "2"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "2"]}], ",", "...", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "L"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "L"]}]}], "|>"}]}]], "Text",
 CellID->1333516809],

Cell[TextData[{
 Cell[BoxData["KEGGAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesSingleClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding KEGGAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->1277668771],

Cell[TextData[{
 "There are two types of analyses that are carried out, which can be set by \
the AnalysisType option value. The default \"Genomic\" analysis is based on \
input gene symbols. The \"Molecular\" analysis is based on molecular input \
accessions (e.g. compounds \"cpd\" databases). For multi-omic input the user \
may select to do ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 " analyses. In this case an additional outer association is created with \
labels indicating each of \"Genomic\" or \"Molecular\" analysis carried out."
}], "Text",
 CellID->1090047844],

Cell["\<\
The enrichment analysis is an over-representation calculation, using a \
hypergeometric test. For a given a given group (e.g. members of a cluster \
after classification), we try to identify which KEGG pathway terms are \
over-represented by membership of IDs to that cluster. The KEGGAnalysis \
function allows us to select the background, and hence address selection \
bias. Additionally a Benjamini-Hochberg procedure false discovery rate (FDR) \
may be calculated for each representation.\
\>", "Text",
 CellID->251121551],

Cell["\<\
We carry out our KEGGAnalysis for all the classes and groups/subgroups. We \
only report terms for which there are at least 2 members, and additionally \
correct for multiple omics (2 sets of KEGG terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->1339044942],

Cell[BoxData[
 RowBox[{
  RowBox[{"keggAnalysisCombined", "=", 
   RowBox[{"KEGGAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "2"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}], " ", ",", 
     RowBox[{"AnalysisType", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[293]:=",
 CellID->1847203281],

Cell["\<\
We see that both \"Molecular\" and \"Genomic\" analysis is performed:\
\>", "MathCaption",
 CellID->1921942735],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "keggAnalysisCombined"}]], "Input",
 CellLabel->"In[294]:=",
 CellID->1790012618],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Molecular\"\>", ",", "\<\"Genomic\"\>"}], "}"}]], "Output",
 CellLabel->"Out[294]=",
 CellID->921808109]
}, Open  ]],

Cell["We can extract both Genomic and molecular analysis:", "MathCaption",
 CellID->1116859782],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]], "Input",
 CellLabel->"In[295]:=",
 CellID->1866845763],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{
                 RowBox[{"\<\"path:hsa05016\"\>", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "5.341026271859465`*^-7", ",", "0.00009167154489243451`", 
                    ",", "True"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"66", ",", "386", ",", "15746", ",", "11"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Huntington disease - Homo sapiens \
(human)\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\<\"DNAL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                    "}"}], ",", 
                    TemplateBox[{"9"},
                    "OutputSizeLimit`Skeleton"], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                     "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
                 TemplateBox[{"9"},
                  "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"\<\"path:hsa00640\"\>", "\[Rule]", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}],
               ",", 
              TemplateBox[{"12"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}], ",", 
           
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 295, 16201641659859159471, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16201641659859159471 === $SessionID, 
   Out[295], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[295]=",
 CellID->881858505]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Molecular\>\"", "]"}]], "Input",
 CellLabel->"In[297]:=",
 CellID->1218496248],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map01100\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.024813798850886176`", ",", "0.04135633141814362`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "1654", ",", "5841", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Metabolic pathways\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C06124\"\>", ",", "379.2488`", ",", 
                  "12.687057`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C20199\"\>", ",", "238.1201`", ",", 
                  "9.702206`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C19614\"\>", ",", "270.2196`", ",", 
                  "12.719786`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C05446\"\>", ",", "436.355`", ",", 
                  "14.301529`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map04976\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.0008268610310414034`", ",", "0.004961166186248421`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "98", ",", "5841", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Bile secretion\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1654`", ",", 
                   "12.082582`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1659`", ",", 
                   "12.371832`", ",", "\<\"Meta\"\>"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C01921\"\>", ",", "465.3086`", ",", 
                  "11.805584`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[297]=",
 CellID->1408890497]
}, Open  ]],

Cell["\<\
Let us extract the names of the pathways found for the \"SpikeMin\" data:\
\>", "MathCaption",
 CellID->1431426074],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMin\>\"", ",", "All", ",", "All", ",", "3", ",", "1"}], 
   "]"}], "@", 
  RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]], "Input",
 CellLabel->"In[298]:=",
 CellID->1866212024],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03430\"\>", 
       "\[Rule]", "\<\"Mismatch repair - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01212\"\>", 
       "\[Rule]", "\<\"Fatty acid metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05340\"\>", 
       "\[Rule]", "\<\"Primary immunodeficiency - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa00471\"\>", 
       "\[Rule]", "\<\"D-Glutamine and D-glutamate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00250\"\>", 
       "\[Rule]", "\<\"Alanine, aspartate and glutamate metabolism - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00533\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - keratan sulfate - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00220\"\>", 
       "\[Rule]", "\<\"Arginine biosynthesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04964\"\>", 
       "\[Rule]", "\<\"Proximal tubule bicarbonate reclamation - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04145\"\>", 
       "\[Rule]", "\<\"Phagosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05134\"\>", 
       "\[Rule]", "\<\"Legionellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05167\"\>", 
       "\[Rule]", "\<\"Kaposi sarcoma-associated herpesvirus infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05133\"\>", 
       "\[Rule]", "\<\"Pertussis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05323\"\>", 
       "\[Rule]", "\<\"Rheumatoid arthritis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05150\"\>", 
       "\[Rule]", "\<\"Staphylococcus aureus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00531\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan degradation - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"Human T-cell leukemia virus 1 infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05132\"\>", 
       "\[Rule]", "\<\"Salmonella infection - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00051\"\>", 
       "\[Rule]", "\<\"Fructose and mannose metabolism - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04130\"\>", 
       "\[Rule]", "\<\"SNARE interactions in vesicular transport - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00071\"\>", 
       "\[Rule]", "\<\"Fatty acid degradation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04140\"\>", 
       "\[Rule]", "\<\"Autophagy - animal - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04625\"\>", 
       "\[Rule]", "\<\"C-type lectin receptor signaling pathway - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05163\"\>", 
       "\[Rule]", "\<\"Human cytomegalovirus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04330\"\>", 
       "\[Rule]", "\<\"Notch signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00532\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - chondroitin sulfate / \
dermatan sulfate - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05144\"\>", 
       "\[Rule]", "\<\"Malaria - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05146\"\>", 
       "\[Rule]", "\<\"Amoebiasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04115\"\>", 
       "\[Rule]", "\<\"p53 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00380\"\>", 
       "\[Rule]", "\<\"Tryptophan metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05321\"\>", 
       "\[Rule]", "\<\"Inflammatory bowel disease (IBD) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00410\"\>", 
       "\[Rule]", "\<\"beta-Alanine metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04926\"\>", 
       "\[Rule]", "\<\"Relaxin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04217\"\>", 
       "\[Rule]", "\<\"Necroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00450\"\>", 
       "\[Rule]", "\<\"Selenocompound metabolism - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04152\"\>", 
       "\[Rule]", "\<\"AMPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05235\"\>", 
       "\[Rule]", "\<\"PD-L1 expression and PD-1 checkpoint pathway in cancer \
- Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05163\"\>", 
       "\[Rule]", "\<\"Human cytomegalovirus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05220\"\>", 
       "\[Rule]", "\<\"Chronic myeloid leukemia - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05170\"\>", 
       "\[Rule]", "\<\"Human immunodeficiency virus 1 infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04910\"\>", 
       "\[Rule]", "\<\"Insulin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04625\"\>", 
       "\[Rule]", "\<\"C-type lectin receptor signaling pathway - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04012\"\>", 
       "\[Rule]", "\<\"ErbB signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05205\"\>", 
       "\[Rule]", "\<\"Proteoglycans in cancer - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05167\"\>", 
       "\[Rule]", "\<\"Kaposi sarcoma-associated herpesvirus infection - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04218\"\>", 
       "\[Rule]", "\<\"Cellular senescence - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"Human T-cell leukemia virus 1 infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01521\"\>", 
       "\[Rule]", "\<\"EGFR tyrosine kinase inhibitor resistance - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05016\"\>", 
       "\[Rule]", "\<\"Huntington disease - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa01522\"\>", 
       "\[Rule]", "\<\"Endocrine resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04919\"\>", 
       "\[Rule]", "\<\"Thyroid hormone signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04211\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00562\"\>", 
       "\[Rule]", "\<\"Inositol phosphate metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05211\"\>", 
       "\[Rule]", "\<\"Renal cell carcinoma - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05212\"\>", 
       "\[Rule]", "\<\"Pancreatic cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05214\"\>", 
       "\[Rule]", "\<\"Glioma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04370\"\>", 
       "\[Rule]", "\<\"VEGF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04912\"\>", 
       "\[Rule]", "\<\"GnRH signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04216\"\>", 
       "\[Rule]", "\<\"Ferroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04611\"\>", 
       "\[Rule]", "\<\"Platelet activation - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04520\"\>", 
       "\[Rule]", "\<\"Adherens junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04213\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - multiple species - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05215\"\>", 
       "\[Rule]", "\<\"Prostate cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04150\"\>", 
       "\[Rule]", "\<\"mTOR signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05213\"\>", 
       "\[Rule]", "\<\"Endometrial cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03040\"\>", 
       "\[Rule]", "\<\"Spliceosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04371\"\>", 
       "\[Rule]", "\<\"Apelin signaling pathway - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04962\"\>", 
       "\[Rule]", "\<\"Vasopressin-regulated water reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04933\"\>", 
       "\[Rule]", "\<\"AGE-RAGE signaling pathway in diabetic complications - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00630\"\>", 
       "\[Rule]", "\<\"Glyoxylate and dicarboxylate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05162\"\>", 
       "\[Rule]", "\<\"Measles - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04068\"\>", 
       "\[Rule]", "\<\"FoxO signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05223\"\>", 
       "\[Rule]", "\<\"Non-small cell lung cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04720\"\>", 
       "\[Rule]", "\<\"Long-term potentiation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04140\"\>", 
       "\[Rule]", "\<\"Autophagy - animal - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04072\"\>", 
       "\[Rule]", "\<\"Phospholipase D signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04926\"\>", 
       "\[Rule]", "\<\"Relaxin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05230\"\>", 
       "\[Rule]", "\<\"Central carbon metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04917\"\>", 
       "\[Rule]", "\<\"Prolactin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04658\"\>", 
       "\[Rule]", "\<\"Th1 and Th2 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05010\"\>", 
       "\[Rule]", "\<\"Alzheimer disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04914\"\>", 
       "\[Rule]", "\<\"Progesterone-mediated oocyte maturation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04725\"\>", 
       "\[Rule]", "\<\"Cholinergic synapse - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04922\"\>", 
       "\[Rule]", "\<\"Glucagon signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04730\"\>", 
       "\[Rule]", "\<\"Long-term depression - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04714\"\>", 
       "\[Rule]", "\<\"Thermogenesis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05225\"\>", 
       "\[Rule]", "\<\"Hepatocellular carcinoma - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04659\"\>", 
       "\[Rule]", "\<\"Th17 cell differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04623\"\>", 
       "\[Rule]", "\<\"Cytosolic DNA-sensing pathway - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa04540\"\>", 
       "\[Rule]", "\<\"Gap junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05020\"\>", 
       "\[Rule]", "\<\"Prion diseases - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03020\"\>", 
       "\[Rule]", "\<\"RNA polymerase - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04921\"\>", 
       "\[Rule]", "\<\"Oxytocin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04750\"\>", 
       "\[Rule]", "\<\"Inflammatory mediator regulation of TRP channels - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05100\"\>", 
       "\[Rule]", "\<\"Bacterial invasion of epithelial cells - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04350\"\>", 
       "\[Rule]", "\<\"TGF-beta signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05165\"\>", 
       "\[Rule]", "\<\"Human papillomavirus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03060\"\>", 
       "\[Rule]", "\<\"Protein export - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00640\"\>", 
       "\[Rule]", "\<\"Propanoate metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04146\"\>", 
       "\[Rule]", "\<\"Peroxisome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04360\"\>", 
       "\[Rule]", "\<\"Axon guidance - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04915\"\>", 
       "\[Rule]", "\<\"Estrogen signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00030\"\>", 
       "\[Rule]", "\<\"Pentose phosphate pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04015\"\>", 
       "\[Rule]", "\<\"Rap1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05130\"\>", 
       "\[Rule]", "\<\"Pathogenic Escherichia coli infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04960\"\>", 
       "\[Rule]", "\<\"Aldosterone-regulated sodium reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04961\"\>", 
       "\[Rule]", "\<\"Endocrine and other factor-regulated calcium \
reabsorption - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05224\"\>", 
       "\[Rule]", "\<\"Breast cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03410\"\>", 
       "\[Rule]", "\<\"Base excision repair - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00620\"\>", 
       "\[Rule]", "\<\"Pyruvate metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04014\"\>", 
       "\[Rule]", "\<\"Ras signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04932\"\>", 
       "\[Rule]", "\<\"Non-alcoholic fatty liver disease (NAFLD) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05012\"\>", 
       "\[Rule]", "\<\"Parkinson disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04928\"\>", 
       "\[Rule]", "\<\"Parathyroid hormone synthesis, secretion and action - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00310\"\>", 
       "\[Rule]", "\<\"Lysine degradation - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04022\"\>", 
       "\[Rule]", "\<\"cGMP-PKG signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00230\"\>", 
       "\[Rule]", "\<\"Purine metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05418\"\>", 
       "\[Rule]", "\<\"Fluid shear stress and atherosclerosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00534\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - heparan sulfate / \
heparin - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04217\"\>", 
       "\[Rule]", "\<\"Necroptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01230\"\>", 
       "\[Rule]", "\<\"Biosynthesis of amino acids - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00500\"\>", 
       "\[Rule]", "\<\"Starch and sucrose metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04530\"\>", 
       "\[Rule]", "\<\"Tight junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05203\"\>", 
       "\[Rule]", "\<\"Viral carcinogenesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00052\"\>", 
       "\[Rule]", "\<\"Galactose metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01523\"\>", 
       "\[Rule]", "\<\"Antifolate resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04152\"\>", 
       "\[Rule]", "\<\"AMPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04024\"\>", 
       "\[Rule]", "\<\"cAMP signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05218\"\>", 
       "\[Rule]", "\<\"Melanoma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa02010\"\>", 
       "\[Rule]", "\<\"ABC transporters - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04630\"\>", 
       "\[Rule]", "\<\"JAK-STAT signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04930\"\>", 
       "\[Rule]", "\<\"Type II diabetes mellitus - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05135\"\>", 
       "\[Rule]", "\<\"Yersinia infection - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04657\"\>", 
       "\[Rule]", "\<\"IL-17 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04390\"\>", 
       "\[Rule]", "\<\"Hippo signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[298]=",
 CellID->1982568702]
}, Closed]],

Cell[TextData[{
 "The results from a MathIOmica time series clustering enrichment analysis \
can be exported to spreadsheets using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EnrichmentReportExport"]],
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->488726451],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["EnrichmentReportExport",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnrichmentReportExport"], "[", 
     StyleBox["results", "TI"], "]"}], Cell[TextData[{
     "exports results from enrichment analyses to Excel spreadsheets, \
particularly suited for exporting multi-omics ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesClusters"]],
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " enrichment analysis results (via ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "). ",
     "An excel spreadsheet is generated for each Class, named after the Class \
key, with sheets created for and named after each Group in that Class \
containing the enrichment output for that Group."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->2038566199],

Cell["Exporting the enrichment analysis results to spreadsheets.", "Caption",
 CellID->1228002355],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AppendString", "\"\<\>\"", Cell[TextData[{
     "String that will be appended to the file name after the class name. If \
a string is not provided the current ",
     ButtonBox["Date",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Date"],
     " is appended."
    }], "TableText"]},
   {"OutputDirectory", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     Cell[BoxData["OutputDirectory"], "InlineFormula"],
     " specifies the location of a directory to output the Excel spreadsheets \
generated by the function. If it is set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the ",
     Cell[BoxData[
      RowBox[{"NotebookDirectory", "[", "]"}]], "InlineFormula"],
     " will be used as a default output directory."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1076877467],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EnrichmentReportExport"]],
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->87410953],

Cell[TextData[{
 "We can export the reports, for example to the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$UserDocumentDirectory"]],
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1660367008],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{
    RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}], ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{
    "AppendString", "\[Rule]", " ", "\"\<KEGGAnalysisCombined\>\""}]}], "]"}],
   ";"}]], "Input",
 CellLabel->"In[205]:=",
 CellID->1385794338],

Cell[TextData[{
 "We can export the GO analysis results as well, for example to the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$UserDocumentDirectory"]],
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1754716454],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{"goAnalysisCombined", ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{"AppendString", "\[Rule]", " ", "\"\<GOAnalysisCombined\>\""}]}], 
   "]"}], ";"}]], "Input",
 CellLabel->"In[206]:=",
 CellID->126518127]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization of Pathways from KEGG", "Subsubsection",
 CellID->36506248],

Cell[TextData[{
 "MathIOmica allows visualization and coloring of KEGG pathways using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGPathwayVisual"]],"paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1912770077],

Cell[BoxData[GridBox[{
   {
    RowBox[{"KEGGPathwayVisual", "[", 
     StyleBox["pathway", "TI"], "]"}], Cell[TextData[{
     "generates a visual representation for a KEGG: Kyoto Encyclopedia of \
Genes and Genomes ",
     Cell[BoxData[
      StyleBox["pathway", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->672020044],

Cell["Visualizing KEGG pathways.", "Caption",
 CellID->1024379935],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AnalysisType", "\"\<Genomic\>\"", Cell["\<\
AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based pathway \
visualization. \"Molecular\" analysis uses molecular analysis map \
visualization.\
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BlendColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], "}"}], Cell["\<\
BlendColors provides a list of colors to be used in coloring intensities \
provided and is used by the IntensityFunction as its first argument. The \
colors must be provided as RGBColor[] specification.\
\>", "TableText"]},
   {"ColorSelection", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<RNA\>\"", " ", "\[Rule]", "  ", "\"\<bg\>\""}], ",", " ", 
      RowBox[{"\"\<Protein\>\"", " ", "\[Rule]", "  ", "\"\<fg\>\""}]}], 
     "|>"}], Cell["\<\
ColorSelection assigns foreground and background colors in the KEGG pathway \
through an association. The Keys point to labels for multi-omics data, and \
the values \"bg\" and \"fg\" can point to background and foreground \
representations respectively for each key.\
\>", "TableText"]},
   {"DefaultColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "]"}]}]}], "}"}], 
    Cell["\<\
DefaultColors provides a list of rules for setting the colors to be used as \
default values for the foreground \"fg\" and background \"bg\" respectively \
in the generated pathways. The colors must be provided as RGBColor[] \
specification.\
\>", "TableText"]},
   {"ExportMovieOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}], 
      ",", 
      RowBox[{"\"\<FrameRate\>\"", "\[Rule]", "1"}]}], "}"}], Cell[TextData[{
     "ExportMovieOptions provides options for the ",
     ButtonBox["Export",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Export"],
     " function used internally to export the pathway list when Intensities \
have been provided for a time series representation of data."
    }], "TableText"]},
   {"FileExtend", "\"\<.mov\>\"", Cell["\<\
FileExtend provides a string to be appended to the file name if the \
ResultsFormat is set to \"Movie\".\
\>", "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. The gene dictionary is used to convert MemberSet \
identities provided to corresponding KEGG identifiers. If  GeneDictionary is \
set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be created or augmented through the use of ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {"GetGeneDicitonaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input \
when identifiers are provided through setting the MemberSet values.\
\>", "TableText"]},
   {"Intensities", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Intensities may be used to provide a set of intensities that will be \
used for coloring components of the pathway. The intensities are provided as \
an association for each ID as single values, or as a list of values in the \
case of series data:\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{
          SubscriptBox["ID", "1"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "1"]}], "}"}]}], ",", 
         RowBox[{
          SubscriptBox["ID", 
           RowBox[{"2", " "}]], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "2"]}], "}"}]}], ",", "...", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["ID", "N"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "N"]}], "}"}]}]}], "|>"}], "."}]], 
      "InlineFormula"],
     "\nIntensities must be scaled from -1 to 1, or selected such that the \
IntensityFunction can convert them to a number between 0 to 1."
    }], "TableText"]},
   {"IntensityFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Blend", "[", 
       RowBox[{"#1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#2", "+", "1"}], ")"}], "/", "2"}]}], "]"}], "&"}], ")"}], 
    Cell["\<\
IntensityFunction is a function of two arguments that allows customization of \
the coloring for the intensities. The IntensityFunction value can be any \
function which outputs a color, I(#1,#2), (*where#1 is the BlendColors option \
value, and #2 is an intensity vector, that has values typically ranging from \
[-1,1].\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysisAssigner"]],
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MemberSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     "MemberSet selects which members of the pathway are to be considered. \
The choices are:\nAll: return the pathway only.\n{list of identifiers}: a \
list of identifiers that will be highlighted. If ORA is set to True the list \
must be the output from an over representation analysis, and the identifiers \
will be selected from the last list, second sublist.\nOnly IDs that are found \
to match in the pathway are colored.\nAn internal gene dictionary (see ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ") is used to convert IDs to KEGG IDs."
    }], "TableText"]},
   {"MissingValueColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.4", ",", " ", "0.4", ",", " ", "0.4"}], "]"}], Cell["\<\
MissingValueColor provides a color to be used when Intensities are provided \
to represent values that are tagged as Missing[]. The color must be provided \
as RGBColor[] specification.\
\>", "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MovieFilePath", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
MovieFilePath indicates the path (including file name) where if ResultsFormat \
is set to \"Movie\"  the movie generated will be saved. The default value \
None will generate a file named after the pathway with extension set by the \
FileExtend option in the current directory.\
\>", "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"ORA", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "ORA can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " depending on whether the input is from an over representation analysis \
(e.g. output from ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "), or not respectively."
    }], "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"ResultsFormat", "\"\<URL\>\"", Cell[TextData[Cell[BoxData[Cell["\<\
ResultsFormat provides a choice of output format, the choices are:
\"URL\": returns a URL of the pathway,
\"Figure\": returns figure output(s) for the pathway,
\"Movie\": in the case of series data returns a movie/animation of the series \
pathway snapshots.\
\>", "TableText"]]]], "TableText"]},
   {"SingleColorPlace", "\"\<bg\>\"", Cell["\<\
SingleColorPlace selects in the case of a single identifier input whether to \
place the color to the foreground, (\"fg\") or background (\"bg\" set by \
default).\
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"StandardHighlight", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", " ", "0.7", ",", " ", "1"}], "]"}]}]}], "}"}], 
    Cell["\<\
StandardHighlight provides a list of rules for setting the highlight colors \
for the IDs represented in the pathway (when no intensities are provided). \
The list specifies color rules for foregroung, \"fg\", and background, \
\"bg\", respectively. The colors must be provided as RGBColor[] specification.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->812822320],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGPathwayVisual"]],"paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->961253673],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"ResultsFormat", " ", "option", " ", "setting"}], "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox[
    "\"Results\" value for returned data",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<URL\>\"", Cell["\<\
Browser URL pointing to pathway on KEGG database, or if a list of Intensities \
was provided a series of URLs corresponding to each time point or sequential \
data in the series.\
\>", "TableText"]},
   {"\"\<Figure\>\"", Cell["\<\
Pathway figure downloaded from the KEGG database, or if a list of Intensities \
was provided a series of figures corresponding to each time point or \
sequential data in the series.\
\>", "TableText"]},
   {"\"\<Movie\>\"", Cell["\<\
Name of the output file that contains the generated movie/animation that is \
based on the list of Intensities provided.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->746904677],

Cell[TextData[{
 Cell[BoxData["ResultsFormat"], "InlineFormula"],
 " option output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGPathwayVisual"]],"paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"]
}], "Caption",
 CellID->1184989624],

Cell["For example, we can look at the B-cell receptor pathway:", "MathCaption",
 CellID->1676459694],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptor", "=", 
  RowBox[{"KEGGPathwayVisual", "[", "\"\<path:hsa04662\>\"", "]"}]}]], "Input",\

 CellLabel->"In[299]:=",
 CellID->1272628418],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{
    "{", "\<\"https://www.kegg.jp/kegg-bin/show_pathway?map=hsa04662\"\>", 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[299]=",
 CellID->545314925]
}, Open  ]],

Cell["We can open this in a browser:", "MathCaption",
 CellID->1218512518],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptor", "[", "\"\<Results\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[208]:=",
 CellID->1135832234],

Cell["We can import directly the pathway:", "MathCaption",
 CellID->64193474],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigure", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[300]:=",
 CellID->862926724],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
xn6/mxQUFBQUhfD/AfLWmcQ=
    "], {{0, 124}, {461, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{461, 124},
  PlotRange->{{0, 461}, {0, 124}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[300]=",
 CellID->1822657880]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->1377198042],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"exampleBCellReceptorFigure", "[", "\"\<Results\>\"", "]"}], "[", 
    
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[301]:=",
 CellID->988744528],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
vazqrftmixwmtIzUNHKYPdRkI6G2rcnvav922UfkMECJNx6rUKf0uKr0GC12
nHfKMd5KZSHPm9qs9P3gTXXDnt50rczTHCY2f2qaU96jd1Syb7fKYXIzFzmM
HAYIe8OxCW3UHuPdPZ+aRg7DKt7SZjXb+Za64RwnZzJPcpjUvKlpTnmP3tHd
9cWxaXPbpXR/kcPIYYAypx6P0N7THCZnmrus5ul7+0r790plIc/pbfbkPeAz
n/cRdnTatTIrXA+Tk+ms/B69o7scJrRPP81hvts3lM9830rXtfs+IocBSpxy
/EF/o3OYkul2ef9eqSzkObnNnm7b9f3j5LrifLtnMk9zmNz33JzPRkrfo936
30r2kZL9JZbLlK4rVoYdyGGAEjsfczDW6Bwm9N5e+v6+0v69UlnIc2Kb1Yz7
d+eo12WcWFe809057Opq36Nzzp9L59n1PXpFqf0wN4P5TJvbLqVtKYeRwwBl
djrGYK6nOcxdxhKa5tRjvJXKQtqJ7dVym+QwvMUOmUzuZyDXaxi+H9dOE3pu
t/foVcXqKCd/+Z62pG1KjrfkMHIYoMzqxxWsozT7uD5O5TCx10PXwe72/r1S
WUg7qb16jPWp62PgRKteK9PyvHfk30p1uKrSHCY2bWnb5Bxz3ZXhjfuIHAYo
sdpxBOt6+v5999la7D079dqO798rlYW0U9qrx3Z8v3d4H+HNVslk5DDnio21
JfuefaQvOQxQYoVjB/bg/fu5lcpC2gntdcI2wC5mXivjPfoMoe8Ttbj20D4C
sA45DLm8fz+3UllI27m9jO0w38hMxnv0GUI5TGqa3GXPbm/7CMAvjtXJ5f37
uZXKQtqu7bVruWFlTzOV3tfKeI8+gxzGPgK8gxyGXN6/n1upLKTt1l7Gc+ir
Zf/KzWRy+3Xot9d2uL1dqm5afi9p19sO/D4MUGKn8Y255DDPrVQW0nZqr53K
Crvq1c9i55wlec3s99rd36NXEGr/6/2VrFimGeQwQIlVx3TWM/uzkBM+R1mp
LKTt0F6r7eNwslHnwzXvaXKYM+xYHzuWuQc5DFDCMTyt/Pjx44/bKetqSV/b
xw5ttUMZYVd3/et6zNS7D5ZkMTk5yPf8d49rp3mSxRjH/rRjfexY5h7kMEAJ
OQytyGHS9LV9rNxWxm3oL5R1pKZpXYbcLCY3A0llJ3fLyc1b5DDvpA1/kcMA
JRzPk2v2d4ue3FaxUlmIW7WtVi0XnGaHHOb7Pa5FDpOTr6SmKc1ijGn704a/
yGGAEqudp7Kums+5VvgbsX/nZj762j5WaytjNfSXk3V898OTcpjY/K2mmfUe
TV/a8Bc5zBg5n7nGno9Ns+JnuJzLvkYuOUy6flpMwxpWaquVygJvETquv97v
uf6S9TzJYVLz5k5zt/xV3qN5bvdrknuTw4xTe71izTTQy9vGSOrlHqddb6nX
QvPHlp87jxyGWqu01SrlgLfZre/NvB7m7r1ZDvMe2vAXOcw4oX0udr1i6vqY
1LKhNTkMuXKOq0L5yZPXUs/lzDOqfj7/zXl/YG2z28rYDHPt0P9yPotIvU/m
5Ce1GUtuedibNvxFDjNOaQ7zfYx+N88br99iPvscuWpzmNrXVs5hYuN4ahr2
MLOt7CfATyXf+2iRw+S+97bMYox3+9OGv8hhxmmdw6SWCz3IYcjVMoepOe7L
OfabncOUTsO6ZrSV8Zhd5eYFK95W1zKH+Z7n7nHtNHKYd9OGv8hhxinJYXI/
I7UfM9ouxyHM1yKHCR27Pc1hYseDchhKzcpgYFctzsdn/O3Q73JzJG3ALNrw
FznMOLk5TMmxuf2Y0eQw5GqRw4Sme5rDxF5rtX/nfBaZm7mztpHtZAzmBDKA
vnKu5dEGpLS8jmz0bQdymHFafx66yz7GWXYa35irZQ6T81ppDhObp0ddXB+H
8pjYfKxpVDvZHzjFXbb+ud2Nz9fXQ9OHpsmZPlWeHTKAkvNSOQwp9pG+5DBj
5ObSoedK8hnoSQ5DrtY5TOj4PDZ9bBmx5fSoi5HzMVbvdjLucprcMbxm/C6Z
pibvX1HpOcTn9dR79Ip/q7bBiewjfclhgBLOB8iVcy1KzmeRNZ+Dfj9fst5e
799ymLP1bCf7ACfKzUdimUltDpP7+i45TCxnkcPwRO1xXO51Z7FpQ8eAJ+0j
chighByGXI7xnlupLIT1yu60P6dqkcN8nktl+qnxvuS1lfpkzhgRez11zrvy
jTFyjuOe5qF3fT13uTscxwG04j2QXHKY51YqC2Gt20m7c7qWOUzu66HxvuS1
Ffpmq+Mw79Gk1OQwqetj7ubP7btyGODN5DDkcoz33EplIaxlO2lz3iB2jhU6
hyuZ5/p6bLwveW1m/2x9/OU9mpTSHCbn2pac3OZuutBz9hFiSsdN19+xMvsk
uRzjPbdSWQhr9dm09uYt5DBlddVjvbnn2N/nydfHtdN8P3e9v9N79Ola5jA5
+0BsnpJjyl32Eb8P019JrnL3umMzVmJ/JJcc5rmVysK9VhkMvEko44jlKTVZ
S+oz9dj92TlM7+Otktyj5HHpPKksbeX36NOV5DCpa15yX8u5puaUfUQO099d
DlOatzj3ZRX2RXLFxr7Vb6tYqSzce9JGq+1vMErss+/QeVUsGymZJzb2p5Y7
qr+OWE+LHCYnGyvJwk46xz5Bbg5Tk9U92e9yy+TmVnJL9QWYLWdfhRw/fvz4
43bKulrS19ZX20baljf7uf+Xnpet8Ne73448xsptg+t0n8ex+VPTfD9fui8Y
O8fJaZu7aUL7TEmb18yz2z7iepj+cvMXOQw7kMPQihwmTV9bX2kbGUNBDnNX
H6PHhSc5TGre1DTXHObEc+wT1LTz9/nt9fH1tdRyc6ffdR+Rw/SXe/2LHIYd
OIegFTlMmr62vpI20p7wixzmdz3MGhdmXg/zeS1nut5tQJh+2pccpr/c7x/V
vgYj2RdpRQ6Tpq+tL6eNjJvwp7ef360wJjzNYe5eK5lmdhuQ9vZ+2pscpr+S
sTZ0ncwu+xPnsz/SihwmTV9bn2tZodxbz+9qjqFyPsutLUvuNpc8zp1mVhuQ
7639dBQ5zHpyr5+BGeyTtCKHSdPX1uc6VigX+87+6rcn25uaJvZc6/Ek5xz7
e7vvHtdO84Zz7BPIYfqSwwAlnFvQihwmTV9bX+rcCfjbm87vSq6Jjz03I4dZ
8c/4Oo59pC85zB522Z84nxyGVuQwafra2nyPGOq84fyudDyQw7RvA56Zfe3Z
6OvWRpPD7GOXfYqz7TS+vUXsfSfnPSk0zfdzsfe50P3YfKHlppZRsl3f5DD0
0PMcCU52zQBC7xN35+B3r+XOX7Kc2gyg5L0p5z3ye9qWYvWz8p+xllPIYfZh
3GEFcpi13GUnOa/lzJO77Nr7pfOlXouRw9DD3b4MpIUylthzd5lJyfyp13KX
F9umJ2NBzmchLclhYC45zF6MPcwmh1lHKlcJZRg517/E5m91Xw6Tpq+tzXgI
dUpzmNj1KbH5P8+Hrn0peRzKAFqNA6PHEjkMzCWH2Y/xh5mcd6wj1Q4l18OE
ji1Dj1vej+U/chh9bVXGQqjXKodJzV8yfWkO03oMmJHD7HqDE8hh9mP8YSbv
getomcOk7t+99n1dS801LqWZTawMKXIYWgnt70C+UMZxvZVkLKNyGMdBQAty
mD0Z/5nF8cc6ctoh95jxOl3o8d39u/KEpo9NFypv7LncepDD0EJutgnEhTKO
0OOVchiAFuQwe/I+wCxymHXkXN/SY/m9l9tjvXIYngiNe9oH6rTKYUqzGjkM
AE95L2AGOcxa7j6fl8P8TQ5DrVgbaB+oU5rDhB7X5jDXeeUwAJTwfsBocpj1
3H2HqNd6Wixjxv4jh6FUal/VNlAvlKnc/TZMaLrvrCQ1X871MDnL0e8B+Mn7
AaPJYWhlZDYih6FE7m8vAXVKv0O0yp9+D7Ti92GAEnIYWpHDpOlrY5WMb9oG
6slhgLeTwwAl5DC0IodJ09fGKa1rbQP15DDA28lhgBJyGFqRw6Tpa2PU1LO2
gXpyGODt5DDn8N7ACHIYWpHDpOlrfT0Zz7QN1JPDAG8nhzmH9wZGkMPQihwm
TV/r52ndapvx7v5NnV1u/Gl2e2hLYDY5zFm8P9Cb4xBakcOk6WvttRrDtM14
K1xDUVMG+8rfVmjL2vYHaEEOcxbvD/Qmh6EVOUyavtZWy/rUNuOtcO4uh2lj
hbasbX+AFuQw5/EeQU9yGFqRw6Tpa220Hre0yxw55+7f3x/JeS00fc7zuVmC
/eVvOfWd81zO94i+5w21Y8l6AFqQw5zJ+wS9OA6hFTlMmr72XI861C5zlOQe
ua+F8prQ45z55TBpuXVa2j7XHKW2XUPTa0ugFTnMmbxP0IvjEFqRw6Tpa/V6
jlXaZY7WOUzOuff1eTlMWEmfC9Vnqr5L2uCurWPXx8hhgJHkMOfyXkEPjkNo
RQ6Tpq/V6V1v2mWOljlMzrl7zutymN/uvucTm7ak/mLfBWuRw+Su5y1tCfQn
hzmX9wp6cBxCK3KYNH2tzKjxSbvMUZLDhM6nQ+fYcpjnQr+5crf9pTlMrL5b
5jCp9bylLYH+5DBn835Ba45DaEUOk6av5RtZV9pljtrrYVLn4zU5TCrPuTt/
d/t9/FCTw5S2WWi+0uflMEAPcpjzec+gJcchtCKHSdPX8oyuJ+0yR8scJnS+
XXtOnyrPrPoa+Z6dm8F8ps3NVuQwwInkMEAJxyG0IodJ09fiZo1H2mWO1jlM
bhbz2c92y2E+dTZyXan85XvanPrOqedUblLyWmp6fR9oRQ4DlHAcQitymDR9
Lewt57b8lpt5XG93r8Weu3s+Zx45TDp/+Z42t75z85Gc53PmS+1bAC3IYYAS
jkNoRQ6Tpq/9bfYYpE3myc09VvtbYX8d0W9K1qEtAXgL7x20MPsciHPIYdL0
tT+tUB8rlOGtnLun6+fuuevvsqxAWwLwFt47aEEOQytymDR97ZeVxp1VyvFG
zt3T9ZN6bpX9V1vyROy3iNzyb8A4+hxPGbvJNfv44oRjk9XKsuutdT0wx8+6
n30evvK5+916rs+tsv9qS3Kt/B69O/U6l9+HeR/9jCeM1eR6epx9nX/UcftK
+/dqZRlR/6u350pt8jb2wfs6ieWP1/fsVfZfbUkO9T2W+h5LDvM++hhPyGHI
JYd5brWyjKj/1dtzpTZ5m9nXVa1yTVasfu7q63p/BbPbY/W2fDt1PY96H0cO
8076GLW8N5LrLkf53ELny6l5Qsu4O1ZOzR9b1ipWK8vsTEUOQw+ntOkp2wH2
5bnU/xhymHfSv6glh3m3kva/O2+PZTDX+znTtnh8t/5VrFaWVN5xl23lPJeb
t8lhaO2k97RTtoN3G7Ufr3aN00pl+WmlspxKDvNe+hc1VnufYKySa7Rrc5i7
c/tUZiOH6S8nh+ndTjV/chhCVjsPg7cb3RdX7PsrlWmlspxIDvNu+helHLO+
W+h7PXf7RE7eUZKNyGHmKs1F5DCsTg4Da5HD/LJKuVYpx6nkMO+mf1HKMese
YnnJiNunDHfnxHffObm7H3v9bhkl5/exZcyuu5Vvb89hWi6LuULjFjDP6H74
fbxyXXfouOZ6P7SM0P3Y8mPTz7BKOU4lh0Efo4Tj1XfLOVf/nrbk3PzufP8u
Byg9f695vIrVypKbe8TaNpTrpOaRw9CSHAbWMqMPhrKT3Dyl52srjEkrlOFk
chighOPVd8vJX76njeUwT86r5TDj5bRdaJoW18PU7jtyGK5yxzBgnFk5zN3j
pzlM6PqZkmWuMiatUo4TyWGAEo5X363k3KXm3Dv3vLr341WsVpaSdkm9Jodh
hliWrH1hnpVymM/90PUyoelj9+/mjS1/lfFolXKcSA4DlHCs+m4l7X93Hn13
Kz2njs1/fT72OLT+lfbv1cpSksN8P5bDsAo5DKxpVg6TykxSOUzJPE+ut5ll
hTKcSg7Dh35GDseq5Ko9b579t9L+vVpZcuoulYXdPVeTl81oz5Xag3pyGFjP
6P53zVBiGcv345xc5brcu/Wklr/KuDR7/SeTw/BNXyNlhfcE9iCHeW61ssxu
m9ntuVJ70IY2hTXs0BdXvF6ltzds4yxyGL7NyqJj5/Y5eXAooy7NmlP3c14v
Xfdudi034zlvf261ssxum9ntuVJ70IY2hTXs0BflMLQkh+FqVH+7W09qfEtl
MTnz5b4WutYwtZzS5e9GDkMu5+3PrVaW2W0zuz1Xag/a0Kawht36Yunx8Ojv
GbVa327tshM5DHd697nYtS8l0+TOK4dpRw5DLuftz61WltltM7M9V2oL2tCm
sI6T++Po62haru/kdplNDsOdlXOYnGW2zGE+9+++Z3S3HDkM/HL9Pt9Ot1Ws
VpZdb622n7NoU1jHyf1RDgOU6Nnv7pZ9PWbumcOEHt+tPzdHCZU7tq4drXae
yr5+/Pjxx+2UdbWkr61DW5xHm8I6Yv3xLle/O76+Hs+XTpNa35Ppcx9fXyv5
vCF3+0oYJ2G80TnMk/Xnjpep8S+07tyxtWTdu5LD0IocJk1fW4e2OI82hXWk
+mPqGo+ca0BKrhOpnfbufmje1LS191uObcZJmKNX3ysZj2rmHeGt45Ichlbk
MGn62jq0xXm0KayjJIfJ/Qw1tY6abCVVxlhGElt/yxwmtL4axsl+/D4MMSOv
iUmNT6Fp7qYdMWa8dVySw9CKHCZNX1uHtjiPNoV1tM5hPs/Fvp+Tk8PkXsMf
W35thtLiepin45xxsh85DCm9s5jU93VypglNO9Jbxik5DK3IYdL0tXVoi/No
U1hHrxwm9Xro3KHkeLc2F7k7v3ly3YscZi9yGFaRyqud/69BO9CKHCZNX1uH
tjiPNoV15OYwoWvnc69Hia0zlaGkynfNRELXuKQ+Y459RyC0jtAynh63Gyf7
kcOwgtg4GHuO8eQwtCKHSdPX1qEtzqI9YS2r5jA5ZRvBtf7nkcOwAjnMPuQw
tCKHSdPX1qAdzqNNYS05OUwsT8nNWmKvxbKX2WOGHOY8chhyteyLd9fJpa6d
y7nOL7Ws0PWAd6/drev6XGj6WFl2zzF2Lz/rkMOk6Wtr0A7n0aawnlTOUvN6
zjxPzi1qtqfUXVlGME72JYehROsspmS5sTEoJ78uvfaw9/J3JYdZT+r4I9Vm
d8cid9li6fOhMvQ63omRw/CEdjiPNoX16Jdr0R59yWEo1TLbvT5OnSuGHvfO
YXLKIYdhhtz97u5xznwl92v6QEn5n5DD8IR2OI82hfXol2vRHn3JYSjVI4fJ
OfeSw6xBDrOO1D4a21fvrj95el8O056+tgbtcB5tCmvSN9egHfqTw1CjRd+s
yWFi8+Sce+Yuq6R8ueegqXxnF3KYdaTawfUwv8lheEI7tPedB99lw9dpYs/d
LS9n/cCa9M+51P8YchhqtM5hPo9Tx1fX+3evXZcVW07uskPLzTk+PCmD+UkO
s46eOUwqvwzlME/ynNj6npLD8IR26OOuXnPGrZppSl8H5nGsOY+6H0cOQ62n
fXR2H69d/+xyz2Z8XkfuZ76pNgtli6FzndwcNLb80fmlHIYntEMfoXqNZbU5
r8eeT70GrENfHUt9jyWH4Ykn/XV2X5fD1JHDrKPm/KPH+krXO2P/kcPwhHbo
I3cM+85qc6/zk8PAGXI+T6Ke+p1HDsMTT7KMmX2+5brfNm4Zq9cSOl8Zsa7S
10una0kOQy1t0E9JDpPz2vdzsbFQm8Kerpms2/Mb88hheEofjjttrDtpW05x
3cdq2icnY4md06T2i9n7jByGWtqgn9IcJpS5tFovAIwih+EpxzNpJ9WRHIZW
RmYjchhqaYN+euYwK+fCACCHoTXHN387qU7kMLQih0nT1+bTBv30ylVWvz4P
AKCl0u/g3H2f4u7x9bXUNHfLz5235LsXsfVd572bPrXc1LaHytGTHIZW5DBp
+tp82qCP0t8qyP3uZM73M7UpAHCCJ7/7FMosRt6PlaGkbLHXS9ebu/zQPL3I
YWhFDpOmr82nDc6jTQGAnaWuN8ldRujxLjnM3XSxaWtzmLvljz6elMPQihwm
TV+bTxucRXsCsAK/D0OtWAbzlhwm9P2h2Hy56w2VM5TJjMpH5DC0IodJ09fm
0wZn0Z4ArEAOwxO9cpi73CH0PZ/YNKH71+lLcpia7wiFro9J5TCxcqbW2Ysc
hlbkMGn62nza4CzaE4AVyGF4qmUOk5uplE6Tymyu2xHbzu95U9enxNYfW29p
OUdmI3IYWpHDpOlrc6n/czw5TgGA1uQwtNLqehjW5viVVuQwafraXOr/DLHP
QABgBjkMLdVkMY6D9uLYlVbkMGn62lzqf3+517kCwEhyGForyWFcH7wf7UUr
cpg0fW0u9b+/VBtqYwBmkMPQy+xjm9jvtFBPPdKKHCZNX5tL/e9v9Rwm9Bt7
O9zUk3pST+pp1dsORuYws9vj9Lbkt2ubfT/Wns/oE7Qih0nT1+ZS//tLteHs
Nv65/n9s+DfjfHD2Nqsn9TT7Tz2tWU+1Rucws9vl5Lbkt1gOc/eYfHIYWpHD
pOlrc6n//cXes1b4vM2xsXpST+pJPe1dT7XkMOe05U7ujn2uz4UeX+/nLu+6
furMPmblHHKYNH1tLvV/hrv3rdgxw8j3uc+x8fd6r8egqVts+tBrufOEXnc+
uOY5xNN6Su0jd/tDbN/ZoZ7uyh97PbbtoWXlPnf3+s79rqSuQo932J9qrZ7D
5Oy7qf7/dHzYpS13k5OPXI+RQs/F7ofWoV3ryGFoRQ6Tpq/Npf7PUZOzPMll
cqcPnYd9P76bJvVcapl3j3OPk2ccBzw5hp+RK8w6h2hV5px9pGbfWbWenj7+
fi5n2tJ17JrDPKmrJ+ve5b179Rwm1X65bbVjW9YcM+ykRQ6Tmje2jtPqc5QT
90XmkMOk6WvzqPszPWnXkuOy3GO30nPcUJ5Qc65Xeix9XedTJct5ehyfUwex
jGvmOcSoeirdR06qp9L9ILa9ufVSm5vOrKfats19LZTP1KxzB09zmBFteUoO
U1pXublCbz3XmzqeCeUwd/M8uU8+OQytyGHS9LV51P15erx/xY5JcvOau2PV
VN5yzV52zmFK66nmOL62PlY4HxxVTzl18l0vq+YwNfX0JIepzRJyzm/v1jWz
nmrbNqceP49brXMHrXKYEWPoXb+P7bclr49oy9y6qn2tl5I2rln23f3rur9f
j+UqOdOE1k8eOQytyGHS9LV51P1ZehzDpNaTc/x0PUdJneOGzhFLzpdDx9M5
x9rf6+9ZV7F6qjmOj50PXLe51bngbvWUu4/k1utO9ZTTx0rqKKc+Ss5nd+x3
NXV1V/ez9qcReuQws8fQkv16ZFvm1lVqfaP3rZI2rln293/v1nv3+nX9d9Om
yt1yO95EndGKHCZNX5tH3Z9l5Ht+7Pjj7ngmdKx6fa3kXDDneDp1fB07nk5t
Y8vbtZ5qjuNj54F329bi/GG3esrdD671WLoPrlhPd22f83zJPKl6js2zY79L
1dX3PnP33132px1uLcbQnP0z9/Hqbfnk/T20nN7z1R6rfP+X9T1pb/gmh0nT
1+ZR9+dodczyZH05x8ZPjl1bHB/nrr9VHZYcW7Y4h4g9Dj33ZL2f5exST6X7
Qek0K9fT53Hp86m6yJ0uNf13OWbWU23b9pg2tZwd9LwepscY2uJ9ZlZblrwn
p5YzUkkb1y6ffYw4huUd5DBp+to86v4crY9batYXO+Zrdeyamy+EHpecg/Y+
H7yb9slxfKtzgpp171JPT+orN3tYtZ7u+krstZp+1GJ9s+up5q9kf3pbDvPU
yLYsabdrf1g9h7mbLraMkXrlL9/LZx9yGFqRw6Tpa/Oo+zP0PH7JXWdq2u9j
1e9b7THr9/x3x8N360it/265resptkw5TP96ytkPcufdqZ5S5b7b90P1lOpb
1+WG1hdb1qx6arU/per5yfpa1tMORrdlbhvnzjuyLUvr6vr6rPPf0ccvb7Fr
Xe5abtYjh0nT1+ZR92cInQes0r4jM4GWfy3PB3vW05Nc4U31NPuvdb6gnsL1
Yn96ZqX3EG3Zp66+p5/d3qvsa6farW7tD7Qih0nT1+ZR9/uLZTC92rfmWG/2
ce7MY2P1pJ5a1pNz0mf18vZ6KqmXFp7+PkwJbQn3dtrH5DC0IodJ09fmUO9n
mJHD5Kz3+tn07OPcHY6N1ZN6yt1+9VRfL2+vp5J6aUEOM78t3+juOCh0bBQ6
bknNmzruud7PmSa17JJlXrdxF3IYWpHDpOlrc6j3M41q19wM5jPt7OPcHY6N
1ZN6yt3+z39jy3xbPeXWy9vrqaRePv99si45zPy2/NRN6rOa2POxaUZ89lMj
J4+4bkfqfs08s+5fn1utfUJW3JfYkxwmTV+bQ72faZUc5jrt7OPcVY+N1ZN6
Sm3r3XOp4+7T6+lJvbypnnK1rM8rOczYtkzVT+q5VtOsQA7z53MrttEdOQyt
yGHS9LU51PuZRnxGWpLB5M6z6m2k2duqntarp7t5rs+Fljt7W3vW05N6eVM9
5WpZn1ejc5hdbyOE1vP9/F275+wLs7chNn2snkPbnqqTHe6nXlvVyD7B2eQw
afraHOr9TD3aNXQMM+tYEt6i5/nxztRLW6fkMMSV5jCf+6H9Y+R7f+26UjlE
6xzmu87u6i93mpzll5b17vGKHE/SihwmTV+bQ72fqUW75h5fyWCgvdRn5tf+
9pa+p17aGlWfcph1tM5hUstt5cmxRk6WFLp/l4E8zVRKp6nJdXIfr2qHMrIH
OUyavjaHej9TbbvWvD97r4S+7j7LDJ0nv4l6aatnfcph1lGSw6Rylli+0VIo
JyyZ//u/pfPtZtdyfzOG04ocJk1fm0O9n6fmOMP7HaxL37ynXtrqWZ9ymHXk
5jB3uVxonp77ztMM5ns5I+ZZwa7l/ua4lFbkMGn62hzq/TypNm1xPAOMo5/e
Uy9tyWHeIfX9otxpUs+3cJfBjMxhVlj2TmVoyTEqrchh0vS18dT5mULHT97T
AJhBDrOGnFwj9lxJPtOrrG8/jnlSDzvV305lZW1ymDR9bbzd6zz2Hr36rXe9
XOsHAGaRw1BKDvO3nOuWapazore3Ne3IYdL0tfF2r/Of5f/Hhn+jPjsCgBXI
Yaglh/mtVQ7zdN4R3t7WtCOHSdPXxtu9zuUw4X9DEQBWIYfhidocpvR6mpzv
aeUuM3R89v1c6H5o/tRyc9bzPc3K5DC0IodJ09fG273Oa3KY6/tmyeupeUfl
MKljid3bFYCzyGGo9TQ/CGUksee+84vY67nLL11OaP7ccj9Z3irkMLQih0nT
18bbvc5rc5jQ41AukzNvzxym9HOg3dsVgLPIYajV4rOrls9dnx+Zw3zu51wD
LYeBX+QwafraeLvX+ZNrUq5ZSmxZodd65jAlucvdvACwCjkMNVoczzzNYULf
AypZVo/rYa7fOcotY06GswI5DK3IYdL0tfF2r/PTcpgn2ct1OQAAO2uVw+Rc
Vzzye0kly0+VJ7aM1DSh8q9ADkMrcpg0fW283ev8SQ7zGd9zMpW77yM9Xfen
/K2yl+86AQDYWa/jothyQ9eV5F7fUrKsu+dTz12fvx5Plq6n9TFoS6uWi/3I
YdL0tbFOqO8n16PkPHf3WqtrcHrV/wntCgDQQo/rP3p8t8fx25/kMLQih0nT
18Y6ob5rMpGa7xjlfHeptAw96wQAVuL3YZhFDrMnOQytyGHS9LWxTqjvFjlM
6lqX2OtPrsfpWScAsBI5DDPk/jZMzTKv92lL3dKKHCZNXxvrhPp+koN833Jf
y3ldDgMAf5LDkMtxDD/JYWhFDpP29r52l9nvcptZZzU5yOw/OQwAbyKHIZfj
GH6afY7BOeQwaW/vazIFddaqTgBgJXIYcjiG4UMOQytymLS39zWZgjprVScA
sBI5DDkcw/Ahh6EVOUza2/taKlMIfScoNl3q+etzNb97Iocp/5PDAPAmchhS
HL/wTQ5DK3KYtLf3tZxMIZS7hF5PPc6dZlam0KLOVvyTwwDwJnIYUhy/8E0O
QytymLS397WnOUxo/lhOc/fcbjnMrrde9QEAq5HDEOP4hSs5DK3IYdLe3td6
5TB306e+17RLDtPbbtu2W3kBeAc5DDGOX7iSw9CKHCbt7X0tN4cJ5SglOUwq
1yn5nZiT2223bdutvAC8gxyGEMcu3JHD0IocJu3tfa3mepgnOUzO95hylntq
u+24XTuWGYDzyWEIcezCHTkMrchh0t7e13rlMKF55DBhu27TruUG4GxyGO44
biFEDkMrcpi0t/e1pzlM6HHpb8C8PYfZeXt2Ljvnm/3b2KfcYEdyGKCE9zxa
kcOkvb2v5eQd11tqulCOkjNvbB1ymDXtXHbOIj/oR72yIzkMUMJ7HK3IYdLe
3tdyMo8V/05qt923Zffycwb74Vjqmx3IYYASchhakcOkvb2vyWHmOmE7TtgG
9uWYaR71zurkMHwzZpHimIJW5DBpb+9rcph5TtiGn07ZDvZk/5tL/QO7MF6R
IoehFTlM2tv7mhxmHtsAz4za/1b7XZSVyvLTSmUBuGOcIsdq76/sSw6T9va+
JoeZY/fyf5yyHexn9L634r6+UplWKgvAlTGKHHIYWpHDpL29r83+t1Cf3Ha1
c9mvTtoW9iKH+WWVcq1SDvjm92H4yfhErt3PMViHHCZNXxtHXZ9XB6dtD/uY
lcPcHaPdZcR390PLCN2PLT82/QyrlAO+yWH4yfhELjkMrchh0vS1MYxrv5xW
B6dtD3uYsd+FspPcPKXnayv0wxXKAFdyGIxNlHC+QitymDR9bQzj2pn72onb
xPpm5TB3j5/mMKHrZ0qWuUo/XKUc8CGHwbhECecrtCKHSdPX+jvld12eOHW7
T90u1rZSDvO5H/uu0d30sfux7z2lljHTKuWADznMuxmTKPXmcxXaksOk6Wv9
vT2HOXmbT9421rXr95JK5nlyvc0sK5QBvslh3s2YRKm3nqvQnhwmTV/r65rB
vLG+T97mk7eNdY3e764ZSixj+X6ck6tclxv6nlJs+auMr7PXD1dymPcyHlFj
hfdSziCHSdPX+rrLYd5U56dv6+nbx5p22O9WvF6ltzdsI3uRwwAl3naeQj9y
mDR9rZ9QBvOWOj99O0/fPta1w74nh4H55DBAiTedp9CXHCZNX+snlsOcXu+n
b99Pb9hG1rTbvlc75o0eL5+ub7d24XxyGKDEG85RGEMOk6av9ZHKYE6v99O3
76c3bCNresO+N/p6mhbre0O7sBc5zDsZi6j1hnMUxpDDpOlrdWrylLfUte2E
vt6w78lh4Dk5zPsYh3hCDkMrcpg0fa1ead3Nquuca3NWva1s9fJxrpx9L9aP
Un3uOt/dskqWcVeO1DJLHqfKU1rO2r5tTGA1cpj3MQ7xxA7H3+xBDpOmr9Xb
KYf5x4Z/q++bq5ePc6X2vdi1Han7JdPW3K8pR2q+FmVr0Z+NCaxGDvMuxiCe
ksPQihwmTV+rF/usNzb9aHKYPlYvH+eK7Xup/KJl/lFz/265sflyMqWWedGT
fm1MYDVymHcxBvGUHIZW5DBp+lqe0Oe5uecaOa/3kpvDXK/ZD70Wmye0jNhr
chgoU5PDXKcJjV+jcpjQsd6TbCWV6cTul4zlIcYEViOHeQ/jDy3IYWhFDpOm
r+VJXVcfmibntd5yM4/Uc6WPr8+F7sthoMyTsaY2jyi9nuR6v2U5rtM8LWds
2hLGBFYjh3kP4w8tyGFoRQ6Tpq/lOTmHCb0ey1lycpvcrEYOA2VaXQ8Tmu96
bUnN/dyyhpZxff1u2txtys2H7tZTwpgAzGDsoRU5DK3IYdL0tbDQOUDsnCG2
rFlWymFKspiV982Vy8b5asaakutkTjFym06sP2APxh9akcPQihwmTV/LE/vs
NWfM2i2H+c6c7p5LzROapiSLWXnfXLlsnK90vFl9jOpFDgOczthDS3IYWpHD
pOlreZ7W0245TM50pY/lMNBOTq4S+w7O3bRP1tdKq/WUXK/Yan2wGr8Pcz5j
Dy3JYWhFDpOmr+V5Yw7zNHeRw0A/9sG1aA9WJIcBSshhaEUOk6avjbFyDhPK
UFrmMCUZjRwG0uyDa9EerEgOA5SQw9CKHCZNXxtj9RzmO3v5TB/7bZhQbpP7
+zG55VnVymXjPeyHa9AOrEoOA5SQw9CKHCZNXxtjhxxmtb+V982Vy8a72Bfn
Uv+sTA5zLmMPPchhaEUOk6avjSGHkcNAD46Z5lH3rE4OcybjDr14X6MVOUya
vjaGHEYOAz3ZJ8dS3+xADnMm4w+9yGFoRQ6Tpq+NIYeRw0Bv13+rmrbUL7uR
w5zH+ENP3uNoRQ6Tpq+NIYc5J4dZtVzw7e63s92e3WA3cpjzGIvoyfsdrchh
0vS1MWbnMLveVrRquQDgmxzmLI4/6G3l42/2IodJ09fGOLGeT9ymHG/dbgD2
Ioc5i+MPepPD0IocJk1fG+O0ej5te0q8eduZJ3ad2A7XkQHjyWHOYWxnBMcR
tCKHSdPXxjitnk/bnhJv3nbmuO5z349D9wHkMOcwvjOCHIZW5DBp+toYp9Xz
adtT4s3bznih/e3zvBwGCJHDnMHYzihyGFqRw6Tpa2OcVM8nbUuNt2//U9fv
z+R+3+atcrZdPQF35DBnMLYzimMJWpHDpOlrY5xUzydtS423b38Lse/Z5M7z
Fqntdj0MECKHAUrIYWhFDpOmr41xUj2ftC013r79Lchh8pVcDwPwTQ4DlHA8
QStymDR9bYyT6vmkbanx9u1voSSHefsxQer3YQAAWnj7MRftyGHS9LUxTqnn
U7aj1tu3v5W7HCb1OzFvFqovAM5lnGc0xxe0IodJ09fGOKWeT9mOWm/f/lZS
18PIYv529/vGqeneXmcAuzJ+M4NjB1qRw6Tpa2OcUs+nbEett29/K7k5jDyh
TiirUY/wLn4fZl/Ga2ZwzEUrcpg0fW2ME+r5hG14Sh20UXM9DGVcUwTIYfZk
rGYWOQytyGHS9LUxTqjnEduw+vUPq5ZrJ3ffr/Fdmj7UMbybHGZPxmhmcYxA
K3KYNH1tjBPqedQ2PFnP3fnmLjdo7U3XGc3uv/o+K5LD7MeYwEzel2hFDpOm
r42xez2PLP/THOYfE/9q17/7/sE6vvelt+UwM/v+kzHjzWZnYKfnZ3KY/eyy
b3GmncY31iaHSdPX+juhjmfkMDXvBbPPxeQwrOCNx1Gz+/6TMePNtFtfcpi9
7LJfca43Hj/QhxwmTV/r74Q67rUNd8u9vgeUrPvumP7788vYa6HpYvOHjs9j
y9/5mB5W5Xx+T9qtLznMmkLXV+2yX3EuOQytyGHS9LX+dq/jnuUP5TC164/l
HLHj6dBzd5lMzvF56LEcBvp4ci1aaU5bMy7E1v9mcpi+5DDruTvPde7LKuyL
tCKHSdPX+tu9jt+Yw+Q8f3dOVpvf7L6P1Nr1NxdWof5+qzmfz81MU1mqHKZe
ztiYyr5KrmXMfe6UdpPDjJE7/same/sYzhrsh7Qih0nT1/rbvY5blz/2GfP3
6zXrH5HDpI7NQ/OmyrC70vdunwn+Sf39rWR7SvtrTs56N23oXL90rDip798p
OS+taavcrDt3LK7Zf3YghxkjNxNP7Te77Fec67TjCOaRw6Tpa/3tXscjr4eJ
5TG5ywsdM+d8rvrkuPx7ntJl7r6P/FRybYbPBP+m/v5WWic1fTU1zd21E7n9
PbccJyo5Ly1tq6fjuBxGDtNa6vOl7+lSy4GZTjqGYC45TJq+1t/Oddy77K2X
n3ssHvt8+8lxeWq5b8thQu/njkX/pv7+Vlonpf0193U5TLmS89KStgrVeWzs
jeXwuftDbHlubiW3VL+BmXL2U8ghh0nT1/rbuY57lz1n+aXHODnH2N+Pc+ep
OV4vWeZbbjnt/j1dzbHtifN9z5tTf2+6fba5RV+865d3830/X7rut/b90K2k
re7q/64eU/PX7A/X6XfgepgxSsap0L4Tew1GsR/SihwmTV/rb+c6XqXsT8/F
ao7LY8f6JcfqOcf6q9TzE7lt9Jk2tay3UX9/K62T0vPomvPx1Hl+6d8pbXX1
dMy+q9/YuJ3zWslYf0q7yWHGyBmjrtOmnoMZ7Iu0IodJ09f627WOVyr3k3Ox
u+nvXkudd+Ucy+fMv/MxfczT49Cc106m/v5WWicl/TJ0vp6Twzw9hz+p74fa
JLftcnOYVPaVk7HIYeQwveSMUU+mh1Hsj7Qih0nT1/rbtY5XKnfLY/oV/1aq
61q1x6Gp595C/f2tpE5q+35JzhrKA3Lym9P7/t1zOW2Xm8OknqvJab6fC93f
vd3kMGOcNvbyXvZlWpHDpOlr/e1axyuU+/v9oNdn4iv8rVDXT9W8d/tM8Df1
97eSbdL354nlMDnzpuonlX2FMvrrPKFlp+bdud3kMECJE48lmEMOk6av9bdj
Hc8sc+xalxafra74t+M+AivR9+e5ZuWl885ug7e2G+OE8r7QNNfnY9OcmsMz
h32JVuQwafpafzvW8Ywy54z9qWkc08M76fvz3J0Xlsw7uw3e2m6MFbpurMc0
UEsOQytymDR9rb8d63hUmUs/x8nJaWYfnzumh/H0/TFCn8dfpylZ3uw2eEO7
MV/sOt7QNKnrY1LLhlJyGFqRw6Tpa/3tVscjyttrnI9933/1G1Bvdv99c9+X
w6zL78OsozSH+dwP5S4njSGswz5FK3KYNH2tv93quFd5dzlmiJVx9bIDjHYd
M0tzmF1vO5DDrKN1DpNaLtTYaXxjbXKYNH2tv93quGV5dzpmTeUvu2wHwCjf
46Ixcj1ymHWU5DCpnCWW0cATxnFakcOk6Wv97VTHrcq60ziem7/ssj0A8JMc
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
kvO32fnZCbfa8+PUPiCH6S/WrtfpWtR5qG2vfVE757nbvtDxaCqjCbX757nY
67Hn7/ar2HN3y71bT2z+VBlD5Q6VP7X9sW2Ole3zGn+SwwAlYmMslJDDpM3u
a6ljuJ2VbFPp+XjsnDt13nW3jpJz+FHnaSfuEzE158o57fZkX8ktg1vZ7Ul9
39V5yT5Qu/6S7bvu17vMF+ub3/PEpr17/fvx3f3Q8krmC92PrSd3/pJ5U9OU
ljl3XanX3koOA5S4e3+EGnKYtJl9LXQ8fIra7co5T4qde6XOte5ee7K872lm
193Oas6PS8/Ba9t2VLvvLPe8v1UOk3oceu5JDnOynBwmZ9rr67l5TyobOjGH
qVm+HKaMHAYocfJ5GWPJYdJm9bXY55JPllPzOWgvvXKYu+3JPd/Kmf5u/pxz
uFb1+tbxv3UOc/c4dxrn5+Vyx5sROUyPv9Pb+a6dQu8XT3OYu2wuNW/sfion
mpXD3JVPDjOWHAYoIYehFTlM2ui+NjIXmT2O9MphVv2TwzxT2u65+VnpPLPa
fXe545ocZk3fOUFJzhJ6PZbD3a0z9vqT+ULT380Ty0pqcpgWZc4pW6ocbyaH
AUrIYWhFDpM2sq/lfl7ccn0zyWHG1VkrM9f/5nY/Qe5Y9rSd78ZP7fxcyXtR
aU5z9zj03N1743X6UEZxXU7O69dpUjlHzvJKtjVV5tyy5bz+RnIYoIQchlbk
MGmj+losg5HD/D3fmDPotc7TZrfXbG9t97fRzvt7msOMXn9vq2Tw9tG/yWGA
EnIYWpHDpLkeph85TP+6as31MGPb/Y208/7kMOH1PXnfa1kOfpHDACXkMLQi
h0mb0dfkMOn5Zp9zjTxPm91O3+Qw49r9rbTz/nK/u9Pj/a1mmSParvX2rriN
O5LDACXkMLQih0mblcN8/turv5d+x72HJ7nErreR9dTLrPI4P38H7bw/dbEe
bXJPDgOUkMPQihwmbeb1yz3LsMJ126uMY6uU486qZVvlOrFdbuSb3VbauQ31
sRbtcU8OA5Twfk8rcpi0FXKYGet5Sw6z8ni6Wrm+y7Na2eCbjGQ+db4W7XFP
DgOUcExBK3KYtJF9baV1fV7vOd7MHsdWPkdbvUwrlo/3cZ3KutT7WrQHwHOO
K2hFDpO2UjYycl3XcaZH2WaOYyufp61Wnm8r1hfvJodZl7pfg3YAaMNxBa3I
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
lRwGKOFchVbkMGfZZVzYpZwAwLnkMEAJOQytyGHOssO4sEMZAYDzyWGAEnIY
WpHDnGX1cWH18gEA7yGHAUrIYWhFDnOWlceFlcsGALyPHAYoIYehFTnMWVYd
F1YtFwDwXnIYoIQchlbkMGdZcVxYsUwAAHIYoIQchlbkMGdZbVxYrTwAAB9y
GKCEHIZW5DBnWWlcWKksAABXchighByGVuQwZ1llXFilHAAAAC3IYWhFDnOW
FcaFnDJ8xrAVygsAAJDi/IVW5DBnmT0ulKx/dlkBAAByyWFoRQ5zjtljQun6
Z5cXAAAglxyGVuQw55g5JtSs+zOP8QwAAFid8xZakcOcY9aYULve6zhmTAMA
AFYlh6EVOcw5ZowJueu8+13e67zGNAAAYFVyGFqRw5xj9JjwdH1yGAAAYBdy
GFqRw5xj5JjQYl2+lwQAAOxCDkMrcphzjBoTWmcwxjMAAGB1zltoRQ5zjhFj
gnEHAAB4IzkMrchhztF7TDDmAAAAbyWHoRU5zDl6jgnGGwDg/2/vDnAc1ZUo
gG69dzZb+xo9RUPng+2yC4PhnJY13cQB4wBS3SEJwJvJYcgih3kGGQwAAMB5
5DBkkcM8w1nXA9cZAAAAOQx55DDPcMb1wDUGAADgP3IYIj7Hy4qNNtlzZe4B
AAD+UaMS8fdY+bPgj2O8XeZcmXcAAIDf5DBEyGGeL2uuzDkAAMD/k8MQEclh
tu8JOlp+1Gfbt/ZcOUyujLky3wAAAPvkMESOgUjuEfm7d5kcJt/oXJlrAACA
Y3IYIp9p25J7tNzb0nr/S2SZHCbHyFyZZwAAgDI5DJHvGBrJYaJZTU9fOcy4
3rkyxwAAAHVymHXc4Xuf75TDRLIYx3i7nrkyvwAAAG3kMLRmMJ++q+YwjvM6
GQwAAMC51KfMel9S7+fD9Czf67fdV/ZF58ZcAgAAxKhLyf6c3r185LPeUn5S
evzz99Hy1hzme5/5LTIn5g8AACBOPUrkGIh+Nu42f9n+u9dKz//OaI6e05rD
9Oz7G0SOAwAAAOLUoUREso87/dSOcefBf1rmwDwBAAD0U38S8dQcZrt/bz4f
WvIqAAAA+r297iTm6TnMdj/feF7UPhsIAACAMW+tN+nzlhxmu79vOj9Kn6MD
AADAuLfVmYx5Ww6z3e83nCdH31UOAABAjrfUl+Q4+q6jFVrm/j/V3vd7AwAA
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
   "], {{0, 0}, {
   1122, 761}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 CellLabel->"Out[301]=",
 CellID->2006014202]
}, Open  ]],

Cell["We can highlight the components:", "MathCaption",
 CellID->632012813],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureHighlight", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"Query", "[", 
       RowBox[{
       "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", 
        "\"\<path:hsa04662\>\""}], "]"}], "@", 
      RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]}], ",", 
    
    RowBox[{"ORA", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellLabel->"In[302]:=",
 CellID->785230029],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ugQCgcPhwI8lk8l0Op1YLMZKfMXKFbuz8mBQKJSlLSOz0cCJWcwxXrIPhsI5
PNutFs+Vos5r5eorRbJsXn9Ok6+z2xwOLw81gFK2Wq1GIBQKLc9xEw7PzM7c
Xry9OL/4y2Vh+RMr3xW9xQVsdPfzzrL0buEiO6441NLt5f7XpHfe8shoMY6D
3Rb9gQAis6yEy9vMr9zm9p3XedhmYGCA9Ac0mUzR0rcibuQITL00TgEVdUTw
+XzMaL3Hjx9H1gOHL5VKcXPa29sRwA/REUEul1dVVbVFoDJLobx3bEGZhUrE
nJFweaiBgWFv1OIbCONzYnJ66W735Pr6ejJSIvSquLi4ob5B79b3BfuMIaMh
YNAH9MuLX2/z2phzzczMSjXudt2AuMfTrgtKeweXw5qA3R1kIj8yPqLz6PoG
+rA7joYFR9N5dUMjQzPTMwqFortb7faHxBp/uzYg0folmgAWHEfS7RwdHddq
tfCTCwvzxn6sH2jXDkg0fqku2L68DHRq3fjXUqQVGewldHIpamZbnH14ZDwS
twHssnxY7UAktt5gaIS5M9DMlpYWqChORDqYQ/+zs7NxJ0dGRiCqZCJIRBWf
2AxuFgEulwuNRWD1IBJUZikUttiCMksOuIEX5SgFk8uBwsBe7omQUp2S1ZWV
p8/L7MpMFaRebLx4Q34jrTqNTCsWGaOv4kip73jt1LaTTS9e6dqVqjpSNXWw
cqqAq8A2kKk39r/BbeLWh+uFU8K0zrS83rwMZUZdqK5+tF6kFOEgfD7/hed3
FlQLt50Wbz8r3Haiaec58Z4s86vpxh2nmxWqbovZnJKScu7Mqcxq1WHO1KHy
se2n215M7Xo9x368bupIvhEb4FywlBBA0hWOtG1YPvsb+ytqmg6Vjhytnnrp
uu6FlM4XU1WHKyfeLB3hC7uwpV6v379/f3l5OWnKC9eKlchlcMaysjJyK7Ae
h+rt7cUtgtKazWYy+7nL5SLnXf2Si8oshcIWW1NmLRbLBnqMOp3O9PR06AlK
yvCEtbW1EpHkfNn5t0ve3pe97zz//KnaU0crjl6XX08tTh0eHh4aGqquruyQ
yd+4aTlQNvzsKcFTRxp+8hbnQHFob/5QYZ0S2+A4FeUVEoWkwlPBD/NTWlNO
1px8u/jt2lBtha9C1iNDSR+qVVNTXd4g+9EbVT9+s/rxfSU/Pli986LiubOS
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
WxVPHCh9/CDnyk3Oui4/kcES1zt7zsYmqUHGBCvLykw9VGYpFLbYQPcE5iUO
480MBgPTsj2ZdrM44OTkpNfrRWEc/jNxVxYMjch0HmmPU6q2S3v621VWicqC
NeGRsduxgBDhRMPDw5fq81PFZZcERZfaCjPUNVfaSy8Ii6okKxuk3X9WjNCV
IMRRsxIBKrMUCltsoHuCWq2GZZJIJCKRqL29HZ6Q9JQnbeA37GYZZmZmhoaG
cJbEx7WO9Maam52LLFE9vuK/REOOkN6edrLuRLY2M015o360Lq3r+jXFVY68
eig0hGMiQ0FMmLoL/8CQxujRWfxk0Zq9WpNHa3StsyJ0YdUSI5IbaNC13Lju
7iiIyUNllkJhiw10T4DRgghoNBroKjRWp9XUcKq4NRyjQe92OuZmpxt5yfYC
W6659fnkcnkwGGRLN1YDZ362KuNQ8dXzzbnHODeuSovP1GefrM+sENUF/AG3
2w2dR27S09NDtm+SGo+W+9/K1hy6qT+YrTtZ7j3HHT5dYg0OJtQvGMg19kqx
s1riqpI4Oe3uagnCzjqxcX5VK6/EZ09AXoDfBSYWv8sGxttZCyqzFApbrDc1
kSlOyGt6lLvhXY1WZwlXVFjV0qlxdOpQbLdl5Neo9M4VDUTXJbNLkUkPsUso
FHK5XGQAVdYZHRvdl9b2coZiT5ZqX67h9VztruuSlzLV+bwu2GKYQ+QpyE2Y
Obk4QvMrueOPH6h75qT0J283P3u6c1e66438Ab8/GP9EDIWNxr253hcutu88
07I3x/r8eeFbxcFjBWaT0eh6NwKBQCqVuhKgqqrqyJEj2F4mkyX+iu2eUJml
UNgi+dTEEZrezHMcuGXam6Z8M0f/5k3j6xm9x/M0pHk8NNnj8cA3rldmodKw
Z/BpOA7pmM/67DM48i8uCH+wn/O/bzf++EjLtguqZ8/Knzrfk12zbF9xOuQm
pNsvItAh7eAIOg5VS1/PKdufx9mbW7XvVtWh0pbDpa3+hCc3zKnT73zH9Pib
nJ8c5j99ou37r+T/Is365s0+b+QWRWMwGCwWy2gCqFQqDoejVqv1ej2VWQpl
C5J8aipsNL2Q7vvZaekP9pY/c7J921nF9hTNK6kK8i4Gn80R1iuz0T0UILZk
JC4WC8VLkQbAuTWdN8pk10vab5S0Xy+WpFcq0ipUIoUBLhoiTOoroF049dNP
Pn3+5nneFD9VcjVTlXmt43qJo4w/0VTlrvYHE5VZi8Pf0eNoV1tKuaISjkDQ
qe/UOlW9jtU9cBNvaYCoikQieNqWlhYEaN0shbLVSD411Qnk+66UvXI648j1
0qNplUfSqnafSD+bU0NK+nf65Pp8sKbrPXJ0DwUygCrkDnqbZISjmZyancAy
OYPP8cgnlpnZ+c7OTlhEYsgnJyd5PN73v/f9zOqM2pHqY1VHUgQXzjWcuiy6
WOEtrXCWBOLKLOlyRS5kbnZ+cmJqYnxS3imXdXSODI/g68zU9Oq9dDpdgjK7
XG9jNFoi4I4l2Jn3nlCZpVDYIvnU1KJpqXRX5fbkZilyCvRF+b2FZbaKUl0Z
07KINKDawBgFZrN5RT9QuD6/3+9wOMh6fLL4bj2a8fFxMk0h4gBtx2d3dzdH
0PlmmXxvrmBvnnBfnvC1m4LD1cqDha2BQDzlR/G/uroaRfuBwEC7vp3v5HP7
amtNtSVdJY3OxiZnU52mbmpypUv3er3BYEJVvri9pDMv2MDMPmtBZZZCYYvk
U5PAKODNNGTrsq+IL18SXLzQfL4qWMn1c6MbcK63pQEh5hwKEBOYTEgfLCKZ
iYatAWYRSRjXQCBgtVrJyC2kv/98BJy3RmTaWzzx5JHG7RfkPzspeva0+NWb
3gOFAZlcaV0b5C/Nzc2XL19+8YUXa7pqhPPCDFXGZdHlIxVHGqcbxfNijoMz
NrJy8EZmysXNgsoshcIWyaem1q7WTEnmxaqLKdUpqTWpl6ouXaq5VNheiMIs
Y65gONcpszCoiz6PY2Q4SMLRjUuhhygaQ2MhYhvrkRoNDgU5hUOGtOJzcHBw
enoaK8lgL9Fb1gp792T3P/N21fZTTduOcX9yoPjVtN4DOQa3xze3NrgJOCCs
qc/r43Xzavw1aZ1pl/iXLtRfqHQv50elPaXjYyv7u5EhypO8tGSgMkuhsEUy
qQkCsriw2NbTVthbmCXLyuvKK+0rLdQW5vfkl6pKz5w5c/LkSdLoCKXvRCad
WT7g4qJUbcnlW/J4felVqrRKFQL5jeaSRt3s7LsqECCDbrdbJBL5/f7Vh2qR
9dVLrTyZfXnpsOGzrt3apbUxGyAXIEINdcVxhoaGuru7IbNkplcyqtiKeuDw
yLjVNWh2+C2OgMUZMNk8Vueg3RVM5P0+UezB4UFX0OUecFvd1l5LrzvoxuIZ
8Kyu94iepGZToDJLobDFBlKT1+u1RygsLNz14i6uilsVqkrrSkuVpqar0lME
KVXBqmpPdWZmZklJiU6n02q1pLH9PSkoKHj5pV1p5YqD1XPPnGjZdlqE5Znj
zYeqpg7m20zGPs9doEJ79+4tKytra2uTyWSeKI4dO5adnXmqxPZ29QzM5+5r
vbve0bxwSfFW5XRWbe9IeNm4wihC+cm0LMS4QuhUKlV9fX1dXZ1QKGxpaSkv
L19RnzwwEIQs9wO73WKxRsIIWJj6ARyTBLAy5mBczHyIo2Oj/Y7+OMMdkD4g
6/1pWITKLIXCFhtITVNTUxMRoCfqLnVLd9NNdcZl3vnLdedvtKVe4V/MU2eX
qgp7enp6e3thYicnJyPzx96b5TdNalVOTfeegpFtZzu2nZM9ebTlx4f5r+cP
7s82OPrtw3eJzP1drdfr5XI5NHw4itra2o528aE8856C0R/ur/rB/qrnLvU8
e0G9v3Lm0DuNZpMhHA7Pzs4S5xx9XSjak2gsz0I7NUWmi2X+iyND96DMyA4g
tGRsLjLkIC6QjOaKbcbGxhDAGtycONPl4BTx5wVLfpKaJKEyS6GwRZKVBqCm
tevNTOEb1xuP3pIcz+s4dqt9342mM7mto6OjUCoYvATfmC9F6gGWpyTo97b3
OCXqfonaLlbZJF02fO3U2CFfjP3DkYmNhLUmgskABYP08aVGjshcxleV8boq
m7WVLb0ciU2i7HO7nBsbXAUaS5oflJaWikQitVptMBiqqqoghhB2BLhcbkVF
BTwwh8PBJZNmbGsdDTcn/sgwEPMEJ518j6AyS6GwxT1TE8SNTOdNXg+hVA71
GBgYWB7Tu7e3XSxMK5fvyQvtTOnafk724ju9O1NUByunDxe5YRpJWyMyqStx
hnB9Q8PD4ZFR/C1/DoeHhobD4ZHol00owc/OLczNRy2Rr9GxcrlcPB4PhlYg
EMRUs8g84HNTd5fp5WV+dm65wQAuYQMjsuISILNwszg1didjiMGxK5VKmUwG
dSUBnU7X2tqK+xN/1kjkBfGH+Mbpkn+7lwxUZikUtoifmqB+KAiTl+8oAjPz
JpB6AIiJx+28xe3+xQ3LtjOiZ47xnzne9NSR+j233Ady9IyUkSZYnZ2dly6c
5bRpT5a63s7qOpbXezhHdarEcp7jPV+siznrXxwQAdhFt9sNa4pYrWtf8u4s
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

    "], {{0, 124}, {461, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{461, 124},
  PlotRange->{{0, 461}, {0, 124}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[302]=",
 CellID->855736338]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->983872788],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
    "exampleBCellReceptorFigureHighlight", "[", "\"\<Results\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[303]:=",
 CellID->325866016],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3U+u7DyDH2Yh8SDDbCG7yNTDTG14AW64Y2TSAdoBDM/umr4s4K7Lo/Lb
fdzVuuJfSaRESs+Dixd1VBRFUaLEX6nOef+Pv/t//93//b8sy/Jf/re//vPv
/uN//bf/+I//8b/9+//9rx/+wz/8l//nP//D3/+n/+sf/r+//89//4//59/9
r38t/O9/lf27f7Ms//QaAACAjQ8AAAD/TEoCAABYk5IAAADWDqek6FoCFwAA
MLtjKSmziqAEAABM7XxK2tQQ1rb5GxGpHzd/TSJ8sVm3+JcoigtTzQgbuWsv
Mm1O7UJ+FQAA4EoHZuNLLBNFF+ZXia6+eVEskCoZbVh0ySaeRFu4q82prWcW
1jceAADorVVKShXYLAkTSv5FTVXhE5/MFmvqvDElbVolJQEAwPWuTEmZLJBJ
SfkCm5KZmottDhNWtOWZdHYmJW0aIB8BAMBdWqWkfHRKbSUaK9bBpFggVTLa
sOKSMKTkU1KmkeG2whUPNB4AAOjtZEr61lBMSdHlnyAyRFNJ5uFOuHr0rUz7
o/VEt5tparEZ0RUzrQ17FQAAuMaxqXhmlXwwOT/tv6CGERoJAADc5eKUlF/3
5KZb1SAlAQDAmx3+WtfeL7OlvoG2d6PhiruqKm794u+5yVMAADAav/wCAACw
JiUBAACsHf69pNSKmW/Wpb56l/oe3aZwuNbmrdQm9u4dAADwZgdyRP5PMSyH
/sesm3ryq+ffOvmLSwAAwMs1SUlLTFgmU0NxE9GSqcdJ+QoBAAAyWqWkA0tS
P6YKH0tJmS/1AQAAhFp9427zIvy9odRvEkWXRAuHv3+Ub1LmNQAAQErD30ta
PzOqyUqpOlOFM0+gpCQAAKCVhinps/OBUf6tXUukJAAAoJV+KSl8N7Nu5Z9c
KH7RrvKbeAAAACnH/qxB5u8h5HPTJ3jelG9ANPVE10o9wypuAgAAYE2CAAAA
WJOSAAAA1qQkAACANSkJAABgTUoCAABYk5IAAADWpCQAAIA1KWlSv1bubgsA
ADyKlDQpKQkAADqRkibVPCWJXQAA8ENKmpSUBAAAnUhJk5KSAACgEylpUlIS
AAB0IiVNSkoCAIBOpKRJSUkAANCJlDQpKQkAADqRkiYlJQEAQCdS0qSkJAAA
6ERKmpSUBAAAnUhJk5KSAACgEylpUlISAAB0IiVNSkoCAIBOpKRJSUkAANCJ
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
/pGS4FWkpEm9JyWlfj2kGGoy4Sj61uGg9J6zjrdxbu/Vr8eu/O2e3hua9LyK
NnvSfflISVBBSprUs1NSmIykJLiYE3uv3j128RERlDbyt6TpSElQNPUYDz1p
X37k88LFRtjxdYEDKSmMQpm3pCRey1l9QO9Ou/6g9Nvi7CfY7O3/SElQ4frZ
L7scm7f3+HfLDToT0/I9811l8zqMRaliI/cMdOWUPuaalBR+XrS+Qm5ehKuE
L6L19N6j2c+x2dv/kZKggpQ0OCnpWEp6ds9AP87nYy7otzDs5LNPk4Wd9mv2
02z29n+kJKggJQ2u/onJZknxrVQNg2SBzceh4dalJGjOyXzYNSlp83pvSlpf
VytX9zgpaurG/5CSoOiRKelJe5TJAsuJ37vJlL89C2zOydQpKiVBQ4+8F1zp
lpT0Cf72XU1K+sQSUKoeKSlq6sb/kJKg6Kl3xll2qtj/qSwQLo8moJpMNFRK
ij4zkpKgK+fwedekpFTMSaWkYrFdz6Tamvqsm7rxP6QkKHpqSvpMsmvr7z/s
ygKVz5iiS/I/3pUF9h6vZST9uuXxon24XlgswEm6sYne3bgZEeHyTzAuliAB
hWMqWm1xALbao+Z1Xmbqxv+QkqDo8TONwXcwOvfbLGmekn6N9427kY8RvUWP
/mYeuGtd6unAVgbpycqBM4LBm/d4UhIUDR4iWln+lFoeuqBkprWfF6Skl5yB
ZKRGQb5A8S2K9F5Dg3Rm5cAZweDNezwpCYrMUe+VSUnf13uj0EQpybnH52hK
cu06Se+1NVp/FgdI+MFdq41W1jlaj72NlARFZhr3ij6E2hSoeWb0s2I09USX
rxfekpKceHylnrTmC3zMsk7Qdc3N1aU9HjntrXOuHtuYuvE/pCQoMlm91xL7
bdxNgXxy+cac7383UuVvfJbklGMtOrnKJKbUulTSaT3M1atS0klTN/6HlARF
UtK9iv1fGWEu+NfkPHG+ETqQkqKPlqih0zopXslTT0trTuZN4bDaVCWb5esf
86+jlUdFV6nosLlPxakbD1Qy0xjc8qCU5EwjKjV1zBfgAL3XT7FvNwV2ndXf
DLKr2k9sQKWqShWof7H37Jr6bJy68UAlKWlwz0hJTjNSws+l1wtTBThA73W1
KyVtTuZoZglHRM12U0kqGm0yH1AcSEn5dhZbPpepGw9UMvEY3ANSkhMMbmcY
9lafksInL9FHqJt1j6WkcMVdISgVr/J7VHmyTX1OTt34H34vCYqkpMFNnZKc
XTACw/ACJ1NS5mnpd3nm3dTq9Ylms5VdT46kpBlJSVBkHju4ZSR7W96pT2Ao
d4/LP0Tbdku3vE2xn5d0lIgujFYeHtBoPZsC37XWq0dPnk1tYeVhVeEqlWfd
1Gfm1I3/ISVBkXvopH6tjFahk6qJAzPkfu7ujKEtoz7wdeCuVOztzVBKvT6z
3a5HvG3ls5+cs7f/IyVBBVOgSQ2bkpxOrQw792ZjzCPlqF2sJiWlfjxz4KSk
W8ze/o+UBBWkpMF1fDywX01Tr+mWN1iGnHsTKh6p7wgKf8y8lVpSc6Qcsltk
un1zeVxfVPdeacNqd6147NxY19/k7Jr9FJ29/R8pCSqY2Q7ur6Pz+/N7hH/5
88RZ1JyUNIuaI7Ups8lBqWKZhZkj5XjdRc/X01e3k5KgSEoa3PgpySnUyd4n
FJnnFKlHFZXPKYY6voc/de+nVUpK1bMrJQ3SJ++k8+vpq9tJSVDkrjq4fEr6
zhXDJeFbYfmwwN6U5OTp58Dcu2Zh8cnFXSmp5lq0KXPN5au4lfpujMbSb6Td
dZTzm+jdJ6To/Bp6aQRSEhS5pd6rZgKWiS3F18Ufo0tqUpIz56Qmc+8zKWnX
3PuyDsnM86PLLzgPaxpW2Y3Rng9z05mUtGlz154hSrfnPaN/HrAXUhIUuZPe
q2YCVoxImyX5HBStsCYoLX9+hn9hJz1Tk7n34ZRUP/G+KyWF3ZJqxsUpKdqw
+pQUFi4ekQMpKdr4rr3El97OeEznPGAvpCQoeswla1I1E7DKlFT5tGhJfAev
GJSW4H9KyBlN5t7rdVOT6vDd+ll3uJW7fLIp6faGnU9JmTRUWX8xz67bTG/6
OfSkPnnAvkhJUOSmecY1E7B+KSn1OlUtl/nsf5a0pCfbYbGayivn3heMpm+B
1Iq3N6y+JysPYvSAFjdU2RXhLtwr1Z5Mn3+C/09Q5lTJ19PPUJ18o0f2wwN2
R0qCouddu+ZSMwEbJyXd21cPU3PoW6WkY1PuEVJSWCC61u0NO5ySvhWGP0a3
2/xIRffoYkss+2ReFH+srPAy8XH+Ghf39jUesF9SEhQ9+CI2heI9Zen5e0mp
11LSBWoO/cmUlH+3Pihdc+hrZlabt665fBUbVtmNF/w70xuDTGuXupS0BF/C
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
LpWSNsLDuiTC0RKbtDzjrGDj3rsMRcv+lPR1OCVtVpeSJtKp9xwU1jLXpYv/
DZiSvu8e/o5c238Gb3PP6FIpaSOfkoqTlmecFWxISYM7kJKaPEtqlZJSs4jN
dGKzyvl+e63mvecSQUhK+vZDNCJ9pKSBpeLtLW7sBylpYznxWe69h5J+bh+n
5C1P/L2k71kXPf2ckGe07T3Hgqjlzw9hfoQf1HyXh2XCtzJlUtu6MSUVZ7yL
lDSqzF31VRlfSlrLDOfoj+F4v66tXCg6TWUcmet59K0l9ggpnGlsZh351Zun
pFYlCbXqPVcGMvKXlMrrSfGt4iXulnlmzZTpIyUNTEr6ISVBkbnQ4FLX8/wH
ret3NyXDFVOVtL2eS0nXaNJ7DgF5+VwTjTn1KSm//N6UFE1DUtJc6u+qmftm
qkB4C5aSYF5S0uBe+KmXE/KM82FW/1N0ICVtZpLFNDRaSsoMjejy1LT5Fp37
ZjLLzv8LYfFszBTLbOv2lAQUuYQOLn+NlZLYONN7ep5KqangUkpJu2aSmXnp
ldelY3fJF166Z1GZkn6Oe/FszJ/MUhJMTUoa3AtvtU7IMw73nm6nXnQqGE4p
i8XyM8nbU9KZ++MLL92zqElJmYdEmSSVOucdmsHVjHTPZ9/J4R7cC2+1Tsgz
jn3orc/Z5fEp6fygyE/Fv7Pr9ev6t9bz83CibiqedzglZQ5BtFjx9n3vofF7
SV/FBLRZ7qb5Ho714KQk6h2LSD1awrOFUSWafSoDUVhb5kVYuPmuNamzmFyK
r2uKhbP00abiAyqmpPDEq1kYTUyD3FWjpKSvJWbzbnSVa5vJDRzowUUH710u
2+VrNvQ8u7ruymPKwyyxD8+jKWlJT/tTxaIXn0yOaLtfDavam5KinZNPT/mt
jDAVH1Cm0zInW01XH0hJTCF1Il186nK9zAnAyH6tjFnhYU7Iw+q7TidzxvK4
Z9zNb4X5LlqCuXS0fOqtRUo6IdNpSzrUp16fTEk39oNnSV/5fCQlvZmUNCkp
iVBN1xnynPeklNRpROxKSanCqbfWKWnwqfiAKnv7O0/+FXvok6khX2acQyMl
faXy0ffd1FpXNZDbmDJNSkoiVOw6fUsTz0hJXW9/u1LSr53PktZTeilpr2ec
vedJSV+pfLR+t2Yhz+NAT0pKIpTpOiOdhmafZ14wHPampGjeybw1y1R8QLOf
va1ISV/FC0L4dMmwegnHelJSEiFfDOAa884zK295mQ+Wm3RRNCWFaSjz1ixT
8QHNe/a2JSXtkn/exFM53JOSkgj5VgDXWEayq82pt6I/1lcerTMzN/6xeV3/
1kRT8QEd6EMpCd5p112GcUhJhFKTPWjrr1Pr9+f3CP8qT/J8sYtT0qum4gNy
aH5ISWcYVi8hJU1KSmJj3W/GNV1NlJJqxoKU9Cq7nlT2dmM/SEkn3Xv4uMbt
43Qu0Stb5nIXvvX9MXq1DF9ES4Y1pFYptvBLSprd0mJqBzWWVUoKr06bFLNZ
mC9fXKs+JRUveplL67fAmS66PR9JSWRISScZWW9QvI/wtfwZdjILM8XyldS/
qCmZWhglJc1uc2JAP2EUiv64iTnF8qmF+XWjzds1EDbXzO9QkpJ4MCnpPIPr
8aSkSqkEFEaS9WeS3+VSUj0n5DHGMpepSUnR5z6pWPS9bJ5MScdGQY+BIyUx
OCmpCePr2cysKqV6qfgsKbyJh68Pv4jmLynphQxkrnQsJeUfHp18lnRmCHRK
SeNovnc8gJTUhPH1bC6hlVK9tJRSUurFJ8g7mxf5GooFUptIkZImFZ4z0NuS
+OWjH8UolHnrQEpyF4MDpKRWXH8ezP2lUqaX8rfp9bvh608pGW3KRN8N2xD9
Mb8XUtKMookYegujSs3X6ro+SwJ2kZJacRV6MCmpUthLx/rtfG9n4tiZaqWk
uYQjV79xmWMpqSZASUnAdFyInkpKqrf53F5K6sQJWRTtIv3GZWpSUvi6PiWt
C0tJwPhcix5JStpl85W587Uda8DJ7UZJSVNInQA6jSuF8ecrmneW1d9zSJXM
fysvU//dnQHgLvxMUtKkmocaKWl8mZ7RaVyp5itz1/xz5sMxfi8JiqSkSUlJ
r1IcpzqNK0lJMDspCYqkpElJSe9R0yE6jStJSTA7KQmKpKRJSUkvUdkbOo0r
SUkwOympExelJ5GSJiUlPd6usanTuJKUBLOTkjpxUXoSKWlSUtKz7e0EnRa1
jOTuzmjp7r78w92dAVOSkvpxXXoMd5lJSUlPdWxIvrzTUv7qll9/+3T9V7mJ
hx2gCzq2vv/v7gyYkpTUj+vSY0hJk5KSHunwvr+50zKkpE6kJJidlNSVS9Mz
SEmTkpIe5sxIfGeP1chM5r/f18osDMtkluSDw8OOUaZPMj9mvjW3iZyZAmFt
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
tedJSZOSkt5MF/Wjb4E3kJKmczgl5eNPzVupGLVuVbS1n1WESa0VvojWXLP1
5qFGSpqUlPRa+qeTXXcfgKlJSZM6kJI4zHxgUlLSa+mfHqIfYd3YHoCupKR5
VQYld7HzTAYmJSW9lv5pLv9tAYDnkZKmVkxJvhfRhD6clJT0WvqnuVSX6mrg
qaSkB+h9k1pHrXfmhXfu9QNISa+lf5q7KyUtI7F39s7eXa/53tVrnpLu7ss/
NOmil1v+/BZ6uPANnE6TkpJeS/80l+rS3l39V/2/P79H+NdjT/+q89ffPiP8
67R3tx81x87endEjJd3epSN07GNEU9LnZZMQKWlSUtJr6Z/mopfBCz6TNNOe
d8rk2E197G7fr357V09KeqrNzWv9Y/j68+cdMLPuuv7L9uV2UtKkpKTX0j89
bK6E0dtE86vlz0z7W/N63psSLRMuzBcLl/c4qZZHT5mWnSkpdWhSh3uQlPRt
z/fHcHnY+OiK+R83y9f19Nu7+vMnv4Ph6ykm83elpMzJsHkrtcrgHTuCJZ1r
ltWtLfwx+iKs6j09/HPi3d0KdpOSXkv/dLKZCNUUq6kz/+53orue9K6X5H9M
rb55vWRn3Z3uArumNJspUDhrWpsxJRUPTeXBuv5Z0t7X3x8zBWqqWoZJSbt2
cFfl917Mb3yWFO3PfAcO0rGVt4nbLftTUqpwtKqR972twQ80KVLSO+mc3nb1
cPGOmb+Z1kyVl+yjospklJ94H7sLFNfaO6vJTDg3k9K9s9xOe3c4JVXGpX4p
adexqzkK0SOSP16V8+Tbz8zKXViC3HTvZL7G3pTUsGMrj37xELTt2JodzCeI
VprUnLo3LUFK2hTb9eLx+h1lupKS3knndHXyehi93UTvU993KzPR90V0Fr3c
l5Lye3dgFhqdL20W7qr5zEy75tidTElh+N1bc+9jt+xJSeHC1MFa0vPkTYVd
967J+XnstDw8mW/lWEpqOOS/MmdCcXnDjs3vYP3C84pdXVnJ5sW68s8qJYXl
M2+F9T9bp0NMb1LSO+mcfk7eklK1Ze53y2pi/BWdUW9K5ufYmyWphevaDux1
zd6dnIWup1KHJ6JNZtqZY7crzkQPTT5DXZCS8sduqUtJ6yNVExzCAx0tcPuZ
WbmDSzYStp3Mt3IyJZ3s2OiJlOrqvX17rGPzO5iqs8dBLHZ1ZSVh875VbXZt
SUSkVEsOt2o6L9nN55GS3knn9NP8sh+9v2zuTfmHQUtF0kk9sEhNvJcgKG0q
b+LT4oPlpWJ+vrfyhnt3ICWlXi9ByD0WvhruXZhWikuKxTKT3rDYd/Wue3d4
Sv9T22Y3vwvvOjNvdGDIZ457/vVdHbvrOh+u1apk/Q3oY85w2q4+ZxxS0jvp
nE6O3YZ21RluYtn/7bhogdTqlfUf2+XiTXw5/XtJ4bTzu4m9U9wee9cqJRWP
b7Harsdu2ZOS8skidcQzs+Xbz8zKKfqBOo/tXUNNniUd7tjwLCpeCnp3bH4H
U3X2OIjFrq6vp3nb3uZAtzMCKemddE4nZ+5ElXVGb7sHUlLmSUR9SgpraLJ3
mwLHZqG7Vuw0ZarZu94pqXITvY/dz7thl6YO2RILR0uQiSrrvP3MrDw/j520
B/buRs07ttiT63Np7/Wk+Q6G+5taeF6xq+vrad62t+l0iOlNSnonndNDk/tR
vtpUgd/BN6bqp9zf8stqXh1Wlap/U8OZvYuuvjwoJaWO3a6IVH+Ud50MXY/d
t0zYpd/lSyBcMawnWmd0xX57V3/+hDsYFrjmzLxRj47Nd3W+cPOOrdnBpZSb
mii25PHG2fFxWsIuUtI76ZwewlnQNf287H8e0enfgf0t9lL9rCY/BT3/r9Pe
3X7UzqekTIHmR6HrsVvvUcMzc5C9q9/3rh7fsTXdeM1twsz8xwid4FhMSkp6
J53TXDQine/nyhvu7XPswzPtmh64fbLUcC4a7t3tR+3MsXvedHdXydv3q+2Z
eayeG/+vsrN0LLe7/VBKSZOSkl5Iz/TQKSVlav7WP/tMu7j7t0+W+k2ZZj92
UtII/6SkwTt2Upu7WHhTC+9EqcKpO9f6ReatVCXF1ddN7ddRNcImMQUp6YX0
TG9tezh6a9jcO26fY0tJh/fu9qN2PiWlJgAzHrv8Hs2+d632fU1Kqtyp6NX7
k0gf0bfCkr1lssa6VakXlcX6vVj/eO/MR0qalJT0Qnqmt2tS0rrA7XNsKenw
3t1+1HYdu3D6kZqZfCY5drv2aLq9yzu872tSUv1+pX489tYFpKRWpKRJSUkv
pGd6a9XDqXwUndsMosmO27tbVDY49WNYw83786cmezTd3uUtR/d9rUdKGsfJ
fdnsV2rJ8mfPL+kD0btJ0TLR3ggbn9qdG1+kFl6v+enENaSkF9IzvZ3s4fCW
1O/GDbtk5myTnpnP26N6Tfa9eUp6qpqUtMSeevS4+NdXmEoZZ1LSdzc3+5t/
K1NPTQPCXbiSe/ekpKQX0jO9Hejh/H1QROJeS8znz1v/XCfn8/aoXtt9l5Iq
hV2amt5vSjY/IXfdUFJN2pwzmwqjP25ebHaq8q1MPWFLUq+vd+OmOUNKeiE9
01t9D1det11gGcT6PIzOrqfzvD2q12TfpaRKYa9u4kCYDqLvnm/GWk35yq2P
M2TGacnXSy4pzyMlvZCe6arybuKayYyed9I+b4/qNdl3KalSPiVtEmtYrMnB
2huRou05WewC47Tkyx1/UlLSC+mZrlLde+DeBKN53tn7vD2qJyVdKZp9im+l
lhxrQNeUdEElt2/iMLf+SUlJb6Nbegvvdy6PwFNJSTUyCSX6YzE3nW/A7Hel
XXtx+/7e3gCOkZLeZrRuiV6679Jqjz7CEfAOUtIU+t3ybrGkn8RVrnWx2Tv8
taSktxmtW5YH/Q8En3H3AagnJU3k5Slpb+GGZu/w15KS3ma0bnlAStrccUbr
YYB+pKS51KekmmdPm+WbW2Fm9fC++f0xfBGWT9WQqe37VqmHupCSJiUlvc1o
3VKZktZX2uLyVOG2KSl14xithwH6kZImsjcvhNEm+uM3j0SX5+upWSssn2/J
rnWvISVNSkp6m9G6pT4lha/DxJQp3CQlrfNXpkzTHgIYl5Q0kQMfBh7+8dMz
JX2Ch0c1m5aS2EtKepvRumXX45518ImuGC5skpKKyWhTuF33AAxNSprFgXvT
3pS0uVde8Czp+2Nx05lIdQEpaVJS0tuM1i0jp6Rd4Wi9VrvuAYAGjqWkzDco
wqgSXR5uOv9s6FhKqq8tbM8FpKRJSUlvM1q37EpJP9eZTPxZgt9O2lX5p+47
dfndad1DAHDK+TtatIbwCU7+OVFxxc2S1I+f4GZdX9uZW/xhUtKkpKRXGbBP
6oPMkvgtpOjCXflonarO706TbgGAe518/pJJSXu3PjspaVJS0qsM2CeVcSYs
lklJByJS9Bt3x3bnfCUAs/B7SQ8mJbUiJU1KSnqVAfvkQEpKPTCKLt/1rKrJ
7pyvBGAWUtJTLX86tvpHQPhnOmFSUtKrDNgnu1LMV35hZrmUBNCQlDQ4d6UR
SEmTkpKGtYyk624e+HZcj39NdrNrXwGMRkoanLvSCHpPpehEShrWX+3//fk9
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
SUkvMXJvjNy2oqkbT1R4TH+WSEkQkpJ6cJF5GClpUlLSSwzbG8M2rNLs7d9r
/X2z/HfSbmpgA5nGP2DvoC0pqQcXmYdx45iUlPQSw/bGsA2rNHv7D4h+Gy1f
bC6plnuWBCEpCYqkpElJSS8xbG8M27BKs7f/gNempI87HQSkJChy75iUlPQS
w/bGsA2rNHv7DyimpNlvB6nfSwKAA2a/Lb6WlPQSY/bGmK2qN3v7j9mkpNRv
J13erpbCfbyxMcB7uNo8kvvIpKSklxizN8ZsVb3Z239M6lnS84LS+u9UpN6d
fTeBcbiePJWbxaSkpJcYszfGbFW92dt/TD4lvSc7hAHqDXsNG34vqSHXkKd6
yW3xeaSklxiwNwZs0l4P2IUDKp8lvcHDHp/BAVJSKy4gDyYlTUpKeokBe6Nh
k+56fjFgr/a2+R6aL57pCl5OSmrFpePB3BomJSW9xIC90bZJu2pbRtKwE7je
Mt3TtL8aOc4/5iclNTHH1YOj3O4nJSW9xGi90bw9uyr8q/Dvz+9+/+rrH+24
UOl74GZMSXdHo//5b/aUdPXnKVk39oOU1MS9B5Hebh+nHCMlvcGAXdG8Scvq
i081haUkTpr1rrfcn48ek5J+/e0zwj8paXZTXknYY9b7xetJSW8wYFecb9Km
hvUlqFj5JsV8P4+NLgzfjZZPBaVUJVIS95CSGpGSfkhJe4XPAd0IHk9KmpSU
9AajdUWT9oQpqb7+aFopPhL6+XETl2oeJ60Tk5TEzapT0vdldOH63/pdKUlK
urEx49vMlk2eX8KBnpSU9AajdcWkKSmzZPOoqD5PjXZo6oUfhz7bc/a3LshE
s0/mhZS0ziw/1ksyb62X5H+UksaXvz5E353+kkIFR3lSUtIbjNYVZ9qzxHz+
vAQV66+JP5UpKfMgaYk9iho/JdVczDdlpr7+P2x/y22rCDJhmZ8l+ZT0CR48
zZ6SijPeTGxJ/RiulSkcLS8ljSy8N23eTa3Vv2ncaeS7BhlS0huM1hVN2hOd
tVZeiKLx56tTSprlG3f5u/zncR+HPmx/i7tzLCVtolAqLj0yJWVmvDUp6Wdd
Kekllpj1u6m1rmog9xj2lkGelPQGQ3VFq8acqSefX5bsrxHVRKRUDTOmpPDa
/rAb/cP2t7g7Z1JSKhy9JCWFM95iSvp5sSS+fRd+7y6sM7OVcF3GlzrTrjqp
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
3pQMG1xZT6rCcOG8pCQoCq+cTEFK2ltnavZ1uMImDTtffzSw3PJPSorOqH+E
zyyWxOOMTbEnzdvz8iP0QMxZpKTsLT6zPDwKm/hQn5LyASSfkqIBpzIlHWhG
ZqOprUxNSoIiKWlSUtKuCqWkMVPSON14rPJWE++XzNvz8gNzb29vxvsLe7t4
oatJT5vX4Y+bi+q6TBg91mtlln8q0kpm3WKDU83IbzSzfFJSEhQVL6SMSUqq
ry3qfLVNmne+/mXalDT7lWeRki6kt5uryQJndvbKrHGgzmtWGZmUBEVS0qSk
pF0VSkmjpaRrLjtdt2LefiW93dwjU9KuK+fhrTyDlARFUtKkpKQD1UpJg6Sk
y645UtJj6O3mojvS6jpZuXrDzjzT5oubOggpCYqkpElJSceqbZKS8rOLMzXn
N5EqOY7me3dev20t5u0X0tvNPWZHrvG87pKSoGjX3IZxSEln6jy5idTqDVt+
zai8Zexfv9FOW7w0f5b02MGh3N3Bf7i7M5p50r709ry+kpKg6GHX/PeQkm6s
M1Vbw61cMCpvGftXbvG7LZe4d3pqtGlIt9R7Xl9JSVDk9jEpKWnACpfgz9s2
30Qrt0wd79qcS9wbvOTpT1t6pp6+ghdyB5mUlDRghevRdHKjXUflLbPHW64z
rm+vIiUdoHNq6CV4J3eQSUlJt9S2qXMzB1tva9iUdMvs0UWGC4hIx+iiPP0D
r+UmMikp6Zba8nWOn5LumkC6yHANEekAHZXx4M7xe0lQ9OArwLNJSYerOj99
yqSk6HOlhps4Wectc0hXGHpbgse7bm176a7Qs/tESoIit5JJSUlnquoRYb5D
qcmYaj4qoxHpgrHv8kJX4WksIh2m6368pB+kJCh6w6XgkaSkM/UM+KDnmk1c
nJJcW+gkcwK7qZ2X+lDlJe7u/otISVD0qmvCk0hJZypZTjz0uWa89NvKZfMB
FxZ6cM+CJqQkKHLHmZSUtKuS8Mfvkr2be0BKungr0IS7FTQkJUGR+87g2n2J
oIHLdrl5DUs6NO3d3DX90G8rs7efd3JGQVtSEhRdOfvlgL+Ozu/P7wP/vtHm
5/WxSjYVXrbLzWuQkrpWe8tWADhMSoIiKWlwxwLOeq1vVnpJStokoOgTsfVp
LyV9mv5NJ9cTmnBvgq6kJChyJxqclNRk9TA6fY6e/POmpHydIhKDcFeCC0hJ
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
7cvshQAAANzCdyIJJQAAgEf8LwkAAIBPH+V+yKo=
   "], {{0, 0}, {1122, 761}}, {0, 
   255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 CellLabel->"Out[303]=",
 CellID->2019329860]
}, Open  ]],

Cell["We can also create snapshots and an animation of this data.", "Text",
 CellID->973016157],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->499168171],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"membersBCellReceptor", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
      "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", "\"\<path:hsa04662\>\"", 
       ",", "3", ",", "2"}], "]"}], "@", 
     RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}], ")"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[306]:=",
 CellID->1448324815],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[306]=",
 CellID->863400676]
}, Open  ]],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->401232237],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intensitiesRNABCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "rnaFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensitiesproteinBCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "proteinFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"intensitiesAll", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
   "intensitiesRNABCellReceptor", ",", "intensitiesproteinBCellReceptor"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[307]:=",
 CellID->411555679],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.038778745126709355`", ",", "0.`", ",", "0.3308909839321027`", ",", 
      "0.2206704394223557`", ",", "0.2874901450208439`", ",", 
      RowBox[{"-", "0.04372751379598624`"}], ",", 
      RowBox[{"-", "0.0980776066271067`"}], ",", "0.12251107438865769`", ",", 
      
      RowBox[{"-", "0.3241506774095029`"}], ",", 
      RowBox[{"-", "0.33317776309605013`"}], ",", 
      RowBox[{"-", "0.37502722437199104`"}], ",", 
      RowBox[{"-", "0.21910186659265724`"}], ",", "0.39717063159367816`", ",",
       "0.04620549589280256`", ",", 
      RowBox[{"-", "0.40805572502422266`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.41824938578802684`", ",", "0.`", ",", "0.4346283454510505`", ",", 
      RowBox[{"-", "0.09710561003766262`"}], ",", "0.15912542561628146`", ",", 
      RowBox[{"-", "0.1626590038855592`"}], ",", 
      RowBox[{"-", "0.19573472345395784`"}], ",", "0.10553716044254315`", ",", 
      RowBox[{"-", "0.2071194529277627`"}], ",", 
      RowBox[{"-", "0.28202825579531565`"}], ",", 
      RowBox[{"-", "0.10536321562270572`"}], ",", 
      RowBox[{"-", "0.17518129203252875`"}], ",", "0.12695507826666746`", ",", 
      RowBox[{"-", "0.25526064190720155`"}], ",", 
      RowBox[{"-", "0.5291533255664163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.10615989393495232`", ",", "0.`", ",", "0.18840596303037413`", ",", 
      "0.048047135096177244`", ",", "0.16619626570031684`", ",", 
      RowBox[{"-", "0.21175531708410275`"}], ",", 
      RowBox[{"-", "0.12432399739780184`"}], ",", "0.03841171024699074`", ",", 
      RowBox[{"-", "0.5024806637593322`"}], ",", 
      RowBox[{"-", "0.16603574538014687`"}], ",", 
      RowBox[{"-", "0.19614635461512267`"}], ",", 
      RowBox[{"-", "0.307538378078446`"}], ",", 
      RowBox[{"-", "0.017124915407234483`"}], ",", 
      RowBox[{"-", "0.3080918215676708`"}], ",", 
      RowBox[{"-", "0.5943143512516815`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.05041220188957137`", ",", "0.`", ",", 
      RowBox[{"-", "0.15159602607738404`"}], ",", 
      RowBox[{"-", "0.3418182940818629`"}], ",", 
      RowBox[{"-", "0.10165562085013555`"}], ",", 
      RowBox[{"-", "0.13035895850832396`"}], ",", "0.26759080168486116`", ",", 
      RowBox[{"-", "0.0967033158357252`"}], ",", "0.7683894970650806`", ",", 
      "0.0553952007923425`", ",", "0.1603313546397198`", ",", 
      "0.15817945741016387`", ",", "0.0784527804797115`", ",", 
      "0.20758000806705793`", ",", "0.23641401575061569`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.47668369234111063`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21499367785632137`"}], ",", "0.17941260040124263`", ",",
       "0.21054955024730262`", ",", 
      RowBox[{"-", "0.043220651159810164`"}], ",", 
      RowBox[{"-", "0.272109969536928`"}], ",", 
      RowBox[{"-", "0.19091017669392285`"}], ",", "0.2568869926746049`", ",", 
      
      RowBox[{"-", "0.08590868949633254`"}], ",", "0.20594997280838284`", ",", 
      RowBox[{"-", "0.3944573995520664`"}], ",", 
      RowBox[{"-", "0.30324047113994684`"}], ",", 
      RowBox[{"-", "0.2250957883007071`"}], ",", 
      RowBox[{"-", "0.35166129631647564`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.016629257206749837`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.46936479241186474`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", 
      RowBox[{"-", "0.26808358766824847`"}], ",", "0.04078121233113895`", ",",
       "0.2734643155740791`", ",", 
      RowBox[{"-", "0.14573410310223814`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", "0.26356252374763406`", ",", 
      
      RowBox[{"-", "0.48081353732225546`"}], ",", 
      RowBox[{"-", "0.08746382927257018`"}], ",", 
      RowBox[{"-", "0.5055941746797294`"}], ",", "0.03411635754083646`", ",", 
      "0.09211339971620953`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.11121721141851255`"}], ",", "0.`", ",", 
      "0.21626391246224105`", ",", 
      RowBox[{"-", "0.38169948822881583`"}], ",", "0.12294951236820212`", ",", 
      RowBox[{"-", "0.11267241876505982`"}], ",", 
      RowBox[{"-", "0.24187539695241472`"}], ",", "0.09026581699905412`", ",", 
      RowBox[{"-", "0.6816227833021119`"}], ",", 
      RowBox[{"-", "0.19950063694707412`"}], ",", 
      RowBox[{"-", "0.005313630005752559`"}], ",", 
      RowBox[{"-", "0.07275149486016533`"}], ",", 
      RowBox[{"-", "0.026962565586229257`"}], ",", 
      RowBox[{"-", "0.24773153848263935`"}], ",", 
      RowBox[{"-", "0.3589900252045054`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.16786761644547143`"}], ",", "0.`", ",", 
      "0.08511549101992526`", ",", 
      RowBox[{"-", "0.09588517585046787`"}], ",", "0.05464155304336848`", ",", 
      RowBox[{"-", "0.07928233004292208`"}], ",", 
      RowBox[{"-", "0.19251986600408416`"}], ",", 
      RowBox[{"-", "0.009326149016929316`"}], ",", 
      RowBox[{"-", "0.6419092268717677`"}], ",", 
      RowBox[{"-", "0.20359394490186375`"}], ",", 
      RowBox[{"-", "0.20013072508875882`"}], ",", 
      RowBox[{"-", "0.30835064547338437`"}], ",", 
      RowBox[{"-", "0.07671201247995124`"}], ",", 
      RowBox[{"-", "0.3658060131969946`"}], ",", 
      RowBox[{"-", "0.42500639615153174`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18138248999321507`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.08977285477189995`"}], ",", 
      RowBox[{"-", "0.169229556455112`"}], ",", 
      RowBox[{"-", "0.08681793038600419`"}], ",", 
      RowBox[{"-", "0.1816373745988602`"}], ",", 
      RowBox[{"-", "0.21979066981068787`"}], ",", 
      RowBox[{"-", "0.16471189634013272`"}], ",", 
      RowBox[{"-", "0.6859762549997955`"}], ",", 
      RowBox[{"-", "0.11192443485740455`"}], ",", 
      RowBox[{"-", "0.053510227687117516`"}], ",", 
      RowBox[{"-", "0.32349878752971556`"}], ",", 
      RowBox[{"-", "0.18604523095988545`"}], ",", 
      RowBox[{"-", "0.3282300261180281`"}], ",", 
      RowBox[{"-", "0.28545062326456044`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18166493911072917`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.030819659285723028`"}], ",", 
      RowBox[{"-", "0.2729441269266965`"}], ",", 
      RowBox[{"-", "0.11342959819258822`"}], ",", 
      RowBox[{"-", "0.19522720479585642`"}], ",", 
      RowBox[{"-", "0.2887644913340973`"}], ",", 
      RowBox[{"-", "0.0677041487423092`"}], ",", 
      RowBox[{"-", "0.52735465330263`"}], ",", 
      RowBox[{"-", "0.1568865238867638`"}], ",", 
      RowBox[{"-", "0.0753421617956879`"}], ",", 
      RowBox[{"-", "0.26016912239448475`"}], ",", 
      RowBox[{"-", "0.20377938610793608`"}], ",", 
      RowBox[{"-", "0.4247794469533678`"}], ",", 
      RowBox[{"-", "0.39313667030617344`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0946381024990129`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.049984151316888624`"}], ",", 
      RowBox[{"-", "0.2095209987368932`"}], ",", 
      RowBox[{"-", "0.0834030741831631`"}], ",", 
      RowBox[{"-", "0.2060534090399563`"}], ",", 
      RowBox[{"-", "0.19423460952173655`"}], ",", 
      RowBox[{"-", "0.13857663323255798`"}], ",", 
      RowBox[{"-", "0.4455559038634096`"}], ",", 
      RowBox[{"-", "0.18885978233256123`"}], ",", 
      RowBox[{"-", "0.19184147400734922`"}], ",", 
      RowBox[{"-", "0.2648788290396264`"}], ",", 
      RowBox[{"-", "0.21162241201560938`"}], ",", 
      RowBox[{"-", "0.44345153067800686`"}], ",", 
      RowBox[{"-", "0.50568388038928`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18218411686836491`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.10283215314268605`"}], ",", 
      RowBox[{"-", "0.1920873392381627`"}], ",", 
      RowBox[{"-", "0.10709101837664896`"}], ",", 
      RowBox[{"-", "0.10788619319749143`"}], ",", 
      RowBox[{"-", "0.20980765573945362`"}], ",", 
      RowBox[{"-", "0.16111518044662473`"}], ",", 
      RowBox[{"-", "0.7322285320440992`"}], ",", 
      RowBox[{"-", "0.12830505287795277`"}], ",", 
      RowBox[{"-", "0.17930374405806218`"}], ",", 
      RowBox[{"-", "0.09545359444054347`"}], ",", 
      RowBox[{"-", "0.1867661108641838`"}], ",", 
      RowBox[{"-", "0.32184454851160965`"}], ",", 
      RowBox[{"-", "0.3064378479173295`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.07629081318852289`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.07629081318852289`"}], ",", 
      RowBox[{"-", "0.32878631152146626`"}], ",", 
      RowBox[{"-", "0.10386155158442957`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.4365214579425223`"}], ",", 
      RowBox[{"-", "0.03143304260487128`"}], ",", 
      RowBox[{"-", "0.5947599533539297`"}], ",", 
      RowBox[{"-", "0.3587043950845741`"}], ",", 
      RowBox[{"-", "0.16703826387813744`"}], ",", 
      RowBox[{"-", "0.15371768783658935`"}], ",", 
      RowBox[{"-", "0.29091194672606924`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.20739212171844623`"}], ",", "0.`", ",", 
      "0.024329303972880016`", ",", 
      RowBox[{"-", "0.20679162695780465`"}], ",", 
      RowBox[{"-", "0.04541867681895519`"}], ",", 
      RowBox[{"-", "0.21049641191594368`"}], ",", 
      RowBox[{"-", "0.16460612265663285`"}], ",", "0.029870991732781956`", 
      ",", 
      RowBox[{"-", "0.7339397004527469`"}], ",", 
      RowBox[{"-", "0.23686986404231467`"}], ",", 
      RowBox[{"-", "0.02764694400425035`"}], ",", 
      RowBox[{"-", "0.13681417005109897`"}], ",", 
      RowBox[{"-", "0.22953820969994437`"}], ",", 
      RowBox[{"-", "0.21280867785729338`"}], ",", 
      RowBox[{"-", "0.35642973827330393`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295758816890077`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.27052189163675444`"}], ",", 
      RowBox[{"-", "0.1974399735658353`"}], ",", 
      RowBox[{"-", "0.19504468595725166`"}], ",", 
      RowBox[{"-", "0.027428112771337044`"}], ",", "0.06476880377705634`", 
      ",", 
      RowBox[{"-", "0.15653009856345715`"}], ",", 
      RowBox[{"-", "0.337895550763809`"}], ",", "0.06968633132184608`", ",", 
      RowBox[{"-", "0.41527764850834437`"}], ",", 
      RowBox[{"-", "0.37286394963599834`"}], ",", 
      RowBox[{"-", "0.3713356020907587`"}], ",", 
      RowBox[{"-", "0.31580056712389853`"}], ",", 
      RowBox[{"-", "0.25443647294027055`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13479893500866622`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20256396195516896`"}], ",", 
      RowBox[{"-", "0.3610197671146908`"}], ",", 
      RowBox[{"-", "0.19426929181946417`"}], ",", 
      RowBox[{"-", "0.36800638206399594`"}], ",", 
      RowBox[{"-", "0.23440823093535876`"}], ",", 
      RowBox[{"-", "0.27803373202732246`"}], ",", "0.012962179524894387`", 
      ",", 
      RowBox[{"-", "0.22718003626881278`"}], ",", 
      RowBox[{"-", "0.30994005350769777`"}], ",", 
      RowBox[{"-", "0.3360468790676116`"}], ",", 
      RowBox[{"-", "0.40015637638006324`"}], ",", 
      RowBox[{"-", "0.13208386643695547`"}], ",", 
      RowBox[{"-", "0.25826766023589887`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.221425773380745`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.243571757903387`"}], ",", 
      RowBox[{"-", "0.11039225752290059`"}], ",", 
      RowBox[{"-", "0.16365139325744832`"}], ",", 
      RowBox[{"-", "0.016607048325296567`"}], ",", 
      RowBox[{"-", "0.026500877616898285`"}], ",", 
      RowBox[{"-", "0.14315269682400197`"}], ",", 
      RowBox[{"-", "0.0850637578773461`"}], ",", "0.0363063162929521`", ",", 
      RowBox[{"-", "0.4105726758454418`"}], ",", 
      RowBox[{"-", "0.4435978247897623`"}], ",", 
      RowBox[{"-", "0.35068581293552653`"}], ",", 
      RowBox[{"-", "0.48387468310257825`"}], ",", 
      RowBox[{"-", "0.31652206757825097`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.10961168351076114`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21094976529594717`"}], ",", 
      RowBox[{"-", "0.1809635103255571`"}], ",", 
      RowBox[{"-", "0.21846939773037327`"}], ",", 
      RowBox[{"-", "0.22268432131751967`"}], ",", 
      RowBox[{"-", "0.13436623870338474`"}], ",", 
      RowBox[{"-", "0.21481163653785168`"}], ",", 
      RowBox[{"-", "0.14265099815527352`"}], ",", 
      RowBox[{"-", "0.1196553373738772`"}], ",", 
      RowBox[{"-", "0.334893616086209`"}], ",", 
      RowBox[{"-", "0.511375697391697`"}], ",", 
      RowBox[{"-", "0.3366464866173687`"}], ",", 
      RowBox[{"-", "0.3632234465426997`"}], ",", 
      RowBox[{"-", "0.3092482808431163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295624122684205`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3275732750314186`"}], ",", 
      RowBox[{"-", "0.2460544962162692`"}], ",", 
      RowBox[{"-", "0.2669404747070069`"}], ",", "0.006903975694237867`", ",",
       "0.07898322273499543`", ",", 
      RowBox[{"-", "0.28317273365747764`"}], ",", 
      RowBox[{"-", "0.20431057830799113`"}], ",", "0.13048602424656103`", ",", 
      RowBox[{"-", "0.27170966624312526`"}], ",", 
      RowBox[{"-", "0.3712295648446653`"}], ",", 
      RowBox[{"-", "0.3389559939504886`"}], ",", 
      RowBox[{"-", "0.3547789024245206`"}], ",", 
      RowBox[{"-", "0.275432570820624`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2705696810595979`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.2534677964673615`"}], ",", 
      RowBox[{"-", "0.2068992066988645`"}], ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.18838552003780887`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.4929615140796191`"}], ",", 
      RowBox[{"-", "0.1548251192956156`"}], ",", 
      RowBox[{"-", "0.19438304192338338`"}], ",", 
      RowBox[{"-", "0.2705696810595979`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.29196024516290325`"}], ",", 
      RowBox[{"-", "0.35395332412631997`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1341251261847756`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.22184935747682982`"}], ",", 
      RowBox[{"-", "0.399220401629133`"}], ",", 
      RowBox[{"-", "0.20673779815922316`"}], ",", 
      RowBox[{"-", "0.1426194015624961`"}], ",", 
      RowBox[{"-", "0.09852130467542528`"}], ",", 
      RowBox[{"-", "0.19422939570954087`"}], ",", 
      RowBox[{"-", "0.35359264817812963`"}], ",", 
      RowBox[{"-", "0.0867094984306964`"}], ",", 
      RowBox[{"-", "0.31664425672943974`"}], ",", 
      RowBox[{"-", "0.2814255432205854`"}], ",", 
      RowBox[{"-", "0.38325435746914155`"}], ",", 
      RowBox[{"-", "0.3156410477634368`"}], ",", 
      RowBox[{"-", "0.32307998127545584`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13430780661217814`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.32419203478149977`"}], ",", 
      RowBox[{"-", "0.23668378749500305`"}], ",", 
      RowBox[{"-", "0.22721176999258677`"}], ",", 
      RowBox[{"-", "0.03923614817812529`"}], ",", "0.0005982652764247334`", 
      ",", 
      RowBox[{"-", "0.25444684932444966`"}], ",", 
      RowBox[{"-", "0.3890983856520298`"}], ",", "0.07045515766801566`", ",", 
      
      RowBox[{"-", "0.23298106167244387`"}], ",", 
      RowBox[{"-", "0.28937072607727043`"}], ",", 
      RowBox[{"-", "0.2964728885394952`"}], ",", 
      RowBox[{"-", "0.4343597132050111`"}], ",", 
      RowBox[{"-", "0.36330688452428045`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.29060174811021067`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.26341817204080253`"}], ",", 
      RowBox[{"-", "0.09721299602844978`"}], ",", 
      RowBox[{"-", "0.16207559355446263`"}], ",", "0.011300368006674008`", 
      ",", "0.05844643404406884`", ",", 
      RowBox[{"-", "0.16383822112003374`"}], ",", 
      RowBox[{"-", "0.5516878912619715`"}], ",", "0.09898848695764009`", ",", 
      
      RowBox[{"-", "0.21599395317462206`"}], ",", 
      RowBox[{"-", "0.3371591747633452`"}], ",", 
      RowBox[{"-", "0.3238673959517276`"}], ",", 
      RowBox[{"-", "0.34842378244085476`"}], ",", 
      RowBox[{"-", "0.2815649306296724`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.05780273280375747`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3187547588750017`"}], ",", 
      RowBox[{"-", "0.10176932897826184`"}], ",", 
      RowBox[{"-", "0.14223545799051943`"}], ",", 
      RowBox[{"-", "0.028628367984999917`"}], ",", 
      RowBox[{"-", "0.08888635849585656`"}], ",", 
      RowBox[{"-", "0.24565143729098476`"}], ",", 
      RowBox[{"-", "0.3377629421284371`"}], ",", 
      RowBox[{"-", "0.014764011480735292`"}], ",", 
      RowBox[{"-", "0.49459800646072816`"}], ",", 
      RowBox[{"-", "0.24891046199384032`"}], ",", 
      RowBox[{"-", "0.524683600432957`"}], ",", 
      RowBox[{"-", "0.13215080026032225`"}], ",", 
      RowBox[{"-", "0.28593570492914033`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.042558634300996406`", ",", "0.`", ",", "0.08198978697165296`", ",", 
      RowBox[{"-", "0.24595210487045965`"}], ",", "0.054631747891002745`", 
      ",", 
      RowBox[{"-", "0.12223621407006559`"}], ",", 
      RowBox[{"-", "0.02075468445961393`"}], ",", "0.10630718071476095`", ",", 
      RowBox[{"-", "0.5044872256907823`"}], ",", 
      RowBox[{"-", "0.27312245331401525`"}], ",", 
      RowBox[{"-", "0.293283851979613`"}], ",", 
      RowBox[{"-", "0.12097875547569602`"}], ",", 
      RowBox[{"-", "0.16025169453032473`"}], ",", 
      RowBox[{"-", "0.3127861494923794`"}], ",", 
      RowBox[{"-", "0.589953737737302`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.08439118564169859`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.14065722814083692`"}], ",", 
      RowBox[{"-", "0.19975840111640467`"}], ",", 
      RowBox[{"-", "0.1550361905508878`"}], ",", 
      RowBox[{"-", "0.22514123129829777`"}], ",", 
      RowBox[{"-", "0.11811067040877182`"}], ",", 
      RowBox[{"-", "0.17988904253126553`"}], ",", 
      RowBox[{"-", "0.38704904435955473`"}], ",", 
      RowBox[{"-", "0.11278738394610092`"}], ",", 
      RowBox[{"-", "0.2943193759037332`"}], ",", 
      RowBox[{"-", "0.3831074318615434`"}], ",", 
      RowBox[{"-", "0.38532091442119687`"}], ",", 
      RowBox[{"-", "0.33817412019803783`"}], ",", 
      RowBox[{"-", "0.39166077399173954`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1093931281135468`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.16150511710402168`"}], ",", 
      RowBox[{"-", "0.217788835823636`"}], ",", 
      RowBox[{"-", "0.14151209402131568`"}], ",", 
      RowBox[{"-", "0.02187515159569934`"}], ",", 
      RowBox[{"-", "0.005107192548820926`"}], ",", 
      RowBox[{"-", "0.11509486383751792`"}], ",", 
      RowBox[{"-", "0.34416740603812057`"}], ",", 
      RowBox[{"-", "0.06847667951758128`"}], ",", 
      RowBox[{"-", "0.3673865412674147`"}], ",", 
      RowBox[{"-", "0.26329300004781453`"}], ",", 
      RowBox[{"-", "0.3704355806623292`"}], ",", 
      RowBox[{"-", "0.40242068482847`"}], ",", 
      RowBox[{"-", "0.5041219068423514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.17655612267617768`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.11521393610234593`"}], ",", 
      RowBox[{"-", "0.27020814693938333`"}], ",", 
      RowBox[{"-", "0.1534255449761702`"}], ",", 
      RowBox[{"-", "0.15262993678398293`"}], ",", 
      RowBox[{"-", "0.14313180484622515`"}], ",", 
      RowBox[{"-", "0.13596341915181728`"}], ",", 
      RowBox[{"-", "0.436426134637418`"}], ",", 
      RowBox[{"-", "0.03370529303435752`"}], ",", 
      RowBox[{"-", "0.23597089951911646`"}], ",", 
      RowBox[{"-", "0.37278194555901395`"}], ",", 
      RowBox[{"-", "0.40824824711322666`"}], ",", 
      RowBox[{"-", "0.3316737833629997`"}], ",", 
      RowBox[{"-", "0.3657958303097142`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13768718576799685`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.0350415471099589`"}], ",", 
      RowBox[{"-", "0.23329032760889032`"}], ",", 
      RowBox[{"-", "0.30507233309062876`"}], ",", 
      RowBox[{"-", "0.061472837011514486`"}], ",", "0.0061646627801911725`", 
      ",", "0.088498660325098`", ",", 
      RowBox[{"-", "0.701171314093717`"}], ",", 
      RowBox[{"-", "0.10976830408444116`"}], ",", 
      RowBox[{"-", "0.22873495834860416`"}], ",", 
      RowBox[{"-", "0.4042465754624842`"}], ",", 
      RowBox[{"-", "0.30008380000288404`"}], ",", "0.10574589498282079`", ",", 
      RowBox[{"-", "0.003761552628280958`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.0774534869145951`", ",", "0.`", ",", 
      RowBox[{"-", "0.1576362287901149`"}], ",", 
      RowBox[{"-", "0.06526105131879513`"}], ",", 
      RowBox[{"-", "0.1309914632199784`"}], ",", 
      RowBox[{"-", "0.16306774666450977`"}], ",", 
      RowBox[{"-", "0.12646989712224893`"}], ",", 
      RowBox[{"-", "0.25672840278318193`"}], ",", 
      RowBox[{"-", "0.35420591012501973`"}], ",", 
      RowBox[{"-", "0.16918919314037137`"}], ",", 
      RowBox[{"-", "0.4403921634493964`"}], ",", 
      RowBox[{"-", "0.4247697049765375`"}], ",", 
      RowBox[{"-", "0.3772944648027281`"}], ",", 
      RowBox[{"-", "0.26321964735090364`"}], ",", 
      RowBox[{"-", "0.3148678217079514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.02168638832940146`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.266154607197602`"}], ",", "0.06610177744422054`", ",", 
      RowBox[{"-", "0.05373241640194315`"}], ",", 
      RowBox[{"-", "0.18256867810695832`"}], ",", 
      RowBox[{"-", "0.8257260055841014`"}], ",", 
      RowBox[{"-", "0.03140438984890247`"}], ",", 
      RowBox[{"-", "0.42971666907446715`"}], ",", 
      RowBox[{"-", "0.09984301541494858`"}], ",", "0.0013423131090658262`", 
      ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.06591568501104547`"}], ",", "0.0159995291855583`", ",", 
      
      RowBox[{"-", "0.07788521151629395`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.10114460966671077`", ",", "0.`", ",", 
      RowBox[{"-", "0.046451459039807026`"}], ",", 
      RowBox[{"-", "0.021365981724342998`"}], ",", "0.021192705232220825`", 
      ",", 
      RowBox[{"-", "0.08577537228510858`"}], ",", 
      RowBox[{"-", "0.33997196450847056`"}], ",", 
      RowBox[{"-", "0.1535604201471789`"}], ",", 
      RowBox[{"-", "0.8763840010256423`"}], ",", 
      RowBox[{"-", "0.1077819799473775`"}], ",", 
      RowBox[{"-", "0.1663252205448133`"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.16293749015093129`"}], ",", 
      RowBox[{"-", "0.0754141410705864`"}], ",", 
      RowBox[{"-", "0.02492730161271568`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[309]=",
 CellID->778663946]
}, Closed]],

Cell["We can now extract and plot the sequence of figures:", "MathCaption",
 CellID->1111199700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureTimeSet", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
    RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[310]:=",
 CellID->1553382050],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
UVERGSV+nJkwLj09XRulo1g2LKWNpeS5w0BtLBtakQmkQRqZk58IA+c7lhGF
rmHJbCwlz50HamPZIDIZZ6ZZhy8hYiCVSquqqsrLywsYFBYWIprT1rzAFHoB
9W0sJQ/FNFAby4ZSJq2trXFxcd7e3r6+vlwuVygUJk8hKysrJyeHehcGhXnZ
WEoeCjaojWWD7YqIxeKioqLMzMy0tDTSiJHP50Mjubm5ZHI3bCGDTmBPJEpK
SrBFIpHMNSkGhf5ivn4sJQ+FEtTGsrF3796zZ89OMJ8eENaRboZIxMbGwjNJ
T0/n8XiJiYlkwJ/4+PiMjAy4JZBPSkoKlEL6TTc0NCz3dVBoGZAJuKF6H0oe
ilmhDnkMB88999yrr75qxODAgQP79+83NjY2moIyjcTBgwenbVHudujQISOK
Owu7du0CNyh5KDSAOuShoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
oKCgoKCgoKCgoKCgoKCgoKCgoKCgoNBfPProo19//fW3FBS34tlnn33yyScp
eSg0gDrkMRzs3r1boVAsdykodA5HjhzZt2+f6n0oeShmhTrkMRzgoUNlQjET
RkZG36oxWiAlD8VMqEMewwGVCcWsoDaWQmNQG8sGlQnFrKA2lkJjUBvLBpUJ
xaygNpZCY1AbywaVCcWsoDaWQmNQG8vGTJm0t7fHx8cnJiYmMEicAkmzt8yF
aQfOPFz5723zTJhCWloanS10KaGZjaXkoZigNvZWzJQJmaazvLy8pqamsbGx
qqpKzqCaAbZUVFTg39LS0srKShmDsrIy7FDBAOm6ujqyG3YgG5FJbW0tWeMn
8iH/YjfsTzaWlJSQ6eqQORLYGeuGhoZGBn5+fj09PctTRwYJzWwsJQ/FBLWx
t2KmTEQiETiflZWFxPDwsFQqjY6OhjMA9oLMY2Nj8ApiGBQVFcXFxZGZ5jIy
MvIZgM8tLS0DAwOpqanYSGb8FAgEKSkp+Nna2kpmo8NG6Gt0dBQ5Q5V8Bsgq
IiICa2SOAmAHnI6UisvlUpksJTSzsZQ8FBPUxt6KWWUCfkICWA8NDcElANWz
GYC6fX198BZyc3PBfHgR2Dk9PZ04LfAocBR2gxYgE/wlFouLi4uhHWyHuKAI
bMEOyBn/wtNA/mQHIgoRg5ycHKKvzs7OkSlAqlQmSwmNbSwlDwW1sWzMlAko
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
2sRwUXiUPCpSFhlaFhojj4mVxdY31YN1oCX41vcIIBX+xa/Ivzlpae67d7vu
2PHjF1+c/fLLc1u3euzde2XnTolQiOL1TgFcQl5ezu7dkZs20d5802/Jksur
Vwe991742rUx584ltrV1oGzIhj1OQZw7JMYGUmo0KpWqoKBAZIJYLEYlAH9W
IpGUl5fDP8VeKpXiurCH94qf4G5Mb95UVFTYf9fwYpFn1649zc0t3d09IA/+
Ra1rQ/KkpeV8883NbduufPrpuc8/P//FFy67dnl/9ZUbnueTyJO9fTuYk/L6
66EvvOCxbFnkihX0ZctYP/yQbDR2UuRxWiy8TNA+R0Vl7NlzMSiIHRGR6e0d
f/NmTEgITyod8/jQWBcWFtZr6lNKUmIbYl3oLgHCAE++p0uSS0BJAE1DK5WU
gpZgEfgGIiFdV1dH9maw4uO99+y5tH37nnXr9q5bd3zLFr99+9y/+UbA5UKP
dVMgMDDw2rUrX30VvmEDe9Wqu0uWXHjttbPvvBO8Zg3zxIlYpbIWSkQ2o9EI
lw0eKLw2yBMXngtjV6lEkaCU5ORkNptNo9EYDAbuQ1JSEvSCT2BuYV9aWsrj
8ZBG/ullAk1BenYuk0UhT0IC59ChH8PDExMSUu7cCff1DYmLY8vllbYiT3w8
e9euW9u2XV2z5tu1a799//2Te/f679jhweUKpiePm5vrxx+jjhW88UbsCy9c
f+EF1yVLYv/+98xDhxgUeZwZCy8Tjabhk0+C1q3zWbbsLLbly08jvWZNoJdX
XHW1sra2FmTDQSQqCbOSeTf9bmBaoH+qvy/LN0QQkixPbml9OG0HTTzadNIL
MA7lEkmcj0+sj0+Qm1vA1avhHh40X98oLy/ttJNfiBkTEJDp6ppx8SL7/PnE
M2eiXFxYLi7c+Pi8oaHJWY2fwD6BaUQ6IyAlWCAQDp/PLyoqSk1NFQgEHA4n
3wTyMhCFf6JMyJs3O3f3Fp48dXX133139auvzm7evHfTpn2bN3+3ffvZHTtc
UNniltqEPGJxubc3DWy8di3Y1TXQwyPSxyfRyyumvl47PXn6+3v9/LLPns05
cybj1KnkEydoZ85wT53iR0cXUeRxZiy8TOrrG3ftivjww1tr1pzbuPH62rXn
P/rozqefhnt5xVZVKUhQUMI9mCXtXe2NzY1SmbSyqlIml6k1anxlJk9zc7PB
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
zLRreGJOuJ8wZiAEHCcvLw/+I54Rn8/Hh/BVCwoKpFJpTk6OUCgsLS3FfRt3
BAeqY60hD27nxo0Rb78d/be/XXrtNfeXXnJZseLu8uXRPj4sijyLQh7ngZ3I
xBI4Tm3NJJ6OwWD08Um+fj35woXQS5ciLlwIcXOjX7vGyMwUGo1GyATPGgSA
I9ba2krmj/cP9D+4/+D+8P2ftpGx/YPxazHjXCOjD2dqjTxKP5aH/HDcoZAF
TTzOaBr3/uDRER7bALiGZDEmYt2YNnPipxPhIDAVyOOorq5Wqy0ndU5y5J/K
dv++VqvVmNDY+DDYHWoYNzc3pVKJOwNR1NTU5JlAlufLz88vKipKSkri8XiZ
mZnQjuPWsZaYhjzXr6dfvJhx+nT0mTPxP/4Y5eLCuXAhPSOjzBbkmbjNgjwP
JhJjHHmmOdE05JmOOotHHueBHcoE2SZdFQ7H1GpbGhqaLbf6+uaurh5yClAl
NTW1yQTwLT4+ns1iyzQyhV5R2VpZ0VxR3lw+tjWV1+pqyfBInAseT0qKIimp
MilJTqdXMhhKpBMTK8rLtfdNahobF9TdUa4rV7Qo8HMcDRuOJtPJWttb0daj
KYc8VarGpKQKOh2HqkhKUpg2HFPW2tohk8lzc3OHhgYVitrMzBJsPF4xSWDL
zhYSiwvlJ8s24YzmpUXHos4aO9hsKYslZ7PlLJbMtMmZTIlW20q4jTsDiwKE
x89hXZBB+NBveHg4CWACRZDe7eLiYmSAWKAUMpQIGpk0op2D1rHTkkdfX99i
udXVtcydPBkZMjYbT0TM4cg4HDn2yckShaJ+RuRRqxtMrBgjhmmPTZiRUdja
2oYnSMgjl2tSUsSpqWLTXpqaKklJkWRmSgYGxvqnpiJPh9EoMf1GityPNjGb
rdfpFpc8zgM7lAk5oKWjZyXKy8sPHz6MywFDQJVTp07h35u0m4HFgaHy0KDS
IG++9820m36Ffv4Mf7VmbNWkS5cuRUXFbNrEWbEi56WXfF955R625csz33iD
7+aWplLVoSRnz5ylc+jsVnZWb1ZgSWCoLDRQGMjUM9kdbH4ZH24Ul8s9eHCf
t3fiK6/cfuklv5de8nr5Zb8lS2Jefz3m1VdvZWYWK5VVt27dcnO75uUV+t13
vnv3em/ZcuzTT09v3355/37/gwc95fIKsjwK2AuBIE06o5E+e/ZseHji5s2J
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
Ns5ieqPlSPL7ppiWoKs5aJtN0NMDt663q6vXtO8haZC2pKQE7TuZiw3HEwz8
+KOP/eL8EzuSL3Ku3hB4XuFe98j1jmlOiNPRtfrp1rIn82LIO8ax9T17enEa
YYmwML/A2Grs6+7r75tknBhqFStlgttCRq0DCoXCyumWT8TC1LHxCXmfbQ/8
6HP3HXvv7Pz27le7727e4r7/cKihdayD287J09XV39mJrc9iQ9U7OXn8424n
tdJdWZc9+Dfd0q56ZnvQdHEJDTTryTM8NNTb3dfd1SMsFhbkF46RpwvkmaTL
zCHI4zyYu0wEMkFiQ0KIJDS45G64LDxMHhFXExcnizO0GUgGMtxlFjKpqakZ
VzaQjYzMIe/5QQkbdoZaoru7u7CwEAVAsVUqFfbwqvLC72atX8Je+TfO2y+n
vPkya8WL2euWpGxa2VhbM41M4LgxmUzorqmxKb8iP02TllyVzKxixpbGpqpT
0+vSWVJWV3fXuF+hYoH1ZU2FYJ5uSUIuz/XKH2Fh6liQJ6E+EeQJLL4bJosI
l0XE1sTFSp9C8iQw2QfOu+866rL72CVs3xy+cPDczUPnrqo1070reIrJ4zyY
u0xylDkpfSn3yu955Xh68D3cuddpTTRmE7O1vdWcZ6ZdwwSTBrQHGbq6uqAU
g2FsLQ82mw1TYS7ltywkDtXS0lJbW4tmHacg07FJjBqct8LXr/5//DzpZz/j
/vznyT//OftnP5P9/OdVv/ylMC0N+WumAGTC4/G8vb0P7DtAy6dlDWQFi4M9
BZ4XEi9wujiCYQGjjtHWPj54kXnZO5tc2iywMHUsIU/IQ/LcdOc9teRJSORt
3+65bt3BjRtPbHjv8Hsbjnz62ZWvd9zk83OdkzzOAxuYIiJBcE7wzaSbHnQP
ryQv7JEOzwlv72w3t4x43LOQSXOzrn2MP+ObY/AZbiCMEDKhe47eHw4FMUIU
oLRarYb6SAQMEojDMqc0MFDyzDNRv/xl4i9/FfvLXwb/27/l/urXxX/4g7ai
whSmfnLgJkBrY6LWNaZL0hk6xp3iOx5pHu5s93hNPOqTOElcW8d4mchksjmG
AJ0jFsiOnU/ydHQY7Yc8DAZvxw63jRsPvf/+kfffP/Tee99++eWFXbvcq6tV
zkke58FcZDK2qtHI/WxpdpQ8KrgwOFQYGlsRGymNDBeHx5bFurm7Xb58Gdyr
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
ZVB9gwXw84YJwIe4WNgYT7znDjEdkiKPGRR5LEHVsZawyZTzamW1eUmmvt4+
bvr4JZksZTJqGiOdn58HEo6aBqVDNRkZGWSYulkm8Ba17VppjfTIqSMKtUJr
1OqMOm2rFi0+yAZaWh4f2rH0GVv1eolQKC4pwUYSY/viYnh201zF4BgGhMJq
BqNo5cqPz569lZWlyMlRCgRKhaIOGp30V2TYD8wnjUaDSyBuKawvpJHo6urq
6enBhzBykCZfQVDmtaimAq7R/sN6PJXk0etbi4ulRUXSR3tJcbGsqEjS2dk1
zVVYkKcQ5Dl3bow8ubkUeSgsUOgkS5lgX1patnv3nqYmPUhkcuhK1WoNUQ1k
UllZCZMgR5qTWJsYLgqPkkdFyiJDy0Jj5DGxstj6pnqwDrQE3/oeAaTCv/gV
+VeQkXHpwIHze/ce++qrk19//cPOndcOHjy/b5+ktBTF650CuIS8vJxduyI3
bEh4883br79++d13g9ati1i9Ou7cucS2tg6UDdmwxymIc4fE2EBKjUalUhUU
FIhMEIvF+fn58GclEkl5eTn8U+ylUimuC3t4r/gJ7sb05k1FRYX9dw0vCnmE
wtJduwh5ejUakKdMpbIlebjcnD173L7++vIXX/y4deuZrVvP7d1785tvXPE8
n0ie3bsjN22ivfmm35Ill1evDnrvvfC1a2Mo8jg5Fl4maJ+jo9O/++78vXvJ
0dEZPj6xnp6RYWFcmWzM40NjXVhYWK+pTylJiW2IdaG7BAgDPPmeLkkuASUB
NA2tVFIKWoJF4BuIhDRqabI3g0mjXTt8+Ow333y1efPOzZu//+KLm0eOXNq/
X8DjwQqqmwKBgYHXrl3Zvj18wwbO22/fW7LE5dVXz61adXfNmuQTJ+KUyloo
EdmMRiNcNnig8NogT1x4LuwVpRJFglKSk5PZbDaNRmMwGLgPSUlJ0As+gbmF
fWlpKY/HQxr5p5cJNAXp2blMFoU8kZG8PXsuBgVxIiIyvb3jb96MCQnJlEpt
Rp74eNa333pv337xvfd2r1+/96OPju3ff2vXLjcuV/BE8nz1FcjDBmeWLLnw
2mtn33kneM0a5okTsRR5nBkLLxONpmHrVr/Nm2++9dbxt98+uWrVSaQ3bfLx
9QUVlbW1tSAbDiJRSZiVzLvpdwPTAv1T/X1ZviGCkGR5ckvrw2k7aOLRppNe
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
W7Hi2pdfXl6z5u6PP0b//HNQXZ3qbeSh0VKzstjnz9ufOWO7c+fRPXtO7N9/
/vTp2ydP3k5Pz+54r+QxH8yXTPCY5lEmaGFNGNCC9hccIBKDE4cmGL6YtE5a
UlUikAjKasuEtcLSmtIKVUWVsgolfK6LA//06QCHA89Lmp5ezmSWMhjFOncM
bbf62bNx7IY9unu7ZU2yqraqivqKUnlpUWVRZWulrFmm7daSePg4Y0NDa2Ym
/lvEYhVim5FRmpFRwmIJSJh6lAT3WS6v43BKOZzizEw+UlZWPj7y+WX4aVJ3
M2wG3DHYVBNn7+gQZ2bCMyxJSytNSytnMCbKx2RqmyYWqSElJL29yOu7s1Ek
WDLJycl6d08ikcDRg15ge0BHMEJadMB9g4OMj4az5hezjl3O5HlaWFiclwfv
O4/D4bHZXPK6oK5uYjFc48mDm8/nclGbcXNzOXDAuVwkfO7VvYnVkWdQJlNm
ZopYLBGDUZSWJgBXMzLEubniwcHhGcjT2dlF3hLk5HDZbD6Hk8florSC1ta2
90se88FsZQLu6SWAh4injydFghLrB3vMXSZogjs7O43pGEU7SyK54UGjGCDD
JBtmdGx0UhoZHZlUvOHhEV0afZ0mPqKCNSw//oVkeBAkXBE0QrTW2wtB9MKg
eJ26SQaEJDtgz7GxZ6/P9XuaduoiCcVP7gB4PzI0NKIvGUm6annmm8NisTw9
PXHqvLw82CHwB6Fi2C05OTm4abm5ucigYiG/4nt4hfpjLkQd+0GSZ9IopmEd
DPcxkjw6/vR0v5mMIM80b0UMyUOq6Cl/HH7v5DEfzEom2BNywM3ETS4sRGvI
JTcZ95/P55O4FvMiE2ik5XWHzsxASYqKinBGsgiIQqGYrxmRxgDVKOmNBUh3
iT5PJlTqvwGwp5Haf6lbX9Wwa9gE4BHA3cNDQU0CQ7GqqgouOem8wMOqrq6G
WYLveTyefmC84Wyjea9jKfJMgpmTx3wwK5ngzsMRA+Fx8+FBgJm4yaIKEZvN
zsrM0momAhcPDQ7BoZijTGDwGBmJCIYHuAeHBa4KLIG3hcFfCOBywHz4ZaAf
icIBBiKPkjQ1NaEkkEatDsigVLjP+hVP3gkwHEoxeRj5S91gHthFuIeQKo1G
gyiIKQKNwALJ1wGPD3XdtASY9zqWIo8hKPKYD2br7pGJHnofB2jTtPEL+Sw2
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
zhyHkeNZ44mXlpaCmQsXNrm/r8811u9agINDguftMBdXhr9drJtt9IPorCTS
0QBjAPUAqgVScgZDcOzYk8OHHx06FHD4sP+xY5GnTiWcPRve0NBmJJ8Fgoqo
qMwnT7KiorLIFikhIXtoaLLQjA9lDy3jbsMIgfViQiyUt2GB5iBMJQ+TSWcw
6NXVy5c8Hr+TJ+at5MnJ4djb37e2tr1xw/b6dTs7OydHRzcHBxfjF976wMhj
Ppitu4eHQoaRkw5iXeyIuuhoWlhYPIdTmpdXxuWWPHoUIRCUDQ+/8UpztuvX
4+D4S0dHBxrl+VrMbhL6+/tOn/fa8bPr7l/c9h7w2nvQc/tP9y32uHo/Shp4
OoSTok5AbaC3iGJjeFu3PP7is2urv7Jd+eWNNavubFrvtcMiuL7eqFlFQHg4
49Ahj127bHbssD540HXnzpu//uphaekrkVTiXI0G4PP5UCiqo8Z3gU6n29vb
5+TkCAQCE2L6vQ0L8a5gKnmqq+ujoughIQlstpDPr+BwhD4+EaiZlgt5du5z
2XPg4U8HvX465LHjZyeLva4+byEPrHXLc9Y7t+/b//Ove3Ye/OXnIyeOW166
cMv4gawfGHnMB3PvtkhMzDl50vP48YdHjzqdPPnw5Em3w4fvW1l5abWdL3W+
W0tLCxrK2coEekTbiudOgvxotdq5zA2cFjjyvn0PPvvswsoVV1autF6zxn7t
mjsrV95xdk6AtzgxaHJ0lEzMhFlSVFgUT2Odvv3oqLXjsevOR6/fRzp5y/O3
294qtbF9uAEBKdu322/YcOabb85v2XLh66+Pbtt259gxt/p6FW5RnwHkcjku
n/Q1zwz4xTQaraysTCaTzXE5UUMsTp9XXFzur78+OnjQ58AB98OHvQ4f9t23
z+PcuQCNZlmQx/WLL6xWrrj81VfX1q69s3at3Vcr7Vxc4qclDy2dZuvlcNHp
2hXn65ecrS87W990s73tdkfd0GCe5DEfzF0moaGMXbsct269snbNic2bL37/
3bUffri5f9+dtjbNS92LdDIxRB9byUgYjiSHO0NCJM2jO/NSN1YzKIju7Bx9
/37U/ftP7t+PdHGJdXKKZbEKNBotGEgKjDLAJDhx7IRzkHNaB8Mn3ydQGOhT
4BujjGX1ZSY3JTdpjK1ja2vVPN6Eqf/kCS0iIikri8/jCYuKRFN7oo3vGu7q
6srLy0tNTcVN5nK586WUxaljg4Mzvv/OfcP6WytX/rZ2zfVNG22+2XRn9677
y4s8zs6vyOPs/Fby3Ad5uhjeBT6BZUE+Ah15+lkT5NGaKXnMB3OXCSM9x+rK
3VOWN67ccrK2cbl6y/nYGWs7Bw8ykfnVrMnWVhOmNxqOJH+ui2kJuuqDts0L
nj4d6u8fnJRA2tLSUrTv5BLgeIKBe/fsfRTvn9pFu8d0dOO6O2e6uPM94lsT
EpuSmrUzvVIj82LIO8aJ9T0HBgeePhWWCgsLCrs6u4aeDg0PTTNODLWKkTLB
bSGj1oHq6mojp1u+E4tTx9IZ7N8u3j9+9vYla5crNx5etH7w64kbt+28uz44
8vjHP6J1pTgy7rlz3Vwz73vw3RNb45KaEs2WPOaDucuEJ50I8x4mDn9cGhIh
jYyURcXXx8dJ4zq6O8gOZLiLCTKpq6ubVDaQjYzMIb2xoMQ8doYa4unTp0VF
RSgAiq1UKrGFV5WRGu975djDswcf/nbQ7exB19O/PLp63OPqySb1TONk4LjR
6XTorq21TVAlyFRnptWk0WvocWVxGaqMrIYshoTR/7R/0r9QscD6MqZC0E+3
JCGX53rlr7E4dSzIkwTySMKDS0MjpVE68iR8kOSJT804dtn34Fm3A2fdsN1/
+sGxK/4nrnjO/KLpAyaP+WDuMslT5LGGWKGVoZ55Hu5c9wc5roltifQ2emdP
p36f2XYNE0wb0B5k6O/vh1I6OiYWgmEymTAV5lJ+w0LiUBqNpr6+Hs06TkGm
Y5MYNTgvPy4u1MLi5po1DhvW265bh+T73ffBu3cXcDjYv+4tgEzYbLaXl9f5
384nChI5I5xgUbAHz+NO8p30/nTeMx6tgdbdMzl4kX7Zu3m5NBOwOHUsIU/Y
K/K4fcDkiYvjb7MIXf31rXUb7q5da7tmre133/nt2hXM4RSYJ3nMB/NgilTw
gvOC3VLd3FPcPVM9sUU+Mi+yp69H3zLicZsgk7a2lp4J/kxujsFn+E0wQsiE
7jl6fzgUxAhRgNIqlQrqIxEwSCCON640MdFv9+7rmzbZbtlye/Pmi+vXu1lY
PNq/X6ULOjf2FuAmQGsTom5pzRJn0VpogSWB7pnuD5gPEtQJqE/ixfHdvZNl
IpVK5xgCdI5YJDt2AcnTpqtjlwp5EhN5u3f5b9p0/dvNtt98c3vdukvbtrnt
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
m7m5nJnJ4+LiuG9f3MaNnK+/jv73f7//ySd3kVmzJufixWSKPOaMxZeJWt14
+LDvjh0PN2y4snGj9aZN15DfscMLlS3IU19fD7LhIGKlmC6nh2SFBGUG+Wf4
+zJ8w3hhabI0TeeraTto4tGmk16ASSgrkzs6Zjg6smxsYm/fjrK3pzk5Zd+7
l6ZStc7gQBEzJigoBzvfvZt2506Sjc0TZBwcMhIS8sfGpmc1/gL7BKYR6YyA
lGCBQDhcLre4uDgjI4PH46Wnpwt0IC8DUfh3yoS8eVvi7t7ik0elat64kf7Z
Z/F//avH//pfnh995PHZZwkff8xwdaXX1iqUynkgj0QiDQkJDw4O9fT09vDw
8vcPDA0NDwwMmXnmFO4DLFM/P/6dOzwbm+ybN+nW1gk2Nlm3b3NiYooo8pgz
Fl8mjY3Nv/0Wsn+/+7Zt13fvdtq27eYvv3gdOhTs4/OkpkZOgoIS7sEs6env
aW1vlUgl8hq5VCZVqVX4SU+e9vb2jo6Oqe318+fjo6PDo6MjY2OjSDpMfDSG
dbr9Df87go/jMy5yigLAROns7IQfisuHTQJrCjcEes/XAXqB4YQMTBfsQ0KX
zFwY3K6lb4osPnkaGtp27mStXRu3YoXH11+HfPml1/r1yevWZbm6Jsvl1fNE
nueEMaTKJS9a9UMXZgYhz9jYK/IgQ5GHwvtw93oTEjhPnmRHRWU+eZIVFZWl
2+ZUVk7E4gDz0YiTLgDy/gr/hXGLA5KR5DA/8NPIyAgJnQfikQ4L8vF9td0o
D8qm9xzhVJKO4EmAgUEmH72zrxlaW/pLiy4+eXp6esPDiwMCBAEB+frto0dF
YrFqeHiEIg/BsiCP+WDxZWLM0eA0ke4AMlUHzpQ+OB4ZiwjKEbHAbiBOH3bD
/l1dXUt5IrnxgNZwjUvc3aPIszSxLMhjPliCMiFrOr/UjYeBZwTCVOowMDCg
d9lgfkAsaP1xOghkYrR5SWlGRgaKsTSnkM8W8PX000KNATHD5vHal2kdS5Hn
5TIhj/lgCcqktraWBPDUA35fWVkZREFC1cFQITvge2WDsk5Zl83OvnD5grRS
2tre2t3X3T/QP8creifGn79s7R1o6Xva8rS/pb+/5WnfRL736eDoNNcIgZPx
ih0d3XV1zXV1rXV1LfqkUrVO9f6qq6uNd/eIRwwPkSwyMtuJ+dNimdaxy4I8
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
Gut+5MiR0NBQMuoSJgf+jlbC3d0dX3Z0dOBSSKXSwsJCSEahUOTm5uKkYLGQ
JaKIDTO8UZqlbezN6SVPaEiI64EDbnv2fPnRR1+tXXto3boLu3Zd+OKLEA8P
nVZrJXl22tkFe3gcXLnyqxUr9i1fjozj2rWOa9Z89f77ovT0YrUa5Dl37oyz
c+CmTR6ffXZ1xYpDK1d+s2aN05Yt3jt2XFQqC0chT0hIxM6drl98cWntWvuP
Pjr4ySeHt2932bLlQmwsG0e/g+SxHcxMmcD7GEd4Ctx0b29vkAGOUlVVFYvF
SuelO0c6Hws9dsD7wNmEs45MR/soe/dMd7cwtzpDHZzEuLi49HTRCy+k/ulP
uY884v/II9d///uLjz6a8cgjmQ4OPDiOoBMjhsHP4kdXRCc2JUJoDrEO2GF0
bXRUdVSGLMPYaIRrxmIx3dwy/uu/GHPnxsydG0pts+bOFdx3XxifrzQaG0Fg
Ljd5xw7xT35inDu3Zu7c6Llzw+bO5c2da3z4YWVxcTkMBtgDqBK2yKM8ZGI6
emwsPz6e8dJLMQsXnvn7388/9tjlJ56IXrgw+plnMiIjG+rrcabw2mAOwcxA
HtetlQIsE1wKMkGSy+VCy8nJyUwmE5cFxYiRQ/plRhx7P3vb2OkkD6y7s7t3
n92+3W7Vqu3Ll296913HLVtOfvZZmKcnLruV5MF+YoODv3jzze1Llmx5/fXP
lyw5tGLFgeXLt7/5pjgri5AhNTXFzS1kzRq3NWucX3vti1df3fbOO1+tW3dp
yxbn0lLNrcgTG8tITk7bsuXMxo2n3nnn82XLdqxcuX/DBsf16x3j41Pr6xvu
IHlsB5MlE9ymSZQJnrDjGNCC5y84QCQGJw6PYPhiilJFjipHJBflleSJS8S5
xbkSrUSlUaGGA1QceHiLCQnqmJjS6GhVVJQiKkoWHV0SGVmiVFb29fWjGEo0
Njcq9UpVjUpSJsktys0qyCqoLlBWKg2NBhIPH0csLW0ICSkJDFQHBhYFBiKj
QQoNVTU0tFJvJLo6OzvE4pqgoJqAgKqAgKKAAFVAQGlAQHVMTHlHR/eQ7mbY
DLhisKlMR6+vL0hIKIiLy4McYmOlTCbySiazXq/H0UkNSW8v8ububFQJlkx0
dLTZ3ZPL5XD0oBfYHtARjJAqCrhucJDx0XLW/HS2sbOZPG3ijIwcPl+UliZI
SRGw2dlcbhaXqykp6aNgJXmqKipEKSkZbLYwORnbTDjzKSlCNru5sXGQPJ0q
VVlaGhpbcVKSMDFRgIIcTh6fn4+fRiFPQ4ORx8vlcrPZbNROmJoqQp7Dyaqs
rLmz5LEdjFUm4J5ZAriJuPu4UyQosXmwx8RlgkdwQ0ODNR2jeM6SSG640agG
yDDEhunp7RmSunu6h1Svq6uns9OceqktynznAaEm+BeS5U6QcEbQCNEarkxj
Y7PRSFKTObW2kt/bULK3t8/iKCT14OjDz4uE4idXALzvRoVI0a6ubiTq422v
Z2JioqurKw4tEECSyfAHYZPAbklNTcVFS0tLQwYNC/kV38MrNO9zKtrYu5I8
3eSOmAcydZlgWcYa8jQ3NzchwQoliTJMG6n1cSzJYz6U5TGHn5cleUgTPeyP
XXecPLaDMckEJSEHXExc5MzMTB6PRy4yrn96ejqJazEpMoFG8Ii0RiaoSVZW
Fo5IFgFRq9WTNSPSGkAKpDcWgE6pOZTIVCNDjT03daBUDwIlrdT+TWp9Vcuu
4XEAtwDuHm4KWhIYiiqVCi456bzAzSosLIRZgu/5fL55YLzlbKNJb2Np8gzB
EPKYqUIRqdbym7uSPLaDMckEVx6OGAiPiw8PAszERZZKpBwOh53MNtSZAhd3
dnTCoZigTGDwWBmJCIYHuAeHBa4KjIFbhcGfCuB0wHz4ZaAficIBBiKPmuj1
etQE0iihgAxqhetsXvHktgDDoZRxDyO/SQ3mgV10w7QYbk1sbCxEQUwRaAQW
iJACbh/auhEJMOltLE0eS9DksR2M1d0jEz3MPg5QU1eTnpmeyEnUVGoqDZUl
5SWRcZHaSu0Qd2mITOD4qFTVMlmtTFaHJJdjWyOV4iGOO2uyeayfqPKtQ01t
yTJ21p/ORGAaillWBvsHhhBcJ/AtJydHJBKRzuKIiIiEhAT4UDExMWFhYWSc
NphvZZc3WomJRJnDBYQ6yC2AjREdHQ2NwPCAW4ctKgmbhIQoEYvFMKiG72Eq
3hVMInlKSiqKisqLiioGU7lKpaurM1l6NHlmBXlsB+PothgccH0Dl7e6qlpU
JPLP82doGAn6hEhVZLgy3FvkHSGJMDYbzSVB+KKiIvDK/I3R2Pjuu/Jnnsl7
5hkBldKefVb5+OO6K1dUPT2mzsrxPYhBAHigkxWkbnSQwM5wkYwUyFwYPOi5
FEJDQ6EdcLKyshLnThw969evhwDHHTrpJiUNc6hq3Cbol3Q0w/yATUJ6imGQ
IANrZMT4IVPU5zVJ5DHu3x+1YYPfunWe69Z5rF17edOm0E8/jQoPF/b29tPk
mRXksR2MQyZkCWMAz9nDhw+H88JPs09fzrnswHI4wTxxPu38idgTZ+POShQS
EvUdQAZPahKenSAvT/bww8p77hH+4AehP/hBxA9+EPbjH2vnzGk8fFje3T1A
ntrWT2xE+X4K8GvOnTvX3tHRR300FyBv/kfSHQyD7mHJquNi/5ZBR3FZcI7E
n8rKyoJgQUVigaAMaSJwUlZKGO7euCPzwz6EbM2njyPCKTaP/CRuIGRLBvxg
O+JLyClqYyeFPPn50pUr/RYudHriiYNPPvn1E098/dprfi+9FOruzu7p6RsH
eQYGepHi4hjnz5/t6Gjr7zd9NE+huhV5BgZwW3uHpBs3rLplNHlsB+OQCa4q
WesNLkmBooAv5V9Lvuae4O4S7nKdff1q4lXHQEfvZO9aQy3ujnlhOLlcjqe2
+WN1de2aNXlLlgiXLOEsWZLyyivJixZlvvqqysenoLfXxA0y+MTKKpWWlAT6
+wf6+Lg6O9sfPern5RXk5+fn46MfXHEDNcEjGK6NmTyU39p17Fjh1q3aLVvK
t2zBVkeliuDgElKH26Kuro40BXiag9VktDZqDjmQj7Ao9Ho9fiUv2ayPOjLu
UPZQFg408b6bKWpjJ4s8hw9HfvGF77ZtHtu2Xdu8+cqnn3rv3BkRHS0io0HG
RJ7CwvIzZzinTqXt3Ru+aZOHg0PK6dNcR0e2RlM9OnmuXUs9dy7FyYlz7hzb
yQn51NOnUxMSci1HpIwCGyeP7WAiQxzJTWztaBXLxLwMXkVtRV1Tna5KFxMX
U11fbWlIkKew5YMVv5aWthQWktSsUjWKRCUCQVFtbROhRmlpqfX3Oic7+9jB
g1s//XTzhg12n3++c8uWzzdv/ve+ffBoyPJJYB0shMTEREI/CNzR0dHf3+9v
f+M/8EDe/ffL779fef/9gvvv591/v9TOjtvVZZXBQJ7yzRSaKJBnvSWaBoFW
wnrjSqvVjk8mZCDQRPqUCaZ6fOwEyVNR0aDV1iFpNHVlZbVisSo7W24wNJLd
jok8PJ5iyRLGokUuzz/v9OKL11544fI//3nx1Vcj4uOFaAJHIc/q1Zdeftn1
tdfcX3/98ksvnXtp8el//tPZ0TGEzIy+LWycPLaDSRlGri5W54m/HUYO2oxv
+E1fX09zcyOe2KTfAXy2XPxudGRnZh7at2/Lhg0b167d9umnn23YsOGTT/bv
2iUSCkmXMYAMidVJPsIXy8nJ/svfE+67P/k/fhKH9OP/jPqP+8L+476YHTsZ
VraxBEPD1d0C1u/w5niXC4F9hWfKpLxRnLY5CJNCnt5ekKepomI85OHx5G+8
EfT8887PPuu4aJHzc8+dffpph5df9udw8kYnz4cfnl/04vFFL3yz8IVjzzz/
9TPPH3jy6UP29p7d3WOYyWuz5LEdjGMYudkLMz9Yi4qKFArFxIeRY4eUJ1hd
W1sLmZDRI9bUCm5UdlZWplCYIRSKqDF8SFnUYkkDA+aoSN8BX+JA2L+9d8hB
n/ADXsH7vYK+iWD8OyD8gG+wf3xC77R0fIyCIaGTrASxfCalAlM0B2EGkqeu
zpiaWsBmy5KTpWy2FNvkZAmbrayvbxyJO9+R51yYh2O058nIqycirjgn+59l
eB6PuhKWyqDJQ7exlhjHMHKJRKLRaMgAORKNJy4ujsViIYMHKJyaCQ4j7+7u
bmxsJO+jrPwLmTIzHKPTDIr2zfI+neDgJfe4ln+F1cL0kF29nHcpOjvaYKiD
ZtEgoCbmztyamjqpFKdfKJWqJBKkApI6Osb0/qp/WBqhkuMYfmMaClVTM1kR
UKdoDsLMJI9p2lV372DqIen25Mn0PRV/ylPmeTXvalxz/HWJh3uuO8hTZzAM
Jw9afoVMVoAklyMpZTKFVIpvpmLWw6wgj+1gHMPI1Wo17AS5XC4WiyENuVya
kBDLYsXAHqmq0vb3d/J4E52qg3uNO56bmwtmTl3Y5NaWlhO+Xp+fdzno7b3b
/dKxsMB9Hh57rl31S2BUVlbp9XoYA2gH0CyQmiclCfbvd9+58+yuXU7Y7tt3
6eBBj4MHL1VUWDWr6KZpfqLO3l535EjFkSPlR47oqW25k1NxR8fQMTnWh7KH
lnG1YYTAehlHLJRbYYrmIAwjj4zFYsbHxxYWKnG9+/q6uNyJzkGYHvLAJneJ
cjvsc+xMtJN98EkXttupqDMnIxzDOeGkl2oIeXgpKeePHbPft+/EgQPH9+8/
d+SIq739+W++sX7hLZFI6u+f4ueXiq2/P8ffHxlOeDinq2voLZgV5LEdjNXd
w00hw8hJBzHui1xe4e4uOH+eExlZFhNTHhWlOXEiLjFR09n5vbdSY12/HjvH
X+rr6/FQnqzF7IYAMnl1SfLDf+A+8if+/3s053//lPnIo8m/+d/0Q0cy21q7
cFC0CWgNzBZRVBR73ZozS17f+s5Su7eWfP7u27s/XHVs06fnNJpyK2Vy6JD6
N7+pfOgh0UMPcR56SP3QQ/yHHqpdsKBEIinCsSoskJ6eDoWiOaq4HZhM5vHj
x1NTU0Ui0Thi+t0KU/GuYDh5CgrKPTxSL11KiI8vTEwsiYsrPHs2OjW1qLPz
ew+dmUmeQ0ePb9+974svv7Lb/+9d+77esuvLrbv2evkGdrR3DCdPYizz6NbP
1727YvP7H2xY/t62VR/t2/DpN7vsyq126r28Etasubhihf2yZYdXr76wfPnR
tWvdP//8qkKhnI3ksR1MvNvCyank0Ue1jzyi/uMfxX/8o/L//q/ot79VPvmk
rLraNC0RmqqqqsKDcqwygR7xbMV9J0F+DAbDROYGjoiWlta//pV9zz3B9/wg
6p57Yn70Q+6PfsiZM4e3Y0d2V5dpRCKOTiZmwizJysyKjmPtO+2045tjO+2/
2YH0zbE9jqf2O57RlVvbxu7ZU3jvvcVz5jDnzEmaMydtzpzAOXOKf/vbwpIS
PS5RiwWKiopw+qSveXTAL46Njc3Ly1MqlRNcTtQS09PndeWK9OmnhU89lfbc
c3HPP5/y7LOcxx5LfuutlJoa0+yhmUwe7HnnzoPvvPPx8uXrVq5cv3r1to8/
3rpq1abLl716enqHkycugeHg8vXXDrsPn9rztaMp2TsdPOH07/JyaycLXLkS
+847Di+9ZPfqq3veeOPAokVb3n7bYcMGF41GOxvJYzuYuEwOHiy5996qOXMy
58yJmjMnfc6cnDlzpD/779yKCiO4g7tPJoaYYytZCcuR5HBnSIikSXRnblJj
NR0dM+3s+HZ2XCql2dkJduwQRUQoamvrwUBSYdQBJsGWTVtOe5yJb4i/JLx4
Pe/6JZF7qCY0sSUpWh+jr7N2nIxcXstk6qKiSi9eTHdx4YWHK2JidImJuq6u
ofS2vmvYaDQKBAIGg4GLzOPxJksp09PGnjqV94tfpP/y5xE//enFnz8U8ouf
R/78odi//ZWh1zfMfPIEBYVeuuRx8eL1S5euubldvXzZ093dk8Ph4nDDyXPm
+ul4Y9ylDBN53EWXQrWhia0gT7TeYC15SkrK+fx8DicnICDW3z+azRZyuflZ
WbLhwxhmBXlsBxOXSVCw+N33I99812PVJ6GrPola+VH0K0uub9gUU19vsmO/
nTVZXT2O6Y2WI8kHqJiWoKs5aNukoKWlu7m5u6mJpC6S6ejozc3NxfOdzMWG
4wkGfvjBh1fDr8QaYxxZDs68C+eST7kKnKOqQ6MrIyoNo71SI/NiyDvG3p6+
jrbOttYOcY44U5RlbDB2tHZ2dY7Q64FWxUqZ4LKQUetAYWGhldMtb4vpaWPD
I0UfrvF57yPnDVu8NmzxWbfJ7+33XL6wC6xvMHVwz3DytJveCbQPSabVZ25B
HmZjzCnWSRf++bPs066CC1E1YWMjT29vZ3tne1u7OBfkyQR5OttmMXlsBxOX
CU/Bi6yI8ZX5eeb4BCiC/OVB4aWRofLw+sZ6UoAMdxmHTEpLS4fUDWQjI3NI
bywoMYmdoZZoa2vLyspCBVBtjUaDLbyq0KiUdXaeH3x28cPNlz7c5L7qU7d1
dj4b7K5odaOZInDcmEwmdFdTXSNSiZJ1yXHFTGYxMywvLEmbxC5nx8vjW9ta
h/wLDQvMIWsaBPN0SxJyeaJnPojpaWP5Cn5URRTI45HrDfIEyAPDyyJCFXch
eQIj0lZ+FrL0Y5+lq33eXu3z1ode720M+2CzX5l2tDZ2JPLE3R3ksR1MXCYC
tSCpM8FX5eMqcIGB58Q5F1kbEVfLbGhqMJcZa9cwwYgB7UGG1tZWKKW+vh5c
YrFYMBUmUn/LSmJXdXV1ZWVleKzjEGQ6Ngloj+MGBQvfeD386adPLlx0/rnn
Tj333JmXXvJeujQkLU2E8qW3AGTC4XDc3Nx27dgVKYrkdnO9pF4ufBf7aPuE
1gR+Hz+2PLaxaWjwIvOyd5NyauPA9LSxIE9iZ6JvgQV5aiLjau5C8vj65jz5
FOfRR93+8hfPP/3p8p//fPWxx2IXLUpMTc22TfLYDibBFJHwvQReFxgXnGOc
XRmu2CIfIAhoamkyPxlxu8chE4NB39LSMHz4KPgMvwlGCJnQPUHvD7uCGCEK
UFqr1UJ9JAIGCcRhWTI8TLB0qf/ixfaLFzu+9NKJRYu+fuONK++956NW66gw
9SMDFwFaM4m6qpotY8dWxV7Pue6c7OzEcorQRTBrmOGy8MbmoTJRKBQTDAE6
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
6sBs2FhKHh8BtbHOmKpMoI6KiorKykpoITExMTY2lslkpqamstJZ5WXlg0OD
3d3dnBzOwMDA7JWZYg4wGzaWksdHQG2sM9z4pEaqJy5EfMPnWiwt2SXZ6bx0
iVZSra8W1gqjmFEVqoqOro7ZKTLFXGCWvsdS8vgCqI11hhsyGR4eHrQDQZ+g
XMCv4jNaGUGVQSeEJ85IzsQ3xJ+VnY3Rxaj0KlKRQeGNmCUbS8njC6A21hlu
yKSpqUmlUtXW1mZlZX204qO4zLj09vSDnIO7mbt3p+0OqgjalbYrqSGJV87T
6/Q9PT20aaI3YpZsLCWPL4DaWGdMp/kN4b/OqIsriAvLDGMUMZhlzOSC5ICY
AHYF22K1tHe0q9Vqvf4HscA36es7399/yTIwQHXkcZjttltukQdUGR6zDA5S
d9fjQG2sM9yTiaP5TX9/v8agSSpNiiuM4yg53FpuliwrnBueWZVptppJQ52O
jg6NRlNfXz842FdY2L51a/327Qb7gkTD5s0Nhw412Gy0KtmzMHs21j3yDAz0
iUTao0eLAwNHl2PHigIDSwICSs6eLevqomPYehaojXWGGzKx2WxtbW1Wq1Ui
kQT4B7CKWKxuVnhtuH+h/2nZ6VPiU3GGOIaFUS4pNxgMRqOR9GeUy+UFBdyV
K/nXX6+97TbJnXeK77676vbbxTfeWLdoUV1zc98sXSCFe5glG+s2efj8/J07
45cuTX3++YgXXwx98cWQP/4xbOlSxl/+wmxt7ZzGhVLMPKiNdYYbMoFGGuwQ
iUT+R/xZfFayKTlYGOyX6+ef778vbd+J0hOJ+sQqRVVrayvUhPyQiVQqFYsF
u3eL77xT/cADkocfFi9aJF64sObuu2uffrqupYXaWM/CLNlYt8lTWSkMDMx8
6aW0116LeuONcCzLlye8/HLKihXpFgu1sZ4FamOdMf3ukI3NjYxcRmRaZJ4o
r6CqILso+2T0yfyK/I7OjuHhYcSDZMhl6AWhX2Njf1lZR1lZO9bx8WImU1la
2lZV1TkwQLuoexbmpi/tlMhjNneIxfVisUEsbmAyC3JyRJWV+pqahsFB+qHJ
s0BtrDPckMm5c+fIsJx9fX1wNiprK5PqkqIl0bHVscmq5DhpXHR1dHJtslqv
NjWaNBoN8kxYO2wy1Wu1qq6uNjoGiAdilmzsTJHHaDRoNHU2WzsljweC2lhn
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
+B//Gv3CB1EvYP1+6ssfMtVal3rHj4wKLeOZZ44uXrzx8cc3P/XU9oceWvnM
M/5vv31ao9HhFnU6QalU4vJJXfPkQFyclpZWUVEhk8mmOZ2oM+amzisujv/h
h6fef//k++/7f/jhyQ8+OPnWW0f/+c/TXkGexYsZ////F/zf/x32059G/exn
af/zP6nXXMNcvZrf1zc8njxno4qWvZv37HvRz74b/9x7sc+9G/fcO6wX38tw
nTynTiW/+eb2Zcu+fOGFr156adXSpX97882tn312yEvJ4zuYvkxOBXOWLTv2
9O93PfLw6qee3LHk6T1Llnz/6itHmppaRuwf0knHEMfYSi7CuSU5whkyRNIM
hjMj9raax45l7tjB2LkzcefOJKx37UrdsSONyRS0tJjBQFJglAEuwWeffrY/
5HtmC/to4fEgUUhg8YkYbXxGe3ayntEwbo7py6G2tj4/X5KbK4qIYIaFpWZm
lOblVRUXy8bXRLteNWy1WgsLC1NTU3GTeTzeTCllbmxsyKmcF/54dOnSnY8t
Xrnk6a1Llux4Zum+11876BXkOXCgYO1azrp1WevWZa9dm7luHXfVqvzk5KqW
ltbLkId1tOBYsDAksAjkicu0ZifXp7pOnro6PZ+PULE8Ojo1MjKJwyng80UC
QZWXksd3MH2ZpLHy/rHy4Mdfbl+14dCab/xWbTiy4pMtm7cfs9o7Ml/oNdnY
6Eb3RueW5OfsY1qCro5B22YEXV19nZ29F5cekujrGxAKhXi/k77YCDzBwLff
ejs44WSahfEda68f/8jBnP0BBX5JpoRkY5LRPJlMSL8Y8o1xaHCwp6u3y9Yt
FIhKS8qsFmtvV2/fuO9pI/Zh+V2UCW4LabUOKBQKF7tbXhFzY2NHybPqwCdf
blv9zcE1G4+s/ubI3/7uNeSx2fo7OrD0XVxGf/b1DV6OPEwr4zv2Xn8HeRrj
GMZE18kzOjlsd093V5dIKCorKb1Ingket1eQx3cwfZnwpfxkQ3KYJOyMMDRS
GhUhjUrQJMRLE1rbWkkG0tzFDZmo1eoxZQPZSMscUkkESsxgZagzurq6ysrK
UAAUW6vVYo2oKjkt41/bDv997Z6/r9uL5dM1u1du8/vX1gM6/WSjPCFwYzKZ
0F1TY1OJvCRbn51em86sZcZXxGfpsnLqc1jVLFuXbcxeMCzwvlwxCI7ulqRX
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
NHVmpg7bw4cTs7M13d0/aqDHu349To5DbDYbGmVfLWY3DHBdV77Mve9h/kPz
BQ8+InpogfCBh3l3P5D11XcF7W3duCg4AWzgtohCQuR3zJLc+KsTt94cc/ON
J2+5OXbWrdkPPSiuqGjwUk2OH896/fWoVasOvPjintdeO7Fy5b7XXju1enW0
SqXBtWo8kJeXBw0FHdVcChwOZ8eOHVlZWWKxeAIx/S6Gy/GtYKTw6HSG06c5
ERGJAoE0L0+WkyM9evQUmGk6CE/b628kPvoE4/HfMB9/hvv4bzhLnopZ8Bhz
597s9raukcLjd1j/3//dfN11Kdddl3vddRnXXZd/3XWG//cXFo3G6qXwHDhQ
vHixYP78M488cnLx4tT5808tXpy7alWWQqGdjsIzczD5bovw8JLnn0999tnk
55+P++1vWS+8wH7mmaS//IXd2Dg0AQQ6VVdXh4ZyvGoCfUTbivdOgvxYrdbJ
zA0cFVCTRQt5P/tp1M9/HvPf/534i19k/OIXqT/5Cf+zTwu6u4dGJOLqZGIm
zJKiwqJTccLX30t+9V+hr/0r4rX3wl/9V8Tr78X95f0Eg8nbNUADAtKeffbI
449/+cQT3zz55PZFi9Y/+2zgG2+EGQwmPKJWD5SXl+P2SV/z2IBfnJycXFpa
qlarJ7mcqCeuTJ9XfHz2u+8ef/vto//4h9/q1YGrVwf97W/+n34a0tRkPzfl
hec3v4m7+eaAW28Jue3W0Ntnxc2aFXPDr+K/2Czo7u4fKTzh0eIX3xQ9978J
z73BfP5/Gc8h/TXzxb/yq4xehVYAdu7Mv/dezp13Bt5997F77gm7/fY999zD
eeaZodiG01F4Zg4mryaHDhU+9CDn/vvC77l77733Bt9/38n77ot+8okzFguc
oKEP6WRiiDu2kpfwHEkOd4aESPKhO3PONVZz79789euF69bx163LWr+ej/za
taLEREVjow0SSCqMOsAk+OC9D/ae2Mexco/kHQ2Rhh4tOBZjjEtrzmBWs2pH
rDF9MVRUVOfkKPh86alTnMhIdmpqoUAgLyhQjwy95X3XsMPhEIlEbDYbD1ko
FPpKU64Mx4aHp7/yst8Lz3/91FOfrHj2y9+++M3K327/61/2NjQ0nTs31YXn
0CHhli1pW7Zwt2zhffkld+vWjE2b+ExmWVOTdRThCd3HaeQF5gUdl4QdyYfw
xKc6MhhmtvfCo9FY0tLKeVxVWBg/ODiNzS5NS9Pl5OhHht6aFsIzczB5NWEw
Rf947/j/vbP//Y+Pf/Bp6Hv/PvGnN/et3xRhtw/1UZ6fNVlfP4HpjZ4jyQdd
MS0hru6gbT5Ba2tPS0uP0zm0bWnpdm17Ojv7JBIJ2ncyFxuOJyTwf9/43+MJ
wWw7ezdvj5/Qb1/Gfr88/4T6RIYlyWIdS03IvBjyjbG/r6+zvau9rUNaIi0U
Fznsjq72ru4R39POucLye6kmeCxk1Dqg0+m8nG55SVwZjuVwBZ9s2Pv+x9s2
btm/aeuhDVsOvvvB1m3fHXG4nvwUF562tm6XzJDURTLd3aMLT0jCcU4zay9v
l3/eoQP87wNFfkkNcay6hPEIT39XR2fHeeEpBD12tnf2TFvhmTmYvJoIVcKk
GmakIjJcEhGtPH1KeTqhKiFelWBrtpECZLjLBNSkqqpqWN0gbGRkDukkgkj4
sDPUE+3t7UVFRagAqm00GrGFV5WWzAj46t/fr/vn3vVD6fu1qwO3fnxo68c1
5rHGycBx43A40LuG+gaxVpxhzkipSOFUcOJL49NN6ZnVmVwlt629bdhRIBZY
X94Qgnu6JQm5PNk7v4Arw7G5qtwh4VFGhUtORqtOR6tPJxgS41Xx157wnEkU
vLHm1Ov/CHvNlV5968RfP4j520cRBtNYkwWuYeGZOZi8moj0orSutEjNyQCR
v5/w8EHBAUYDg9PAsTvt7jLj7RomGDWgPYShra0NmmKzDa3lwePxYCpMpv6e
lcSpmpqaDAYDmnVcgkzH7ncB181hMI7/3/9tgkP70ktfrlz55e9+d/hPfzr2
9tsFOTkoX3URQE0EAkFgYOBnn3zGEDNyenLC5eH+uf7bmdtT21Jz+3OTq5Ob
ncODF7mXvfPJrU0AV4ZjhwtP1jUrPKdOFT/xRNoj8w8tXHh8/oKABQsCH3uM
sWJFskBQPDOFZ+bAB6aILDdcFH6YfdiP5RfADsAW+WhRtLPV6W4Z8brHqSYk
1lxtW5t95DhAyDPcQBghZEL3JL0/nArKCKWASJtMJmgfiYBBAnF4lsxhMv3/
/vfPX3r5y1df/eIPf1i7atX3b7zht3q1ydW90ncR4CFA14aUuq4+U5GZXJd8
ouSEX4bfQd7BRHMi+CRBkdDcMlxNVCrVJEOAThJXyI69XMJz1iU8Ns+l1c//
d5WE58wZ8XPPMZY+vv+JJ/yWLj342GM7li+P+t3v4isqqmem8MwcTEZNhlY1
GhjMU+bFqGPCi8KjpFHx2vgzyjPR8uj4svj9B/fv3r0bsldTU4NW1ZuIFmSZ
pPR03datpVu3Fq9fL9ywQbh1a9GXX0q//76wvf1H9YQYWywWkUg0atB7Hq8k
JkYcG1voTqdP5+flKQcGzgteR0cHUTRYEaihw+FQKBSoJ1lqk4R7glnieeYW
p7O6osKk0yEZdboqrdYEDdHr+73oKSDngXlWY62pbao11BrUVeqapppaa62l
yTLSY/VcLuSq4HJz7OUQnrNnB1NTy7/4Qv7FF6Xr1uV/9plo8+bSTZtku3eX
jEt44uM1QUG6Y8fK3SkwUMvnV6LKpMAEhKe5uVWjsajV1Wp1DZJKZVKra3W6
2t7eS3vo16TwzBxMQE3gZKHJhkTFxcWtW7uOWchkWVkhZSGBBYEhpSH+Qn+4
eywLKywyLDY2Vi6XK5VKHUjJC6D85s3rN27MuPde/e23x95xR/ztt8ffccfp
e+7RPvqoWC7XkTBEJBLR119/jfLwpMRiMVmGmGDv3r3h4WHvvx/76qusVatO
vvjisRdeOPrcc/6/+x1j+3ZOU5MdGgDVgIJATeA5EqsD3I6qpqamcrncnJwc
nJbBYAzrzrZarQajcejeTSbi3ZkuZAhwTpLB+Uf9IHb2wpp0rW2tQ3PDXXEU
R7U3iL85xdVk6gnPunXr+LfdVnvTTcybbx5KN90Ud9ttxgULpDKZt8ITEXHi
hRekt9xSf8stiptvzr/55rybbsr65S9r16wpbWx0TEZ4jEaDaQhGCAgRHpKZ
mcIzczABNUH5Dhcg2LJSWY4sK1oVcURwODDjUEjukaMC/2hFRIIiplQ+NOgO
FghKDq3f6QUgYHK5bNu2vFmz5Lfcwr711qSbbz51442Rt94qWbAgW6MxNDc7
ml0gKy9DAckcTPxsvgAejycWi95558yKFWcWLNj6yCNbli49vHTpoWefZbz7
bpBWqyEzHInN7HlfcMpINVzLgHaR9Trd/8IlhGDDPHCpiYksJ0oCwXV2dhIP
kYxIRAZ78HDGWLgER6EaY2jB5JcLmSQuE8cOEx6BLDtSfso/K8AvzT9IeNyf
Hxgpi4qTx09YeL76quCGG8qvv557/fUp118ff/31Z66/XjVnTr5GY/RSeAoL
c5ctk/7sZ8b//M/o//zPqJ/9LPunP83+j/9oXLkyRatVU+HxBpRjPTFJdw+I
jc//65sxf3wj8q134v7+DuPNt+Nf/WPkmk9iYTFC0iBRw5ymMUC6N9Vqi2sx
5XIWS+dKWhZLn5ZWQRbTJMCZSbsP2wNi6RmhCBIIGWazi06ezA0LywgNTQsL
44eHCyIiRBkZEtghEwt8AWsHdktRUVFiYiJslbKyMhgqycnJsLJgvbBYLA6H
k5SUhH+Rh5EDzR1jzji0CSo2xmOBHTJqhPkrhivwrQDgp7APbFy7Z93Hfl9s
9P9ys/+Xn+/+7KPAb7fZbNaJCY9SaWEyq5hMPZNZkZSEVJ6UVMXjVXovPH19
vadPaw4eVB88WHLwYOHBg6VIBw7omEx1TQ0VHq9AOdYTl1QTCCFZTJn0xuLd
4SckH28ZclJUlPfNN2nz5/Pnzjk9Z07kww/HzZ0bvXBh4fPPZdXV2eHcQI8g
MziWXAVbl71wfmljWBAQJ8itZ5vb3z8AS2FYGvbZCu5eZmYmm83Ozs4etecC
RNvZ2TMs9fYOeXZ1dXXeB2VyA/cL2caNQ19wOBkFpFAopFJpYWEhFISsAwjr
CEpE1rkbY+U+6PLYy4zicpPvkZkMfMKxYwtPvlh8OiDg0Ftvff3HP255/fXv
/vxnZI6+s/rIRx9ZGxoGXcOKhgkPhMXhaHGlVmxJPP7BwR+ekk+Ep7Ozr70d
qfdCGvqJ81Dh8RKUYz0xtprgNUEkSG8pGmJ3EHsAxoDVaq2rqz1wIGf+fObc
uWFz5hydM+fYQw8Fzp/PW7EiGRxLunTJgBmJRBIYGBAXx9m6NWj9+v2bNh3e
sOHAli2BX38d/O23QU1NtnFVGxWAdkGQUL3xhm0n/R1eDiB0g4wFItYOGRsP
fzM+Ph4KAoME5gcypaWlPS6gDNqOMVagxqlgpI3hzU1muRCfYPIce0nhqbVY
kkJDd77xxhevvbbulVfWv/LKupde2vfmm4fWrGlqaCAPzi08R44cPn684Le/
LX7xxfTf/jYb25Ur81eulP31r0LYfeO6NSo8lxuUYz0xtprADjEajWQUzdkL
K3iSDP7q6OiAV24w1Cck5EVFZWRnq/Lz9UKhNjycJ5HgqB+GryCDdjkoKGjf
vuNr1vi9/vonK1f+86WX3lu9es/HHx/59NPDdXWXCKsC2YbgWV2A2tovwOaC
1QP4ecnoFjgbOZBctKuzq7Ojs5OsbeLKdLR3DJvzAk2Hd4krwiBBHsYG6UqG
tJOVmiHYUFvyL7QAf40RjUSr1ebn548xAH5iIUB9iMlzrDfCU1tdzedw2AkJ
pfn5SolEVljIOHOmQqHoHxguPMHBR9euZd95Z+XNN8fceOOxm246ceed0jvv
rF60qMRisV0syh8BFZ4rDMqxnhhbTaAgozodZMU3kUhUVlZWUlIiFAoNBkNB
QQG8IfiA8IDkcjnEJjc3VyaTQbzPDi1LN2SQJCRwN2wI+Pe/d/3rX19/8MG3
69cf3rjR/4sv/Bsbm8aoJFQS5ycjUoifBREyuwBfEnuIB0r+RX7kHJ9hIKYC
iVZUZ6lLV6UzVUyGkpEgT2AoGMiwKlg5qpz+gR+tQA0PDtYFCVhkvgD3Qn7k
J/kXDw03635u0B2yRokbMMzgqOIuhsVBckcvQXnc2hRXE18Jj7GqSiwWW5ua
wB6lUqnsIsJz7Fjxk08WPflk6rJlCcuWJT39dMFTT0leeinL5TFdFFR4rjwo
x3riku7exXwWvEelUql2QSaDupTB2cGbRQZ+EJ/PJ4Em8vLyPIfqQWAaGpog
1PX1ja7tUGpsvERYJAgPhJ905kLdBAIBTottVlYWbAPyLQvaSvoviJkxhqt1
zvVlD6qdmpoK7UO1GWrGkaIj/kL/7eztJ7Und7B3BEmDMioyPNWEPA0y5dA9
/XAk3P+6rw7HkIzGwb2TLvI2F6B0pCcaefxF8rhN8iEOTRWUfYq7ez4RnrIy
b4XH6ewwm5uRqqsdJGM2OyyWZio801F4Zg6ImpDYRBAtvKY6D+CVFRUVQSPq
RgBNuXt+il6vh8mB8wwN3mttzczMJIuvYQ/5vuR5xQsO41lPjF1JGCEQtsEL
C39AhGAn44owmFETZDIyMiDtbu8JggfbYAwZI58KyYL11aZqtpQdJgwL5gcH
cgMjciMOJBwIzQ3NlGcOU5OJAdIOFU5PTydDPWGq4SfqDEohkyVBLHjI2IJw
cEcqlQo3gv3eR/K/HPCeY6+k8JwbZSEAKjzTUnhmDoiaGI1GKAgZMQKBJAvD
uQcTkuiU7qUzsQcGAFmzmNAj1ARvmUgpFAQWiA/jSwBEYWF4cDgcHo8HI4fB
YCAPYYNNwuVyExMT01yAvsCTQiXheY0tYyQaxjmX69ra3trS2uJsw+0NpebW
ZuTbu3wT2xm6AAWBIuTk5KDmsH/SXYBeYw/qjC2TySTD13E7UBZUjDiwU9zd
o8JDhWdUUI71xKeffkqG20GooA4QPIVCQbZ4swUFBcij3YcWoIlE240MXmV3
d/dZV6QOImnIeKrJyCWZJgliNqB1hhagMgoX8vPzS11A+05mzUCbsB/3Qj6v
XUUZ8wQJFo2HA4sOugBlh6ZkZ2dDKTJdgHeMv8jkdPKtElvvw9NdJnijJlR4
LjeuYeGZOYCaQAiJUQHhh00COczNzU1KSsI7hVGB1yoQCPBOIY3QBVgCUBMS
GxMWCOmEvdxqAmmB8BNNIbMOAVwdVSJ73JMQsRN7UPjyLeQ0XkB58XjxoEhH
D2gHxobcBWg6nhuets1mI1/kQFlGV8SkaRHWgwrP5cY1LDwzB55qYrVa8R6h
FGTWSUxMDIvFgsxDWSCQ0I7k5GTioURFReGlk0b23OVXk3MXugx6vYArNsiU
MEIIIOqwNCDz0A6yCAgB9sDeIBGSK1zAvzCoyIhNvJQxZlNeAYyXY6nwXA5c
w8Izc/DJJ590dnbiZfX09JDZi3ibMELgRpWUlKBBxE+8TegRWn/sIbaKVCo1
m83u7+pXQE2mNdzRPLzB1a7seXijJlR4rgCuVeGZOSDdFg6HQ38BaBm1Wq17
BQp3u+m5hwR4d4/boWpy7cH7Pi8qPBTDQDnWE0RNxtVWjmw0qZpce/CeY6nw
UAwD5VhPTD6U/bkRapKRkUHVZLrjyqyDcI4Kz7UIyrGe8ImalJeXu0dxd3R0
5ObmUjWZ7rhiHEuF59oD5VhP+ERNWltb3UGDyTAeX1SN4mriinEsFZ5rD5Rj
PUHUpLOz0z3HEBkSN0PpglqtVigUlwxGRHGNwXuOpcJDMQyUYz1B1KStrS0v
L++MCxwOh8zHgdcmFAqLi4vz8/N9tUQyxXSB9xxLhYdiGCjHesJtisDqKC8v
LyoqItNJAOgICUlkNBoNBgP2IF9RUYGSEomEdFXAehk7SBHFNMW47FgqPBSe
oBzribVr15JPavDyoAvQCJ1Ol5WVlZmZKRaL09PT+Xw+PD4ohUAggE0ilUqh
PrBSoCPIoNjVXQGT4jJhy5YtkI2xy1DhoRgV3gjPzMGSJUvWrVuHdmfDhg3r
16/ftGnT5xfgziOzcePGYXvcxTZv3vw5xTWHpUuXQjao8FBMAN4IDwUFBQUF
BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
BQUFxZXBfffdt2bNmo8pKH6MxYsXz58//2qLJwXFtMenn346+TDLFNcetmzZ
sm7duqtdCwqKaY+PfRHKnuLaw+c0PB0FhS9AOZZiVFCOpaDwCSjHUowKyrEU
FD4B5ViKUUE5loLCJ6AcSzEqKMdSUPgEIznW4XBkZWVlZ2cLXMi+AJL33HMx
DDtw5OHufy95TsEF5Ofn9/f3X62nNANBOZaCwicYybFlZWW5ubkGg6Gmpqah
ocFsNutdqHYBe8gqeJWVlSaTqcKFqqoqFDC6gLzFYiHFUIDsxElqa2vJFj9x
HvIviqE82VleXo49OC1OjgxZQrq+vr7Bhbi4uLa2tqvzjGYkKMdSUPgEIzlW
LpeDMIuKipDp6+vT6XSpqamwJMmieIODgzApM1zQaDR8Pj89PR0Gp1gsJguS
ggytVmt3d7dIJMJOsjpeSUlJXl4eftpsNhjJyGAnyHlgYABnJutEAzhVSkoK
tjg5KoACuBypVVpaGuXYKwnKsRQUPsGoHAtyA39i29vbC3sSPFnsAnivo6MD
pqZUKgVtwgRF4YKCAmLxwhzFUSgGIgXH4i+FQqHVakG82A9mBp1iDwrgzPgX
ZirOTwoQRpW7IJFICDk7nc7+CwDPU469kqAcS0HhE4zkWPBhQkJCTk5Ongu5
LggvAHmyH3nyrztDtjBfySF5I+AujDLuPZ7/kr/Iv7k/xqlTp0DvV+spzUBQ
jqWg8AlGciyMxsbGxvpxAnbsqHlfATbt2bNnr9ZTmoGgHEtB4RP4ZOyW1Wqt
ra0lHEg+4bq/o1JMU1COpaDwCXzCsSBVqVQ6MDCAfFtbW1paGh1nNd1BOZaC
wicYL8cOunDWBWQGXNDr9TKZjPBqe3t7ZmYm5djpDsqxFBQ+wXg51mg0KhQK
m81mNpuVSqXEBaFQWFRURD4XUI69NkA5loLCJxgvx4JaS0tLy8rKQKSJiYmx
sbEcDofNZnNTuMVFxX39fR0dHfxMfm9v7+WrM8UVAOVYCgqfYALfY0nf1vnP
BQODTfamDHFGijBFYVQozUpJheQ053SpvrSlveXyVJniSoByLAWFTzABjh0Y
GOhzwWazlRSX5MpyWTZWcFnwMcmxcEV4fG38SfXJGFOM3qwnvWAU0xGUYyko
fIIJcGxDQ4Ner6+oqEhPT1/9zuq4tLgUZ8oB/oGdnJ07k3cGlwbvSN7BqGUI
i4Vmk7mzs5OOa52OoBxLQeETTGbsFiFPk8UUlxcXmRbJymdxijhJeUkBMQG8
Up7dYXe2OKuqqszmH5h2YOBsT8/w1NtLSXjKgXIsBYVPMDGOdY/d6unpMdQY
GIWMOFEcv5wvqBCkq9OjBFFpsjSrw0pGebW0tBgMhurq6t7ebrHY9s035u3b
z6fvvjNv21Zz+LC5o6PnctwdxYRBOZaCwieYAMe2tbU1Nzc7HA6FQhHgH8DN
53I7uFEVUf4i/zB12An5ibiaOJadVaworqmpsVgsZDKsVqvNyxOsX5/zP/9T
/+tfK+bOlTz8cPH998t+9avq+fPNNlvnZbpBiomBciwFhU8wAY4Fwda6IJVK
/Q/7c3O5SXVJIZIQvyw//xz/Pcl7jhUeSzQnynQym80GKkZ5cKxKpZLLS3bv
Lrv3XvPixYply0qXLi1dsEB7332G3/zGQDl2qoFyLAWFTzD5ubT1jfWsLFZ0
cnS2NDtPlpeRn3H8zPGc0pyW1paBgYGenh4Srxtke/bs2aamTonELpE4JJLm
hAQpl6stKbErFI6+PjoCYWqBciwFhU8wAY4dHBwkMV27u7thqZZVlDEqGWcU
Z2KVsUn6pDhV3BnlmaSKpCpzVV19ncEAG9U26tCCurpqo1Hf3t5MA8hMQVCO
paDwCSbAsXa73eyCUCj88IMPE/mJvDZehCrisPBwSGnIkcIjp/Snku3J+dL8
i7ErQV1dHYxbWLnNzc10JO1UA+VYCgqfYAIcC/e/w4XGxka5XF6iLknUJp7I
PRGSHXKq+FRkfuSRjCNMLbO2qXbskbFWqxUEizL19fWeNEvH004FUI6loPAJ
Jv89FpRbWlqam5cLnmxpbalvqGcns2HBXjIsTEtLS01NDRkGRmh2cHCwt7e3
qamJfj246qAcS0HhE/gkfqy+Qi+XyYkh2tnZyefzvYm7BUvYbDYTOgXN1tXV
kRELXC4XJ5lklaY7SAzJq1gByrEUFD6BTzi2oqKirKyMcKz3sQ1hAFdVVbmZ
hFizDa61vunnAqvVSkZiXK0KUI6loPAJriLH9vX16fV6wrF9/X29/b1IcoXc
aDTCjkW+f2DmBqFVqVSeS59feVCOpaDwCa4ixwKEY1G4TF8mMUqKq4qzZFnp
kvSC8oISY4nKqJqxH2Z1Op3BYKAcS0Ex3XHVORYlOzs6mRVMXgcvVBkaXBYc
WBAYUx2T2pWaokqZsesp1NfXW61W+q2AgmK64+pybGVlZU9PT3dnN9fAzWjL
OFpw9FDWoZ2snWf0Z/jd/AxdxozlWK1W6/mx+sqDciwFhU9wdTnWbDajPAqX
lJcU6AuORB9548M3Ak4FCGSCgqoCeaV8cGCGfivQaDSUYykorgFcXY6tqamx
2+2oAMqDT6Iio3Zu35mWmma32mfsl1iCurq6xsZG+q2AgmK6wzfjY/X6iXGs
1WpVKBQCgUCpVDY1NTmdTmzlcrlKpWppmdHLgaHZMplM1I6loJjumDzHgk61
Oq1UKu3q6ert721tbU3PSO/o6vDmWBix1dXVarU6NzeXdPE4HI7KykrQC1k9
YTIVm9bQaDR4DpRjKSimO8bgWNilID1syXIG7v1kBQSgu7u7ra1NY9JwSjgJ
eQnCCmFuRW6WKiuaHy1UCds72i95dRByTU0NeBWuMbmEzWaDjwyOxV+g376+
Pl/d6fQC7t39TK4KKMdSUPgEF+PYnp4eqDkYz2g0ggbr6+vhyJO/4MXbXMjO
zj4SeIRdxM7szQxThQXLg4NLg/3z/TP7MuMN8aYaExhybJbApcvKyjwnduG0
+An7tqmpCReqra0db0gu0iiM65ApCLQyJJjD1aoA5VgKCp/gYhwL2xL+u0Ag
yMzMPH36dEpKSlFREaE7kK3VBYlEwmaxeSU8biPXL8NvD2tPcH7wnqQ9icbE
eG28Wqe21FrKy8vVanVvb+/ACICBQaQlJSWeLEps2v7+fnjK2DY3N4NyvR/B
BVJC01BVVQUb+5zrO4azw+nscrZ0tWBLUnNnc1fPZD9BX27QcQUUFNcGLsax
ZAmDLhfAWm1tbfg56hlEMlFodmgAJyAiO2Io5UQc4R2JEkS1tbfh2NjY2B3b
d2gNWrPdXG2r/iHZqw1mg6XOotVqwcD9FwACN5vN2EOsaPAwTGhQsWeZMYDy
oHQOh4MmADaw2WJO06alqFP4Bj5SekV6qi6VV87TmXSDZ6e0rUvcB2rHUlBM
d0y+z0uoE6a3pyfUJIQrwk+Xn05rS+N38llGVrVliJnh9ZdKS2MlsaxqVmx5
bJQ8KrI0Mr4qnlvPTSpMamhqKC4uJh8HCECwMpkMDAmGKSsrA7sir1Qq4Tsj
Y/cOOp0OFO3v75+alRpfHX9QcDBcHR6hiQhThx0pPnLKdCpPldfZ1TmVI8+g
/mgjKMdSUEx3+IBjNUMcCyrbFrvtO8Z3LBuL38FnmBhRp6Oys7NBlfoKPUvP
SnYkh5aF+uX47U7eHa2Pzu7K5ig4dfV1RUVFIJPGCwCXSqVS2K7ISyQSUC4y
FotFLh+KFQM2bvQCYGNwVOTJSGG+kF3B9uP4fR///a4zu45mHA3iB8WqY3Nl
uXWWOjQBuPep+fEW1jgdV0BBcQ1g8hybUZYRa4yN1EYeyDjgn+t/pupMojkx
pDBk155dsbGxJSUl5bryLG0WU8E8k3/mtOj0KeGp1PLUnLqcQn3hwOAAWNSz
Ap2dnaBHYr81NzeDMMGE7e3tKFNXV3ex7xUXQ09vj75GX15dTpLOrNOZdOXm
8ubW5r6+PofDQT6D4KJTbbGbqqoqNDfUjqWgmO6YPMfm6nL5ffzEusQAUcDe
9L2pbak5Azmsapaz1Ykzw0wVCoVgSxiiLa0tDY0Ner3e7rDbbLaO9qExtGA5
z+kGoDv32Pv+/n5QjUKhEIvFra2tKAb71rejuXA2MkgMJ0dtp85QMdj2VzeO
LuVYCgqfYPIcm1+Rn2ZNSyhP+Pbkt7tjd6c2pPIaecmVyQ6n45xrdBYIFlyh
rzgfKhaOP7xg8kGALH8Avu3t7SV8MixwN9hPIpGApQkPo2RTU5PPbU6cEKYy
mdjb3T3EtNiO6wyo/FBwG+/gDZOr1Wp3cN2rAm84dvIzBCkornlMnmPrmuqy
i7N5Ql6xvFhWLpNXyeM4cRqDBn66uwwoyB1xGpaqSqXKzc0l3xtJ9xbypBo/
BO4+O7Teislo2rVrF8qQWQ9nB4c42el0DiMfMjbM/RP/9g2h3yP1XXKwLs6A
utUOoYbHS62tteC05MBLsjooGk1GrQfQlNSOAHbiZmGgXvKZT/25tLD///GP
f1yx+lBQTFP4JF5Bpb7SvZ5XV2cXP3P4el6eHHvONcBeLC4Ag51zzWhQq1UC
QRaZ4+DmWGer0+K0KKuUG7du1Jl0FoelzlFnsVtgLoKpwGme5wfxen5wqK9v
SU+3pKXVulKda1ufnl7T3DzW5NzeIfSIxdXx8fInn3xny5awtDQTn1+TkVGj
UNSD4Ec9iowZg+1tNptxC+SbBkx35JFpa2vr6OjATljIyJO/wMbuhcwuBtzj
VIgJExQU9N5778GoHlmAciwFhTe4MnG3PDkWW4mk7IMP/l1XZ3M6u0ymmpIS
mdFYDR/6nItjy8vLYU+KlCKmgRkti45Rx5xRnYkqi4pTx8Wr4msaaqDd4DSQ
VdcFgJHwE0eRnwkJyrvv1t5xR9nttwtuv114xx2iO+803H13qUikb2tr77wI
cAsFBXl//CP/kUfK7r8/9e67T82Zw3/44fwHHpB+9lmOw9GKuqEYtrgE+TKA
zNAoXLPZaDQWFhbKXJDL5WKxWCqVKhQKjUbT1NSErVKpxH1hK5FIcAiexti2
sVarnSLjCnCPb7755sgClGMpKLzBlefYlpb2EycK33rL398/LySkZPfutO++
4x05IikrM3Z1dcPSKyoqqjHXpEnS4mvjd7B2hEhD/IX+O9g7QiQhDDOjVFEK
TgMFgazAQshXV1eTrRsnThTcdlvtTTfJf/nLU7/6VfSNN2bccot11qyK5GSJ
0WiqvghCQ0P379+zcmXWnDmGBx7Inj077O67g++/P+fee/Xvv59VUWEEjaOY
w+GAv2+1WuHyg9tx4/n5+bC9USXQbEpKCo/HYzAYycnJeA5sNhtkiz0qlQrb
0tJSgUCAPMqPzbEgZPD2VOBY4MMPPxxZgHIsBYU3uPIcazTWLVsmeOihtHvu
CbvnnghQGfL33iv6/vs0MI/RaABT4SQKo4JTzonIjAjNCA1ODw7iBkXmRqao
U5rs5+d8wT6EQUi6kIZBLDZ9+KF2zRrt++8LQY8ffFC6Zo3+ww/lVVVjrd6C
59Dd3XnwoGT9esXatcWffSb85JPUtWuLPv1UdvKkvK9vdLrDUTBuYVeTnizw
MMxXsK5QKCwuLk5PT8/NzU1NTRW7QL4ko/KX5Fjy2faqfysg+X//+98jCwzj
WDQfU3lOBwXF1cKV59jq6oZVq/Ieeyx14cLgJUsSFi0KW7o049FHi7//PgXG
G4koS4gLNq2zzVnfWK9UKcsrylVqlclswl9uXW5sbLTZbCONvcHBgf7+Llfq
dSXw8NBPb0gA5VG4rw+H9LryQ8cODIw1EgAVgH1rt9tBO7h9GLQwxfFA0Fjk
uwCyhdWNDOxelCFxb8auDB7X1LFjveHYbdu2oVm5QpWjoJg+uPIc63S2hoWV
HT0qPXq0+OjRErINDCyVyczd3T2gTagq6T8iHz9xrMFgwAnJNATYrvirp6eH
xF0Ea5HeLvLzaplSqA/q5v7sYDKZyCiCYYB1SmauXXKgAoh66qxL6w3HyuXy
f/7zn1eochQU0wdXnmO9ORs8btKXROZ5wRN3R1YkA1nBV4Rpe3t7yRcDFEN5
h8NxbXisIGrc4zT6VgA8/fTTdMQsBcUwTEGOJQuCn3MNpoJbDbbRuNDR0eGe
qgDbFUwL0xGXA7sOTVUokaSnp6MaUzP+wHhhNBrdc4q9AbHhfXjvnhz70Ucf
jSwwkmP37dsXGxvrqwpQUFwbmIIcW1lZSaK/utHZ2VlaWgpGJXEOYeWSAthv
rDZWGav4Av76z9erNKr6xvrm1ua2jrZJ3tElcfbcWXuX09btsPbY3Vtbl6Nn
oHdkYbQOZLBrU1OLTmfzSFat1lpZOcrMNZ1O5/23AvI5RavVkhVqxhvVYVR4
cuy2bdvgSgwrMJJj4VC88sork780BcW1hGnBsedc/exOpxMmK+kwIhHCs/hZ
ubpcroJ7puDMnpg9aeVp4nqx0CwsrizGTfX+GGAelUpF+usdDgd+osJkiAIZ
jYAMKSaXy8HkZF5D7wiA2FGgqs74VfP2dc7PNzV9tb558+aGr5Ff27K+2FbW
3dM97Lpms5nL5crlZVFRpf/8Z8nq1YLVq9P/+c+8d98VvvtuwaZNRQ5Hy+CP
YTINjTEjazqMDTxwlBSJRHjs+fn5eXl57u8qk4Enx0ql0jVr1qCZ8Cww6tit
lStXDitGQTHDMV04FrzhjlkNLZbJZNHR0UFHgyKLIgNyA8KV4ZG6yDhzHLZh
6jCGlEHmSQ1DUFAQh8MpLCwESYJpwRLgapyZRJ1FBmXArvv37y8oKABZwSwc
eRIQ2sH9B9l5vFtaZ/20/efX1956c9Xds3T3/bzt//mvnp+GVJ20NAy/NO49
ISEhIODgmjUpt9ySc8MN4TfccOLGG6Nuuinm5ptzFi7M0mj0TU1Dl3YDLQhZ
hafpUkAxf3//lJQUPp9PTH2frDXpybF4m6DTw4cPexYYlWNBxTk5OZO/OgXF
NYMpyLFwe0eyBJmvSi4BPoTZBqqEQx1fFB+cExwiDAktCD2tOH085/gJ0Qme
jGez25pHQCgUgl2Li4vVajWZFwZLFRVudQEefYsLICvwPAgWl4A9OewkoOXM
jExJedlvmp9b5Hh0ac3y5zR/WFH++0XORxe0Lk6qTbE1j3JpVD47O+vwYdHL
L+f9/vesl15i/f73jJde4rz8cuE77wiNxuphYcbJTDFvwpLjwTKZzNLSUhix
Plww3ZNj0ZzFx8cPKzCSY/GOFi1aNNWiRFJQXF1MQY4dFu3wh/3matDgOZcu
w2Aj4bwqaivUtWq5US5WiUVKUVllmcwoMzVeNPIqPHcwLRjJ4XBcrAI4PwxI
o9GIYjAURz1VV38PryWD1c5ht/BSmtOSnTxWG4fZmlzb1XD23EU7qgwGW25u
TU5OjVBIklkorC0qqunrG85L4x1XgPsin1B8NRTBk2M//fRT8uQ9MZJjeTze
F1984ZOrU1BcM5j6HNvT2+NocTS3NVdVV1UaK4fyrc32Fntvn6t36ez51Nba
ZjaZBwcGz++5CHCzcMO1Wu0YdNTd3Y0CBQUFer2emLuXxCWvO15MYF1aV59a
00gynBgmMHbrzTffxHPzydUpKK4ZTH2OrWmoEVWLcow5aZo0jpwjqBTkmHJg
AFqsPzLzQIzedMSTULGkh+tiZfAXrFwYsWQRMfLZkyzF65knH2/dGd/G9yYj
BMY7Fqutrc1X0brGy7F4qs8999zkr0tBcY1h6nAsSBKsMhS8tWYospZ7v9qo
ZtQzTshPHBQc9BP6+eX6hanCEhsSNWaN59qyZLlwXw0QBVkZjUYyoZVEniHD
cW02G4k/g3q6oisYkXHHivHhlIHxjo8lIPF4fd7n5Q3Hnjp16tixY5O/LgXF
NYapw7GohlQqLSoqUiqV4DE3vVRUVyQbk8Pzw/15/v5c//1J+0PzQplGZlVt
lSfH4uTem8qXRENDA4nulZ+fn52dTaINFBYWwlTOy8sjo6SwzcrK4vP5JDas
b5fqxtUnti5tR0cHWWBikhUYL8f6+fmhrZnkRSkorj1MHY5FmZaWFovFcjL8
ZCov1X0GZ6uzorFCZVYhyQ3yrMKsEl2Jrl7nbBs+ChSXGOMLwLiAasD9B3mS
oIXg2IyMDDabLRKJuFxuTExMeno6WgQ0B2KxGBYsTMdLht0eFyYcPxaHgGMn
Pw1hAt9jKSgoRmKKcKyjxWG0Gk12E9KRk0diObFVTVVVDVUdXa4eHA+jrMXZ
Ul9X3983CpeOOrB2YmhsbPQMjSWTyUi4QnBscXFxTk4OfpLnRuYyOJ3OiZmd
FwNZWGFiJ8QrmPxXWU+O/eCDD0YWoBxLQeENpgjHqk1qrokbJ49j6pgx8phE
dWKCPIFTxbE0DR+/hJ8OR6PTaYfJNuwkJpNp2Bo0EwZZgtxqtdpcwN0pFAq1
Wg3zEjei0WjAuu5/kYHd29bmywm8k4kJQ8a2TbIPjnAsiBRG+9q1a0cWoBxL
QeENpgjHSvSSOEvczpSdx0qOBUmC/EX+geLABEuCoc7g5pmOji4+v5rHq+Px
zKdPl6WkmFNTLSkptUbj+c4mMt92kvfiRktLi3sgAQlU64Z7LIEbPrwuQXl5
+WRiG+ItXGxkr5cgHBsdHc1isUatBuVYCgpvMEU4Vl+jz6jKiMqKYkgZsQWx
J1JPMMuYfAO/wf6Dw15ba3v1VemKFerly3OXLRM8/XTWs8+WPfmkMjJS3tk5
dAtgFRCgDx12EsnqkrgcEQgnGaMb7wItDjmc8C1ZhgwZEkIBO8mSZD0XMOwM
l1yXFscGBwdPrHoUFDMHU4Rj2zvbGxwNdba6enu9uc4skUtInqxdS2A01j/4
YOkNN5Rff33C9ddzr78+7le/Kv3//r+K3bvzLJahKU5k7cJrYy7neMcVjCzZ
1tYGSxhMiPMUFBRUV1fjHQmFQuyUyWSFhYVKpVIkEkml0tLSUjy3YWe4JMdS
UFB4gynCsZ7AeQxVo7jJVqtz0ybFRx9pP/gge82a3A8+yProo7L33tNxuTq7
3QEPHkQB9oAXb7fbSfCB7p7us4NnB/sHf0gDQ9uzwxfyHhwt/agMOXDYqVAE
9iGu6Jo0cXbEGQZc/fyDjY1NZCUvV5kBsv9CZsD9YRkngZ1JXkdlZaXJ5Dkj
eGC0dKFug4MWi8XsQn19PXkRaJ7279+v1+vR+oBRq6qqClwgazuKxeLi4mI2
my0QCLKzs0G8lGMpKC4HpiDHotioSwr29fVXVzuMRiQ7SSbTUL6lpZNcAjyT
np7e4ALIKjExkcflqcwqnVVXbi/XNmo1jZqh1KAx1BnI2FpcC+5yero2OVnH
Zqux5XAqsGWxNBqNZdBFxUODytpbNHUaXZMOh+NsSDibqk5ld9phKMIOBLcb
DPUsFg4sv7BFqmCx1HZ7i0qlzs/P7+vrVSprmEw99jOZ+BcZPX6mpup6eob6
p1B/suYXruhelxZ5u72VwahKSDAhxccbEhKMyMTGVtbUnP8QjacNcxRsicNh
mpIZHCD/6OhoEv0GdEqGRpSUlKAAmBY0S8ahgWBHDYdIOZaCwieYghxLTuj5
lcBLgBY3bNiA2wG9gGe2bt2Kn4cZh0NLQqPUUWGlYYHCwMMZh48VHQtODjaZ
h5bc2rVrV0xM3J//nPLCC8KlS4889VToU0+Fv/BCxvLlWfv3p5lM1ajJN9u+
YaWyeHZeTmdOqCQ0ShUVKg3lWDm8Fp6wTAgfnM/nr1v3SWAga8mSkEWLghct
Orp4cciyZYzHH0c6np1dotdXHD169ODB77/9lvf00wVPPy1ctChkyZJTy5ax
n366+OWXU1SqcrK2DqgP7Io8GcmA/LfffhMRwXnsMen8+aqHHkp78MGkhx5i
PfKI7KGHSqOjC8zmGtil27Zti4uLI0N2Ya/icDQxQUFB2NnZ2YlHIZfLdTod
+FalUkkkEtwUzF2yvhgxgEe2aJRjKSh8gqnJsXBdJxDbBIwREREBJoGXXVdX
x+Px8oR5fgy/b+O+3RyxeX/q/j2cPduTtgcVBgXGBzZZmxwOR0pKCsy6P/yB
8ZvfpC1eHLhw4YH583c/8wx76VLOoUMZTU02cBGbxc4tymXWMNOcaWDp3cm7
cUJmIzOpPqlAUeBodsCv53I54eEZc+funzNn30MP7ZozZ/+CBWGPPBL8yCO7
CwoUDkezy87k79iR9uijWUuWpD70EIrtfvjh4Mcey1m1illZaYa1CWMSVcIW
eZQHx+LqyclsDif/kUdE999fcPfdJ+66K+Kee+Lvvz9v9uz82NgSm82OO4XL
D1saNiryeG5tLsCsxaMgs2tzcnLQEGRkZHA4HDwWFCMWMunUG3XiBuVYCgqf
wFccCx33IcfCOJzAaCgYbyAQws89PT2w3+DIq6pUJdoSsVJcWlkqrZRKKiQy
k0xr1KKGZBGB9vYOPl/L5eo4HEVysiw5WcrlajkcjVZb3d8/gGIo0dzSrK5V
axu0MoNMUi4p0hRp6jVqi9rabCWLKeCKZnNjcrKcxZKB8NjsMtfZlBxOaXNz
i+uLRHdXV6dSWZ2crOdwdGy2lMmUoDCHU5GZqe3s7B42VgEGJ54YDHJc3Wp1
JidXJiXpExPlDIaSwdAiz2DozWYbrk5qSIYKIO8eC4EqwQxmMpnubwVKpbKg
oABkC8MVJAwLts4FPLeGhgb89Ay5QDmWgsInGC/Hgrjc/AkGAHVAzUlEa/dI
oclzLOw3u93uTa86jDQSBhAsgWqASYYZwL19vcNST2/PsOp1d/d0dfV0d/eS
hDwSCNaz/jgKyfMkSLgjEKyLqIcCfTudLbBGhyWwGSmAkn19/eTkXV29F9LQ
dUfeF1nHgTwBmJw/PuT8gZd8nmlpaQEBAbi0SCSCEZueng6DFkZvVlYWHlp2
djYyaJXIv9gvl8vd56QcS0HhE4yLY1ESXApNhIYWFhYKhUKioVDevLw8EhTF
JxwLgoV95Q3HoiZFRUW4IllBRq/X+2o6rTeAiUi68gHS1+bOk9m47j0ASnrZ
cJxzLc7743EF4wZegVqtxktBMwQvQ6vVlpWVkZ4vvCydTgebFvtzc3Pdsyo8
p6pRjqWg8AnGxbFQW3jxYEtoLtxP0Bo0VC6TCwSCzIxMa9NQ1Ouuzi54o5Pk
WNiEXoaxgtUK4oK3Cz+3paXlYmsoXA7gdkCbcOrBXSSEC+gLedSktrYWNQGv
VrqADGqF5+xeLueSAD2CZicTZAZXdDqdeIbg+eTkZDAqsWNBsDBf813A60ND
OaoAUI6loPAJxvutgMwScjvIQENTQ15hXpogzWgxWqyWyupKRgrDZDF50uxI
joXXrNE0yuVWj9ToWskQtDBkMHs/y4lQMdmSNRC9v53JYGgcr8EA4xlWNPxu
kFVJSYlYLCYjDRITE1NTU+GAs1is+Ph4MsgftOnleAk0MZMJUYgHiEdJXgEM
VCaTCYKF1ZqRkYEtKgmDlsS3kUqlo8YkpBxLQeETTKDP6+wFQDfr6+rF5eJT
pafYRnZqbSpDy0hQJ0SIIxJliY4Wh7sk2LK8vByk5N7jcDhXrqxctEi9aFHp
okXSRYvEixYZFy2yHT1a0ds71NM9MSsO7MHj8XwV4XBskKjg8K8dLpCJVLAS
c1yIi4sD8YLQLBYL7p18JUB5L6MOgr0nHHfrnItX3XHO8ZpA/mSUAmxXGLRk
mAGsWWRgyo4afIZyLAWFTzABjiXrXwMw0r7++usEYcLezL3/f3vnAhTVleZx
qpKdGiUxTFI7mV2NUZPZ2qqdqDFqZnQmGc26yVR2ampnNpmtqcnE7BrNzmJ8
BYIZk4kYjKsCrfgABQRBk+ZNQ9PNs2nApoF+d9M8QjfI+9U8GlpeMeyf/sJN
C9g29DWuqfOvW7dO377ce+7V/t3/Ofec7ztXeS5EHHJEdCS0KPRI5pHjWce1
Ri2lDIBQgM2j2P4ktVr/2GNNPj46Hx+Rj4/Yue718ZkICqoZHb1Jlm8+s2KB
8TEsWVkZoaHHb9yw00durha92Z8N7a++Gv/qq7FZi0fnRfVcI9bituAaqTGu
VCpBe3CM7Cv2oecLLspD/ptMpgWndUDjAszn7h7OODw8zA0bpj4EMJ9Gi2E9
Zw82YywTEy9aAGPxk6REgWjPVhur5Tp5VG7U2ZyzgiTBhbwLkZLIo4lHY3Nj
O7s78dPmsgoaDAZYPu5je3vn668bt25Vbd1aunVryYsvyp97TrtlS2NMTM34
+BRYaOSSh1Uym6+HhMg/+US+b1/69u2xhw8XffJJaXCwzGL5OqQMagL/hnYx
Rx5np8fIiRNVgYGaoCDt++9rsQ4K0h04oE1NrZ6Y8AhuXV1d9ByBFQQSaag/
ag6W0kfY0ZaWFnxLPbSeh6xZcB4EYBkn8v7FH2MsExMv8mZ8LBHA7rCr9Kri
a8XNnc1d/V1NbU3pWentPe2uLpQsnKsrw7f19XazeZAWk6lfobCUltZRf+yk
M0i156CQyUxbtkjWrz+3fv2pn/40fuPG6I0bo37xi0yRSAEE0hQq2EuJRELs
wtPh6NGjly/Hv/RSyqqVmU89lfP00zkrVwpXrry6dGnmwYOikRGP3CZZxAGn
+p0io+iq/mnhEeO5M29sbFwYY2FicVJ+c80wMTEtWLzMQaivq1ervp6DAOYs
bOzWxMTYwEAf7B69tAIMXTMnuldRkeGFF1Kfe+70s8+Gbthwdt06wbPPHt+8
WVhQoLbZ+oh1aD5ToFf6iIZ8ZWXFi1sTlq+MW/5k9PIV0U88eWbZ8lN/+6Pz
ge9/NjIyjwDXnsQ/nG+rf2G5ZmDOYWJ56Y5mjGVi4kULmIPANeE5V1ZbW2s0
Gr2fg4ADOrsR2js7O8FYGnrkSa06O/vy82ukUqNUasAikehzcnS5uebu7r7p
OaO3CDXBiXD8owmXP76S+OGVuA8TYz8VJX2clHAo8dIVadb4t/LWzI1mxd3y
SGSbeakAYywTEy9awBwErVZrtVppdCWFcsrKyhKLxSjAfaFF7OUchNHR0b6+
PurM9DxU19S0q9Hx6WWMFveMwuMgruLSsZyQGEN0lPq8eEAUrYs6pzqTVpHW
3d0F4ONpgppwIwHa2nrKy60KRaNC0eRcY7FWVDQ4HPPq/Pxq1jKHFjB2a2oc
XUcHX+FzGWOZmHjRAuYg1NfXw2QaDAaVSgWuGgx6sViUnS2qqalubr4+NjZa
VFTg5RwEgAK4qKqqgqG9ezG37YODRy9f3B0e9pe4CweiTh1OiX8/NjIg+myC
JKO1ta2lpQVOEg8RPFOo5klJupdfLtm2TbRtm3jbtqxXXpG/8krlb35T2Njo
aYJCmaxGINCEh2sFArVAoKXl4sXKGzdmUtrzPAh4EOBuw8HC+i4gkM7txBjL
xMSL5ttXgF80zUGg0QX4UdfUWBITRbGxyYWFqpISrUymOnPmMsg0MnLLQNB5
MXbSmbUQf9LT0wNHx1cmxBkaHLS/+m8ZP1mXuXpj9uoNBWs25j7zXOo/rMn6
6xH5kH0EJ8UDBY8Szk7HRKufXlXy9z86s3zZpaV/d375E3ErnsxZu1pWX+ep
4QwNVa5fn79mzeW1a6M3bMhauzZuw4bCV1+V6vVmnKvZRSUlJcA7nmXNd5JI
JAoODi4oKFAoFAsICHk7McYyMfEi7995CYVFb711/k9/OvPGG+Hbt5/evv3s
H/4g2L07qqurd9LZ8G9ra4PLmi9jAXMYM0CDIkR1d3d7M7F0ToGxzz+fvmRJ
1COPXPJ7JP6xR9MffTRt8eKM/fuKR0amhrPi7DSrF55WWa5MSCp67Z2U3+46
/7tdF3/7TtTvdl147Z3E//jvq5ZGTxPIhoSU/vjHaU8+KVixIuKpp6KWL/9k
1aq0F14QNzRMTQEedFFtbS0unwYquJdOp8vMzFSr1SaTyctctK5ijGVi4kXe
MzYmRvqvr4a/tPXQpk3+v3zx4LZ//uhfth1+7d+PdXR0TTrfwtCsIi4wl4dy
nYaAtjDF1+KxLTzpHOh74oQ8ICAvIEAaEJAbECAJDCzct68oNVXb1dUDfFGF
UQf4yZ07dh678L9Z3eKI0jNR6osRinNXrZ/n9OemNae3zEpQfjuZzS0SSW1O
jjE6Oi8qUpKRUSWR1Mhk9WgZzNrT03EFNputtLQ0IyMDN7m4uJgvzDLGMjHx
Iu8ZK8ou9N9/7O3/+fBA0PGAD0L3B518a+cHH34cYXPOgv96ym17+wLmxrpO
Q6CAqGAdF/GPF9ntowMDWEZcltGRkfGqqiqYQ5rI73A4gK/fv/77yKRz2QNp
xyTBp+QnQ/OPRpSFpnV+ltEmbO12x1iaVEUd1BPjEzeGHcP2YVWlqlxRbuu1
OYYco7M6YyedOR08ZCxuC015gGpqajycq3tHMcYyMfEi7xkrN8pTm9PiDPEx
VZcSjIkJpsQkS7LQKOzp66EdaKzUAhjb0NAwo24gFQ3roukJ4AmPb9JdNTQ0
pFQqUQFU22q1Yo0m+cU45fMvV/zTz4p/skmG9T9uLF77y8qfvVL0RYO7/li0
+kUiEaDd0d6hMCtym3Kz6rJEdSKhWihtlOZdz8s2ZNuH7DP+Ck8lWHdPnibc
XF2K1+3tlU+LMZaJiRd5z9jS+lLJDUlc9aVTpYLw4rCTBSdSOlJEHaLe/l5u
n/mOKyDNmQ0BJLHb7cBsT89UIhixWAyf6U39XSuJQ3V1dVksFnhCnILm8k84
hfOGC77wfdj+wIOFDzyofOBB+QMPljzwNy2+vp1SqRr7N9xGYGxhYeHp06ff
9X83RZEiG5XF6GIEcsHhtMM59hz5hDzzemZf/8zIV1zORF4ubQFijGVi4kU8
+FitPKY0JiwjLDw9/FTGKaxRTihN6B/s52wVWDFPxk7lzu7puT401D2dHfsb
RwcYjo+Pw8FSNAAvuw5wKJAcRAUPGxsbgW4Kn0JRXFz3PHfO/PjjjX5+mX5+
uX5+WX5+n/v56ZctM1dXtzlzHMwt3ASAeuqJ0Naep8/LbMu8UHkhPDf8pPhk
clMyHkZJ+qS+gZmMNRqNXsaP9VKMsUxMvMgbxk6lxPryZomh5KrpaowyJl4V
LzQLrxiuJOgShBrh8ZPHQ0JCAK7m5mZYMk/CoTjTUd3Mzrbs3fuFv3/Njh2a
HTvU/v5mf//6Q4eMdvst9QQDW1tbS0tL58yYkJxsOn++OjISi5kKZ8+aCgrq
uGAvw8PDRGlYUNTQZrPp9XrUk/K0UqwweFrXI/f2Dul0vRpNh0bT6VxaNZoe
rbZ7bOzOLXQ6Drx9c3dzS1eLpcViajA1dzW3dLe0drXO7u5wzTVzT8QYy8TE
ixbAWLTQ4feAo88//3zvnr1p5Wnp3elRmqjT105HqaMExYKUjpT01vTouOjP
PvtMp9MZDIaamhqrB8L+gYF7d+0q+8EPRnx9ixcvLl60SO7rW+Dra1+6tFGj
qaEYVhTG6tChQ9gfzXCFQkE5rEnHjh2Ljb3w8svlK1ZYn3iictky2bJlBUuX
5jz++Bd//nNFV5cN+ARXQVcw1m63k2WFY0RVc3JysrOzZTIZDpuSkjJjLER3
d4/VammckhXPDoulwVn4ppcAx6QCjj9nbyqX0HDQPjgVWODLiduFMqDOCsZY
Jqb7XQtgLPYfdgpU1Kq1hdrCeG28IF8gyBGcl50/lXcqXhMv1AnV2qkRm7Cv
2HMq+asHAp10Os2BA9rvfc/m41Ph41Pu41Po4yP18en84Q9rTCZrX5+tzylK
2w160wRefOybllgsLi+X//zn5UuWmL///dhFiy4+/LDkoYckixc3/upX6Waz
iabHUl5a1+tCi56q4cwhe4OSvXLf9vf3g4rwlk7GNlIuWooi6HA4qHuBhrOi
gC24OW6y3uCvUA03CPU+14yXYoxlYuJFXvYVQGKp+MPgj4IOBX0c8nHwp0eC
jwYHHnr/0xOfwsgBU8DRjBa3G9G7cb2+PTn5ulDYJBRahUKLc2nKzGykTKwk
HJlMI4wrmOYa3gr4AgCvXDGGh+vDwsrDwq6FhVWGhalCQ00ZGUaY2IVFTYFV
hulVKpXJyckwuhqNBi43MzMTFh3WNz09XSQSpaam4luU4ZCBfTcBB4Bi8NnN
bYGJnTM9wbcmxlgmJl50R8aCYJSJm17l44ePj8AmEAHIXLt27cKFiwf2v7dz
564d/7UDR3v77Z0fHPzLRx/9FZYPxAOEARz8LZ0Fa5ut32Yb6O0dsNkGsaZ4
/DdvfgMTGMzR0S9nLGNjt/RYtrS05OXlZWRkFBUVzfnay+EYHx7GMuayjMO9
AuJtbW2eR/TihOsFGHHhgC3+nIaQ6fV6lUpVXl4OulISSVhrEJiSJLpJ+4gH
gfsctTid96/zvBFjLBMTL3LPWPzGwRN61Q4Xx2VAgOAk4VSB3MTExHffffet
t/7zzTe3v/nmm3/84xt79uw9ePAg98qGRltVVVVFRIRFRFRs3mzctEm+ebNy
06aSzZs1mzbV/frXyvb2OdL2uREqADSDQqjefGP+08syD0efcqKBZGSVaWJF
VlaWUCgEXeFm4V1RUKvVo05hH/hYN+nLcSg4fDddAd7kmuFFjLFMTLzIPWNh
Yq1WKw3B4tK/UgFfDcMdjo3BrUkk0rS0NLSjtVptZWWlUJhkNpudgwS+JgwK
2C0y8sw770gefrjH11e0aFHc4sUJS5bUP/TQ4KpV5paW3ttF+SMBjKBWt1Ng
fu+0epzqdhE+3jE0Co5Gf0g1vOG44Rh2OCgxjrMwPDQ8Y8IUHhMNDQ04I9ws
ynCqNA4BqKQ036AimE/fAqH4yk0oG9yfsrIyN7MnFhY/lkcxxjIx8SL3jAUn
52yxUrrA0tJSjUYDqBYXF4M/CoUCTWnQA81nwBbMkcvlKICNOAK52YgI9erV
xtWr5c88I3rmGcmaNbo1a8xbtpS1tdncVBI8t1gsNJyJGungT5NTHR0d2ELd
F/QtyrMniM0Q+UwKddXW2iY1StOMaSmGlCRdUoo+BYX0unSZUTbx5S3py9H8
hzWlaFdN0+KyQNJH+hY3DRfL3TeAlxLccIKrLyoqwlXMCKLFhb7B/rg0xlgm
pvtdd+wruF2DFxAwGAwmpzROoaUMLKCARnR+fj5FKSkpKXEd5zkwMNzUNNDY
2N/U1NfUhDWazP3Nzf3uG8UgD8hJIwHA6sLCQhwW64KCAhhL6ggF6unlF3lU
N+30SWe3MJ4LOTk5QDeqnWJKiVBGCIoFhzMOXzJfCs4IPqs6m1uX68pYuhs0
X5Wbuzpb3Lfc2fv6+mgoF0hL4yvsToHYNIwBZXxFZVwm9eJWV1fjScH6CpiY
7ncRYymwFbiE33ibi/B7VyqVwGnbLMEHcpOb6uvr4VdxnKmRn4ODeXl5lLkP
W6hz8tZzzk4EcAe3BgcLUt2cThsD/uh0OpwRhhk1QSE3Nxeo5JreoBaMpRtA
UT8z0IfqXW+8nqHKiC6OjsyPPJ19OlYeeyLpxEX5xTxd3gzGLkxAJfgvlUpp
nDB8Pj6iznge0UxbPJVwk7HG0wpXZDQacSHY7nkaiLshxlgmJl5EjLVaraAr
DTcCzSirIDcSlUKbcnlXsQXukRJek1sDY4EIQhzoCvvKY3CSyakkL1O0h2sV
iURisRgOOSUlBWWQCoY2Ozs7OTlZ4hRgi2Y4Kolmu3tAUSiVSWe/x+DQ4MDg
QL8dlze19A32oTx0g5/A4AAp6AqKymQy1BzmWeoUHgrYgjpjnZaWRnMfcDkg
LSpGvR+sr4CJ6X7X7t27aawmiASWglp6vZ7WwMK1a9dQhmkEQuGvYPxQAAdG
RkYozAthCgVXxs7O5+WlyHPC2gGhqIzeqbKyMrVTMIcUagAoxnZcC/XN3kNA
uYoijePmoDkAkOJJAcwWFRWBqHlOZWVl4SuKbEAd3Vh7HtvwLokxlomJF4Gx
IBg5UpAThhYQk8vlqampAAIcKZhQWFgIIABlAClsJBhLgVVhX+kN/t1mLFAD
chJmacoqhLOjSrSFm8GKjdiCne9eFrD5CuTH7cWNoreE9DZQ5xQeE7hvuNs9
PT3UnYvnHYXbYjFhmJi+G3JlbHd3NyAAotKUpatXr6anpwOYIC1oBrRmZmZS
8zY+Ph7EIIc2efcZOzn9vmnMA7mOGfv/IHASNhXABFopgwwJW2BWKbx2nVP4
Fm6chvviH8XNVNxvQYyxTEy8yN/f3+Fw4Jc+OjpKU1+BAjhYtMErKyvhpvAR
KACEYR2xhYyuSqVqamriXsp8C4y9r8WFgvFE97qyX4sxlomJF9E7L5vNVj8t
2Cqz2cylL+FMl+sWyg7ADfpijP3uiTGWiYkXEWPnZbRmOy7G2O+eGGOZmHiR
93kQJmcxNjc3lzH2fhdjLBMTL+KFsbW1tdwUgOHhYblczhh7v4sxlomJF/HC
2MHBQS7iNI0B46NqTPdSjLFMTLyIGOtwOLgJqihQ0BWDUyaTSa/X3zGSFdN3
TIyxTEy8iBhrt9tLSkquOCUSiWgyF5r8xcXFFRUVZWVlfOXXZrpfxBjLxMSL
OB8Ly1pbW6tUKmkuEgTAUjwrq9VqsVgoNmxdXR32rKqqovdcsL7uI1wx3adi
jGVi4kV79uyh/tjq6mqAFDitqakpKCjIy8tTKBRSqTQ/P99kMoGohYWFMLQq
lQrshcUFYFHAbvc2fSrTXVJQUBD+b9zrWjAx3fdat27d3r17YVr279+/b9++
gICA96bFlVE4cODAjC3cboGBge8xfee0ceNG/N+41/89mZiYmJiYmJiYmJiY
mOan/wOyVbF/
    "], {{0, 1078}, {460, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{460, 1078},
  PlotRange->{{0, 460}, {0, 1078}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[310]=",
 CellID->1644939596]
}, Open  ]],

Cell["\<\
We can use ListAnimate to generate a movie/animation of the results\
\>", "MathCaption",
 CellID->1695062567],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptorFigureTimeSet", "[", "\"\<Results\>\"", "]"}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[311]:=",
 CellID->398502467],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i58$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i58$$ = 1}, 
     "\"max\"" :> {$CellContext`i58$$ = 15}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i58$$], 1, ""}, 1, 15, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i58$1096135$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i58$$], {1, 15, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->0.,
                  AnimationRunning->False,
                  AnimationTimeIndex->2.9568090438842773`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
NMV8NibZdk3lwVxuoB9SEhS5bHVuX0pavbj+WVK4FY0KH1yqzxVd/yzpEySp
g5VDigMGeiAlQZGU1DkpqelSfa6oxSrCOs9KSTvKA3AvKQmKpKTOHfzGXXT6
xSlp+bWuyvK7V7RvwTespSYl7fjGXaZ+KHIBgrtISVDkItW5g8+SekhJOzb5
9GVPbPygKalYZ/jrpHPrhxSXIbielARFLk+dqw818yOb8O20sC8iSUktqrp4
LTUpqV39kLf1oTNwhJQERa5KnduXa1JfvTvyN0RKSi2++tHNkecmUlLrSng5
VyW4gJQERa5HnZOSjiw+xXx+Pey3rm7clJSp9sSP8Z1POIVrEzQlJUGRK1Hn
dgec1Tfu3pOSojWspqyS1MHKW7g4JY24FgB2k5KgSErqXPRpyF0u2+TTa5ik
pPY1X78W3sMRBeeSkqDoyrtfTvTbQp8V7nbKAZmJRZ8Xf+Pucywh7lsLnMLV
Ck4kJUGR686gpKQjlUyv/Ncb5pqveT7oxEILrllwCikJilxxBiUlHann4Cou
GDKNVnHxtyidW2gkcwC7qB1X+O71093d/ReRkqDoVeeEJ5GSjlR1cBXRxeeh
dMqYOn1U3nU/4PRCU+Fh/LZ73RPpuq+X9IOUBEVvOBU8kpS0u6rjV8BM+Jpn
tQhiB931qakzDK0tx90LHwqcQneFnt0nUhIUuZQMSkq6pbZ8ncvpHaakz+Xf
uFuu95oV8XJ3HeFD01EZD+4cKQmKHnwGeDYp6ZbaVnWu7sT6T0mfmz5sd5Lh
AtGnpY69Il2Up3/gtVxEBiUldVhhKjGduIpT3HIDect5xvntVVIpyTGQoXNq
6CV4J1eQQUlJHVY4dfyvN4T1Xz/271qdU9wbZCKSAyBFz9TTV/BCriCDkpJu
rDOfkpqu4kS3jP1bnl45xb2ToFSkW+o9r6/8LgmKXD4GJSUdqfPgKp6Rki5b
y+0rbbTG/MOLi7XYwK7c3cG/uLszTvOkbWnteX0lJUHRw8757yEl7av2lPuc
6OLn3kHV13PdrWGF07fuuHbr+lnzH/3Rv+3h78r+vMvPbfyDP/h/evh7TG8/
ZkOu8bzukpKgaNO9Df2QknZUu+N+PlPbKa06Xv/Pkj8+P3r46zAlNV2RlHQl
Kel00Q056zxZufiJnXmkzRc3tRNSEhRJSYOSkjZVuPupR6bOU9p2vP4RU9Km
DTxCSnoMKel0qQ1ZTj8YlDZNP2Kus+lnNY/Z9V9SEhRJSYOSkuprk5I6TEmb
trFPUtKVpKTTPTIl9bZIz6QkKJKSBiUlbapQSuowJW3azH08SxpIfmBuTUmr
8f7ClFQ80W1NSasKoyfVZZnli9XraOHwbaqR0cJhyVSDU83IrzQzfVBSEhQV
T6T0SUraWmd4QT9Y4SkNO17/NHJK2rSlvZkqUtJ8vK1ef9/WFHtbSsrc8e6I
M9HX70lJn+wlPjM93AvTr9ln9TbzIlMgLLMqFs0smVZFi9U3I7PS1FqGJiVB
kZQ0KClpX807UtJU7dym1pdMZZalcHpYOFpmVT66uJSUjzDF1/lZ70xJqzE1
SUkbrXovPEelNmRK5IhlJWGZ/Ivl2qcgnoRTUs0oFl6VDBtcWU+qwnDiuKQk
KArPnAxBStpd+RDHfH0Lo4Flji3F16mJm5Y9kpI2bWxXjqSk6fePjaSkWTQl
Le9yz0pJ3zpXb+vrH6W3M8EhU+CTSArRlFETNPIBpF1KSjWjsh4pCfhIScOS
ko7U3/9hX2ze8h7yrJRULJ9Z15GUVLO9HeoqJb3BjpQULju//r5Yvd1abdTy
CLm3ZPSgnYtFC3zq4kO4bLFk+CJaW758sXBqVk0z8hWmJo5LSoKi1XmVUUhJ
Q6xlt8wNTHgvdOKzpCkWiFazMqt7m/oUk49LqWKeJS3n7n6WtFp2rnzfN/FG
6e0pCBfhlOhSYc9Pvw8a4fTolNUejL5d1bCqLVo+teqwJWF7Uu2PNju60lSP
jUtKgqLoqYD+SUn5GvpxSidkapuyKWmp8ht3U5CJVou3eJYU3erOTcdS0kxK
+soPnOmklDQlniU9NSXlTx0HKz9ez1getqVSEhQduZHjRlJSvoZ/8xd/0cPf
wfuQmqiVT0mZHLQpJVU+S9q9scvNOV7JNXanpNWCU/preC9MSZm5u1NSNDFN
B75xd2W37FZz6jhS+Sn1jOVhWyolQZGUNCgpKV/D7fnoSEqqCUfLwuempPDh
UX5BKak+KOVT0r6I9JiUlLc1Jc2DaDXlD4LfK62KPSYlFR3ckE2nqX2VHynQ
wmN2/ZeUBEVS0qCkpHwNt+ejHSlpdddxWUqKPiqKpqR8UDrrTDLKGWlfSpr3
cuqtlBS1NSW1+3tMb3eeMoqFt54qj3vMrv+SkqBIShqUlJSv4fZ8VJ+SUh/J
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
9aznkwM3cmAMSkp6g3664t6UNK99lZJWZVYTo9FmnhUtkCk/XEoKz+2pO8YO
t6XGw7a3uDmVKSaMP8ViqTA1SkoKuyvfmVM2tkx1aWg5MTOr52/cSUlLmaG3
qQwPY18PSkp6g6664prGRG9v5tPUFASW5ZRpEZSiuWYVf4oRKfp6rJS0PMNn
Lv0XNvM0D9ve4ubUBJmwTCYlrfLUuCkpVDyN5J8lTbHHQJmJ0Qoza5GSOpQZ
essCqbc8lR09KCnpDbrqirMak6knc28z25eSaqZUJqboY6z+ZXp+nlusoXI3
3VtyLjylt3c4n70pKR+L5ilbU9Ld/XFU8Rt3UxB/ootP6a/VZdYiJXUoc7R8
ErfK0Yk8jL08KCnpDbrqirMac6Se6byUlPp+XbR8tMJTeuNEqev7skBqwUsa
eLKHbW9xc46kpDANrV684VnScu6+lBR9ljTbmpKijaRbqSPtqoOae2T2Pj2T
kt6gt644pT3TtH4u8Kk+EU3ZZzrHnxxNiZ8sRacc74pzFa/p0enjXgIetr3F
zTnlWdI7U1I4t5iS5hSTST2rKfm3niV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMnNrUlLqWZKU9EjFZJ1aqn3TuFPPVw0ypKQ36K0rTmnPqpKa
z+uWBc5KSXMg+kqlpFS86m3X1MvfDDzPY7Z3379xV3xRfAg1YkrKS+WX+SCJ
fssunLWckn8rJfWvmKyj0WnoUwo17OVBSUlv0FtXDJqS6rNPqlh0vce7Aurt
+/8lhROXf1LSvX9S0kBWd8tunl/Cjh6UlPQGHXbF8SaFKWmesjUlzR/YRieG
c6PlUykpVYmUxC02BZmmf1KSlPROq4vCp8trNOeSkgYlJb1Bh11xepPma01N
zfmAc/yvvv4Odw2VBr3qSUlnkZK+pKTjRjyTsMmg1wukpJforTcapaT6wlIS
R0QfXA6xN6Wks4SPm290Yz9ISae4dyfS2u3jlH2kpJfosDfObdKm2m67lYk5
sRO43nIPDrE3oz8suuvv7s7gBFLSKYY4e7Cby/2gpKSX6LA3TmzSXYmjw15t
bdnV4t7n1696vrwreCcp6SxOHQ/m0jAoKeklOuyNDpu01QM2YYfU05MX9sZq
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
847e521RvVO2XUqqlAk+xUx0yp7anZLOWvvxSm5fxW4u/YOSkl5IzzRV073i
EoN63kH7vC2qJyVdKZN9wsdJYbEWQal+qROLXaCflsxc8QclJb2Qnmlt09Wn
5uTpBEsnVvdy8/3buMfn87ao3inbLiVVyqek8O2q2FkH5NagVL/2foZMPy2Z
veSU8jxS0gvpmdZ29HD+srXj0z840RTz+fXSP9bB+bwtqnfutktJlYop6ZOI
JKcfkMdTUnjMrCqMvl29WG1U5axMPWFLUq+vd+OqOUJKeiE909rBHg5P5uH9
DNwidf8WzhrF87ao3inbLiVVCrs0GgfCki1O/vUVho1MTY+WrIw8NbMy9dQ0
INyEK7l2D0pKeiE909pZPTylVRa73ikbbutuUdng1Nuwhpu351enbNFwW5c3
7d32pdNT0s1d+auD27LartSU6deen9I7onWTomWivRE2PrU5N75ITbze6YcT
15CSXkjPtHb6hSx/+f75+sfnRw9/LQ6tn3X+g3/w//Xw12jrbt9rm/ZdeKeU
uQn5OeUf/sP/t4e/zNZt2qJVyd/97q97+Nt9ZO7e9qUWKenv/b1/38Nf00hS
GYWapqSimoZ1npLmt1ISO0hJL6RnWrsmJS2vCLffY0tJu7fu9r12ZN/Ntx/R
xYdISZu2aFXy9nx0MCXt3vYlKalyo6Jn7+Ws5ZTorLBka1LSWaSkQUlJL6Rn
WsgHmRY1z/VPg99pFzf/9nwkJWXan597ez7al5IqS96ej1qkpK2kpKcqZrTw
SpQqnLpyLV9kZqUqKS6+bGq7jqoRNokhSEnvpHNOFz2BH+/nmkqmwe+0i1t3
ez6SkjLtz8+9PR9JSfX21SMl0b/bd6WUNCgp6Z10TgstUlLlem+/x959p13s
pfqUtOr5HlJSzdbdvtcO7rvMgsOlpPzH0WHh2/PRiSnpslNWTcfeno+OpKTK
j7YuuEy4M//qoRPsi0FJSe+kc1poFJGKFX7vtFerrr83nsvPS0WrStW/quHI
1kUXn7bknWXhTQs2TUn5rduaZer38qaDodHWzSHlKwwv8/QpEC4Y1hOtM7pg
i63bmmVWogVufJZ0jZqO3ZplwilL+cKNUlJ+A5fTU8WOK7bk8frZ8H5awiZS
0jvpnEZaXJXCm6vVKqZFkFne9NbcGK/uqFOzUhPDGk7ZulWBx6Sk6NbteOhT
s5eje61pSopu3SoQRVNSNPJMi4CTykT1dTbauh1xJvo6P/HZKSnasQdT0mri
/Pq7rotT0moDw+1NTTyu2NX19ZzetrdptItpTUp6J53TyPHrUbHOcBXTrpQU
FkgtXln/vk3Ob9rnpJT0rXD1dlPNJ6ak1da1Tkn11bbYujCtFKdEnw0V5xYf
LbXYuiMpaV+BDlPS1t8l1XTs1ogULjLFUtItz5JWG5iqs8VOLHZ1fT2nt+1t
dnQ7PZCS3knntLPvMlRTYeoyN2VTzLfwKsusJlbeikcnLt9mLsr7fLanpFkY
l74vVm/3VX7i1p2Vkr51rvbypmpbbN2+lJQvti8ltdi63Slp+eL7evXfTZWf
vnU3+nSWkhptY/15PlzqrJL1F6CPe4bDNvU5/ZCS3knntLP1GlRZW+YCN8V+
OhQNOFMiOoX31WFVmYQ1T9mx1TVbt+NZ0mqpuebwudKI37iL7ppMpK2stsXW
pRLQlAhEs/zX6u56lrQqsCMlzVYTl+lpa807tu5EpzxLWhXY8XW7Kfj90SyV
nu76xl1qqR3rOtKS+krC5s1VTUEoixZItWR3q4bzks18HinpnXROUwfPh+EV
LX+Nm7J3yPOC4eOGg8+PonfvRzY2tXUHU1Jq4qaaT0lJmX23Kc5Ed8dyR9+S
kqIFtqakc58lLStssXXHnyWFr/dVu3XrTnQwJUUL7HvcU5OGtla+o0PyG1g/
8bhiV1dWsnqxrPyzyEFh+cyssP5na7SLaU1Keied09qmHq65bcicY6d0Sgpf
hLfTPaSkfIEdKSkajqbD37hrsXWnpKT8Hm+akvIF9qWkVNLZlJJWr1ts3e6U
lJo4veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2/Ti8drtZZqS
kl5L/zQy/aqmWE2d+bmp2+bVrNTbfCCqvPFudBWYtv//ksIHRlPMBd+4q9m6
3SmpPhc3Skk1W1eTX/KRJ1Ogpqq5khZbdzAlTUEmmmIPmx6WkoqmwVNS5TZu
ugTcZUoko08sJWWWDTcztdRTdb6jSZGSXkv/tLA6Ey7ftrsszpHnaxVboqJl
won5YuH0FgfV1OD/D7vvr9HWbc0y0V2T2t2dpKS5PWGEmaeHjY8umH+7mr6s
p8XWbY1IK8uJ0ddSUs137cK3q1mpRW5MSaOYtqekzIuwqvf08PfAu7sVbCYl
vZb+OV30NDhfl5uud+vziEZ/je5Fb89H/aSk4fZd9MdE1//1kJLa/b0zJV3w
9/Kr5OritXwbvv78egXMLLus/7JtuZ2UNCgp6bX0z+lSXdq6qx9/p317PpKS
dm/d7flISmpNSiIv+gTq87KbEClpUFLSa+mf092Ykvph62ydrbve6VtXr0VK
6scpXfRyUywZva1vHU6DkpJeS/+cLtWluhp4qtNTEtdrfZFaps535oV3bvUD
SEmvpX9OFz0NOjcCDyYlDa341MxjtVPow0FJSa+lf1pYnQmdGIFnk5LGVfnd
Qlex49wMDEpKei3904ivtQPvISUNqv465UJ2nPuBQUlJb6aL2tG3wBtIScMJ
/o2K2pS0/G3Rvlnhi7BV0dbOhaNf2EjVH625Zu2nhxopaVBS0pvponb0LfAG
UtJYwohUn5I+2aSTnxW+WGWf6OqihcOloukmU3Nq7alqj5OSBiUlvZkuakff
Am8gJQ0kGpG2pqQWL4opKWz/JxY9wnpqGr+qp75n6klJg5KS3kwXNaV7AejK
6CkptUWpplY2fllPi2u3lDQoKenNdFHNxSLVS6tPtOoXBIAbjZ6SVkstX9TU
nK8nH8r2kZIGJSW9mS76BJ2QOT+nJm6NVwBwu5qUtPo8cPV6OTE1a1VPvnD0
EhzWk2p/uN5UDanGh2s5xekVcg0p6c100acUi+YTaf0i+YkAT+J3SUN72HWq
282RkjZZJdnKRTJVZeqvrOcsUtJAdNHnpJRUWTPAw0hJw3nwtanbTZOS6p3+
UC8ToHYsdZCUNBBd9KlLSamJ89vUhxVnNhTuM73b3d3fNSlpOE89pHsesN02
rDdhLx3vt1QN+Zob7S8paSx6KT8ko3dKlaNY3zK6nu86rqQfMqSksdQfxq0P
+92VjzgSnUAqZXopc0DO05cvVnXOU1ZllnWu6llNT9WwiZQ0Fr2UiTyrWanp
0SmpiTAKB3BIn4SkpLFsOoZbH/CbIlvTlrQmJVWqee6Tv+MKI0x0yifIR8UX
0Tq3kpLGopdSUWj3rJrp0DMX9AydsyIlDWTroSslncV5o9IpKanyRSr+pF6k
Jm4iJY3l5b00BcJZ0berZTP1t2s8NOK4zdM/S1LSKHYct8VL3vJT+tRH9/ml
8pWENWSuy6tqu5K/VWAW9lK4T6PH1Y4XYZ35F6mJm0hJY9FLTelehuOgraGX
ZlLSKI6kpMzNYepONXNzm1+wuN78LW6fQUlKqldMJdGelJK2ckDW0EtN6V7G
4oitp6++pKQh7DtcK1NSZfn6W9OatdSvtwdS0iar50SZiatZyzKbpoSrSE3P
t6RIShqLXmpK9zIWR2w9ffUlJQ3hYEr6pO/zpaQaUtKgTg81UtJY9FJTupex
RG9Ootf36PRMseOfy+2+zWt042R0f0lJ/dt9rNaMnegQOyslHaynH1LSoKSk
l9NLTeleBpI6XDMpqaaG/M1MZr1naVS/0f0lJXXuSESq+TRjziz1H4PkPzwJ
K1y+DctEV9RbKumtPVSSktBR7ehbBpJJSZ9YrlmVj06MLhh90Y6U1JSU9AaZ
jzUMhBpS0qCkJHRUU7qXUVyfkvKjI/XJ8BQI1xJtbfgiXNemAWt0f6Skd5CS
DpKSBiUloaOa0r2MIp+SPkG0Sd0shdPDAFK8Z0g9dYpOX87KPK6qX6SS0f2R
kl4j+jHCjs8W3kkvDUpKQkc1pXsZxfGUlLqPStWZGR2peupDUGXJzBYVGd0f
Kaljpxyfy9GUiUipYd4uHYw1+qSkQUlJ6KimdC+jOJKSMskok5IyK53nZp4E
VTavPlhlWpJq3tZFnkdK6tNZEWn5OjWuo8Nn94cPle0Zi5Q0KCkJHdWU7mUU
xZRU+To/a2uBVAhKldyRknYPUqObbh0/ODcFn5opx4074qSkQUlJ6KimdC+j
qPnOzOrhy5wyVmVSs1J1biqTf72cmBdd5HiPwe1OOTIzlRTrz4/x1PgNK8+f
BIqVb9repnacXrhS5VXjGpdt8mUr6se+9p/eJ8x0L6MY4lidfr2DurfOIXqM
FzrlyFxVsrzNqKl/SqSeZW2r16v6wxrCqvKV9zNCd9+hcY2fe+fH50cPf5cd
J1eu6M///H/q4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3dqSk+nZe
Q0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJSb25JSVV
Ft6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2pKSunP7p
QeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATktpGZlliq+
DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2NgqQWx2fq
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
0wJRUtIpjK9nc2dVr5g+UkmqWF5KWnJA7hPGdmikJiVtSjrHnyWtmrdpIEQ/
1Dp4cZSS6JyUdJzB9XhS0ibhc6LUxNSs1SV4KZy7qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o9K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/dxJSnq0nx3yu9/9dQ9/UtK4DKuXkJIG
JSURCrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSV
oR9SEqHKm0A46OcR9Yd/+H/08Lf12K685O1IYWEN+eRSfJ2fJSXtJiV9SUmb
7PtwhtHZ3YOSkghlus5I50TjpqS5/a2Hw46UFC6SmSUl7SYlfUlJs+IJYVXA
9fQ97OtBSUmEil2nbznF6Clp3op2I2JrSoqWz8/KzJWSMqSkLylpln9OVD+R
57GjByUlEar/KtEFjeHBnpGS5m1pMSI2paRU4dSs6dcfK0lJm6RS0rczV2+/
U6ZApoZ8GSmpQ+H+nX59cpRa6qoGchu3TIOSkgjVd51O5ognpaR5i84dFJtS
0tZnSdOWb+IZ7CuZ/LKatQpNqWI1i0hJPYumpPmcICW9mZTUuczgvd5lm3zN
ip5nU9dduU95mGmRkubzQ5hfwuk1xaInn1QN5x7DJ9Y2tfxdUmYRKaloymac
aXsyOpKSGELqQLr40OV6mQOAHvzcO3/xF/+mh7/LjhMH5G47uk5vs8MURJUp
EX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1
rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMm
ucy3YavX9bP+0eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dO
SmKT3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSP
ZHd3TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuek
JDY52HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGd
mxIpab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL
6M8pPz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhM
RpkyqcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kg
c+6FOnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTW
dUtKmnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt
7TtOUvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWt
TOlbkcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t
+UhKauQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8
VX1KfpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXT
E3+X9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwP
ICV1rj4lTb//d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelG
z+hSKWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4Nya
kqLlU7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfo
U/SW5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5
ZErKX1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNag
eZkMO7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWS
oOjKu19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVB
kXubQUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQl
QZGU1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vnei
k23ppBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC
/v/ccRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl1
9Zt5Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/93f//v9/D3
pDG42pbp10dL9ZXcfj29+KoK7CMlde6F53MH5HFd9aGTDP07/bN9KakFKQm4
khuYzr3wfO6APK7DPuywSbxc0y8+SUkthClpniIlAaeTkjpXcz6fL/Q/Fv+r
wZVU+eXETs7nDsjj+uzD419hmm76sTZP0i4ZrdZyez56XkpaiZ4QijtXSvry
uyQocr/RuZrwsoo/0dQTnT79+n/i6OR87oA8rts+PHjC2ffRMTR9bJRa4+35
6CUpKZyY391bP3vMzK25dPZwVY2SkqBISupc/gwczk2lpB+Lx0yphNXJ+dwB
eVznfbi7eatPjE9qDo91cTJarToTW75Wr+tnhW+lpOXE0KpAZYSp/3xSSoJH
kpI6tzUl1QeoyTfuHq3zbqw886xucqQkilL3xtc3I59ciq8rixWD0lNHSmov
R1PS6jQiJX2kJKhw+6WEvBYpqThXSnqAIbpxayNTiQl6SEZLO1JSuEhq1taU
xOyzKyVNi88Yp+y3MqQkeJL5vEGf8qffzNxw1uRZ0puM0o2bTkHzTc4oW0dT
q7vfrkwbU1K0fGrWtPhK3pu/cReVCkfLAptSUioZLUlJ8Eh9Xl+YbU1JqygU
zkp9AiYlPcxY3VjZ2rE2ika6TUZLm1JSqnBqVhiypKRZJh/NBTalpGVQSl0x
9wUlKQk61/+15uVqwktN6ommJynpwYbrxppz0XAbxVny970d2pSS9j1LkpKi
igeJlPQlJUHRQBedd6o594YP/adAZfkezucOyFMM2o2ZZo91k8wpxt3pW1NS
Pg1Nx36XdHdn9GVfSqr8HFJKgicZ9AL0HvvOvS3+pKSxjNuNTkovN9xjo6gd
Kak+DUlJR+z47HH5Iqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LRUia8zFu6
er1jVjEiSUmhF15Vo6QkKHrSVemRUp9c3eKyTb5mRc/2gG58wCaQd/G55UpT
RX7Z/bep8kd27xGTlPS3pCQoeuoV6vF+W+izwn0cjSd6QGc6QT3P9R+83EJK
6paU9CUlQdHjL1VPJSVR9JjOfMyGvNkbktHSmU/xD7u7M/py9974xY39ICVB
0e3jlLx7T+Ar+UaesrHHK2H2pP486xjjSjVnD+AWUhIUuX51bur4uwGVGWrT
xh6vhNnz+vN5W/RIkhH0T0qCIteyzvWZkjY9aarcTMfhyp6nfc3c3Rl/p7f2
8HXwaDl+sFUu6PiBLykJilwyOjd1lpJOv5F2BKb87JY/+ZP/pYe/e3dQ/1Gu
voUXuGvbD1YSfd3I9b3E8ziK4A1uubBSbxonJQ1xUzeQSUoaxM/++d3v/rqH
v2v21Onj9+IDzPHMcY4ieAN3qp3rLSXNrZJ3WpOSRvGSlNR0pK+qnVeUejGX
z5yLwmWj64IdHEXwBu5v71Xs/3xKmu8Kvq+XU5azVoukaqhPScvGS0n71Oz6
2/ORlFTjwSnpygGeyjLR1JMqFs6K1tNmC3iRBxxFfpcERe5v71UMGpn8spy1
TDphDooWC2dtTUmrrWjZTw9Us+uL4WVpNXHH23tTUuVRVOy36xs2PS4lXdm9
4aqLLz7pTJSatdwcJyuOe8BRJCVBkfvbe00xqwLFiLSakplV+XprSmKHml1f
85QnfB2+KE7sJyXl789Xs645fRUb9oyUVOz8a5yekvL1wD4POIqkJCi6/Zr4
ctFb5eVOqU9JNQFKSupHza4/mJKiJfPF+klJ4akperK64AxW07D6FBNO+Qrf
Rtd7ekqKbtHFpnTYib4ovq2s8DLxcf4aF/f2NR6wXVISFD34JHaBCy4uU08p
ict8Tk1JYbGayntISXNvfNK3Ja2bV9Ow3SlpNTH6OnxxMCWFm3CvVHsyff7Z
8p26fD3tdNXJN3pkPzxgc6QkKHreuWssxcv31DIlrbJPzbMkB8xZanZ9TX6Z
pb5HF86tqTm1lrt8sinp9obVR6Sw8FQKQZX1F1PSss20pp9DT+qTB2yLlARF
Lpr3Cu+4wgJbo1BmVipepdaS+sadY+a4ml2/6VlS5cRpqGdJqwKpBW9v2PGU
lKnkSErKH2O0oLczHtM5D9gKKQmKHnPKGlSx/zP5JZV9puBpUf2TpsqUVNNy
8mp2fbuUtCko3ZKSUgVqJl7fsE1ft1uV/1Zbs2B9SpKMbqTb857RPw/YCikJ
ilxJO5ePMPO9UObXQ5nyYYH6lDQ37/o+eYnWKak+KF2ZkjaVueb0VZNnKyPM
rN2zJKf0e+n8GnqpB1ISFLmkdq4+xbT+Sx0nDqFGihFmviVOTVzelkcXidZw
V0qqtPoQ4O7m/I2aFBNNRvlnTLtT0t398V46v56+up2UBEWuqp3rPyXN7bys
T16i8kHPBX92bt5ZKSkViDalpI/BeB89X09f3U5KgiIpqXNTT2qaek23vMEk
JQ1iqvgHur/Ct5lZqSnFlPRxC3qTTLevTo/Lk+rWM21Y7aYF9x0by/pPObpG
P0RHb/9HSoIK7mwH9dtCVxU6nM4iJY2iMsJc8Le6D7+xT16o5nOk1NsjO+6y
nX5u5aMfn6O3/yMlQQUpaVDdpqSPg+ok4SfMN7q7M7o2dZmSPo+4kRtIsbdX
Qyn1+sh6m+7xcysf/eAcvf0fKQkquAXq3MU3w3lbW96oT6Ard4/LX0Tbdku3
vE2xn6dffzU2xdJNqpJlgSmdhaOLL4+N5eLRg2dVW1h5WFW4SOVRN/SROXTj
v6QkKHIN7dzPvfNP/sn/3sPfjuPE0QU9MAwvUJmSPkFc+pTCRTSPRJeNxuT8
2sP8lSmwdZG8oQ/LoRv/JSVBkfvYzg2dkuZNOLdPgK0Mw9YOpqR8JZkr9Wp6
+DZaoD4EVZas2Yp8y8cydOO/pCQokpI694CU9HGYkRb9JHz5Nv9ROfX0XlP1
KemT/Y3SskD41Ka43mixVNjJJLX6cJSpM2/oA3LoxgOV3Hh07hkpad6WU/qE
hyl+qJ6/n6Se3mtnU0r6bDyqV8mlstpPOtFEc1m0wI5nSZWGPhqHbjxQSUq6
V7H/n5SSaraXF9qRkjxa2k2nNVI8k2ee3dRcCJaFw2pTlaymL9/mX0crj4ou
UtFhYx+KQzceqORO416rS0y0QD65fH1fL6csZ0XLLydelpKWWw1f0/aUlHpL
DZ3Wwli9mhlTl9U5Vo+tDN34L79LgiIp6V5T7FPBVYFMbFnFn2jqiU5fTrw+
JX0ceCysPpeeJ+YLfB5xo3IXXXe6sbpUSjpo6MZ/SUlQ5Gb1XtHOX+6UVIQJ
p6dSUnHKLSkps/m8TWoUFAs4fo7Qe+fqrT+LAyT6ycMpK62ss7ceexspCYpe
cqcx/So1PXRByUxrP1tSUmUm6iolZTqB90iNgnyB4iyK9N6JOunMyoHTg86b
93hSEhQ9/h618w1ctS1s7eNTUrQfeBUp6UY68Cyd9KSURCUpCYo6DxFHDLFp
8wOjzHOl01NS/u0tKemzfX8Vn9ldqV23PF60D5cTiwU4SDeeonU3rkZEOP0T
jIu5fLSGVW2petqNtaEPvKEb/yUlQdFT7zRG2ahi/09n/y4pP/fGlDRvbzgl
uuqfE//oj/5tD3+jHGyQ4hg+7oI+zCegsBnLpJMqVlnP6dvSrtprDN34LykJ
ih6Zkp60RZkIk8o+U/pRUTRJdZWSPtlPSlfFbs9HUhKP8chrwZWuSUnh6+jz
o7BM9EV4ps3HpXMNfbwN3fgvKQmKXBk7l48w83UtnFKclarh9pQ0b/jn16/V
hQVuz0dSEg/jYN7tlpRU+QwoDEf1i0tJUUM3/ktKgiIpqXM1+eWav+uPkzDx
rebeno+kJJ7H8bzPNSkp9TCoMiXtmNhou0Y/zEZv/0dKggpSUuekpH0paV5k
9fr7tqaYlMRrOaT3ad1vqydB88TlGXL1IlwkGojCelpv0ejH2Ojt/0hJUOFh
KelJ2/IVJoUb9bDhywLF8FJ8nZ8lJfFajuodWnfa9Tul3RpHP8BGb/9HSoIK
19/9NvWkbcn7baHPCo+oCWv7UtL0+8dGUhLkObC3elhKarq6EY+uHj4/PJGU
BEVDj/HQk7Yl79kpaUlKgrs4trdq+vDlsut16xUNelxFmz3otnykJKggJQ3q
PSlpZT5iaxJNJhOFE/dFJCmJZ3N4b6XH8obun1Xjh94WKQmKpKRBvTYlzXan
pJmUBDUc4Zs87Kp6rtF7RkqCV3nY+fxJ25InJe1ISatFMl/Dk5JgyUG+lR4L
PaNPllsx9BZJSVAkJTGoylCT+dnR8V8kvS0lhb8Re5W7u/9memArx88n+38G
H9S8IY/ZIiDlSeeuT99nreWVYv5v/jI6BQ/3M/srOveaDrnlKJo2pqS5f1Jv
paSUh93k7KYftm57PG3epFGfDNobl7m71883SUnwGg87j3W7LdOvz+hTp9lU
sXBWvv5oDU1d3/PTgVxz7l+3R90pnr11+7y5TzZt+8/CPz4/evh78y7jdA+7
cQJSHjbY+9yWTKipzDuZ1/nVSUlS0m4POzmc682dk9r26Nns9nwkJXG6Zwx/
v0uComcM9lmf25Jp1V0pafV1iOjbTyzNLWcVH2ClCp9CSmrtqdt1lpf3T/7c
NU+5PR9JSbTwgCNKSoKih6WkPvWWklbZJx92ookpmp7Ct9FVnGXqyelbd7tH
btTpntpLldu1KhYuNUlJXOLGk/+9jnSalARFxwcaRZkeDmdN6YxTc24MF9lU
ZkrEnOiLcGK0hQ6w4dhl9R7ZV/UblR/pUywlzaeI7+tw+jxrfl18G50iJT3e
KWFhaEd6QEqCopefYa6RiUKbUlK4bDGPXJ+Siqujf+fusulXq4k73tY0+LIz
2yMP79UYn0d38YwUzgrTyirXRKdnJkZfp+ZKSQ9mny7t6A0pCYoelpK63ZZU
lskElvBtdEo4a1POSpXPv0jNLU5nCKfvr8pjrDixpv7MxBbH4ZOO7Snmkxjy
qwWjs1aBJROaUtEmM1dKeq2H3becZWu3SElQ9LCzTc/bsrzrWE0JZ4Xl83sq
Wk+02mhtmQWjLz7BjVPqhiqcSOda7KnVwZZZUTi32J4pfYtenHLcIw/s8FyU
mrWcHu3wfEqqyVCZpaZfY9S3Db5x93j2ZsqmnpGSoOhht69P2pZu6eRnuzEl
hcVqGpNPSauofvrWPXI47EhJ0Vn5lDTvkeh38PKpp+YLe1LSI9mVefX9IyVB
kZQ0qN8WLq7wPZ38To1SUhhSwlvx1dzKlqRiV5ieGh26zxsRmV1zYkqq/KJd
zRMoKekl7Mcalb0kJUGRlDSou1JSow/k6UfrZ0mVEzc9S4oeltEp9W2u9/jh
sHoqly+2mnI8JdV86U5Kegn7sYaUBGd52B3vk7Yl78ZnSTxbVykpLLYKRJkc
5FnSWbY+1FtOyceiaA7KT5SS3sx+rCElwVmkpEFJSTTSW0rKN6mYklJ1nujx
p50TU9L8e6KvzMTM20zhTJhq0DFcajW6V5+WLOWX3bSifTXUr+j42SncZCkJ
ziIlDUpKopHTB1H01mU5Mby9yb9N1Ryt87M4yzU63T37tJO58wxLhlMyPyk6
8a+4omfvo5fIZ4HjcaO4xhaKq9gx9KQkOIuUNCgpiUbeM4jOose+pCSakpLq
y9QsJSVBkZQ0KCmJRt4ziM6ix1KmntzdGRw1bUlJy50efb0qlnqRmRs2bzVr
WWZ1EKaaEX0dnVVsTLwTF6QkKDpy+ai+Or3dubvsS0qikcojdt+BvRwRjYZG
dF2tV3TBWuDlVgMt9TZ6kpmC/JIqE30RXTYc+MtZyzL1zahvVbSSVOdESUlQ
tONGounN/yO16DEpiUYuCC+X1S8lwWPUp6TUxMys/Ivi3HyZ1aemxWpTIa5Y
SWZKSEqCoq137+4Hjjix96QkGpGSjqwRaGTolJRq+Y5nSZlKMlOAHepTkudH
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
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 2->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
hJSklB6mS52SuF94x+FzKrzS2qywGRPyZmQo+jZDc9coPfvX9j+fPxb+GTk0
OMe/Lar/OgMM/Ft+j/gklxFSEsbRpKSP7neU4A4pyanwSmuzwmZMyJuRoRjU
DOHiU3qKlIRj/ZCSykqJqVR4XhAScRlxQcg7bU/BEVKSU+GV1maFzZiQNyND
MbQZ6UdLwrcUSEk41g8pqez+vpPmxCQlQe9KpE+FW7JPab5BAZs4cE6FV1qb
FTZjQt7sDMWEltzXotIt6UNKEumXiEIOdWSz/lab90NKKksvFMJgllLS91XR
j98t6VI5LJZWUipsKiXxe0lAlfEbB0pISSewMxTTWpJdY4TPLs9HxlOSHAfS
8TTYEaXN+lvtjj4l/XMR/l8flwpky++UkkqDKceW0o+ax+GP6YPs7iYOUoyU
FLJ8ccBCTAynwiutzQqbMSFvdoZibUq69x6lpKhMtDEbbe6nsgWE8u5SUnpt
L60YDfZFY7P+VrujTDE/SfypFiuFKS8pKR0ueTAvMbZcujQUbhSekq2diqSk
kHDqPSqDzXCsnQqvtDYrbMaEvJkaijmNyS5v7svUlQSWcMsVBKVsroniTzUi
ZR/7SknhFV649U9sZjeb9bfanR9FkEnLlF719yp9i5SUql5GhNjyU/gYSNiY
rVDYS1hm4SiRkkLCqRcWKP2IXXGgneoearpX2IwJeTM1FL0aI9QjrG1ubSlJ
s0WZmLIfY9knjPz9bLUG5WFaW/IufJX7686nNSXJsejeoqn812udE2JLKf5k
X36Vv1Yn7CUso7hkjkJKCgmz5VNYKmc3YjMcZae6h5ruFTZjQt5MDUWvxryp
5+qXkkrfr8uWz1bYZTQ6Kt3fwwKlF05pYGeb9bfaHU2QKZVJ01D0QFO598+S
wmeF2BI+uBSfJd1KVQn7giOlmTZrUmMN4ejDsu6hpnuFzZiQN2tD0aU91+/l
ylV+py77WuEznfefHF2FX1nKbnk/FH1V7+nZ7X5vAZv1t9odTZARyvxzcX5e
SkqfFZJLlGKE1BNtkX8s7W7J+HzxWVLoygmfLb1qVgOxhtlbBmThldZmhc2Y
kDdrQ/GmPaV7UHgJqtZ/6eKPspgyJZV20TwUg2gu5umt32BHlDbrb7VtPy9+
L+mn/FlS+mW8bVKS8KwQW0o/kpL2VspH97OlV41vGlayfNeAILzS2qywGRPy
Zm0ourQnqkTzfl1YoFdKugPRVyklleKVtUOjJy8G9rNNf3+a/sZd9UH1QyiP
KUlWyi/3JEmTTvapcIv8IynJPvn6UIpOri8p0OAoO0VKOoG1oXCakvTZp1Qs
u9/3QwHo6YPMPxfhuY2/VumkpKVISY5Eq2UWz4fgQDsVXmltVtiMCXkzOBTv
m5SmpHvL05R0v2Gb3Zg+my1fSkmlSkhJWOLnSZAZ+m/5PeIlUtIXKemp6Kbw
MXmPRl+kJKfCK63NCpsxIW8Gh6J7k+57jaZmOeC8/6ev3+ChgZLTu94PKakT
UtIXKek9j1cSPOL0foHwSmuzwmZMyJC10RiUkvSFSUl4I/vBpYuj+UNK6iT9
uHmhheNASupi7UHEaMvPU7QhJR3C4Gj0bdKj2pYtZXI6DgLmC4+gi6M56OOM
NqsHAx2QkrpwcfVAM273TnW/Ydm5AzIhQwZHo2OTViUOg6M6WjjUxL3P7696
Hj4UOBMpqRcuHRvj1uAUKekQBkfDYJOe2qALDUqfnhw4GlGXDxwBgJTUCxeQ
jZGSnCIlHcLmaNhslZ739reRU9I5n6fc/Y22AEchJXXENWRXh9wW90NKOoTN
0bDZKj3v7W+j/CzJ++BE3y0sPeu9mwDs4HqyK24WTpGSDmFzNGy2Ss97+9tE
ySgbFryPTNrHhY0BcA6uNlviPuIUKekQZkfDbMOUvLe/QfU7Zt5vB9lPjpa0
BACwAe+3xWORkg5hdjTMNkzJe/sbKH8Tx+/IyJ3y2y9gBH4vCaji3uEUKekQ
ZkfDbMOUvLe/wbEp6d7ut2tAd6QkoIqU5BQp6RBmR8Nsw5S8t/+p6G8aZH8j
yfvtoPpZkuveAX2RkkbgIrMZbhxOkZIOYXk0LLetynXjkVX6vSQ+SwJSpKQR
uMhshpTkFCnpEJZHw3Lbqlw3HiXZbxWSkoAUKWkQrjM7ISU5RUo6hOXRsNy2
KteNh0D+PiHHHfgiJQ3CRWYn3DWcIiUdwvhoGG+ewG/LAeA9UtI43F+2QUpy
ipR0iKGjcVkyrpulvk/eIwDYQUoah/vLNpasT/AeKekQQ0fjr8r/fP5Y+EdK
wkyL3gmwYvXwwwRS0lCcaHvgmukUKekQQ0fjOjglfZhp5yEmfDEO+JCSBuP8
2gOXSqdISYcgJQ3t/vydYhUOd4oxORkpaTTOrw2QkpwiJR2ClDS0+/N3ivm4
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
lX9+f8egrTu9RwgAgFfe39GyNUS3y+jWKaSk0gujLaUfP8nNWl/bm1t8M1KS
U91DTfcKmzEhs6wNS9uHPj+KlFTaIlSbtq3hymZthAEAaLg3Xb+VKkwjSelB
+qMcbUrlNbsuPZW2ZwJSklPdQ033CpsxIbOsDYvllBQ2Un+JszbCADAOv5fk
RVtKevRjdK98mpKqDz7llFTddakxc5CSnOoearpX2IwJmWVtWJQp5rLxN+6E
d9XCMl1HCADsIiU58vT29DQllV7ePSV9kq/YaXYdJayZSElOdQ813StsxoTM
sjYs+pR0q24vFX6fkqKWZ6971kYYAMYhJTmSjRvK8sKP2c93sg+EZjxKSXJL
Hr12DlKSU6Sk01gblkdBZqjmkYnikrURBoBxSEm+aL4RkZYslY+2R7dC4eXp
ffP+MX2Qli/VINR2P1UboSFISU6Fq0SbFTZjQmZZG5YNUlLYF+XdBwD2QEpy
pJp6vGgOPqQkPBKuEm1W2IwJmWVtWNK3mxbq1aNP7o0vANgPKcmFcbe8Ja6m
lLSwy94H/FikpNMwLKNFI7zB/QgASkhJGkJCyf6Y3ke6N8D7XelRL5b3d3kD
0IaUdCBGZqjS8G5zb8LJ9pu9+/VIr0vfSUlKQvCpZqIuR6o5JfXa+/tKlu+i
Gbd+p0hJB2JkhtIML3EJTu03affrkR4paSYh+6QfJ6XFRgQl/as6FpvATktu
3PGdIiUdiJEZ7dHdR3Px5AILI6K13L1+8zs/9+uRXpe+k5KU5JSU/hgV6zUh
nwYl/d7tnDJ2WnI75JKyH1LSgRiZ0RpGWL5tNbz7B3R05Xx+3/p9Tc79eqTX
t++kJKVqSvoUIkn3Cfk+JaVzJqow+2P0IOqU8imhnrQlpcfzLdw13iAlHYiR
Ge3lCKcX83Q9AyxRWr+lT3mxX4/0uvSdlKSUDmk2DqQlR1z89RWmjSxtz5ZU
Rh7NU0I9mgakXZiJe7dTpKQDMTKj9Rrhq0xZbL4uHad3SygbXPoxrWFxf37r
0iN3vZNdrX0PdU9Ji4fyt5d9ifpV2nL9HvmrfCBGNylbJjsaaeNL3Vn4oLRx
vu7TCXOQkg7EyIzW/UYm377/evzn88fCvxFT69ro/zuc7d3yo/bo2KUrJWER
4uLYPeqRu97JmvseGpGSVo/o34ZGEmUUGpqSqjQNM56S7h9JSWgQXhBsVtiM
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
L/cP1OmKsA==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 3->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UxjJ3QLKCjZl0C9bwBp06TbSKkWsdtss48Iq0SrICWRsunuCpCg
Q0uBREUDdSTouIrlJfA66KkOV3L0OL48f/1n7Bn789FPt86xx+Px2GP7e3zO
df+nv/uv/9l/9R9M0/SX//HP//yzf/XXf/gXf/Gv/uY//09+vvkv/vwv//Rf
//mf/Jd/9Od/9Sf/+k/+4j/73X/4c+L/97Ps7/6jafq71wAAAKx8Pp/vfwEA
AF5uGZQAAAAQkQAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJ
AABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUp
CQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAl
KQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACA
JSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAA
gCUpCQAAYElKAgAAWJKSAAAAlqQkAACApRtT0gSM4JbzAwDAjW68C7r3xg+o
dMv5AQDgRjfeBbkBg84ZpADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALyT
lASkGKQAwDtJSUCKQQoAvJOUBKQYpADAO3Wbknb/H1uWi8z/Da1KpmqoX124
VGq9R5p6ZC35pWo2NtrmVI9lSmbqXE4slomuqKb+aNuKm5xqQ75jp8TBlqq2
+DazaZle2ufc2gAARnHjXVBx1atbyso6o/WH95b5ajf1Sary+lk7mhpOj5bc
17aUVJuLKyruynz0KLZwU/2ZttXUn39buV/ys+r3WnHZg6QkAOCdnpSS6u9C
i9U2SkmZ6VubujtWVN6Zb21D/Z18dL9Ha65vYX39m8JXvnmZpm6dUpmSit1y
+liWkgCAd3p2SgpnVd54n56Sdtzw1z9fqJ+yr0k1Zep3Vk0COpiSMsvuO9pv
TEmb1iUlAQCcovOUtFRTYU1VNYtsTUmZ+jett36RU1LSpu5dLpWpNrXeaAOK
i1dWGy1WnFivJnPV7KBQqs5wFcV17du0vE3HBgDAY9x4F1RcdX2yKBZI3SSf
lZJSS21db36RfKjZkZKKjck0MrNFqZZnSrZISdH6823L1J+PNtGaM40sNnVT
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
PK9GD/7V883dB/Nq8XyFdjq8k98lQZGU1Ln6m6WDN1dSUk2Dz+2B01d0yjfB
DtbAJ/haabRA6lCMvq4/klevixXa4/BOUhIUSUmd23Sn1DR3SElvSElnVfJy
U8yqQIuUlD8bSEnATEqCIimpc1LSBX+PSUkHlz2rBqIpaXmy3ZqSlo+J59fL
KZWBSEoCvqQkKJKSOrc7JS1vzKJ3Vv2npGX7o1NW95+ZBStXBBfIHPyrkqtx
PcWC0hSM6+WyNSlpcgmA95GSoMglsnOpu6l8Slq9CG+uhkhJ0fu61ZRwkzM3
hAc37bKRcnBFp7TTaeGIVDhaFqg54KfgA4H8SK+pKnrwuxDA20hJUOTi2LnT
U9K+iJSJEvuOn8q8lv9IPPP5uZR0ezPeLJOP5gL1KakmHOVTUmY4LJvncgDv
ISVBkcti5/alpFVqaJeSNh0/q/vGgymp8n5SSuqkqlcpjosrU1J+UITtdFGA
N5CSoMgFsXMHnyVFp+/LSqm7qeLxkyrWIiXt28aHpaRTamhRFbPUgb2SmTUf
58sX4bKpCosHv0sDPJuUBEUuhZ2rv9tP3R0t3y5fHElJq1uvaLMzc+s3LVUm
nD5JSafW0KIqZvvGYIu//P619+GppCQokpI6tzvRFIPG7rupyIfaix+A1x9R
jVLSj+1J8Hkp6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvqNoR0paPTCqKSkl
ncJZ4lyZcXS9rW1u2jPANaQkKHLV69x04B/u/jrxM+fjN1qbNi1cS2rTolNO
T0mfq8LCKWs5valOFHy5asADSElQ5HrXuboPg++3b9POSnDHA2B9m3ds6VZn
reX01l6z+Qxh98AHeiAlQZErXec6jxKpoFRzUHW+aak2V5Y8otuU1KhOxuUK
AoOSkqDINa5zI0aJT3VK6seJ23XciWs5vcHX9ABj2TSIgB5ISVDk6ta5afyU
NB9jlQfb7hVdQEpqVCcAV5KSoEhK6txYKSn1mGZ5mBXrkZI6T0ntquUZHB4A
PICU1Ln6lDSnkh1zmz5L+gSPljYtu3VdTQ2XkjK1HVyL8wYZW7/LCgC9cSHr
3KZck4lIxTJSUj/rGiIlnVIDj+cSA8CgXMI695iU1Ogbd7sX2WfElJSqcBVd
w+9G7qsWQi400Bu/S4IiF6/O7U5Jqx8HzVOu+cZduBWfNv96w+5F9nlASppi
PhuTbLum8mAuN9APKQmKXLY6ty8lrV5c/ywp3IpGhQ8u1eeKrn+W9AmS1MHK
IcUBAz2QkqBISuqclNR0qT5X1GIVYZ1npaQd5QG4l5QERVJS5w5+4y46/eKU
tPxaV2X53Svat+Ab1lKTknZ84y5TPxS5AMFdpCQocpHq3MFnST2kpB2bfPqy
JzZ+0JRUrDP8ddK59UOKyxBcT0qCIpenztWHmvmRTfh2WtgXkaSkFlVdvJaa
lNSufsjb+tAZOEJKgiJXpc7tyzWpr94d+RsiJaUWX/3o5shzEympdSW8nKsS
XEBKgiLXo85JSUcWn2I+vx72W1c3bkrKVHvix/jOJ5zCtQmakpKgyJWoc7sD
zuobd+9JSdEaVlNWSepg5S1cnJJGXAsAu0lJUCQldS76NOQul23y6TVMUlL7
mq9fC+/hiIJzSUlQdOXdLyf6baHPCnc75YDMxKLPi79x9zmWEPetBU7hagUn
kpKgyHVnUFLSkUqmV/7rDXPN1zwfdGKhBdcsOIWUBEWuOIOSko7Uc3AVFwyZ
Rqu4+FuUzi00kjmAXdSOK3z3+unu7v6LSElQ9KpzwpNISUeqOriK6OLzUDpl
TJ0+Ku+6H3B6oanwMH7bve6JdN3XS/pBSoKiN5wKHklK2l3V8StgJnzNs1oE
sYPu+tTUGYbWluPuhQ8FTqG7Qs/uEykJilxKBiUl3VJbvs7l9A5T0ufyb9wt
13vNini5u47woemojAd3jpQERQ8+AzyblHRLbas6V3di/aekz00ftjvJcIHo
01LHXpEuytM/8FouIoOSkjqsMJWYTlzFKW65gbzlPOP89iqplOQYyNA5NfQS
vJMryKCkpA4rnDr+1xvC+q8f+3etzinuDTIRyQGQomfq6St4IVeQQUlJN9aZ
T0lNV3GiW8b+LU+vnOLeSVAq0i31ntdXfpcERS4fg5KSjtR5cBXPSEmXreX2
lTZaY/7hxcVabGBX7u7gX9zdGad50ra09ry+kpKg6GHn/PeQkvZVe8p9TnTx
c++g6uu57tawwulbd1y7df2s+d/92Z/18Hdlf97l5zb+8R//bQ9/j+ntx2zI
NZ7XXVISFG26t6EfUtKOanfcz2dqO6VVx+v/WfLH50cPfx2mpKYrkpKuJCWd
LrohZ50nKxc/sTOPtPnipnZCSoIiKWlQUtKmCnc/9cjUeUrbjtc/YkratIFH
SEmPISWdLrUhy+kHg9Km6UfMdTb9rOYxu/5LSoIiKWlQUlJ9bVJShylp0zb2
SUq6kpR0ukempN4W6ZmUBEVS0qCkpE0VSkkdpqRNm7mPZ0kDyQ/MrSlpNd5f
mJKKJ7qtKWlVYfSkuiyzfLF6HS0cvk01Mlo4LJlqcKoZ+ZVmpg9KSoKi4omU
PklJW+sML+gHKzylYcfrn0ZOSZu2tDdTRUqaj7fV6+/bmmJvS0mZO94dcSb6
+j0p6ZO9xGemh3th+jX7rN5mXmQKhGVWxaKZJdOqaLH6ZmRWmlrL0KQkKJKS
BiUl7at5R0qaqp3b1PqSqcyyFE4PC0fLrMpHF5eS8hGm+Do/650paTWmJilp
o1Xvheeo1IZMiRyxrCQsk3+xXPsUxJNwSqoZxcKrkmGDK+tJVRhOHJeUBEXh
mZMhSEm7Kx/imK9vYTSwzLGl+Do1cdOyR1LSpo3typGUNP3+sZGUNIumpOVd
7lkp6Vvn6m19/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlYUtKR
+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn198Xq7dbq41aHiH3
lowetHOxaIFPXXwIly2WDF9Ea8uXLxZOzappRr7C1MRxSUlQtDqvMgopaYi1
7Ja5gQnvhU58ljTFAtFqVmZ1b1OfYvJxKVXMs6Tl3N3PklbLzpXv+ybeKL09
BeEinBJdKuz56fdBI5wenbLag9G3qxpWtUXLp1YdtiRsT6r90WZHV5rqsXFJ
SVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJSV/5
gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfwL/7F/9bD38H7
kJqolU9JmRy0KSVVPkvavbHLzTleyTV2p6TVglP6a3gvTEmZubtTUjQxTQe+
cXdlt+xWc+o4Uvkp9YzlYVsqJUGRlDQoKSlfw+356EhKqglHy8LnpqTw4VF+
QSmpPijlU9K+iPSYlJS3NSXNg2g15Y+D3yutij0mJRUd3JBNp6l9lR8p0MJj
dv2XlARFUtKgpKR8Dbfnox0paXXXcVlKij4qiqakfFA660wyyhlpX0qa93Lq
rZQUtTUltft7TG93njKKhbeeKo97zK7/kpKgSEoalJSUr+H2fFSfklIfyR5M
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
nxy4kQNjUFLSG/TTFfempHntq5S0KrOaGI0286xogUz54VJSeG5P3TF2uC01
Hra9xc2pTDFh/CkWS4WpUVJS2F35zpyysWWqS0PLiZlZPX/jTkpaygy9TWV4
GPt6UFLSG3TVFdc0Jnp7M5+mpiCwLKdMi6AUzTWr+FOMSNHXY6Wk5Rk+c+m/
sJmnedj2FjenJsiEZTIpaZWnxk1JoeJpJP8saYo9BspMjFaYWYuU1KHM0FsW
SL3lqezoQUlJb9BVV5zVmEw9mXub2b6UVDOlMjFFH2P1L9Pz89xiDZW76d6S
c+Epvb3D+exNSflYNE/ZmpLu7o+jit+4m4L4E118Sn+tLrMWKalDmaPlk7hV
jk7kYezlQUlJb9BVV5zVmCP1TOelpNT366LloxWe0hsnSl3flwVSC17SwJM9
bHuLm3MkJYVpaPXiDc+SlnP3paTos6TZ1pQUbSTdSh1pVx3U3COz9+mZlPQG
vXXFKe2ZpvVzgU/1iWjKPtM5/uRoSvxkKTrleFecq3hNj04f9xLwsO0tbs4p
z5LemZLCucWUNKeYTOpZTcm/9Sypc0Eq+uXISe2pPk8mnKjbSwZ5UtIb9NYV
R9qTugYtT0HF+qe6+FNZrDIlpVaxuysaqTmZh5f+Djek0sO2t9i2I79LyjxL
Cr+M95iUlJlbk5JSz5KkpEcqJuvUUu2bxp16vmqQISW9QW9dcUp7VpXUfF63
LHBWSpoD0VcqJaXiVW+7pl7+ZuB5HrO9+/6Nu+KL4kOoEVNSXiq/zAdJ9Ft2
4azllPxbKal/xWQdjU5Dn1KoYS8PSkp6g966YtCUVJ99UsWi6z3eFVBv3/8v
KZy4/JOS7v2Tkgayult28/wSdvSgpKQ36LArjjcpTEnzlK0paf7ANjoxnBst
n0pJqUqkJG6xKcg0/ZOSpKR3Wl0UPl1eozmXlDQoKekNOuyK05s0X2tqas4H
nON/9fV3uGuoNOhVT0o6i5T0JSUdN+KZhE0GvV4gJb1Eb73RKCXVF5aSOCL6
4HKIvSklnSV83HyjG/tBSjrFvTuR1m4fp+wjJb1Eh71xbpM21XbbrUzMiZ3A
9ZZ7cIi9Gf1h0V1/d3cGJ5CSTjHE2YPdXO4HJSW9RIe9cWKT7kocHfZqa8uu
Fvc+v37V8+VdwTtJSWdx6ngwl4ZBSUkv0WFvdNikrR6wCTuknp68sDdWm/zC
HgAp6SxOIA8mJQ1KSnqJPnujz1bVG739++RT0nuep8zbu5oCryIlncg55Kle
cll8HinpJfrsjT5bVW/09u9T+Sxp9M5ZfbcwNXf0zQT64XzyVC4Wg5KSXqLP
3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6+3co
fsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hxtwta
8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmqePu2lwOikJiqSkQUlJL9Ftb3Tb
sEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6LltRUM3
nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04zzyJ
lDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583LGLfl
AMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOkpJdo
2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp40h7
HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClpUFLS
S0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mfd5KS
LmBwjU5KGpSU9BI3pqT5xwvf16uJ86z89FU9UhIXs5dr6KUXkpKgSEoalJT0
EnelpDABpWblX6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy+OyXlq5WS
aMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2ZfPO
ao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8JZUhLXqxlT
dw29405vXufbC+MyuMYlJQ1KShrLFPOp+Ey4h5SUek4UpqT6t1ISrVUOKCmp
UYXAzPgalJQ0KClpUKutW32sXSx/emOuSUn5iHRXSvo8/WB7ua0DanU1XH58
EX6skX+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3kyUSh
MEzlV9duM/M9cMt6ucCmARVGm1Tkyb/IZJata1nO2rr2aIEiw+FV/C7pYsbX
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
Pm+L6p2y7VJSpUzwKWaiU/bU7pR01tqPV3L7KnZz6R+UlPRCeqapmu4VlxjU
8w7a521RPSnpSpnsEz5OCou1CEr1S51Y7AL9tGTmij8oKemF9Exrm64+NSdP
J1g6sbqXm+/fxj0+n7dF9U7ZdimpUj4lhW9Xxc46ILcGpfq19zNk+mnJ7CWn
lOeRkl5Iz7S2o4fzl60dn/7BiaaYz6+X/rEOzudtUb1zt11KqlRMSZ9EJDn9
gDyeksJjZlVh9O3qxWqjKmdl6glbknp9vRtXzRFS0gvpmdYO9nB4Mg/vZ+AW
qfu3cNYonrdF9U7ZdimpUtil0TgQlmxx8q+vMGxkanq0ZGXkqZmVqaemAeEm
XMm1e1BS0gvpmdbO6uEprbLY9U7ZcFt3i8oGp96GNdy8Pb86ZYuG27q8ae+2
L52ekm7uyl8d3JbVdqWmTL/2/JTeEa2bFC0T7Y2w8anNufFFauL1Tj+cuIaU
9EJ6prXTL2T5y/fP1z8+P3r4a3Fo/azzn/yT/7uHv0Zbd/te27TvwjulzE3I
zyl/8Af/voe/zNZt2qJVyT/90/+ph7/dR+bubV9qkZL+6I/+jx7+mkaSyijU
NCUV1TSs85Q0v5WS2EFKeiE909o1KWl5Rbj9HltK2r11t++1I/tuvv2ILj5E
Stq0RauSt+ejgylp97YvSUmVGxU9ey9nLadEZ4UlW5OSziIlDUpKeiE900I+
yLSoea5/GvxOu7j5t+cjKSnT/vzc2/PRvpRUWfL2fNQiJW0lJT1VMaOFV6JU
4dSVa/kiMytVSXHxZVPbdVSNsEkMQUp6J51zuugJ/Hg/11QyDX6nXdy62/OR
lJRpf37u7flISqq3rx4pif7dviulpEFJSe+kc1pokZIq13v7PfbuO+1iL9Wn
pFXP95CSarbu9r12cN9lFhwuJeU/jg4L356PTkxJl52yajr29nx0JCVVfrR1
wWXCnflXD51gXwxKSnonndNCo4hUrPB7p71adf298Vx+XipaVar+VQ1Hti66
+LQl7ywLb1qwaUrKb93WLFO/lzcdDI22bg4pX2F4madPgXDBsJ5ondEFW2zd
1iyzEi1w47Oka9R07NYsE05ZyhdulJLyG7icnip2XLElj9fPhvfTEjaRkt5J
5zTS4qoU3lytVjEtgszyprfmxnh1R52alZoY1nDK1q0KPCYlRbdux0Ofmr0c
3WtNU1J061aBKJqSopFnWgScVCaqr7PR1u2IM9HX+YnPTknRjj2YklYT59ff
dV2cklYbGG5vauJxxa6ur+f0tr1No11Ma1LSO+mcRo5fj4p1hquYdqWksEBq
8cr6921yftM+J6Wkb4Wrt5tqPjElrbaudUqqr7bF1oVppTgl+myoOLf4aKnF
1h1JSfsKdJiStv4uqaZjt0akcJEplpJueZa02sBUnS12YrGr6+s5vW1vs6Pb
6YGU9E46p519l6GaClOXuSmbYr6FV1lmNbHyVjw6cfk2c1He57M9Jc3CuPR9
sXq7r/ITt+6slPStc7WXN1XbYuv2paR8sX0pqcXW7U5Jyxff16v/bqr89K27
0aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn206Fo
wJkS0Sm8rw6ryiSsecqOra7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22LpWA
pkQgmuW/VnfXs6RVgR0pabaauExPW2vesXUnOuVZ0qrAjq/bTcHvj2ap9HTX
N+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4PgyvaPlr
3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSEzfVfEpKyuy7TXEmujuWO/qWlBQt
sDUlnfssaVlhi607/iwpfL2v2q1bd6KDKSlaYN/jnpo0tLXyHR2S38D6iccV
u7qyktWLZeWfRQ4Ky2dmhfU/W6NdTGtS0jvpnNY29XDNbUPmHDulU1L4Iryd
7iEl5QvsSEnRcDQd/sZdi607JSXl93jTlJQvsC8lpZLOppS0et1i63anpNTE
6TXPkvIFtj5Iqv9mXX3lB1NSfYF298+n1Jy6Nk2/Rp6w2KYXj9duL9OUlPRa
+qeR6Vc1xWrqzM9N3TavZqXe5gNR5Y13o6vAtP3/lxQ+MJpiLvjGXc3W7U5J
9bm4UUqq2bqa/JKPPJkCNVXNlbTYuoMpaQoy0RR72PSwlFQ0DZ6SKrdx0yXg
LlMiGX1iKSmzbLiZqaWeqvMdTYqU9Fr6p4XVmXD5tt1lcY48X6vYEhUtE07M
Fwuntziopgb/f9h9f422bmuWie6a1O7uJCXN7QkjzDw9bHx0wfzb1fRlPS22
bmtEWllOjL6Wkmq+axe+Xc1KLXJjShrFtD0lZV6EVb2nh78H3t2tYDMp6bX0
z+mip8H5utx0vVufRzT6a3Qvens+6iclDbfvoj8muv6vh5TU7u+dKemCv5df
JVcXr+Xb8PXn1ytgZtll/Zdty+2kpEFJSa+lf06X6tLWXf34O+3b85GUtHvr
bs9HUlJrUhJ50SdQn5fdhEhJg5KSXkv/nO7GlNQPW2frbN31Tt+6ei1SUj9O
6aKXm2LJ6G1963AalJT0WvrndKku1dXAU52ekrhe64vUMnW+My+8c6sfQEp6
Lf1zuuhp0LkReDApaWjFp2Yeq51CHw5KSnot/dPC6kzoxAg8m5Q0rsrvFrqK
HedmYFBS0mvpn0Z8rR14DylpUPXXKRey49wPDEpKejNd1I6+Bd5AShpO8G9U
1Kak5W+L9s0KX4StirZ2Lhz9wkaq/mjNNWs/PdRISYOSkt5MF7Wjb4E3kJLG
Ekak+pT0ySad/KzwxSr7RFcXLRwuFU03mZpTa09Ve5yUNCgp6c10UTv6FngD
KWkg0Yi0NSW1eFFMSWH7P7HoEdZT0/hVPfU9U09KGpSU9Ga6qCndC0BXRk9J
qS1KNbWy8ct6Wly7paRBSUlvpotqLhapXlp9olW/IADcaPSUtFpq+aKm5nw9
+VC2j5Q0KCnpzXTRJ+iEzPk5NXFrvAKA29WkpNXngavXy4mpWat68oWjl+Cw
nlT7w/Wmakg1PlzLKU6vkGtISW+miz6lWDSfSOsXyU8EeBK/Sxraw65T3W6O
lLTJKslWLpKpKlN/ZT1nkZIGoos+J6WkypoBHkZKGs6Dr03dbpqUVO/0h3qZ
ALVjqYOkpIHook9dSkpNnN+mPqw4s6Fwn+nd7u7+rklJw3nqId3zgO22Yb0J
e+l4v6VqyNfcaH9JSWPRS/khGb1TqhzF+pbR9XzXcSX9kCEljaX+MG592O+u
fMSR6ARSKdNLmQNynr58sapznrIqs6xzVc9qeqqGTaSkseilTORZzUpNj05J
TYRROIBD+iQkJY1l0zHc+oDfFNmatqQ1KalSzXOf/B1XGGGiUz5BPiq+iNa5
lZQ0Fr2UikK7Z9VMh565oGfonBUpaSBbD10p6SzOG5VOSUmVL1LxJ/UiNXET
KWksL++lKRDOir5dLZupv13joRHHbZ7+WZKSRrHjuC1e8paf0qc+us8vla8k
rCFzXV5V25X8rQKzsJfCfRo9rna8COvMv0hN3ERKGoteakr3MhwHbQ29NJOS
RnEkJWVuDlN3qpmb2/yCxfXmb3H7DEpSUr1iKon2pJS0lQOyhl5qSvcyFkds
PX31JSUNYd/hWpmSKsvX35rWrKV+vT2QkjZZPSfKTFzNWpbZNCVcRWp6viVF
UtJY9FJTupexOGLr6asvKWkIB1PSJ32fLyXVkJIGdXqokZLGopea0r2MJXpz
Er2+R6dnih3/XG73bV6jGyej+0tK6t/uY7Vm7ESH2Fkp6WA9/ZCSBiUlvZxe
akr3MpDU4ZpJSTU15G9mMus9S6P6je4vKalzRyJSzacZc2ap/xgk/+FJWOHy
bVgmuqLeUklv7aGSlISOakffMpBMSvrEcs2qfHRidMHoi3akpKakpDfIfKxh
INSQkgYlJaGjmtK9jOL6lJQfHalPhqdAuJZoa8MX4bo2DVij+yMlvYOUdJCU
NCgpCR3VlO5lFPmU9AmiTepmKZweBpDiPUPqqVN0+nJW5nFV/SKVjO6PlPQa
0Y8Rdny28E56aVBSEjqqKd3LKI6npNR9VKrOzOhI1VMfgipLZraoyOj+SEkd
O+X4XI6mTERKDfN26WCs0SclDUpKQkc1pXsZxZGUlElGmZSUWek8N/MkqLJ5
9cEq05JU87Yu8jxSUp/OikjL16lxHR0+uz98qGzPWKSkQUlJ6KimdC+jKKak
ytf5WVsLpEJQquSOlLR7kBrddOv4wbkp+NRMOW7cESclDUpKQkc1pXsZRc13
ZlYPX+aUsSqTmpWqc1OZ/OvlxLzoIsd7DG53ypGZqaRYf36Mp8ZvWHn+JFCs
fNP2NrXj9MKVKq8a17hsky9bUT/2tf/0PmGmexnFEMfq9Osd1L11DtFjvNAp
R+aqkuVtRk39UyL1LGtbvV7VH9YQVpWvvJ8RuvsOjWv83Ds/Pj96+LvsOLly
RX/5l/9DD39SUod0L6MY4liVknrjd0m9aTEuVlNOSUmZiau8syMl1bfzGlJS
56Skpiu6PR8dSUmfns4kj6R7GUIPB2rNvcSRR+fn1tlDj91OSurNLSmpsvCm
lHTkWVKqVXeRkjonJTVd0e35SErqme5lCDceqC2eEF1goKa2IyV15fRPD1Jv
i2NWSlqSkjonJTVd0e35SErqme5lCFLSVgM1tR0pqR8tDshpITUrs1Txbfg6
fJGZXlP56X2yQz8tIUpKarqiTGyZLd+u5qZeLwtLScOZYu5uFCS1OD5Ttyup
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmn7/735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6LeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7//qN/1MPfk8bg
alumXx8t1Vdy+/X04qsqsI+U1LkXns8dkMd11YdOMvTv9M/2paQWpCTgSm5g
OvfC87kD8rgO+7DDJvFyTb/4JCW1EKakeYqUBJxOSupczfl8vtD/WPyvBldS
5ZcTOzmfOyCP67MPj3+Fabrpx9o8SbtktFrL7fnoeSlpJXpCKO5cKenL75Kg
yP1G52rCyyr+RFNPdPr06/+Jo5PzuQPyuG778OAJZ99Hx9D0sVFqjbfno5ek
pHBifndv/ewxM7fm0tnDVTVKSoIiKalz+TNwODeVkn4sHjOlElYn53MH5HGd
9+Hu5q0+MT6pOTzWxclotepMbPlava6fFb6VkpYTQ6sClRGm/vNJKQkeSUrq
3NaUVB+gJt+4e7TOu7HyzLO6yZGSKErdG1/fjHxyKb6uLFYMSk8dKam9HE1J
q9OIlPSRkqDC7ZcS8lqkpOJcKekBhujGrY1MJSboIRkt7UhJ4SKpWVtTErPP
rpQ0LT5jnLLfypCS4Enm8wZ9yp9+M3PDWZNnSW8ySjduOgXNNzmjbB1Nre5+
uzJtTEnR8qlZ0+IreW/+xl1UKhwtC2xKSalktCQlwSP1eX1htjUlraJQOCv1
CZiU9DBjdWNla8faKBrpNhktbUpJqcKpWWHIkpJmmXw0F9iUkpZBKXXF3BeU
pCToXP/XmperCS81qSeanqSkBxuuG2vORcNtFGfJ3/d2aFNK2vcsSUqKKh4k
UtKXlARFA1103qnm3Bs+9J8CleV7OJ87IE8xaDdmmj3WTTKnGHenb01J+TQ0
Hftd0t2d0Zd9Kanyc0gpCZ5k0AvQe+w797b4k5LGMm43Oim93HCPjaJ2pKT6
NCQlHbHjs8fli6jOr6pRUhIUjX4lejwpiX1G78bR288mz0hGS5nwMm/p6vWO
WcWIJCWFXnhVjZKSoOhJV6VHSn1ydYvLNvmaFT3bA7rxAZtA3sXnlitNFfll
99+myh/ZvUdMUtLfk5Kg6KlXqMf7baHPCvdxNJ7oAZ3pBPU813/wcgspqVtS
0peUBEWPv1Q9lZRE0WM68zEb8mZvSEZLZz7FP+zuzujL3XvjFzf2g5QERbeP
U/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj7wZUZqhNG3u8
EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVzd2f8g97aw9fB
o+X4wVa5oOMHvqQkKHLJ6NzUWUo6/UbaEZjys1v++T//33v4u3cH9R/l6lt4
gbu2/WAl0deNXN9LPI+jCN7glgsr9aZxUtIQN3UDmaSkQfzsn3/7b//bHv6u
2VOnj9+LDzDHM8c5iuAN3Kl2rreUNLdK3mlNShrFS1JS05G+qnZeUerFXD5z
LgqXja4LdnAUwRu4v71Xsf/zKWm+K/i+Xk5ZzlotkqqhPiUtGy8l7VOz62/P
R1JSjQenpCsHeCrLRFNPqlg4K1pPmy3gRR5wFPldEhS5v71XMWhk8sty1jLp
hDkoWiyctTUlrbaiZT89UM2uL4aXpdXEHW/vTUmVR1Gx365v2PS4lHRl94ar
Lr74pDNRatZyc5ysOO4BR5GUBEXub+81xawKFCPSakpmVuXrrSmJHWp2fc1T
nvB1+KI4sZ+UlL8/X8265vRVbNgzUlKx869xekrK1wP7POAokpKg6PZr4stF
b5WXO6U+JdUEKCmpHzW7/mBKipbMF+snJYWnpujJ6oIzWE3D6lNMOOUrfBtd
7+kpKbpFF5vSYSf6ovi2ssLLxMf5a1zc29d4wHZJSVD04JPYBS64uEw9pSQu
8zk1JYXFairvISXNvfFJ35a0bl5Nw3anpNXE6OvwxcGUFG7CvVLtyfT5Z8t3
6vL1tNNVJ9/okf3wgM2RkqDoeeeusRQv31PLlLTKPjXPkhwwZ6nZ9TX5ZZb6
Hl04t6bm1Fru8smmpNsbVh+RwsJTKQRV1l9MScs205p+Dj2pTx6wLVISFLlo
3iu84woLbI1CmVmpeJVaS+obd46Z42p2/aZnSZUTp6GeJa0KpBa8vWHHU1Km
kiMpKX+M0YLeznhM5zxgK6QkKHrMKWtQxf7P5JdU9pmCp0X1T5oqU1JNy8mr
2fXtUtKmoHRLSkoVqJl4fcM2fd1uVf5bbc2C9SlJMrqRbs97Rv88YCukJChy
Je1cPsLM90KZXw9lyocF6lPS3Lzr++QlWqek+qB0ZUraVOaa01dNnq2MMLN2
z5Kc0u+l82vopR5ISVDkktq5+hTT+i91nDiEGilGmPmWODVxeVseXSRaw10p
qdLqQ4C7m/N3alJMNBnlnzHtTkl398d76fx6+up2UhIUuap2rv+UNLfzsj55
icoHPRf82bl5Z6WkVCDalJI+BuN99Hw9fXU7KQmKpKTOTT2paeo13fIGk5Q0
iKniH+j+Ct9mZqWmFFPSxy3oTTLdvjo9Lk+qW8+0YbWbFtx3bCzrP+XoGv0Q
Hb39HykJKrizHdRvC11V6HA6i5Q0isoIc8Hf6j78xj55oZrPkVJvj+y4y3b6
uZWPfnyO3v6PlAQVpKRBdZuSPg6qk4SfMN/o7s7o2tRlSvo84kZuIMXeXg2l
1Osj6226x8+tfPSDc/T2f6QkqOAWqHMX3wznbW15oz6Brtw9Ln8Rbdst3fI2
xX6efv3V2BRLN6lKlgWmdBaOLr48NpaLRw+eVW1h5WFV4SKVR93QR+bQjf+S
kqDINbRzP/fOX//1f9fD347jxNEFPTAML1CZkj5BXPqUwkU0j0SXjcbk/NrD
/JUpsHWRvKEPy6Eb/yUlQZH72M4NnZLmTTi3T4CtDMPWDqakfCWZK/Vqevg2
WqA+BFWWrNmKfMvHMnTjv6QkKJKSOveAlPRxmJEW/SR8+Tb/UTn19F5T9Snp
k/2N0rJA+NSmuN5osVTYySS1+nCUqTNv6ANy6MYDldx4dO4ZKWnellP6hIcp
fqiev5+knt5rZ1NK+mw8qlfJpbLaTzrRRHNZtMCOZ0mVhj4ah248UElKulex
/5+Ukmq2lxfakZI8WtpNpzVSPJNnnt3UXAiWhcNqU5Wspi/f5l9HK4+KLlLR
YWMfikM3HqjkTuNeq0tMtEA+uXx9Xy+nLGdFyy8nXpaSllsNX9P2lJR6Sw2d
1sJYvZoZU5fVOVaPrQzd+C+/S4IiKeleU+xTwVWBTGxZxZ9o6olOX068PiV9
HHgsrD6XnifmC3wecaNyF113urG6VEo6aOjGf0lJUORm9V7Rzl/ulFSECaen
UlJxyi0pKbP5vE1qFBQLOH6O0Hvn6q0/iwMk+snDKSutrLO3HnsbKQmKXnKn
Mf0qNT10QclMaz9bUlJlJuoqJWU6gfdIjYJ8geIsivTeiTrpzMqB04POm/d4
UhIUPf4etfMNXLUtbO3jU1K0H3gVKelGOvAsnfSklEQlKQmKOg8RRwyxafMD
o8xzpdNTUv7tLSnps31/FZ/ZXaldtzxetA+XE4sFOEg3nqJ1N65GRDj9E4yL
uXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3xpQ0b284Jbrq
nxP/3Z/9WQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7aawzd+C8pCYoe
mZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GVrklJ4evo86Ow
TPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faUNG/459ev1YUF
bs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnlmr/rj5Mw8a3m
3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLnpKR9KWleZPX6
+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo7f9ISVDhYSnp
SdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/ARm//R0qCCtff
/Tb1pG3J+22hzwqPqAlr+1LS9PvHRlIS5Dmwt3pYSmq6uhGPrh4+PzyRlARF
Q4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8pCSoICUN6j0p
aWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSkQb02Jc12p6SZ
lAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OSYMlBvpUeCz2j
T5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/ZnpgK8fPJ/t/Bh/U
vCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655SiaNqakuX9Sb6Wk
lIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3Tr8/oU6fZVLFw
Vr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4e/Mu43QPu3EC
Uh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8JCVxumcMf79L
gqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anbdZaX90/+3DVP
uT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl6snpW3e7R27U
6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemMU3NuDBfZVGZK
xJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35dfBudIiU93ilh
YWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJO97WNPiyM9sj
D+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmKHpaSut2WVJbJ
BJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GTju0p5pMY8qsF
o7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hNCWeF5fN7KlpP
tNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy3CMP7PBclJq1
nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qWbunkZ7sxJYXF
ahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZlXn1/SMlQZGU
NKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZldc2JKqvyiXc0T
KCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbRKfVtrvf44bB6
KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cpKSy2CkSZHORZ
0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjepmJJSdZ7o8aed
E1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o+Nkp3GQpCc4i
JQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMMS4ZTMj8pOvGv
uKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLHvqQkmpKS6svU
LCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6kZkbNm81a1lm
dRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bfgb0cEY2GRnRd
rVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0klTnRElJULTj
RqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWnpsVqUyGuWElm
SkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJTgB3qU5LnR6c4
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
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 4->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
Nm3gEVLSY0hJp0ttyHL6waC0afoRc51NP6t5zK7/kpKgSEoalJRUX5uU1GFK
2rSNfZKSriQlne6RKam3RXomJUGRlDQoKWlThVJShylp02bu41nSQPIDc2tK
Wo33F6ak4olua0paVRg9qS7LLF+sXkcLh29TjYwWDkumGpxqRn6lmemDkpKg
qHgipU9S0tY6wwv6wQpPadjx+qeRU9KmLe3NVJGS5uNt9fr7tqbY21JS5o53
R5yJvn5PSvpkL/GZ6eFemH7NPqu3mReZAmGZVbFoZsm0KlqsvhmZlabWMjQp
CYqkpEFJSftq3pGSpmrnNrW+ZCqzLIXTw8LRMqvy0cWlpHyEKb7Oz3pnSlqN
qUlK2mjVe+E5KrUhUyJHLCsJy+RfLNc+BfEknJJqRrHwqmTY4Mp6UhWGE8cl
JUFReOZkCFLS7sqHOObrWxgNLHNsKb5OTdy07JGUtGlju3IkJU1/eGwkJc2i
KWl5l3tWSvrWuXpbX/8ovZ0JDpkCn0RSiKaMmqCRDyDtUlKqGZX1SEnAR0oa
lpR0pP7+D/ti85b3kGelpGL5zLqOpKSa7e1QVynpDXakpHDZ+fX3xert1mqj
lkfIvSWjB+1cLFrgUxcfwmWLJcMX0dry5YuFU7NqmpGvMDVxXFISFK3Oq4xC
ShpiLbtlbmDCe6ETnyVNsUC0mpVZ3dvUp5h8XEoV8yxpOXf3s6TVsnPl+76J
N0pvT0G4CKdElwp7fvpD0AinR6es9mD07aqGVW3R8qlVhy0J25Nqf7TZ0ZWm
emxcUhIURU8F9E9KytfQj1M6IVPblE1JS5XfuJuCTLRavMWzpOhWd246lpJm
UtJXfuBMJ6WkKfEs6akpKX/qOFj58XrG8rAtlZKg6MiNHDeSkvI1/MVf/Jse
/g7eh9RErXxKyuSgTSmp8lnS7o1dbs7xSq6xOyWtFpzSX8N7YUrKzN2dkqKJ
aTrwjbsru2W3mlPHkcpPqWcsD9tSKQmKpKRBSUn5Gm7PR0dSUk04WhY+NyWF
D4/yC0pJ9UEpn5L2RaTHpKS8rSlpHkSrKX8U/F5pVewxKano4IZsOk3tq/xI
gRYes+u/pCQokpIGJSXla7g9H+1ISau7jstS0hR7VBRNSfmgdNaZZJQz0r6U
NO/l1FspKWprSmr395je7jxlFAtvPVUe95hd/yUlQZGUNCgpKV/D7fmoPiWl
PpI9mJKmQGb6qswqUkUXb5eS6rf9XvsSTYu/IbrrICnpdFLSVo/Z9V9SEhRJ
SYOSkvI1FMPLUmr6PHdVMlxwR0qaKznYD9HAcsvfuWeS/s9LUtKVpKTTnT5g
5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfwdc2L
1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVeMzdV
JrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fas7cO
9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1SUk3N
q6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVzO8Qm
UlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5CkpE2k
JCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGspqwe
FVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJc5l7
TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7NyXfee
LpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0mJLm
wrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLblDQv
cv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDnK2hk
9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtMr3R3
r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+MsUtLj
TYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLSoKSk
x0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlISFElJ
g5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xXEODx
pCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r+v/e
H1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6/j/x
LLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8lQZGU
NCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6tHT7
Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhKGpSU
9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw362qm
AzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlvcG9X
rPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVtGMAQ
pCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4BneSO
4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vricjM6
9wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9K/Y1
4PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+VbmkS
cLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0BmhhOcyL
ozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX38Fk
ndUtUOPf/MVf9PN3d2esLcdjcWz+LPBP/+n/0sPfvacRKalSuJum6pTkejE6
u29QUtIbdNIV5zaj5qqRmvtz+o/Pjx7+Otk1vMfPbDL9HAEd/PWQklanESmJ
dmpS0qfuN0oMR0oalJT0Bp10RaNmZE4+qVlSEq8lJWWkElOq8O35SEoaSCbv
7JvFQKSkQUlJb9BJVzRtRvhoKfMtBSmJ15KSMubvO9UMTCmJelMgnLWcEp1V
8w0K+mTHDUpKeoN+uuKClsznotQl6SMlZdXfImZy6EAetr3F5klJGeGJItOZ
qZT0XWr19jslvFVeFgsrSRXuKiX5XRIUdX7hIEVKeoN+uuKylkTvMZZzb89H
naekfBwI+7PDDan0sO0tbk59Spr/jYXv61SBaPknpaRUZ+ZjS+ptzevl2/CF
lNSznk8O3MiBMSgp6Q366Yp7U9K89lVKWpVZTYxGm3lWtECm/HApKTy3p+4Y
O9yWGg/b3uLmVKaYMP4Ui6XC1CgpKeyufGdO2dgy1aWh5cTMrJ6/cSclLWWG
3qYyPIx9PSgp6Q266oprGhO9vZlPU1MQWJZTpkVQiuaaVfwpRqTo67FS0vIM
n7n0X9jM0zxse4ubUxNkwjKZlLTKU+OmpFDxNJJ/ljTFHgNlJkYrzKxFSupQ
ZugtC6Te8lR29KCkpDfoqivOakymnsy9zWxfSqqZUpmYoo+x+pfp+XlusYbK
3XRvybnwlN7e4Xz2pqR8LJqnbE1Jd/fHUcVv3E1B/IkuPqW/VpdZi5TUoczR
8kncKkcn8jD28qCkpDfoqivOasyReqbzUlLq+3XR8tEKT+mNE6Wu78sCqQUv
aeDJHra9xc05kpLCNLR68YZnScu5+1JS9FnSbGtKijaSbqWOtKsOau6R2fv0
TEp6g9664pT2TNP6ucCn+kQ0ZZ/pHH9yNCV+shSdcrwrzlW8pkenj3sJeNj2
FjfnlGdJ70xJ4dxiSppTTCb1rKbk33qW1LkgFf1y5KT2VJ8nE07U7SWDPCnp
DXrriiPtSV2DlqegYv1TXfypLFaZklKr2N0VjdSczMNLf4cbUulh21ts25Hf
JWWeJYVfxntMSsrMrUlJqWdJUtIjFZN1aqn2TeNOPV81yJCS3qC3rjilPatK
aj6vWxY4KyXNgegrlZJS8aq3XVMvfzPwPI/Z3n3/xl3xRfEh1IgpKS+VX+aD
JPotu3DWckr+rZTUv2KyjkanoU8p1LCXByUlvUFvXTFoSqrPPqli0fUe7wqo
t+//lxROXP5JSff+SUkDWd0tu3l+CTt6UFLSG3TYFcebFKakecrWlDR/YBud
GM6Nlk+lpFQlUhK32BRkmv5JSVLSO60uCp8ur9GcS0oalJT0Bh12xelNmq81
NTXnA87xv/r6O9w1VBr0qiclnUVK+pKSjhvxTMImg14vkJJeorfeaJSS6gtL
SRwRfXA5xN6Uks4SPm6+0Y39ICWd4t6dSGu3j1P2kZJeosPeOLdJm2q77VYm
5sRO4HrLPTjE3oz+sOiuv7s7gxNISacY4uzBbi73g5KSXqLD3jixSXcljg57
tbVlV4t7n1+/6vnyruCdpKSzOHU8mEvDoKSkl+iwNzps0lYP2IQdUk9PXtgb
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
Zs87ep+3RfVO2XYpqVIm+BQz0Sl7andKOmvtxyu5fRW7ufQPSkp6IT3TVE33
iksM6nkH7fO2qJ6UdKVM9gkfJ4XFWgSl+qVOLHaBfloyc8UflJT0QnqmtU1X
n5qTpxMsnVjdy833b+Men8/bonqnbLuUVCmfksK3q2JnHZBbg1L92vsZMv20
ZPaSU8rzSEkvpGda29HD+cvWjk//4ERTzOfXS/9YB+fztqjeudsuJVUqpqRP
IpKcfkAeT0nhMbOqMPp29WK1UZWzMvWELUm9vt6Nq+YIKemF9ExrB3s4PJmH
9zNwi9T9WzhrFM/bonqnbLuUVCns0mgcCEu2OPnXVxg2MjU9WrIy8tTMytRT
04BwE67k2j0oKemF9ExrZ/XwlFZZ7HqnbLitu0Vlg1Nvwxpu3p5fnbJFw21d
3rR325dOT0k3d+WvDm7LartSU6Zfe35K74jWTYqWifZG2PjU5tz4IjXxeqcf
TlxDSnohPdPa6Rey/OX75+sfnx89/LU4tKYH/X+Ho1t3+17btO/CO6XMTcjP
Kb/99lc9/GW2btMWrUr+i3/x3/fwt/vI3L3tSy1S0v/wx3/cw1/TSFIZhZqm
pKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72vXZk3823H9HFh0hJ
m7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZpKRBSUkvpGdayAeZ
FjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSkraSkpypmtPBKlCqc
unItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+eaSqbB77SLW3d7PpKS
Mu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6b7/H3n2nXeyl+pS0
6vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZNx96ej46kpMqPti64
TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89LRatK1b+q4cjWRRef
tuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQLhjWE60zumCLrdua
ZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx+tnwflrCJlLSO+mc
RlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHHpKTo1u146FOzl6N7
rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkpKdqxB1PSauL8+ruu
i1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etRsc5wFdOulBQWSC1e
Wf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0Up0SfDRXnFh8ttdi6
IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4sdnV9Pae37W12dDs9
kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yuyvt8tqekWRiXvi9W
b/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn54vt69d9NlZ++dTf6
dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/UaVFlb5gI3xX46FA04
UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvumkykray2xdalEtCU
CESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjxdbsp+P3RLJWe7vrG
XWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemddE5TB8+H4RUtf42b
snfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcpzkR3x3JH35KSogW2
pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2Vr6jQ/IbWD/xuGJX
V1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrltyJxjp3RKCl+Et9M9
pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmUklavW2zd7pSUmji9
5llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb9OLx2u1lmpKSXkv/
NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdGU8wF37ir2brdKak+
FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaSiqbBU1LlNm66BNxl
SiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzOkedrFVuiomXCifli
4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eNjy6Yf7uavqynxdZt
jUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw98C7uxVsJiW9lv45
XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQktr9vTMlXfD38qvk
6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqrH3+nfXs+kpJ2b93t
+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2tu97pW1evRUrqxyld
9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqmznfmhXdu9QNISa+l
f04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0YgWeTksZV+d1CV7Hj
3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova0bfAG0hJwwn+jYra
lLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLSm+midvQt8AZS0ljC
iFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IGJSW9mS5qR98CbyAl
DSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLeTBc1pXsB6MroKSm1
RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuNnpJWSy1f1NScrycf
yvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5MTVrVU++cPQSHNaT
an+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP4ndJQ3vYdarbzZGS
Nlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1qdtNk5Lqnf5QLxOg
dix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4Tz2kex6w3TasN2Ev
He+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8ypKSx1B/GrQ/73ZWP
OBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQWvZSJPKtZqenRKamJ
MAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4wojTHTKJ8hHxRfROreS
ksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikpqfJFKv6kXqQmbiIl
jeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve8lP61Ef3+aXylYQ1
ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN6V6G46CtoZdmUtIo
jqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZyQNbQS03pXsbiiK2n
r76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nLMpumhKtITc+3pEhK
Goteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS0lj0UlO6l7FEb06i
1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUdrKcfUtKgpKSX00tN
6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPOLPUfg+Q/PAkrXL4N
y0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3RjpTUlJT0BpmPNQyE
GlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YBa3R/pKR3kJIOkpIG
JSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8rqpfpJLR/ZGSXiP6
McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQZcnMFhUZ3R8pqWOn
HJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiTkjIrnedmngRVNq8+
WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQoKQkd1ZTuZRTFlFT5
Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRBSUnoqKZ0L6Oo+c7M
6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvPj/HU+A0rz58EipVv
2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+vYO6t84heowXOuXI
XFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ9758fnRw9/lx0nV67o
n/yT/7WHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7ZkZLq23kNKalz
UlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl9eaWlFRZeFNK
OvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uRkrpy+qcHqbfF
MSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQmpVZqvg2fB2+
yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcKklocn6nbldRd
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmv7w735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6PeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7bb3/Vw9+TxuBq
W6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/alpBakJOBKbmA6
98LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+0P9Y/K8GV1Ll
lxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo7lwp6cvvkqDI
/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSxUWqNt+ejl6Sk
cGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+80kpCR5JSurc
1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxKTx0pqb0cTUmr
04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnhIqlZW1MSs8+u
lDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03OaNsHU2t7n67
Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2NSWtolA4K/UJ
mJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSSlkEpdcXcF5Sk
JOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra9yxJSooqHiRS
0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcYd6dvTUn5NDQd
+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3ccI+NonakpPo0
JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZLmfAyb+nq9Y5Z
xYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0DexeeWK00V+WX3
36bKH9m9R0xS0t+QkqDoqVeox/t9oc8K93E0nugBnekE9TzXf/ByCympW1LS
l5QERY+/VD2VlETRYzrzMRvyZm9IRktnPsU/7O7O6Mvde+MXN/aDlARFt49T
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
8tEaVrWl6mk31oY+8IZu/JeUBEVPvdMYZaOK/T+d/buk/NwbU9K8veGU6Kp/
Tvztt7/q4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuNoRv/JSVB0SNT
0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1KSl8HX1+FJaJ
vgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLmDf/8+rW6sMDt
+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zzd/1xEia+1dzb
85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyUtC8lzYusXn/f
1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739HykJKjwsJT1p
W77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo7f9ISVDh+rvf
pp60LXm/L/RZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHVw+eHJ5KSoGjo
MR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+UBBWkpEG9JyWt
zEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo16ak2e6UNJOS
oIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIsOci30mOhZ/TJ
ciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl+Plk/8/gg5o3
5DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPGlDT3T+qtlJTy
sJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1GX3qNJsqFs7K
1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v3mWc7mE3TkDK
wwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+kJE73jOHvd0lQ
9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO8vL+yZ+75im3
5yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9OX3rbvfIjTrd
U3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFqzo3hIpvKTImY
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 5->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
ISU9hpR0utSGLKcfDEqbph8x19n0s5rH7PovKQmKpKRBSUn1tUlJHaakTdvY
JynpSlLS6R6ZknpbpGdSEhRJSYOSkjZVKCV1mJI2beY+niUNJD8wt6ak1Xh/
YUoqnui2pqRVhdGT6rLM8sXqdbRw+DbVyGjhsGSqwalm5FeamT4oKQmKiidS
+iQlba0zvKAfrPCUhh2vfxo5JW3a0t5MFSlpPt5Wr79va4q9LSVl7nh3xJno
6/ekpE/2Ep+ZHu6F6dfss3qbeZEpEJZZFYtmlkyrosXqm5FZaWotQ5OSoEhK
GpSUtK/mHSlpqnZuU+tLpjLLUjg9LBwtsyofXVxKykeY4uv8rHempNWYmqSk
jVa9F56jUhsyJXLEspKwTP7Fcu1TEE/CKalmFAuvSoYNrqwnVWE4cVxSEhSF
Z06GICXtrnyIY76+hdHAMseW4uvUxE3LHklJmza2K0dS0vSHx0ZS0iyakpZ3
uWelpG+dq7f19Y/S25ngkCnwSSSFaMqoCRr5ANIuJaWaUVmPlAR8pKRhSUlH
6u//sC82b3kPeVZKKpbPrOtISqrZ3g51lZLeYEdKCpedX39frN5urTZqeYTc
WzJ60M7FogU+dfEhXLZYMnwRrS1fvlg4NaumGfkKUxPHJSVB0eq8yiikpCHW
slvmBia8FzrxWdIUC0SrWZnVvU19isnHpVQxz5KWc3c/S1otO1e+75t4o/T2
FISLcEp0qbDnpz8EjXB6dMpqD0bfrmpY1RYtn1p12JKwPan2R5sdXWmqx8Yl
JUFR9FRA/6SkfA39OKUTMrVN2ZS0VPmNuynIRKvFWzxLim5156ZjKWkmJX3l
B850UkqaEs+SnpqS8qeOg5Ufr2csD9tSKQmKjtzIcSMpKV/DP/kn/3sPfwfv
Q2qiVj4lZXLQppRU+Sxp98YuN+d4JdfYnZJWC07pr+G9MCVl5u5OSdHENB34
xt2V3bJbzanjSOWn1DOWh22plARFUtKgpKR8DbfnoyMpqSYcLQufm5LCh0f5
BaWk+qCUT0n7ItJjUlLe1pQ0D6LVlD8Kfq+0KvaYlFR0cEM2nab2VX6kQAuP
2fVfUhIUSUmDkpLyNdyej3akpNVdx2UpKfqoKJqS8kHprDPJKGekfSlp3sup
t1JS1NaU1O7vMb3decooFt56qjzuMbv+S0qCIilpUFJSvobb81F9Skp9JHsw
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
Tw7cyIExKCnpDfrpintT0rz2VUpalVlNjEabeVa0QKb8cCkpPLen7hg73JYa
D9ve4uZUppgw/hSLpcLUKCkp7K58Z07Z2DLVpaHlxMysnr9xJyUtZYbepjI8
jH09KCnpDbrqimsaE729mU9TUxBYllOmRVCK5ppV/ClGpOjrsVLS8gyfufRf
2MzTPGx7i5tTE2TCMpmUtMpT46akUPE0kn+WNMUeA2UmRivMrEVK6lBm6C0L
pN7yVHb0oKSkN+iqK85qTKaezL3NbF9KqplSmZiij7H6l+n5eW6xhsrddG/J
ufCU3t7hfPampHwsmqdsTUl398dRxW/cTUH8iS4+pb9Wl1mLlNShzNHySdwq
RyfyMPbyoKSkN+iqK85qzJF6pvNSUur7ddHy0QpP6Y0Tpa7vywKpBS9p4Mke
tr3FzTmSksI0tHrxhmdJy7n7UlL0WdJsa0qKNpJupY60qw5q7pHZ+/RMSnqD
3rrilPZM0/q5wKf6RDRln+kcf3I0JX6yFJ1yvCvOVbymR6ePewl42PYWN+eU
Z0nvTEnh3GJKmlNMJvWspuTfepbUuSAV/XLkpPZUnycTTtTtJYM8KekNeuuK
I+1JXYOWp6Bi/VNd/KksVpmSUqvY3RWN1JzMw0t/hxtS6WHbW2zbkd8lZZ4l
hV/Ge0xKysytSUmpZ0lS0iMVk3VqqfZN4049XzXIkJLeoLeuOKU9q0pqPq9b
FjgrJc2B6CuVklLxqrddUy9/M/A8j9neff/GXfFF8SHUiCkpL5Vf5oMk+i27
cNZySv6tlNS/YrKORqehTynUsJcHJSW9QW9dMWhKqs8+qWLR9R7vCqi37/+X
FE5c/klJ9/5JSQNZ3S27eX4JO3pQUtIbdNgVx5sUpqR5ytaUNH9gG50Yzo2W
T6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1NecD
zvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJHBF9
cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibmxE7g
ess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1tWVX
i3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2BurTX5h
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/+I//XQ9/jbbu9r22ad+Fd0qZm5Cf
U373u3/bw19m6zZt0arkX/zF/9TD3+4jc/e2L7VISf/PP/gHPfw1jSSVUahp
SiqqaVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiU
tGmLViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQ
aVHzXP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnC
qSvX8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMp
KdP+/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9J
q57vISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuC
y4Q7868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTx
aUveWRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22Lqt
WWYlWuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPO
aaTFVSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm6
15qmpOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/r
ujglrTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTi
lfXv2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUout
O5KS9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fT
AynpnXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti
9XZf5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ej
T2cpqdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GA
MyWiU3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFN
iUA0y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v
3KWW2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4
KXuHPC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpg
a0o691nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2
dWUlqxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvd
Q0rKF9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnT
a54l5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0
TyPTr2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLq
c3GjlFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8Bd
pkQy+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgv
Fk5vcVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd
1oi0spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf
00VPg/N1uel6tz6PaPTX6F709nzUT0oabt9Ff0x0/V8PKand3ztT0gV/L79K
ri5ey7fh68+vV8DMssv6L9uW20lJg5KSXkv/nC7Vpa27+vF32rfnIylp99bd
no+kpNakJPKiT6A+L7sJkZIGJSW9lv453Y0pqR+2ztbZuuudvnX1WqSkfpzS
RS83xZLR2/rW4TQoKem19M/pUl2qq4GnOj0lcb3WF6ll6nxnXnjnVj+AlPRa
+ud00dOgcyPwYFLS0IpPzTxWO4U+HJSU9Fr6p4XVmdCJEXg2KWlcld8tdBU7
zs3AoKSk19I/jfhaO/AeUtKg6q9TLmTHuR8YlJT0ZrqoHX0LvIGUNJzg36io
TUnL3xbtmxW+CFsVbe1cOPqFjVT90Zpr1n56qJGSBiUlvZkuakffAm8gJY0l
jEj1KemTTTr5WeGLVfaJri5aOFwqmm4yNafWnqr2OClpUFLSm+midvQt8AZS
0kCiEWlrSmrxopiSwvZ/YtEjrKem8at66numnpQ0KCnpzXRRU7oXgK6MnpJS
W5RqamXjl/W0uHZLSYOSkt5MF9VcLFK9tPpEq35BALjR6ClptdTyRU3N+Xry
oWwfKWlQUtKb6aJP0AmZ83Nq4tZ4BQC3q0lJq88DV6+XE1OzVvXkC0cvwWE9
qfaH603VkGp8uJZTnF4h15CS3kwXfUqxaD6R1i+SnwjwJH6XNLSHXae63Rwp
aZNVkq1cJFNVpv7Kes4iJQ1EF31OSkmVNQM8jJQ0nAdfm7rdNCmp3ukP9TIB
asdSB0lJA9FFn7qUlJo4v019WHFmQ+E+07vd3f1dk5KG89RDuucB223DehP2
0vF+S9WQr7nR/pKSxqKX8kMyeqdUOYr1LaPr+a7jSvohQ0oaS/1h3Pqw3135
iCPRCaRSppcyB+Q8ffliVec8ZVVmWeeqntX0VA2bSElj0UuZyLOalZoenZKa
CKNwAIf0SUhKGsumY7j1Ab8psjVtSWtSUqWa5z75O64wwkSnfIJ8VHwRrXMr
KWkseikVhXbPqpkOPXNBz9A5K1LSQLYeulLSWZw3Kp2SkipfpOJP6kVq4iZS
0lhe3ktTIJwVfbtaNlN/u8ZDI47bPP2zJCWNYsdxW7zkLT+lT310n18qX0lY
Q+a6vKq2K/lbBWZhL4X7NHpc7XgR1pl/kZq4iZQ0Fr3UlO5lOA7aGnppJiWN
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
JZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKqeZsGQvRDrYMX
RymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziTkkY3VSdiOGgV
W1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsUryP06fRQIyWN
boqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/SEkH3bv7uMbt
45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/9mf/Sw9/UtK4DKuXkJIGJSUR
CrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSVoR9S
EqHKm0A46OcR9Sd/8m96+Nt6bFde8naksLCGfHIpvs7PkpJ2k5K+pKRN9n04
w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSkWfGEsCrgevoe
9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0yz8nqp/I89jR
g5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp6duZq7ffKVMg
U0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8RecOik0paeuz
pGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbwXu+yTb5mRc+z
qeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOIlFQ0ZTPOtD0Z
HUlJDCF1IF186HK9zAFAD37unT//8/+5h7/LjhMH5G47uk5vs8MURJUpEX/C
idHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1rGdJ
A8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMmucy3
YavX9bN+t/hF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152Tkthk
d+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj2d2d
k5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1DkpiU0O
9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jnpkRK
mi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy+nPK
j8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6TUaZM
KjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTonHuh
zh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql13ZKS
5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb+46T
1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkrU/pW
JDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7PpKS
GnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1fVZ+S
X6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0xN8l
fXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MDSEmd
q09J0x/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrRM7pU
Slo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLempGj5
1KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6FL2l
OfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1UemZLy
1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVoXibD
Du1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6UkKLry
7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ5N5m
UFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJUCQl
dS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3oZFs6
acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw/z93
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
zIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLjnRIW
hnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87sz3y
8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221JZZlM
YAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokhv1ow
OmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+novVE
q43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9FqVnL
6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtTUlis
pjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1ISFElJ
g/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a1TyB
kpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8fDqun
cvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJQZ4l
nWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54kef9o5
MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS4CxS
0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85OiE/+K
K3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmpvkzN
UlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81azlmVW
B2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0WhoRNfV
ekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQERTtu
JJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKKlWSm
hKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+dIqz
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
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 6->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3c/q7MyDH2aReJFlbiG+Cm+zMcQeDOOQAYM3Hs/ExAMTMx4I48HwEpJs
vMjGWSW7QMAbQ3CyyOpcSS4kq86ZaX4aHdVf/SmpSnoevrx0S6VSqaSS9Gl1
n/c/+8P/9h/+1//RNE3/8j/5+Z9/+E/+u//8z/7sn/zFf/mf/nzzX/3pv/xv
/tmf/vEf/Rd/+ud//M/++M/+zh/+xz8n/n8/y/7h35qmv3oNAADAyufz+f4X
AADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiS
kgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABY
kpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAA
WJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxruge2/8
gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQYpADA
O0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSqhvrV
hUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZKHGyp
aotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp4fRo
yX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJKan+
LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imVKanY
LaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz7L6j
/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT6402
oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4tigdRN
8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnTyGJT
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
KeazMcm2ayoP5nID/ZCSoMhlq3P7UtLqxfXPksKtaFT44FJ9ruj6Z0mfIEkd
rBxSHDDQAykJiqSkzklJTZfqc0UtVhHWeVZK2lEegHtJSVAkJXXu4DfuotMv
TknLr3VVlt+9on0LvmEtNSlpxzfuMvVDkQsQ3EVKgiIXqc4dfJbUQ0rascmn
L3ti4wdNScU6w18nnVs/pLgMwfWkJChyeepcfaiZH9mEb6eFfRFJSmpR1cVr
qUlJ7eqHvK0PnYEjpCQoclXq3L5ck/rq3ZG/IVJSavHVj26OPDeRklpXwsu5
KsEFpCQocj3qnJR0ZPEp5vPrYb91deOmpEy1J36M73zCKVyboCkpCYpciTq3
O+CsvnH3npQUrWE1ZZWkDlbewsUpacS1ALCblARFUlLnok9D7nLZJp9ewyQl
ta/5+rXwHo4oOJeUBEVX3v1yot8W+qxwt1MOyEws+rz4G3efYwlx31rgFK5W
cCIpCYpcdwYlJR2pZHrlv94w13zN80EnFlpwzYJTSElQ5IozKCnpSD0HV3HB
kGm0iou/RencQiOZA9hF7bjCd6+f7u7uv4iUBEWvOic8iZR0pKqDq4guPg+l
U8bU6aPyrvsBpxeaCg/jt93rnkjXfb2kH6QkKHrDqeCRpKTdVR2/AmbC1zyr
RRA76K5PTZ1haG057l74UOAUuiv07D6RkqDIpWRQUtItteXrXE7vMCV9Lv/G
3XK916yIl7vrCB+ajsp4cOdISVD04DPAs0lJt9S2qnN1J9Z/Svrc9GG7kwwX
iD4tdewV6aI8/QOv5SIyKCmpwwpTienEVZzilhvIW84zzm+vkkpJjoEMnVND
L8E7uYIMSkrqsMKp43+9Iaz/+rF/1+qc4t4gE5EcACl6pp6+ghdyBRmUlHRj
nfmU1HQVJ7pl7N/y9Mop7p0EpSLdUu95feV3SVDk8jEoKelInQdX8YyUdNla
bl9pozXmH15crMUGduXuDv7F3Z1xmidtS2vP6yspCYoeds5/DylpX7Wn3OdE
Fz/3Dqq+nutuDSucvnXHtVvXz5r/5E/+bQ9/V/bnXX5u4+/93n/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
8Agp6TGkpNOlNmQ5/WBQ2jT9iLnOpp/VPGbXf0lJUCQlDUpKqq9NSuowJW3a
xj5JSVeSkk73yJTU2yI9k5KgSEoalJS0qUIpqcOUtGkz9/EsaSD5gbk1Ja3G
+wtTUvFEtzUlrSqMnlSXZZYvVq+jhcO3qUZGC4clUw1ONSO/0sz0QUlJUFQ8
kdInKWlrneEF/WCFpzTseP3TyClp05b2ZqpISfPxtnr9fVtT7G0pKXPHuyPO
RF+/JyV9spf4zPRwL0y/Zp/V28yLTIGwzKpYNLNkWhUtVt+MzEpTaxmalARF
UtKgpKR9Ne9ISVO1c5taXzKVWZbC6WHhaJlV+ejiUlI+whRf52e9MyWtxtQk
JW206r3wHJXakCmRI5aVhGXyL5Zrn4J4Ek5JNaNYeFUybHBlPakKw4njkpKg
KDxzMgQpaXflQxzz9S2MBpY5thRfpyZuWvZIStq0sV05kpKm3z02kpJm0ZS0
vMs9KyV961y9ra9/lN7OBIdMgU8iKURTRk3QyAeQdikp1YzKeqQk4CMlDUtK
OlJ//4d9sXnLe8izUlKxfGZdR1JSzfZ2qKuU9AY7UlK47Pz6+2L1dmu1Ucsj
5N6S0YN2LhYt8KmLD+GyxZLhi2ht+fLFwqlZNc3IV5iaOC4pCYpW51VGISUN
sZbdMjcw4b3Qic+SplggWs3KrO5t6lNMPi6linmWtJy7+1nSatm58n3fxBul
t6cgXIRTokuFPT/9LmiE06NTVnsw+nZVw6q2aPnUqsOWhO1JtT/a7OhKUz02
LikJiqKnAvonJeVr6McpnZCpbcqmpKXKb9xNQSZaLd7iWVJ0qzs3HUtJMynp
Kz9wppNS0pR4lvTUlJQ/dRys/Hg9Y3nYlkpJUHTkRo4bSUn5Gv7gD/5dD38H
70NqolY+JWVy0KaUVPksaffGLjfneCXX2J2SVgtO6a/hvTAlZebuTknRxDQd
+Mbdld2yW82p40jlp9QzlodtqZQERVLSoKSkfA2356MjKakmHC0Ln5uSwodH
+QWlpPqglE9J+yLSY1JS3taUNA+i1ZTfC36vtCr2mJRUdHBDNp2m9lV+pEAL
j9n1X1ISFElJg5KS8jXcno92pKTVXcdlKSn6qCiakvJB6awzyShnpH0pad7L
qbdSUtTWlNTu7zG93XnKKBbeeqo87jG7/ktKgiIpaVBSUr6G2/NRfUpKfSR7
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
L+wBkJLO4gTyYFLSoKSkl+izN/psVb3R279PPiW953nKvL2rKfAqUtKJnEOe
6iWXxeeRkl6iz97os1X1Rm//PpXPkkbvnNV3C1NzR99MoB/OJ0/lYjEoKekl
+uyNPltVb/T277NKRtGwMHrPhNt4Y2OA93C2eSTXkUFJSS/RbW9027BKo7d/
h+J3zEa/HESfHN3SEgAeYPTL4mtJSS/RbW9027BKo7d/h8pf4ozbM/mNGne7
oAW/S4Ii145BSUkv0W1vdNuwSqO3f4fXpqR5+ribBqeTkqBIShqUlPQS3fZG
tw2rNHr7t1r9mwbRXySNfjkoPksaeuvgXFJSC04yD+PCMSgp6SV67o2e21Y0
dOOJSv0uybMkCElJLTjJPIyUNCgp6SV67o2e21Y0dONJiX6rUEqCkJTUiPPM
k0hJg5KSXqLn3ui5bUVDN56M/PcJ7Xf4kpIacZJ5EleNQUlJL9F5b3TevIxx
Ww5wnJTUjuvLY0hJg5KSXqJpb0w9abeZqW2/eI0A/ZCS2nF9eYxb7k84Tkp6
iaa98bPyH58fPfxJSVzppk8CenF399MFKakpA+0ZnDMHJSW9RNPemF6ckj6O
tPcRE770Ax8pqTHj6xmcKgclJb2ElNR0869fKXexu0P65M2kpNaMrweQkgYl
Jb2ElNR0869fKddzmcvQOa8lJbVmZD2AM+SgpKSXkJKabv71K+V6dnSe/nkn
KekCBtfopKRBSUkvcWNKmn+88H29mjjPyk9f1SMlcTF7uYZeeiEpCYqkpEFJ
SS9xV0oKE1BqVv51qoCUxAXs4nr66m2kJCiSkgYlJQ1q69bdkpLC6btTUr5a
KYmm7OJ6+uptpCQokpIGJSUNatCUdCQxSUncJbWL52+BpspkroznHjb7als2
76z2GA5vIyVdxuAal5Q0KClpUMutW96nXXNLFlZek5JWPywq/v4onCUlcb2a
MXXX0Dvu9OZ1vr0wLoNrXFLSoKSksUwxn4rPhHtISannRGFKqn8rJdFa5YCS
khpVCMyMr0FJSYOSkga12rrVx9rF8qc35pqUlI9Id6Wkz9MPtpfbOqBWV8Pl
xxfhxxr5F/kGpD4kiX6Kkm9eZu2rOtP9VNU5wBEG16CkpEFJSYMaIiXVR55M
FArDVH517TYz3wO3rJcLbBpQYbRJRZ78i0xm2bqW5ayta48WKDIcXsXvki5m
fI1IShqUlDSo8K6peDPTrkMyseVH4vdHmSkr0blSEpfZ+rHDfJQuS4blt+am
cBVhbfUhqH6lUhJ5UtLFjK8RSUmDkpKeYb6fyd+8tVt7/otwl/1JSZyuMiXl
c8q5KWmemApBqbXsW+nW67vh8CpS0vUMseFISYOSkp6hZmOlpHZedbC9TWrn
ZsJI+GJ3PIm2YXcW27HSHce24fAqUtL1DLHhSEmDkpKe4faU1I9G21jsgVvW
ywUyOzd61KUOy2XJ1YLFRVZrSS1efJ1aV83ap+qDvL4kDyAl3cIoG8umUyj9
kJIeoPIeZqwO0Vo6MdDOXSWpu+ocqMc4Tkq6hVE2FilpUFLSg+U/KO7fKO38
DNVUthpo50pJXE9KuouBNpCBbr1YkpKeTUq6xkBNZasedm79sG0xxn3jjgwp
CYoGuvViSUp6tnEj0tcorR2lnexw485t8WzoAgM1leOkJCga7u6LLynp8YZO
SZ9x9uMo7WQrKWmrgZrKcVISFI1498VHSnqBoSPS1xDNHqKR7NBiz86DcTUq
l29XY3YuH61hVVuqnmvOA8bCq0hJNzLWRjHuDdjLSUlvICVdYIhGskOjPZtP
QOGql0knVayyntO3ZcVYeBUp6V6G2xDGvQF7OSnpDUZPSZ8R9mb/LWSfdikp
fB19fhSWib4II1U+LrVjLLyKlHQvw20IQ9+AvZmU9BIPGKGdt7/z5rHbZSmp
8hlQGI7qF5eSOJ2UdDsjrn8PuAd7JynpJZ4xQnvehJ7bxhH9fOPu+ERft+N0
UtLtDLr+PeMe7IWkpPd4QIf0vAk9t42DWuzc1ZOgeeLyy3KrF+Eiqa/Srepp
txUhA+FtpKQeGHedk5IGJSV1a+rJ3Z3xN7pqzFK3DeO4Fjv3+gPmmjUaCG8j
JfXAuOtcb7dSVJKSuvWz/T8+P3r4660ne2vPV5+t4hQPSEmXrc5AgFsYej2T
kgYlJXVLSsrQJC527v698intlVdnowDuYvT1TEoalJTULSkpo8MmfXptFWex
f/P0D9zLGOyWlDQoKalbUlJeh63qsEmcyGUuQ8+8lt8l9cMw7JbLx6CkpG5J
SUW9Nay39tCCvRzSJ28mJUGRlDQoKalbqZS0+tfnUnO/r1ezNlXVf0r6dLaX
u2oM7awGzt3NuYce4EtKgiKnykFJSd3Kx5aa18WUlFlcStqhq8ZwmemV7u51
eiElQZHT5qCkpG5NG1NSWD4sVlNmrJT06WlH99MSgGtISb1xJeqQlDQoKalb
x1NSuMgjU9Knm33dSTMALiMldcjFqDdS0qCkpG7lU9JSfUoKi4X1jJiSPn3s
7h7aAHAlKalDLka9kZIGJSV1q/JZUuY5UU0ayi8lJQ3XBoArSUl9cj3qipQ0
KCmpW8dTUub5UT8pKfrD8Lsc35ZT+gRgFFJSn1yPunLKPQbXk5K6NW1MSZn4
kyrfSUr6u3/3/+nh75TNHP2oA9hESuqW61E/pKRBSUndSuWX8AlIdG5qyvJt
tAYp6eDmHK8EYBRSUrdcj/ohJQ1KSupWzVOea/6kpE2bc7wSgFFIST1zSeqE
lDQoKalbUpKUBNA5KalnLkmdkJIGJSV1K/evDFyu6Wbeno+kJIB9pKTOuSr1
oPWtFI1ISa/SYZ/Up6RlastPzEyXkgBOJCV1zlWpB1LSoKSkV+mwTypTzCoZ
hRNT06UkgHakpKc6+JWSeSkB4aMThiUlvUqHfbIjJWXiz3fivm/xSUkAW0lJ
D7a8ou0LSruX3b1Un6SkQUlJr9Jhn2x61lOZkvYFpVNOYh32MADsICWdRUoa
lJT0Nr11y6Y4s/ydUT4lrQrXP0s68gWDT3/dCwDHr2jRGlaXy9WlM5OSUguu
pqTefoKLdX1tRy7xu0lJg5KS3qa3btn30KcmJW19qFQ8jddv0XndAwAn2Pcw
KPPJ4SoEhZkolZJSSapYT2pd0UVSs8L2XEBKGpSU9Da9dUvPKWnZyPpTXG89
DNCO3yWNYl9K2vR2da3cmpKKLz7plFRcdaox15CSBiUlvU1v3VKZYqY+/o27
zKdqyzKn9hBAv6SkgRz8asSmt5+WKekTfMWuZtWrhHUlKWlQUtLb9NYt9Slp
VpyeKnw8Ja1aHj3v9dbDAO1ISQOJxo3K8pm30ec70ReZZux7lnR82WtISYOS
kt6mt27ZFGSa/u3umVVc6q2HAdqRksZS842IsGSq/Gr66lKYWTy8bs5vwxdh
+VQNmdrmWaUeakJKGpSU9Da9dcsDUtJyWyqvPgDPICUNpJh6RrE7+EhJbCIl
vU1v3RJ+3HSjs7boE/vgC+B5pKQhtLvk3WLalZJu3OTRO/y1pKS30S2trXr4
AdcjgBQpqUYmoUTfhteR0xsw+lVp01bcvr23N4B9pKQX0jNNpbr3Mdcm3ux5
R+/ztqjeKdsuJVXKBJ9iJjplT+1OSWet/Xglt69iN5f+QUlJL6RnmqrpXnGJ
QT3voH3eFtWTkq6UyT7h46SwWIugVL/UicUu0E9LZq74g5KSXkjPtLbp6lNz
8nSCpROre7n5/m3c4/N5W1TvlG2XkirlU1L4dlXsrANya1CqX3s/Q6aflsxe
ckp5HinphfRMazt6OH/Z2vHpH5xoivn8eukf6+B83hbVO3fbpaRKxZT0SUSS
0w/I4ykpPGZWFUbfrl6sNqpyVqaesCWp19e7cdUcISW9kJ5p7WAPhyfz8H4G
bpG6fwtnjeJ5W1TvlG2XkiqFXRqNA2HJFif/+grDRqamR0tWRp6aWZl6ahoQ
bsKVXLsHJSW9kJ5p7awentIqi13vlA23dbeobHDqbVjDzdvzq1O2aLity5v2
bvvS6Snp5q781cFtWW1Xasr0a89P6R3RuknRMtHeCBuf2pwbX6QmXu/0w4lr
SEkvpGdaO/1Clr98/3z94/Ojh78Wh9bPOv/iL/6nHv4abd3te23TvgvvlDI3
IT+n/Pf/+l/38JfZuk1btCr5+7//73v4231k7t72pRYp6c///N/08Nc0klRG
oaYpqaimYZ2npPmtlMQOUtIL6ZnWrklJyyvC7ffYUtLurbt9rx3Zd/PtR3Tx
IVLSpi1albw9Hx1MSbu3fUlKqtyo6Nl7OWs5JTorLNmalHQWKWlQUtIL6ZkW
8kGmRc1z/dPgd9rFzb89H0lJmfbn596ej/alpMqSt+ejFilpKynpqYoZLbwS
pQqnrlzLF5lZqUqKiy+b2q6jaoRNYghS0jvpnNNFT+DH+7mmkmnwO+3i1t2e
j6SkTPvzc2/PR1JSvX31SEn07/ZdKSUNSkp6J53TQouUVLne2++xd99pF3up
PiWter6HlFSzdbfvtYP7LrPgcCkp/3F0WPj2fHRiSrrslFXTsbfnoyMpqfKj
rQsuE+7Mv3roBPtiUFLSO+mcFhpFpGKF3zvt1arr743n8vNS0apS9a9qOLJ1
0cWnLXlnWXjTgk1TUn7rtmaZ+r286WBotHVzSPkKw8s8fQqEC4b1ROuMLthi
67ZmmZVogRufJV2jpmO3ZplwylK+cKOUlN/A5fRUseOKLXm8fja8n5awiZT0
TjqnkRZXpfDmarWKaRFklje9NTfGqzvq1KzUxLCGU7ZuVeAxKSm6dTse+tTs
5ehea5qSolu3CkTRlBSNPNMi4KQyUX2djbZuR5yJvs5PfHZKinbswZS0mji/
/q7r4pS02sBwe1MTjyt2dX09p7ftbRrtYlqTkt5J5zRy/HpUrDNcxbQrJYUF
UotX1r9vk/Ob9jkpJX0rXL3dVPOJKWm1da1TUn21LbYuTCvFKdFnQ8W5xUdL
LbbuSEraV6DDlLT1d0k1Hbs1IoWLTLGUdMuzpNUGpupssROLXV1fz+lte5sd
3U4PpKR30jnt7LsM1VSYusxN2RTzLbzKMquJlbfi0YnLt5mL8j6f7SlpFsal
74vV232Vn7h1Z6Wkb52rvbyp2hZbty8l5YvtS0kttm53Slq++L5e/XdT5adv
3Y0+naWkRttYf54PlzqrZP0F6OOe4bBNfU4/pKR30jntbL0GVdaWucBNsZ8O
RQPOlIhO4X11WFUmYc1Tdmx1zdbteJa0WmquOXyuNOI37qK7JhNpK6ttsXWp
BDQlAtEs/7W6u54lrQrsSEmz1cRletpa846tO9Epz5JWBXZ83W4Kfn80S6Wn
u75xl1pqx7qOtKS+krB5c1VTEMqiBVIt2d2q4bxkM59HSnonndPUwfNheEXL
X+Om7B3yvGD4uOHg86Po3fuRjU1t3cGUlJq4qeZTUlJm322KM9HdsdzRt6Sk
aIGtKencZ0nLClts3fFnSeHrfdVu3boTHUxJ0QL7HvfUpKGtle/okPwG1k88
rtjVlZWsXiwr/yxyUFg+Myus/9ka7WJak5LeSee0tqmHa24bMufYKZ2Swhfh
7XQPKSlfYEdKioaj6fA37lps3SkpKb/Hm6akfIF9KSmVdDalpNXrFlu3OyWl
Jk6veZaUL7D1QVL9N+vqKz+YkuoLtLt/PqXm1LVp+jXyhMU2vXi8dnuZpqSk
19I/jUy/qilWU2d+buq2eTUr9TYfiCpvvBtdBabt/7+k8IHRFHPBN+5qtm53
SqrPxY1SUs3W1eSXfOTJFKipaq6kxdYdTElTkImm2MOmh6WkomnwlFS5jZsu
AXeZEsnoE0tJmWXDzUwt9VSd72hSpKTX0j8trM6Ey7ftLotz5PlaxZaoaJlw
Yr5YOL3FQTU1+P/D7vtrtHVbs0x016R2dycpaW5PGGHm6WHjowvm366mL+tp
sXVbI9LKcmL0tZRU81278O1qVmqRG1PSKKbtKSnzIqzqPT38PfDubgWbSUmv
pX9OFz0Nztflpuvd+jyi0V+je9Hb81E/KWm4fRf9MdH1fz2kpHZ/70xJF/y9
/Cq5ungt34avP79eATPLLuu/bFtuJyUNSkp6Lf1zulSXtu7qx99p356PpKTd
W3d7PpKSWpOSyIs+gfq87CZEShqUlPRa+ud0N6akftg6W2frrnf61tVrkZL6
cUoXvdwUS0Zv61uH06CkpNfSP6dLdamuBp7q9JTE9VpfpJap85154Z1b/QBS
0mvpn9NFT4POjcCDSUlDKz4181jtFPpwUFLSa+mfFlZnQidG4NmkpHFVfrfQ
Vew4NwODkpJeS/804mvtwHtISYOqv065kB3nfmBQUtKb6aJ29C3wBlLScIJ/
o6I2JS1/W7RvVvgibFW0tXPh6Bc2UvVHa65Z++mhRkoalJT0ZrqoHX0LvIGU
NJYwItWnpE826eRnhS9W2Se6umjhcKlousnUnFp7qtrjpKRBSUlvpova0bfA
G0hJA4lGpK0pqcWLYkoK2/+JRY+wnprGr+qp75l6UtKgpKQ300VN6V4AujJ6
SkptUaqplY1f1tPi2i0lDUpKejNdVHOxSPXS6hOt+gUB4Eajp6TVUssXNTXn
68mHsn2kpEFJSW+miz5BJ2TOz6mJW+MVANyuJiWtPg9cvV5OTM1a1ZMvHL0E
h/Wk2h+uN1VDqvHhWk5xeoVcQ0p6M130KcWi+URav0h+IsCT+F3S0B52nep2
c6SkTVZJtnKRTFWZ+ivrOYuUNBBd9DkpJVXWDPAwUtJwHnxt6nbTpKR6pz/U
ywSoHUsdJCUNRBd96lJSauL8NvVhxZkNhftM73Z393dNShrOUw/pngdstw3r
TdhLx/stVUO+5kb7S0oai17KD8nonVLlKNa3jK7nu44r6YcMKWks9Ydx68N+
d+UjjkQnkEqZXsockPP05YtVnfOUVZllnat6VtNTNWwiJY1FL2Uiz2pWanp0
SmoijMIBHNInISlpLJuO4dYH/KbI1rQlrUlJlWqe++TvuMIIE53yCfJR8UW0
zq2kpLHopVQU2j2rZjr0zAU9Q+esSEkD2XroSklncd6odEpKqnyRij+pF6mJ
m0hJY3l5L02BcFb07WrZTP3tGg+NOG7z9M+SlDSKHcdt8ZK3/JQ+9dF9fql8
JWENmevyqtqu5G8VmIW9FO7T6HG140VYZ/5FauImUtJY9FJTupfhOGhr6KWZ
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
QJSUdArj69ncWdUrpo9UkiqWl5KWHJD7hLEdGqlJSZuSzvFnSavmbRoI0Q+1
Dl4cpSQ6JyUdZ3A9npS0SficKDUxNWt1CV4K564qiRbOL1Js4UxKGt1UnYjh
oFVsWSk+JMqULy4Vlsw0Mj8WMqfWucCRLro9H0lJZEhJBxlZb1C8jtCn00ON
lDS6KRbGoYVotLnlr3ic14yFKfjgKzp9axfdno+kpKhoOr7Ljf0gJR107+7j
GrePU/aRkghNiZs9ONc0TkqaG1w/d5KSHu1nh/zRH/2vPfxJSeMyrF5CShqU
lEQo7DoDnBYu+ZS91qY2p2ZF39ZXHq0zE1u+Vq/rZ0lJR0xS0l+TkqBo01WG
fkhJhCpvAuGgn0fUP/pH/0cPf1uP7cpL3o4UFtaQTy7F1/lZUtJuUtKXlLTJ
vg9nGJ3dPSgpiVCm64x0TjRuSprb33o47EhJ4SKZWVLSblLSl5Q0K54QVgVc
T9/Dvh6UlESo2HX6llOMnpLmrWg3IrampGj5/KzMXCkpQ0r6kpJm+edE9RN5
Hjt6UFISofqvEl3QGB7sGSlp3pYWI2JTSkoVTs2afv2xkpS0SSolfTtz9fY7
ZQpkasiXkZI6FO7f6dcnR6mlrmogt3HLNCgpiVB91+lkjnhSSpq36NxBsSkl
bX2WNG35Jp7BvpLJL6tZq9CUKlaziJTUs2hKms8JUtKbSUmdywze6122ydes
6Hk2dd2V+5SHmRYpaT4/hPklnF5TLHrySdVw7jF8Ym1Ty98lZRaRkoqmbMaZ
tiejIymJIaQOpIsPXa6XOQDowc+984//8f/ew99lx4kDcrcdXae32WEKosqU
iD/hxOjzoOjb6Iuw8OmbdkqdU8t/4276NSUV13V8c55kKj0JmgtMsciTmrha
1rOkgeSTUfSc4Ob5JezozklJbLIvKOlzNonmmil44lMslolO9ZGq0QYerDmT
XObbsNXr+ll/ufhF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152T
kthkd+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj
2d2dk5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1Dkp
iU0O9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jn
pkRKmi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy
+nPKj8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6T
UaZMKjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTo
nHuhzh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql1
3ZKS5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb
+46T1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkr
U/pWJDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7
PpKSGnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1f
VZ+SX6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0
xN8lfXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MD
SEmdq09J0+/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrR
M7pUSlo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLem
pGj51KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6
FL2lOfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1Ue
mZLy1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVo
XibDDu1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6Uk
KLry7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ
5N5mUFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJ
UCQldS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3o
ZFs6acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw
/z933MY8o0ulJCiSkjonJbFDD33o3EIndh+HxRyUqTn3VP5y+za/H6mNWm5d
/WZe1+8VWnVZBSkJim4fp+RNUhLb9dOH/bSEd9p6O3rWHezPxf/gD/5dD39P
GoOrbZl+fbRUX8nt19OLr6rAPlJS5154PndAHtdVHzrJ0L/TP9uXklqQkoAr
uYHp3AvP5w7I4zrsww6bxMs1/eKTlNRCmJLmKVIScDopqXM15/P5Qv9j8b8a
XEmVX07s5HzugDyuzz48/hWm6aYfa/Mk7ZLRai2356PnpaSV6AmhuHOlpC+/
S4Ii9xudqwkvq/gTTT3R6dOv/yeOTs7nDsjjuu3DgyecfR8dQ9PHRqk13p6P
XpKSwon53b31s8fM3JpLZw9X1SgpCYqkpM7lz8Dh3FRK+rF4zJRKWJ2czx2Q
x3Xeh7ubt/rE+KTm8FgXJ6PVqjOx5Wv1un5W+FZKWk4MrQpURpj6zyelJHgk
KalzW1NSfYCafOPu0Trvxsozz+omR0qiKHVvfH0z8sml+LqyWDEoPXWkpPZy
NCWtTiNS0kdKggq3X0rIa5GSinOlpAcYohu3NjKVmKCHZLS0IyWFi6RmbU1J
zD67UtK0+Ixxyn4rQ0qCJ5nPG/Qpf/rNzA1nTZ4lvcko3bjpFDTf5IyydTS1
uvvtyrQxJUXLp2ZNi6/kvfkbd1GpcLQssCklpZLRkpQEj9Tn9YXZ1pS0ikLh
rNQnYFLSw4zVjZWtHWujaKTbZLS0KSWlCqdmhSFLSppl8tFcYFNKWgal1BVz
X1CSkqBz/V9rXq4mvNSknmh6kpIebLhurDkXDbdRnCV/39uhTSlp37MkKSmq
eJBISV9SEhQNdNF5p5pzb/jQfwpUlu/hfO6APMWg3Zhp9lg3yZxi3J2+NSXl
09B07HdJd3dGX/alpMrPIaUkeJJBL0Dvse/c2+JPShrLuN3opPRywz02itqR
kurTkJR0xI7PHpcvojq/qkZJSVA0+pXo8aQk9hm9G0dvP5s8IxktZcLLvKWr
1ztmFSOSlBR64VU1SkqCoiddlR4p9cnVLS7b5GtW9GwP6MYHbAJ5F59brjRV
5Jfdf5sqf2T3HjFJSX9NSoKip16hHu+3hT4r3MfReKIHdKYT1PNc/8HLLaSk
bklJX1ISFD3+UvVUUhJFj+nMx2zIm70hGS2d+RT/sLs7oy93741f3NgPUhIU
3T5Oybv3BL6Sb+QpG3u8EmZP6s+zjjGuVHP2AG4hJUGR61fnpo6/G1CZoTZt
7PFKmD2vP5+3RY8kGUH/pCQoci3rXJ8padOTpsrNdByu7Hna18zdnfE3emsP
XwePluMHW+WCjh/4kpKgyCWjc1NnKen0G2lHYMrPbvlX/+p/7OHv3h3Uf5Sr
b+EF7tr2g5VEXzdyfS/xPI4ieINbLqzUm8ZJSUPc1A1kkpIG8bN//sE/+D97
+LtmT50+fi8+wBzPHOcogjdwp9q53lLS3Cp5pzUpaRQvSUlNR/qq2nlFqRdz
+cy5KFw2ui7YwVEEb+D+9l7F/s+npPmu4Pt6OWU5a7VIqob6lLRsvJS0T82u
vz0fSUk1HpySrhzgqSwTTT2pYuGsaD1ttoAXecBR5HdJUOT+9l7FoJHJL8tZ
y6QT5qBosXDW1pS02oqW/fRANbu+GF6WVhN3vL03JVUeRcV+u75h0+NS0pXd
G666+OKTzkSpWcvNcbLiuAccRVISFLm/vdcUsypQjEirKZlZla+3piR2qNn1
NU95wtfhi+LEflJS/v58Neua01exYc9IScXOv8bpKSlfD+zzgKNISoKi26+J
Lxe9VV7ulPqUVBOgpKR+1Oz6gykpWjJfrJ+UFJ6aoierC85gNQ2rTzHhlK/w
bXS9p6ek6BZdbEqHneiL4tvKCi8TH+evcXFvX+MB2yUlQdGDT2IXuODiMvWU
krjM59SUFBarqbyHlDT3xid9W9K6eTUN252SVhOjr8MXB1NSuAn3SrUn0+ef
Ld+py9fTTledfKNH9sMDNkdKgqLnnbvGUrx8Ty1T0ir71DxLcsCcpWbX1+SX
Wep7dOHcmppTa7nLJ5uSbm9YfUQKC0+lEFRZfzElLdtMa/o59KQ+ecC2SElQ
5KJ5r/COKyywNQplZqXiVWotqW/cOWaOq9n1m54lVU6chnqWtCqQWvD2hh1P
SZlKjqSk/DFGC3o74zGd84CtkJKg6DGnrEEV+z+TX1LZZwqeFtU/aapMSTUt
J69m17dLSZuC0i0pKVWgZuL1Ddv0dbtV+W+1NQvWpyTJ6Ea6Pe8Z/fOArZCS
oMiVtHP5CDPfC2V+PZQpHxaoT0lz867vk5donZLqg9KVKWlTmWtOXzV5tjLC
zNo9S3JKv5fOr6GXeiAlQZFLaufqU0zrv9Rx4hBqpBhh5lvi1MTlbXl0kWgN
d6WkSqsPAe5uzl+pSTHRZJR/xrQ7Jd3dH++l8+vpq9tJSVDkqtq5/lPS3M7L
+uQlKh/0XPBn5+adlZJSgWhTSvoYjPfR8/X01e2kJCiSkjo39aSmqdd0yxtM
UtIgpop/oPsrfJuZlZpSTEkft6A3yXT76vS4PKluPdOG1W5acN+xsaz/lKNr
9EN09PZ/pCSo4M52UL8tdFWhw+ksUtIoKiPMBX+r+/Ab++SFaj5HSr09suMu
2+nnVj768Tl6+z9SElSQkgbVbUr6OKhOEn7CfKO7O6NrU5cp6fOIG7mBFHt7
NZRSr4+st+keP7fy0Q/O0dv/kZKgglugzl18M5y3teWN+gS6cve4/EW0bbd0
y9sU+3n69VdjUyzdpCpZFpjSWTi6+PLYWC4ePXhWtYWVh1WFi1QedUMfmUM3
/ktKgiLX0M793Dv/4l/8zz387ThOHF3QA8PwApUp6RPEpU8pXETzSHTZaEzO
rz3MX5kCWxfJG/qwHLrxX1ISFLmP7dzQKWnehHP7BNjKMGztYErKV5K5Uq+m
h2+jBepDUGXJmq3It3wsQzf+S0qCIimpcw9ISR+HGWnRT8KXb/MflVNP7zVV
n5I+2d8oLQuET22K640WS4WdTFKrD0eZOvOGPiCHbjxQyY1H556RkuZtOaVP
eJjih+r5+0nq6b12NqWkz8ajepVcKqv9pBNNNJdFC+x4llRp6KNx6MYDlaSk
exX7/0kpqWZ7eaEdKcmjpd10WiPFM3nm2U3NhWBZOKw2Vclq+vJt/nW08qjo
IhUdNvahOHTjgUruNO61usREC+STy9f39XLKcla0/HLiZSlpudXwNW1PSam3
1NBpLYzVq5kxdVmdY/XYytCN//K7JCiSku41xT4VXBXIxJZV/Immnuj05cTr
U9LHgcfC6nPpeWK+wOcRNyp30XWnG6tLpaSDhm78l5QERW5W7xXt/OVOSUWY
cHoqJRWn3JKSMpvP26RGQbGA4+cIvXeu3vqzOECinzycstLKOnvrsbeRkqDo
JXca069S00MXlMy09rMlJVVmoq5SUqYTeI/UKMgXKM6iSO+dqJPOrBw4Pei8
eY8nJUHR4+9RO9/AVdvC1j4+JUX7gVeRkm6kA8/SSU9KSVSSkqCo8xBxxBCb
Nj8wyjxXOj0l5d/ekpI+2/dX8Zndldp1y+NF+3A5sViAg3TjKVp342pEhNM/
wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz9oZT
oqv+OfFP/uTf9vA3ysEGKY7h4y7ow3wCCpuxTDqpYpX1nL4t7aq9xtCN/5KS
oOiRKelJW5SJMKnsM6UfFUWTVFcp6ZP9pHRV7PZ8JCXxGI+8FlzpmpQUvo4+
PwrLRF+EZ9p8XDrX0Mfb0I3/kpKgyJWxc/kIM1/XwinFWakabk9J84Z/fv1a
XVjg9nwkJfEwDubdbklJlc+AwnBUv7iUFDV047+kJCiSkjpXk1+u+bv+OAkT
32ru7flISuJ5HM/7XJOSUg+DKlPSjomNtmv0w2z09n+kJKggJXVOStqXkuZF
Vq+/b2uKSUm8lkN6n9b9tnoSNE9cniFXL8JFooEorKf1Fo1+jI3e/o+UBBUe
lpKetC1fYVK4UQ8bvixQDC/F1/lZUhKv5ajeoXWnXb9T2q1x9ANs9PZ/pCSo
cP3db1NP2pa83xb6rPCImrC2LyVNv3tsJCVBngN7q4elpKarG/Ho6uHzwxNJ
SVA09BgPPWlb8p6dkpakJLiLY3urpg9fLrtet17RoMdVtNmDbstHSoIKUtKg
3pOSVuYjtibRZDJROHFfRJKSeDaH91Z6LG/o/lk1fuhtkZKgSEoa1GtT0mx3
SppJSVDDEb7Jw66q5xq9Z6QkeJWHnc+ftC15UtKOlLRaJPM1PCkJlhzkW+mx
0DP6ZLkVQ2+RlARFUhKDqgw1mZ8dHf9F0ttSUvgbsVe5u/tvpge2cvx8sv9n
8EHNG/KYLQJSnnTu+vR91lpeKeb/5i+jU/BwP7O/onOv6ZBbjqJpY0qa+yf1
VkpKedhNzm76Yeu2x9PmTRr1yaC9cZm7e/18k5QEr/Gw81i32zL9+ow+dZpN
FQtn5euP1tDU9T0/Hcg15/51e9Sd4tlbt8+b+2TTtv8s/OPzo4e/N+8yTvew
Gycg5WGDvc9tyYSayryTeZ1fnZQkJe32sJPDud7cOaltj57Nbs9HUhKne8bw
97skKHrGYJ/1uS2ZVt2VklZfh4i+/cTS3HJW8QFWqvAppKTWnrpdZ3l5/+TP
XfOU2/ORlEQLDziipCQoelhK6lNvKWmVffJhJ5qYoukpfBtdxVmmnpy+dbd7
5Ead7qm9VLldq2LhUpOUxCVuPPnf60inSUlQdHygUZTp4XDWlM44NefGcJFN
ZaZEzIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLj
nRIWhnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87
sz3y8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221J
ZZlMYAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokh
v1owOmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+n
ovVEq43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9F
qVnL6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtT
UlispjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1IS
FElJg/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a
1TyBkpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8f
DquncvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJ
QZ4lnWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54ke
f9o5MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS
4CxS0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85Oi
E/+KK3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmp
vkzNUlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81az
lmVWB2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0Who
RNfVekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQE
RTtuJJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKK
lWSmhKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+
dIqzulFKopHU8bn6GDP6CWfqc87wgh5WFS4SLhiuPdWY1bqiNaRaEi2QGbZO
jHCBTEz4/DrMUxPDU0F0wZqqwgZkyqTeFkvW1JlvCXBE/uq/Ktm6MS9xSk9K
STQSPT4rr/6fIPVUXvTziyybUX9TEda8dUPyfVI5FzhF6oQQ3sasJoYfenxi
J4qVVeHM3Pxa8oVT1UYXzFeS7ytgh3BwpYpd0Jj3ON6fUhKNRA/O1FV4SoeL
KXaLUrNIOD3atmL9m9ZV084Up0e4wLkD7dnDtmbr/C4JimpS0rNPJnc52KtS
Eo1kjsxUiMgEk/pwlKkz2rZi/Zm5y89pi4s7Q0IPpKR6UhKcQkq6i5REn/Lx
JPMsJl9gx7OkaDPq6z9rojMk9ODEgbZ6cHxKbZvKn7Leg6uQkqCoaUpanoju
Oh1dYF+TpCT6lEpJq4SyHNqZ18uJedFFom1bzaqpZNX46Jau6sn0RrG7gNNd
PNY2ra6380BNe6QkKIreiqwK7K65fi27a+6kzh2LH1yjlEQ79QfnpkBxvM7r
b0WkJOiElFRPSoJTNEpJqQ+BTyElfaQkWpKS6lfX290RPNWRz2yjz5TnifPb
1dywcHRutJL861Q9Z5GS4BSXpaTVGlNnqtWL8KwSLZCvp6ZktB/yS6Um1jty
bpSSaGfTkdniQh+ts90dRaoBlSVbNwb4HBtrq6v5amLqBiP6orJwWD5Vj5QE
3bo4JeXDTiq/hOXDt5l6as6N0YiUXyrayE2kJLrl5r+GXoLLHExJ4etMtPkE
l/h9keoTu0NY3ai0ICXBKTpJScUX4cTViSuzeH3JsLU1MS2zvXlSEj0TAfL0
D1zpxpRUX9UndofwSXzku5p+lsoKpSQouiwl7f4QJlU+tYojJSvLSEm8QdOP
OkenZ+B6u8dd/cek+y79mZRUrEdKgm41Skmf6jNJ8UX9GeZ4yWj7pSTeTBwI
6RO4xcEbktUdReZttPBqVn7ZYuFwqbNISXCWdinpEzt1hBOXb6MvPukz26Z6
KktGm7o6oa1e7D7XHelbKYnLHDzOn0EPwO12j76Lh+29Z4nKtUtJUFS86A8x
2AclJTGi6KcHj3d3rwN/Zd9gvHII33u6qF+7lARFxRuAUcb7iI5snZQEwAtt
vXRe9lnH7Z+obFq7lARFPaekrZ/ldhKp6s+TUhIAbHJ7GOnT1j6RkqCo55S0
lGpGJ81bkZIAoJ0+r/532dEbUhIUSUktSEkA0NTLfzx4cNulJChqlJJWIzcc
yNG3qyG/qiFcMFM4fJvallThmg1JbVSqQLjq1KwiKQkAZuGNxLPd3d/wfMWx
tmMkTr9Gm+nXHJEpUHyRKZBZ3ScdlPL1736bam2qo3aQkgAAoJGmKSl8u4oS
W1PSasFo5anVFdsWbVi0tlThsCX5z3ykJAAA6NAtKSmVfcJF/v/27mBJThAK
oGj+/6c7i1RSjMAD0edI5pzVtCJiZ9O3tDs33ksari2Y9tR9qOaWJpUEAAAv
lFpJw3zo1cTzlRQv7NTLYLXNU69RSQAAkGRYSZ/VUKpvxzS3HB5Oaw5ojixf
HmY4zNYcP1zq4UTDwfWxzdOVx558U79QSQAAkCT4GF+OyV7DY+d6D5UEAADv
pJK+i0oCAIB3mqmkzyOhNLmS/8P1K1VJAACQZL5Nfk7CZLvlnVRJAACQ5FQl
CaXr7noPVRIAACQ52z5C6Yob3z2VBAAASRbuEPV+JZumpPdKJQEAQJLrn96r
/1yIL+76lzpQSQAAkCT1kzx5VBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUE
AABJVNKmVBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUEAABJVNKmVBIAACRR
SZtSSQAAkEQlbUolAQBAEpW0KZUEAABJVNKmVBIAACRRSZtSSQAAkEQlbUol
AQBAEpW0KZUEAABJVNKmVBIAACRRSZtSSQAAkEQlbUolAQBAEpW0KZUEAABJ
VNKmVBIAACRRSZsSNQAAkEQlbUolAQBAEpUEAABQUkkAAAAllQQAAFBSSQAA
ACWVBAAAUFJJAAAAJZUEAABQWqukX381d8Xzl1uCeZqH//m7eVQ55+RSAQAA
agsFUWdLb7Z65t7emeCK5y8Dav4UAAAAB3mVFCfScNepLTNlpJIAAIAZN1bS
v7s5n9adnea9nuY8vcG9R+wW/gYAAOi5q5KCGupt6c3ZG3w4r0oCAAAy3FJJ
a1t6L3uDF564+xS/3qCSAACAGXdVUq0eE8wwPEVz5EwlBRsBAABqN34vqdwy
WUm9AooPj3cNH+cDAAAIrD2KFjzDVoZPfVPp8IWj4HG4enB91GFX7xRnrw4A
APjJdAQAAEBJJQEAAJSWK2n+RxJ6D9qtnfTi146GZ384GyUqAAC8zfL3kk7t
qn+NYdn1rBjO8MApAACA13q4kt4QICoJAAAILFTSYXz9DFvvobjgebzD3/XP
1vWmCp7l613azDKa5w2WOlxG88BgtfW7CgAAPONiJTVvEjUrafIeU10f8YDe
yObChluayRNccrDI+ly9sju1eAAAINtdldQbUG7pDa6r4fM1WIIBn1baNGce
rrmunubKewUULzLeeLjMhX8UAADgLk9WUr1rpn2GU9W1EpxxZs6zlbRwLymY
v74WAADgSXdVUpxOvb3zlXR25Hwl1feAvrGShosHAACyrd2waN6+qXeVA8pP
/s2XpXLa3rHNA+uFBRt7y6gXeeoqgjX3LiE+BAAAeNLap/HgEJ/tAQCArS3f
s2geJZEAAIDdebILAACgpJIAAABKKgkAAKBU/+YbAADAD/cbgYkCvQ==
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 7->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UyDH3QLUlDuW6DMG4hQOqJIESmelYJIkyLaFbsRza6yQYq2iW4a
SkRLgyho6FghJCSEroqCN8DboE51uPY5ery+PH/9Z+wZ+/PRT7fOscfj8dhj
+3t8znX/x3/6l//sz/+DaZr+zX/08z//7E/+7X/6V3/1J3/9n//Rzzf/xV/8
m//qX/3Fn/2X/9lf/Nd/9q/+7K/+kz/9D39O/Pc/y/7p35umv30NAADAyufz
+f4XAADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElK
AgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJ
SgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABg
SUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxrug
e2/8gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQY
pADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSq
hvrVhUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZK
HGypaotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp
4fRoyX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJ
Kan+LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imV
KanYLaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
D0hJU8xnY5Jt11QezOUG+iElQZHLVuf2paTVi+ufJYVb0ajwwaX6XNH1z5I+
QZI6WDmkOGCgB1ISFElJnZOSmi7V54parCKs86yUtKM8APeSkqBISurcwW/c
RadfnJKWX+uqLL97RfsWfMNaalLSjm/cZeqHIhcguIuUBEUuUp07+Cyph5S0
Y5NPX/bExg+akop1hr9OOrd+SHEZgutJSVDk8tS5+lAzP7IJ304L+yKSlNSi
qovXUpOS2tUPeVsfOgNHSElQ5KrUuX25JvXVuyN/Q6Sk1OKrH90ceW4iJbWu
hJdzVYILSElQ5HrUOSnpyOJTzOfXw37r6sZNSZlqT/wY3/mEU7g2QVNSEhS5
EnVud8BZfePuPSkpWsNqyipJHay8hYtT0ohrAWA3KQmKpKTORZ+G3OWyTT69
hklKal/z9WvhPRxRcC4pCYquvPvlRL8t9FnhbqcckJlY9HnxN+4+xxLivrXA
KVyt4ERSEhS57gxKSjpSyfTKf71hrvma54NOLLTgmgWnkJKgyBVnUFLSkXoO
ruKCIdNoFRd/i9K5hUYyB7CL2nGF714/3d3dfxEpCYpedU54EinpSFUHVxFd
fB5Kp4yp00flXfcDTi80FR7Gb7vXPZGu+3pJP0hJUPSGU8EjSUm7qzp+BcyE
r3lWiyB20F2fmjrD0Npy3L3wocApdFfo2X0iJUGRS8mgpKRbasvXuZzeYUr6
XP6Nu+V6r1kRL3fXET40HZXx4M6RkqDowWeAZ5OSbqltVefqTqz/lPS56cN2
JxkuEH1a6tgr0kV5+gdey0VkUFJShxWmEtOJqzjFLTeQt5xnnN9eJZWSHAMZ
OqeGXoJ3cgUZlJTUYYVTx/96Q1j/9WP/rtU5xb1BJiI5AFL0TD19BS/kCjIo
KenGOvMpqekqTnTL2L/l6ZVT3DsJSkW6pd7z+srvkqDI5WNQUtKROg+u4hkp
6bK13L7SRmvMP7y4WIsN7MrdHfyLuzvjNE/altae11dSEhQ97Jz/HlLSvmpP
uc+JLn7uHVR9PdfdGlY4feuOa7eunzX/7nd/08Pflf15l5/b+Md//L/28PeY
3n7Mhlzjed0lJUHRpnsb+iEl7ah2x/18prZTWnW8/p8lf3x+9PDXYUpquiIp
6UpS0umiG3LWebJy8RM780ibL25qJ6QkKJKSBiUlbapw91OPTJ2ntO14/SOm
pE0beISU9BhS0ulSG7KcfjAobZp+xFxn089qHrPrv6QkKJKSBiUl1dcmJXWY
kjZtY5+kpCtJSad7ZErqbZGeSUlQJCUNSkraVKGU1GFK2rSZ+3iWNJD8wNya
klbj/YUpqXii25qSVhVGT6rLMssXq9fRwuHbVCOjhcOSqQanmpFfaWb6oKQk
KCqeSOmTlLS1zvCCfrDCUxp2vP5p5JS0aUt7M1WkpPl4W73+vq0p9raUlLnj
3RFnoq/fk5I+2Ut8Znq4F6Zfs8/qbeZFpkBYZlUsmlkyrYoWq29GZqWptQxN
SoIiKWlQUtK+mnekpKnauU2tL5nKLEvh9LBwtMyqfHRxKSkfYYqv87PemZJW
Y2qSkjZa9V54jkptyJTIEctKwjL5F8u1T0E8CaekmlEsvCoZNriynlSF4cRx
SUlQFJ45GYKUtLvyIY75+hZGA8scW4qvUxM3LXskJW3a2K4cSUnTHx4bSUmz
aEpa3uWelZK+da7e1tc/Sm9ngkOmwCeRFKIpoyZo5ANIu5SUakZlPVIS8JGS
hiUlHam//8O+2LzlPeRZKalYPrOuIympZns71FVKeoMdKSlcdn79fbF6u7Xa
qOURcm/J6EE7F4sW+NTFh3DZYsnwRbS2fPli4dSsmmbkK0xNHJeUBEWr8yqj
kJKGWMtumRuY8F7oxGdJUywQrWZlVvc29SkmH5dSxTxLWs7d/Sxptexc+b5v
4o3S21MQLsIp0aXCnp/+EDTC6dEpqz0YfbuqYVVbtHxq1WFLwvak2h9tdnSl
qR4bl5QERdFTAf2TkvI19OOUTsjUNmVT0lLlN+6mIBOtFm/xLCm61Z2bjqWk
mZT0lR8400kpaUo8S3pqSsqfOg5WfryesTxsS6UkKDpyI8eNpKR8Df/yX/5P
PfwdvA+piVr5lJTJQZtSUuWzpN0bu9yc45VcY3dKWi04pb+G98KUlJm7OyVF
E9N04Bt3V3bLbjWnjiOVn1LPWB62pVISFElJg5KS8jXcno+OpKSacLQsfG5K
Ch8e5ReUkuqDUj4l7YtIj0lJeVtT0jyIVlP+OPi90qrYY1JS0cEN2XSa2lf5
kQItPGbXf0lJUCQlDUpKytdwez7akZJWdx2XpaQp9qgompLyQemsM8koZ6R9
KWney6m3UlLU1pTU7u8xvd15yigW3nqqPO4xu/5LSoIiKWlQUlK+htvzUX1K
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
nrywN1ab/MIeACnpLE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKv
IiWdyDnkqV5yWXweKekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJU
LhaDkpJeos/e6LNV9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZG
tw2rNHr7dyh+x2z0y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64
PZPfqHG3C1rwuyQocu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRB
SUkv0W1vdNuwSqO3f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i
597ouW1FQzeeqNTvkjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUk
CElJjTjPPImUNCgp6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd
90bnzcsYt+UAx0lJ7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e4
5f6E46Skl2jaGz8r//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTt
jenFKenjSHsfMeFLP/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN
+HoAKWlQUtJLSElNN//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1Ku
Z0fn6Z93kpIuYHCNTkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReS
kqBIShqUlPQSd6WkMAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkp
nL47JeWrlZJoyi6up6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp4
7mGzr7Zl885qj+HwNlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+P
wllSEterGVN3Db3jTm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3
UhKtVQ4oKalRhcDM+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5
rQNqdTVcfnwRfqyRf5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSo
IVJSfeTJRKEwTOVX124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD
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
x1ybeLPnHb3P26J6p2y7lFQpE3yKmeiUPbU7JZ219uOV3L6K3Vz6ByUlvZCe
aaqme8UlBvW8g/Z5W1RPSrpSJvuEj5PCYi2CUv1SJxa7QD8tmbniD0pKeiE9
09qmq0/NydMJlk6s7uXm+7dxj8/nbVG9U7ZdSqqUT0nh21Wxsw7IrUGpfu39
DJl+WjJ7ySnleaSkF9Izre3o4fxla8enf3CiKebz66V/rIPzeVtU79xtl5Iq
FVPSJxFJTj8gj6ek8JhZVRh9u3qx2qjKWZl6wpakXl/vxlVzhJT0QnqmtYM9
HJ7Mw/sZuEXq/i2cNYrnbVG9U7ZdSqoUdmk0DoQlW5z86ysMG5maHi1ZGXlq
ZmXqqWlAuAlXcu0elJT0QnqmtbN6eEqrLHa9Uzbc1t2issGpt2ENN2/Pr07Z
ouG2Lm/au+1Lp6ekm7vyVwe3ZbVdqSnTrz0/pXdE6yZFy0R7I2x8anNufJGa
eL3TDyeuISW9kJ5p7fQLWf7y/fP1j8+PHv5aHFo/6/zv//Ive/hrtHW377VN
+y68U8rchPyc8t/963/dw19m6zZt0arkP/kn/0cPf7uPzN3bvtQiJf3Df/h/
9/DXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+t3v/qaHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7Z
kZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl
9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uR
krpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQ
mpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcK
klocn6nbldRdzdyM1dxP6W4qWqD1iDOiP1JSTxyQ3XIDcK9i/0+LlBTeudVE
m2j55ZTo67D+y46TK1eUyizh61XhaJnMaylpFOEoc5Kkc42Oz1WQ+fyagMJV
L5NOqlhlPadvy4oR/ZGSuuFo7JkbgHsV78TCqBJ9nQ9KZ72+rE8uW1ExJaUm
SklPJSUxnHYpKXy9GhGpMtEXYaTKx6V2jOiPlAQV3ADcq3g/lklJ9d+Uk5JS
K8rEFinptUQkxnJZSsqHmkw4ql9cSrqMlARF7gHulfjc+pdP2KKRZ0p8fW71
rTkpKb+ifHJZRZ6VVDIKC0hJw5GSGEi7lBTmndUa8ylpx8QLhpsR/SUlQZF7
gCMyGecUn1hKmkVzU3T6apFiGoou0m4zb1STX3Y/S5KSxrU6Tu5uDhS0OEqn
9L/eME9cvQgXCV9E62m3FSEj+ktKup1DsX/uAe4VvXVfFcg/S6ovkCqZeb1a
/LI+uWxFo6ekj9NsMyISA2mXkq4kJV1JSrqX43AIbgPuVfzIOhNtMlOiqUdK
CleUT0ZS0ptJSQzkASnpeZeYzklJ93IcDsFtwL2K/V+fkqbgV0jHf4v02pQ0
W00J36ZeS0kP0O3psc9Wca9zj4orPyW4cqAZOzMp6UaOw1F0exvA1yq/rJ4T
pR4ezVPCRaZfpcpHF7xsky9b0Y7nPi3+pKRu9dm9fbaK2zkw8vTPkpR0F8fh
QKSkzoWZKP83pZ8KHfyTkqSk4YSp/0bnbtdqGz+XfyDfj2s2eQg6JEPPrEhJ
d3EoDsRJtXOTlNRyRbfnIympqZ+d84//8f/Zw98puymVEZan8WuOh59r+Uf/
6P/q4c/xH9InIX0SkpJu4VAci5TUuVM/cz3qsk2+bEX9OLIVJ/bJw0zPSknL
7Uq9veZ4mKSkvp11ehmaHsiTkm7haByLE8igflvos8LdnnFAXjayntFdjUhJ
jUhJYzn9U50h3N3rsOawHI6TyaCkpCFcsC1P6q7TTa9JSfOUa46HSUoC2MLJ
akRS0qCkpFG0HmIP665zPTUlhZv5OfVIK1YlJQFs4mQ1IilpUFLSWASlW2RS
0urLOauJ0berKZlit6SkcyvMf3NpmZLmYt/Xy+lhoplLpqZkSkYjkoMf9vG7
JChylRmUlDScdmPtqT12XDG5hK+jE6OzVlkpLP+YlBQeunNmCSNPMddEk05x
YiZJnbvt8BJSEhS5ygxKShpUi617do8dcSQlZSLScsrtKalFWIimpOVapuDJ
0SrLFAuspoTxKj/FsyQ4SEqCIleZQUlJ42rxyf+5FT7G7pSUykSpSr4n0vy6
HuOTTkk1uUZKgh5ISZdxmhqXq8ygpKShnTvu3tBj+0zVySX8Kt2mlHTvN+5O
lwpHywI1KSksk8lNqzrDlBStbayOhX5ISddwjhqaq8ygpKQHOGtL39NjWxVT
UubZkJQUzUdzgWJKmp2SklK1jdWx0A8p6QJOUKNzlRmUlPQMpwzAV/XYJrtT
Ujg3lZsenJLyBSq/Ppd6KlSfkvK1jdWx0A8p6QJOUKNzlRmUlPQkBzf5hT1W
6UhKygelaJh6TEoq2vq9uFRKWj0e2lHbwzoWLiMltebs9ACuMoOSkh7myEh8
Z4/VyMeWr8zEsExmSjGR3d0ZZwqjyjLUpN5OaWEyShUIa7u7M2BIUlJrzk4P
4CozKCnpkQSlc+WTyyl/lat42A6agi/O3fX3sI6Fy0hJTTk1PYOUNCgp6an2
DcmXd1qKlNSIlASjk5LacV56DClpUFLSs23tBJ0WlfmK1/Xu7owz3d2Xv7i7
M2BIUlI7zkuP4SozKCnp8TaNTZ3GlX4ebz8+P3r4c+TDPlJSI05KTyIlDUpK
eonK3tBpXElKgtFJSY04KT2JlDQoKek9ajpEp3ElKQlGJyVBkZQ0KCnpVYrj
VKdxJSkJRiclQZGUNCgp6YUyPaPTuJKUBKOTkqBIStpk+a8qHe+3HTW0219S
0hBSB4BO40rLlLT6F+fCFDNPn/8bLRkumKpHSgJ641z0SFJSvWVH7e63dtnq
YM1S0kAEJe4VRpia1/PbmohUU6eUBHTCueiRpKRKYS9JSY04IGuEI1e/cZma
lBR97lOZkiqTl5QE9MCJ6KmkpEr5n4RkunH1Jb3V69WL1brCMtG5YRuib/Nb
ISWNaPV888aW8Cr7UlIq6UhJcD2/SzqLs9CDSUmVap7gZJ43hS8+2TSUWbCy
QGoVKVLSoGoiMJwrjCpLF6ckVzHYQUo6i/PPg7m+VNqdklYTUxFm34vUM6bM
KlKkpKEZyFwp8yxpfnvxs6QjQ6DF2Jl6cvrW8QBS0imMr2dzCq0U9tIUfIA/
T1n16vJtWH7fi5qSqYlRUtLojGUuM+1KSVP6MdN82jz4jbt9o6DFwPlZ51//
9X/bw5/TAlFS0imMr2dzZ1WvmD5SSapYXkpackDuE8Z2aKQmJW1KOsefJa2a
t2kgRD/UOnhxlJLonJR0nMH1eFLSJuFzotTE1KzVJXgpnLuqJFo4v0ixhTMp
aXRTdSKGg1axZaX4kChTvrhUWDLTyPxYyJxa5wJHuuj2fCQlkSElHWRkvUHx
OkKfTg81UtLoplgYhxai0eaWv+JxXjMWpuCDr+j0rV10ez6SkqKi6fguN/aD
lHTQvbuPa9w+TtlHSiI0JW724FzTOClpbnD93ElKerSfHfJP/+n/3sOflDQu
w+olpKRBSUmEwq4zwGnhkk/Za21qc2pW9G195dE6M7Hla/W6fpaUdMQkJf2e
lARFm64y9ENKIlR5EwgH/Tyi/sW/+J97+Nt6bFde8naksLCGfHIpvs7PkpJ2
k5K+pKRN9n04w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSk
WfGEsCrgevoe9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0
yz8nqp/I89jRg5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp
6duZq7ffKVMgU0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8
RecOik0paeuzpGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbw
Xu+yTb5mRc+zqeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOI
lFQ0ZTPOtD0ZHUlJDCF1IF186HK9zAFAD37unT/6o/+vh7/LjhMH5G47uk5v
s8MURJUpEX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeY
YpEnNXG1rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNV
ow08WHMmucy3YavX9bP+evGLpOVEKalGMSWFcWn13CefjMKSUlLnUvloVSD1
lgezrzsnJbHJ7t7T7dR7fEqaN/PIgCp+F+6aP0N7ZXdKij5LWtWWf9tVSmJW
M9KLSYpHsrs7JyWxyZHe0/NUisafMAfli/WfkuaN3bEWKalbNSkpTEDRpaQk
eDYpqXNSEpsc7D0nBGrsTkmzgVLSvMmpdUWnTz1p3DeDmQ7/G3eriZlimXVJ
SdA/p9DOTYmUNF/+ohOXc1clwwVTlZybkuoXd0AecUrv2QXkTdtTUmqRUVLS
vOHhlOhl9OeUH58fPfwZziup5DLvyui37FazUgVWMhHp9pTkd0lQJCV1LpWS
wnQTTlwmo0yZVGIKlzq4IaeXJHRW7zkzkFEZefalpGjI6iQlfRK/45aSBlIM
L5f9SUnQOfdCnTuSkjJ5p7hI05Q0H3Wpu4sjK3q5c3vPviBqlXG+wowzTw/L
hLMyZVLruiUlzT0QWhW4PR9JSVFS0peUtJQZztG34Xi/rq1cKHqbSj+mvSlp
yj4V2pG29h0nqXuJ5YHnbHOi03vPKYLQlPiO3PV/9x6c+Tur2/ORlBQVvSrd
5cZ+kJJWpvStSGZWagrPcPs4JW/anpJmu1PSavEW37jbdP6hXqPes1NYmqSk
9M32PPf2fCQlNfKMLpWSVjLZZ3WrHL1pecZRwYqU1LkdKemUZ0lNv3H3kZJa
aheU7Bq+qj4lv0qHnfDJpqS52Op1/Swp6V7P6FIpaSXcrdMiJYVvV8WecVSw
cu9VhqLpib9L+vjGXUtNO9DegU8pJ35Kz5KWc1Ov87OkpBs9o0ulpJViSvok
AlHqZoYHkJI6V5+Spj/8u9+VEy9OSeF2ffzrDW207kAnDTp34/G5zEpbU1K4
SGaWlHSjZ3SplLRyJCUtPyHhSezWzmUizEpqYlg+Wk++WKOUtHUWNa7pQLuJ
bvVwcG5NSdHyqVnLFFYMUD30xsM8o0ulpJWalPSp+40SjyEldS6Vkq7/k5JG
cVkH2lP0KXpLc+LFruZz400pKVU4P6vyGZNxelD48WPK3S3dRkpayeSdfbN4
gBGH9qs8MiXlrykOyIOu7EAnEPqRunFdHqWnB6XMSts9S5KS7vWMLpWSljKZ
NzolOmvQvEyGHdq5/LX4Ypdt8jUreqrrO9AuoytT9Qe/R1aRP1VOjX+XNElJ
93lGl0pJUHTl3S8n+m2hzwp3c0AedEsHOpPQjxtT0rLA1pQUpp7MrMqIJCW1
8IwulZKgyL3NoKQkUm7sQPuOHoQpaVp8JeasVeSftmcizFx+9bp+1mtTUifb
0kkzDpKSoEhK6lzqE8tbXLbJ16zowW7swysPFagxnfqvN1SeHqcD/3Z3Zfap
L3l8qzvRybZ00oyDpCQockvTudaX2k0X5cs2+ZoVPdjtfXh7A2B2/GiMpqH8
x0dSUgth/3/uuI15RpdKSVAkJXVOSmKHHvrQuYVO7D4OizkoU3Puqfzl9m1+
P1Ibtdy6+s28rt8rtOqyClISFN0+TsmbpCS266cP+2kJ77T1dvSsO9ifi//u
d3/Tw9+TxuBqW6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/al
pBakJOBKbmA698LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+
0P9Y/K8GV1LllxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo
7lwp6cvvkqDI/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSx
UWqNt+ejl6SkcGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6US
VifncwfkcZ334e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+
80kpCR5JSurc1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxK
Tx0pqb0cTUmr04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnh
IqlZW1MSs8+ulDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03
OaNsHU2t7n67Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2
NSWtolA4K/UJmJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSS
lkEpdcXcF5SkJOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra
9yxJSooqHiRS0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcY
d6dvTUn5NDQd+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3c
cI+NonakpPo0JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZL
mfAyb+nq9Y5ZxYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0De
xeeWK00V+WX336bKH9m9R0xS0u9JSVD01CvU4/220GeF+zgaT/SAznSCep7r
P3i5hZTULSnpS0qCosdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGL
G/tBSoKi28cpefeewFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3
Ayoz1KaNPV4Js+f15/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7
M/5Ob+3h6+DRcvxgq1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLf/u3/03Pfzd
u4P6j3L1LbzAXdt+sJLo60au7yWex1EEb3DLhZV60zgpaYibuoFMUtIgfvbP
P/gH/08Pf9fsqdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9V
O68o9WIunzkXhctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaN
l5L2qdn1t+cjKanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsY
NDL5ZTlrmXTCHBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zds
elxKurJ7w1UXX3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXW
lMQONbu+5ilP+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJ
SVB0+zXx5aK3ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1
KSac8hW+ja739JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewC
F1xcpp5SEpf5nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+Fe
qfZk+vyz5Tt1+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz
1Oz6mvwyS32PLpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQn
D9gWKQmKXDTvFd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVS
C97esOMpKVPJkZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovon
TZUpqabl5NXs+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2j
fx6wFVISFLmSdi4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83p
qybPVkaYWbtnSU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8
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
xnCRTWWmRMyJvggnRlvoABuOXVbvkX1Vv1H5kT7FUtJ8ivi+DqfPs+bXxbfR
KVLS450SFoZ2pAekJCh6+RnmGpkotCklhcsW88j1Kam4Ovp37i6bfrWauONt
TYMvO7M98vBejfF5dBfPSOGsMK2sck10emZi9HVqrpT0YPbp0o7ekJKg6GEp
qdttSWWZTGAJ30anhLM25axU+fyL1NzidIZw+v6qPMaKE2vqz0xscRw+6die
Yj6JIb9aMDprFVgyoSkVbTJzpaTXeth9y1m2douUBEUPO9v0vC3Lu47VlHBW
WD6/p6L1RKuN1pZZMPriE9w4pW6owol0rsWeWh1smRWFc4vtmdK36MUpxz3y
wA7PRalZy+nRDs+npJoMlVlq+jVGfdvgG3ePZ2+mbOoZKQmKHnb7+qRt6ZZO
frYbU1JYrKYx+ZS0iuqnb90jh8OOlBSdlU9J8x6Jfgcvn3pqvrAnJT2SXZlX
3z9SEhRJSYP6beHiCt/Tye/UKCWFISW8FV/NrWxJKnaF6anRofu8EZHZNSem
pMov2tU8gZKSXsJ+rFHZS1ISFElJg7orJTX6QJ5+tH6WVDlx07Ok6GEZnVLf
5nqPHw6rp3L5Yqspx1NSzZfupKSXsB9rSElwlofd8T5pW/JufJbEs3WVksJi
q0CUyUGeJZ1l60O95ZR8LIrmoPxEKenN7McaUhKcRUoalJREI72lpHyTiikp
VeeJHn/aOTElzb8n+spMzLzNFM6EqQYdw6VWo3v1aclSftlNK9pXQ/2Kjp+d
wk2WkuAsUtKgpCQaOX0QRW9dlhPD25v821TN0To/i7Nco9Pds087mTvPsGQ4
JfOTohP/iit69j56iXwWOB43imtsobiKHUNPSoKzSEmDkpJo5D2D6Cx67EtK
oikpqb5MzVJSEhRJSYOSkmjkPYPoLHosZerJ3Z3BUdOWlLTc6dHXq2KpF5m5
YfNWs5ZlVgdhqhnR19FZxcbEO3FBSoKiI5eP6qvT2527y76kJBqpPGL3HdjL
EdFoaETX1XpFF6wFXm410FJvoyeZKcgvqTLRF9Flw4G/nLUsU9+M+lZFK0l1
TpSUBEU7biSa3vw/Uosek5Jo5ILwcln9UhI8Rn1KSk3MzMq/KM7Nl1l9alqs
NhXiipVkpoSkJCjaevfufuCIE3tPSqIRKenIGoFGhk5JqZbveJaUqSQzBdih
PiV5fnSKs7pRSqKR1PG5+hgz+gln6nPO8IIeVhUuEi4Yrj3VmNW6ojWkWhIt
kBm2ToxwgUxM+Pw6zFMTw1NBdMGaqsIGZMqk3hZL1tSZbwlwRP7qvyrZujEv
cUpPSkk0Ej0+K6/+nyD1VF7084ssm1F/UxHWvHVD8n1SORc4ReqEEN7GrCaG
H3p8YieKlVXhzNz8WvKFU9VGF8xXku8rYIdwcKWKXdCY9zjen1ISjUQPztRV
eEqHiyl2i1KzSDg92rZi/ZvWVdPOFKdHuMC5A+3Zw7Zm6/wuCYpqUtKzTyZ3
OdirUhKNZI7MVIjIBJP6cJSpM9q2Yv2ZucvPaYuLO0NCD6SkelISnEJKuouU
RJ/y8STzLCZfYMezpGgz6us/a6IzJPTgxIG2enB8Sm2byp+y3oOrkJKgqGlK
Wp6I7jodXWBfk6Qk+pRKSauEshzamdfLiXnRRaJtW82qqWTV+OiWrurJ9Eax
u4DTXTzWNq2ut/NATXukJCiK3oqsCuyuuX4tu2vupM4dix9co5REO/UH56ZA
cbzO629FpCTohJRUT0qCUzRKSakPgU8hJX2kJFqSkupX19vdETzVkc9so8+U
54nz29XcsHB0brSS/OtUPWeRkuAUl6Wk1RpTZ6rVi/CsEi2Qr6emZLQf8kul
JtY7cm6Ukmhn05HZ4kIfrbPdHUWqAZUlWzcG+Bwba6ur+Wpi6gYj+qKycFg+
VY+UBN26OCXlw04qv4Tlw7eZemrOjdGIlF8q2shNpCS65ea/hl6CyxxMSeHr
TLT5BJf4fZHqE7tDWN2otCAlwSk6SUnFF+HE1Ykrs3h9ybC1NTEts715UhI9
EwHy9A9c6caUVF/VJ3aH8El85LuafpbKCqUkKLosJe3+ECZVPrWKIyUry0hJ
vEHTjzpHp2fgervHXf3HpPsu/ZmUVKxHSoJuNUpJn+ozSfFF/RnmeMlo+6Uk
3kwcCOkTuMXBG5LVHUXmbbTwalZ+2WLhcKmzSElwlnYp6RM7dYQTl2+jLz7p
M9umeipLRpu6OqGtXuw+1x3pWymJyxw8zp9BD8Dtdo++i4ftvWeJyrVLSVBU
vOgPMdgHJSUxouinB493d68Df2vfYLxyCN97uqhfu5QERcUbgFHG+4iObJ2U
BMALbb10XvZZx+2fqGxau5QERT2npK2f5XYSqerPk1ISAGxyexjp09Y+kZKg
qOeUtJRqRifNW5GSAKCdPq/+d9nRG1ISFElJLUhJANDUy388eHDbpSQoapSS
ViM3HMjRt6shv6ohXDBTOHyb2pZU4ZoNSW1UqkC46tSsIikJAGbhjcSz3d3f
8HzFsbZjJE6/Rpvp1xyRKVB8kSmQWd0nHZTy9e9+m2ptqqN2kJIAAKCRpikp
fLuKEltT0mrBaOWp1RXbFm1YtLZU4bAl+c98pCQAAOjQ/9/eHSzJCUIBFM3/
/3RnkUqKEXgg+hzJnLOaVkTsbPqWdudbKqnXPvUhN95LGq4tmPbUfajmliaV
BAAAL5RaScN86NXE85UUL+zUy2C1zVOvUUkAAJBkWEmf1VCqb8c0txweTmsO
aI4sXx5mOMzWHD9c6uFEw8H1sc3TlceefFO/UEkAAJAk+Bhfjslew2Pneg+V
BAAA76SSvotKAgCAd5qppM8joTS5kv/D9StVSQAAkGS+TX5OwmS75Z1USQAA
kORUJQml6+56D1USAAAkOds+QumKG989lQQAAEkW7hD1fiWbpqT3SiUBAECS
65/eq/9ciC/u+pc6UEkAAJAk9ZM8eVQSAAAkUUmbUkkAAJBEJW1KJQEAQBKV
tCmVBAAASVTSplQSAAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmVBAAASVTSplQS
AAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmVBAAASVTSplQSAAAkUUmbUkkAAJBE
JW1KJQEAQBKVtCmVBAAASVTSplQSAAAkUUmbUkkAAJBEJW1KJQEAQBKVtCmV
BAAASVTSplQSAAAkUUmbEjUAAJBEJW1KJQEAQBKVBAAAUFJJAAAAJZUEAABQ
UkkAAAAllQQAAFBSSQAAACWVBAAAUFqrpF9/NXfF85dbgnmah//5u3lUOefk
UgEAAGoLBVFnS2+2eube3pngiucvA2r+FAAAAAd5lRQn0nDXqS0zZaSSAACA
GTdW0r+7OZ/WnZ3mvZ7mPL3BvUfsFv4GAADouauSghrqbenN2Rt8OK9KAgAA
MtxSSWtbei97gxeeuPsUv96gkgAAgBl3VVKtHhPMMDxFc+RMJQUbAQAAajd+
L6ncMllJvQKKD493DR/nAwAACKw9ihY8w1aGT31T6fCFo+BxuHpwfdRhV+8U
Z68OAAD4yXQEAABASSUBAACUlitp/kcSeg/arZ304teOhmd/OBslKgAAvM3y
95JO7ap/jWHZ9awYzvDAKQAAgNd6uJLeECAqCQAACCxU0mF8/Qxb76G44Hm8
w9/1z9b1pgqe5etd2swymucNljpcRvPAYLX1uwoAADzjYiU1bxI1K2nyHlNd
H/GA3sjmwoZbmskTXHKwyPpcvbI7tXgAACDbXZXUG1Bu6Q2uq+HzNViCAZ9W
2jRnHq65rp7mynsFFC8y3ni4zIV/FAAA4C5PVlK9a6Z9hlPVtRKccWbOs5W0
cC8pmL++FgAA4El3VVKcTr2985V0duR8JdX3gL6xkoaLBwAAsq3dsGjevql3
lQPKT/7Nl6Vy2t6xzQPrhQUbe8uoF3nqKoI19y4hPgQAAHjS2qfx4BCf7QEA
gK0t37NoHiWRAACA3XmyCwAAoKSSAAAASioJAACgVP/mGwAAwA/3G14xaF0=

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 8->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3U/r9UyDJ/SgLlz6FnwXzmbA3rkaaOmmoWdgprGd6c0j9AjPuGi4mY2z
daMgiKDCMIIguJYLN74nV8er+/Ckc6X+5k8lVcnnw4+bc5JKpVJJJfmenHPd
//Ff/Fd//F/+e9M0/cv/8Od//vif/f4//eu//mf/zX/+H/188ye/+5d/9c9/
95f/xX/2u//6L//5X/71f/IX//7Pif/fz7J/8R9M09++BgAAYOXz+Xz/CwAA
8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03fkCl
W84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J2k
JCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP96sKl
Uus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62VLXF
t5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6tOS+
tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRUfxda
rLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU7JbT
x7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf0X5j
Stq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVGG1Bc
vLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDqJvms
lJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSxqZtS
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
szHJtmsqD+ZyA/2QkqDIZatz+1LS6sX1z5LCrWhU+OBSfa7o+mdJnyBJHawc
Uhww0AMpCYqkpM5JSU2X6nNFLVYR1nlWStpRHoB7SUlQJCV17uA37qLTL05J
y691VZbfvaJ9C75hLTUpacc37jL1Q5ELENxFSoIiF6nOHXyW1ENK2rHJpy97
YuMHTUnFOsNfJ51bP6S4DMH1pCQocnnqXH2omR/ZhG+nhX0RSUpqUdXFa6lJ
Se3qh7ytD52BI6QkKHJV6ty+XJP66t2RvyFSUmrx1Y9ujjw3kZJaV8LLuSrB
BaQkKHI96pyUdGTxKebz62G/dXXjpqRMtSd+jO98wilcm6ApKQmKXIk6tzvg
rL5x956UFK1hNWWVpA5W3sLFKWnEtQCwm5QERVJS56JPQ+5y2SafXsMkJbWv
+fq18B6OKDiXlARFV979cqLfFvqscLdTDshMLPq8+Bt3n2MJcd9a4BSuVnAi
KQmKXHcGJSUdqWR65b/eMNd8zfNBJxZacM2CU0hJUOSKMygp6Ug9B1dxwZBp
tIqLv0Xp3EIjmQPYRe24wnevn+7u7r+IlARFrzonPImUdKSqg6uILj4PpVPG
1Omj8q77AacXmgoP47fd655I1329pB+kJCh6w6ngkaSk3VUdvwJmwtc8q0UQ
O+iuT02dYWhtOe5e+FDgFLor9Ow+kZKgyKVkUFLSLbXl61xO7zAlfS7/xt1y
vdesiJe76wgfmo7KeHDnSElQ9OAzwLNJSbfUtqpzdSfWf0r63PRhu5MMF4g+
LXXsFemiPP0Dr+UiMigpqcMKU4npxFWc4pYbyFvOM85vr5JKSY6BDJ1TQy/B
O7mCDEpK6rDCqeN/vSGs//qxf9fqnOLeIBORHAApeqaevoIXcgUZlJR0Y535
lNR0FSe6Zezf8vTKKe6dBKUi3VLveX3ld0lQ5PIxKCnpSJ0HV/GMlHTZWm5f
aaM15h9eXKzFBnbl7g7+xd2dcZonbUtrz+srKQmKHnbOfw8paV+1p9znRBc/
9w6qvp7rbg0rnL51x7Vb18+a/+Zv/nUPf1f2511+buMf/dH/3cPfY3r7MRty
jed1l5QERZvubeiHlLSj2h3385naTmnV8fp/lvzx+dHDX4cpqemKpKQrSUmn
i27IWefJysVP7Mwjbb64qZ2QkqBIShqUlLSpwt1PPTJ1ntK24/WPmJI2beAR
UtJjSEmnS23IcvrBoLRp+hFznU0/q3nMrv+SkqBIShqUlFRfm5TUYUratI19
kpKuJCWd7pEpqbdFeiYlQZGUNCgpaVOFUlKHKWnTZu7jWdJA8gNza0pajfcX
pqTiiW5rSlpVGD2pLsssX6xeRwuHb1ONjBYOS6YanGpGfqWZ6YOSkqCoeCKl
T1LS1jrDC/rBCk9p2PH6p5FT0qYt7c1UkZLm4231+vu2ptjbUlLmjndHnIm+
fk9K+mQv8Znp4V6Yfs0+q7eZF5kCYZlVsWhmybQqWqy+GZmVptYyNCkJiqSk
QUlJ+2rekZKmauc2tb5kKrMshdPDwtEyq/LRxaWkfIQpvs7PemdKWo2pSUra
aNV74TkqtSFTIkcsKwnL5F8s1z4F8SSckmpGsfCqZNjgynpSFYYTxyUlQVF4
5mQIUtLuyoc45utbGA0sc2wpvk5N3LTskZS0aWO7ciQlTX94bCQlzaIpaXmX
e1ZK+ta5eltf/yi9nQkOmQKfRFKIpoyaoJEPIO1SUqoZlfVIScBHShqWlHSk
/v4P+2LzlveQZ6WkYvnMuo6kpJrt7VBXKekNdqSkcNn59ffF6u3WaqOWR8i9
JaMH7VwsWuBTFx/CZYslwxfR2vLli4VTs2qaka8wNXFcUhIUrc6rjEJKGmIt
u2VuYMJ7oROfJU2xQLSalVnd29SnmHxcShXzLGk5d/ezpNWyc+X7vok3Sm9P
QbgIp0SXCnt++kPQCKdHp6z2YPTtqoZVbdHyqVWHLQnbk2p/tNnRlaZ6bFxS
EhRFTwX0T0rK19CPUzohU9uUTUlLld+4m4JMtFq8xbOk6FZ3bjqWkmZS0ld+
4EwnpaQp8SzpqSkpf+o4WPnxesbysC2VkqDoyI0cN5KS8jX8w3/4//Twd/A+
pCZq5VNSJgdtSkmVz5J2b+xyc45Xco3dKWm14JT+Gt4LU1Jm7u6UFE1M04Fv
3F3ZLbvVnDqOVH5KPWN52JZKSVAkJQ1KSsrXcHs+OpKSasLRsvC5KSl8eJRf
UEqqD0r5lLQvIj0mJeVtTUnzIFpN+aPg90qrYo9JSUUHN2TTaWpf5UcKtPCY
Xf8lJUGRlDQoKSlfw+35aEdKWt11XJaSoo+KoikpH5TOOpOMckbal5LmvZx6
KyVFbU1J7f4e09udp4xi4a2nyuMes+u/pCQokpIGJSXla7g9H9WnpNRHsgdT
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
Jwdu5MAYlJT0Bv10xb0paV77KiWtyqwmRqPNPCtaIFN+uJQUnttTd4wdbkuN
h21vcXMqU0wYf4rFUmFqlJQUdle+M6dsbJnq0tByYmZWz9+4k5KWMkNvUxke
xr4elJT0Bl11xTWNid7ezKepKQgsyynTIihFc80q/hQjUvT1WClpeYbPXPov
bOZpHra9xc2pCTJhmUxKWuWpcVNSqHgayT9LmmKPgTIToxVm1iIldSgz9JYF
Um95Kjt6UFLSG3TVFWc1JlNP5t5mti8l1UypTEzRx1j9y/T8PLdYQ+Vuurfk
XHhKb+9wPntTUj4WzVO2pqS7++Oo4jfupiD+RBef0l+ry6xFSupQ5mj5JG6V
oxN5GHt5UFLSG3TVFWc15kg903kpKfX9umj5aIWn9MaJUtf3ZYHUgpc08GQP
297i5hxJSWEaWr14w7Ok5dx9KSn6LGm2NSVFG0m3UkfaVQc198jsfXomJb1B
b11xSnumaf1c4FN9Ipqyz3SOPzmaEj9Zik453hXnKl7To9PHvQQ8bHuLm3PK
s6R3pqRwbjElzSkmk3pWU/JvPUvqXJCKfjlyUnuqz5MJJ+r2kkGelPQGvXXF
kfakrkHLU1Cx/qku/lQWq0xJqVXs7opGak7m4aW/ww2p9LDtLbbtyO+SMs+S
wi/jPSYlZebWpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1n9ct
C5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrvii+BBqxJSUl8ov80ES/ZZd
OGs5Jf9WSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb9/9L
Cicu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8ZWtKmj+wjU4M50bL
p1JSqhIpiVtsCjJN/6QkKemdVheFT5fXaM4lJQ1KSnqDDrvi9CbN15qamvMB
5/hfff0d7hoqDXrVk5LOIiV9SUnHjXgmYZNBrxdISS/RW280Skn1haUkjog+
uBxib0pJZwkfN9/oxn6Qkk5x706ktdvHKftISS/RYW+c26RNtd12KxNzYidw
veUeHGJvRn9YdNff3Z3BCaSkUwxx9mA3l/tBSUkv0WFvnNikuxJHh73a2rKr
xb3Pr1/1fHlX8E5S0lmcOh7MpWFQUtJLdNgbHTZpqwdswg6ppycv7I3VJr+w
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/7M/+bQ9/jbbu9r22ad+Fd0qZm5Cf
U/70T/9dD3+Zrdu0RauSf/In/3sPf7uPzN3bvtQiJf2jf/R/9vDXNJJURqGm
KamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d2Xfz7Ud08SFS
0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0FilpUFLSC+mZFvJB
pkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp6amKGS28EqUK
p65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp8Dvt4tbdno+k
pEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvvsXffaRd7qT4l
rXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G356MjKanyo60L
LhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGqUvWvajiyddHF
py15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG9UTrjC7YYuu2
ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42vJ+WsImU9E46
p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkpunU7HvrU7OXo
XmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop27MGUtJo4v/6u
6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwzXMW0KyWFBVKL
V9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnRZ0PFucVHSy22
7khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11dX8/pbXubHd1O
D6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+n+0paRbGpe+L
1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+Xv13U+Wnb92N
Pp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXWlrnATbGfDkUD
zpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYTaSurbbF1qQQ0
JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1uCn5/NEulp7u+
cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T1MHzYXhFy1/j
puwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR3bHc0bekpGiB
rSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv6JD8BtZPPK7Y
1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn2CmdksIX4e10
DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV6xZbtzslpSZO
r3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14vHZ7maakpNfS
P41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRzwTfuarZud0qq
z8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp8JRUuY2bLgF3
mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5WsWWqGiZcGK+
WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML5t+upi/rabF1
WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w7m4Fm0lJr6V/
Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2f+9MSRf8vfwq
ubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sffad+ej6Sk3Vt3
ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653+tbVa5GS+nFK
F73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOdeeGdW/0AUtJr
6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZpKRxVX630FXs
ODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt8AZS0nCCf6Oi
NiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6qB19C7yBlDSW
MCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJb6aL2tG3wBtI
SQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NFTeleALoyekpK
bVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek1VLLFzU15+vJ
h7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzNWtWTLxy9BIf1
pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd0tAedp3qdnOk
pE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep206Skeqc/1MsE
qB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP6Z4HbLcN603Y
S8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClpLPWHcevDfnfl
I45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9lIs9qVmp6dEpq
IozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd8gnyUfFFtM6t
pKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8kYo/qRepiZtI
SWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yUPvXRfX6pfCVh
DZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX4Thoa+ilmZQ0
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
lHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEPtQ5e
HKUkOiclHWdwPZ6UtEn4nCg1MTVrdQleCueuKokWzi9SbOFMShrdVJ2I4aBV
bFkpPiTKlC8uFZbMNDI/FjKn1rnAkS66PR9JSWRISQcZWW9QvI7Qp9NDjZQ0
uikWxqGFaLS55a94nNeMhSn44Cs6fWsX3Z6PpKSoaDq+y439ICUddO/u4xq3
j1P2kZIITYmbPTjXNE5KmhtcP3eSkh7tZ4f86Z/+ux7+pKRxGVYvISUNSkoi
FHadAU4Ll3zKXmtTm1Ozom/rK4/WmYktX6vX9bOkpCMmKenvSElQtOkqQz+k
JEKVN4Fw0M8j6p/8k/+lh7+tx3blJW9HCgtryCeX4uv8LClpNynpS0raZN+H
M4zO7h6UlEQo03VGOicaNyXN7W89HHakpHCRzCwpaTcp6UtKmhVPCKsCrqfv
YV8PSkoiVOw6fcspRk9J81a0GxFbU1K0fH5WZq6UlCElfUlJs/xzovqJPI8d
PSgpiVD9V4kuaAwP9oyUNG9LixGxKSWlCqdmTb/+WElK2iSVkr6duXr7nTIF
MjXky0hJHQr37/Trk6PUUlc1kNu4ZRqUlESovut0Mkc8KSXNW3TuoNiUkrY+
S5q2fBPPYF/J5JfVrFVoShWrWURK6lk0Jc3nBCnpzaSkzmUG7/Uu2+RrVvQ8
m7ruyn3Kw0yLlDSfH8L8Ek6vKRY9+aRqOPcYPrG2qeXvkjKLSElFUzbjTNuT
0ZGUxBBSB9LFhy7XyxwA9ODn3vn97/9ND3+XHScOyN12dJ3eZocpiCpTIv6E
E6PPg6Jvoy/Cwqdv2il1Ti3/jbvp15RUXNfxzXmSqfQkaC4wxSJPauJqWc+S
BpJPRtFzgpvnl7CjOyclscm+oKTP2SSaa6bgiU+xWCY61UeqRht4sOZMcplv
w1av62f9+eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dOSmKT
3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSPZHd3
TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuekJDY5
2HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGdmxIp
ab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL6M8p
Pz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhMRpky
qcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kgc+6F
OnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTWdUtK
mnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt7TtO
UvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWtTOlb
kcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t+UhK
auQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8VX1K
fpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXTE3+X
9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwPICV1
rj4lTX/4d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelGz+hS
KWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4NyakqLl
U7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfoU/SW
5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5ZErK
X1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNageZkM
O7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWSoOjK
u19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVBkXub
QUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQlQZGU
1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vneik23p
pBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC/v/c
cRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl19Zt5
Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/8f//Ive/h70hhc
bcv066Ol+kpuv55efFUF9pGSOvfC87kD8riu+tBJhv6d/tm+lNSClARcyQ1M
5154PndAHtdhH3bYJF6u6RefpKQWwpQ0T5GSgNNJSZ2rOZ/PF/ofi//V4Eqq
/HJiJ+dzB+Rxffbh8a8wTTf9WJsnaZeMVmu5PR89LyWtRE8IxZ0rJX35XRIU
ud/oXE14WcWfaOqJTp9+/T9xdHI+d0Ae120fHjzh7PvoGJo+Nkqt8fZ89JKU
FE7M7+6tnz1m5tZcOnu4qkZJSVAkJXUufwYO56ZS0o/FY6ZUwurkfO6APK7z
PtzdvNUnxic1h8e6OBmtVp2JLV+r1/WzwrdS0nJiaFWgMsLUfz4pJcEjSUmd
25qS6gPU5Bt3j9Z5N1aeeVY3OVISRal74+ubkU8uxdeVxYpB6akjJbWXoylp
dRqRkj5SElS4/VJCXouUVJwrJT3AEN24tZGpxAQ9JKOlHSkpXCQ1a2tKYvbZ
lZKmxWeMU/ZbGVISPMl83qBP+dNvZm44a/Is6U1G6cZNp6D5JmeUraOp1d1v
V6aNKSlaPjVrWnwl783fuItKhaNlgU0pKZWMlqQkeKQ+ry/MtqakVRQKZ6U+
AZOSHmasbqxs7VgbRSPdJqOlTSkpVTg1KwxZUtIsk4/mAptS0jIopa6Y+4KS
lASd6/9a83I14aUm9UTTk5T0YMN1Y825aLiN4iz5+94ObUpJ+54lSUlRxYNE
SvqSkqBooIvOO9Wce8OH/lOgsnwP53MH5CkG7cZMs8e6SeYU4+70rSkpn4am
Y79Lursz+rIvJVV+DiklwZMMegF6j33n3hZ/UtJYxu1GJ6WXG+6xUdSOlFSf
hqSkI3Z89rh8EdX5VTVKSoKi0a9Ejyclsc/o3Th6+9nkGcloKRNe5i1dvd4x
qxiRpKTQC6+qUVISFD3pqvRIqU+ubnHZJl+zomd7QDc+YBPIu/jccqWpIr/s
/ttU+SO794hJSvo7UhIUPfUK9Xi/LfRZ4T6OxhM9oDOdoJ7n+g9ebiEldUtK
+pKSoOjxl6qnkpIoekxnPmZD3uwNyWjpzKf4h93dGX25e2/84sZ+kJKg6PZx
St69J/CVfCNP2djjlTB7Un+edYxxpZqzB3ALKQmKXL86N3X83YDKDLVpY49X
wux5/fm8LXokyQj6JyVBkWtZ5/pMSZueNFVupuNwZc/Tvmbu7oy/11t7+Dp4
tBw/2CoXdPzAl5QERS4ZnZs6S0mn30g7AlN+dstf/MX/1MPfvTuo/yhX38IL
3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN4mf//O53/10Pf9fs
qdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9VO68o9WIunzkX
hctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaNl5L2qdn1t+cj
KanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsYNDL5ZTlrmXTC
HBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zdselxKurJ7w1UX
X3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXWlMQONbu+5ilP
+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJSVB0+zXx5aK3
ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1KSac8hW+ja73
9JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewCF1xcpp5SEpf5
nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+FeqfZk+vyz5Tt1
+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz1Oz6mvwyS32P
LpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQnD9gWKQmKXDTv
Fd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVSC97esOMpKVPJ
kZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovonTZUpqabl5NXs
+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2jfx6wFVISFLmS
di4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83pqybPVkaYWbtn
SU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8LY8uEq3hrpRU
afUhwN3N+Vs1KSaajPLPmHanpLv74710fj19dTspCYpcVTvXf0qa23lZn7xE
5YOeC/7s3LyzUlIqEG1KSR+D8T56vp6+up2UBEVSUuemntQ09ZpueYNJShrE
VPEPdH+FbzOzUlOKKenjFvQmmW5fnR6XJ9WtZ9qw2k0L7js2lvWfcnSNfoiO
3v6PlAQV3NkO6reFrip0OJ1FShpFZYS54G91H35jn7xQzedIqbdHdtxlO/3c
ykc/Pkdv/0dKggpS0qC6TUkfB9VJwk+Yb3R3Z3Rt6jIlfR5xIzeQYm+vhlLq
9ZH1Nt3j51Y++sE5evs/UhJUcAvUuYtvhvO2trxRn0BX7h6Xv4i27ZZueZti
P0+//mpsiqWbVCXLAlM6C0cXXx4by8WjB8+qtrDysKpwkcqjbugjc+jGf0lJ
UOQa2rmfe+e//6u/6uFvx3Hi6IIeGIYXqExJnyAufUrhIppHostGY3J+7WH+
yhTYukje0Ifl0I3/kpKgyH1s54ZOSfMmnNsnwFaGYWsHU1K+ksyVejU9fBst
UB+CKkvWbEW+5WMZuvFfUhIUSUmde0BK+jjMSIt+Er58m/+onHp6r6n6lPTJ
/kZpWSB8alNcb7RYKuxkklp9OMrUmTf0ATl044FKbjw694yUNG/LKX3CwxQ/
VM/fT1JP77WzKSV9Nh7Vq+RSWe0nnWiiuSxaYMezpEpDH41DNx6oJCXdq9j/
T0pJNdvLC+1ISR4t7abTGimeyTPPbmouBMvCYbWpSlbTl2/zr6OVR0UXqeiw
sQ/FoRsPVHKnca/VJSZaIJ9cvr6vl1OWs6LllxMvS0nLrYavaXtKSr2lhk5r
YaxezYypy+ocq8dWhm78l98lQZGUdK8p9qngqkAmtqziTzT1RKcvJ16fkj4O
PBZWn0vPE/MFPo+4UbmLrjvdWF0qJR00dOO/pCQocrN6r2jnL3dKKsKE01Mp
qTjllpSU2XzeJjUKigUcP0fovXP11p/FARL95OGUlVbW2VuPvY2UBEUvudOY
fpWaHrqgZKa1ny0pqTITdZWSMp3Ae6RGQb5AcRZFeu9EnXRm5cDpQefNezwp
CYoef4/a+Qau2ha29vEpKdoPvIqUdCMdeJZOelJKopKUBEWdh4gjhti0+YFR
5rnS6Skp//aWlPTZvr+Kz+yu1K5bHi/ah8uJxQIcpBtP0bobVyMinP4JxsVc
PlrDqrZUPe3G2tAH3tCN/5KSoOipdxqjbFSx/6ezf5eUn3tjSpq3N5wSXfXP
iX/zN/+6h79RDjZIcQwfd0Ef5hNQ2Ixl0kkVq6zn9G1pV+01hm78l5QERY9M
SU/aokyESWWfKf2oKJqkukpJn+wnpatit+cjKYnHeOS14ErXpKTwdfT5UVgm
+iI80+bj0rmGPt6GbvyXlARFroydy0eY+boWTinOStVwe0qaN/zz69fqwgK3
5yMpiYdxMO92S0qqfAYUhqP6xaWkqKEb/yUlQZGU1Lma/HLN3/XHSZj4VnNv
z0dSEs/jeN7nmpSUehhUmZJ2TGy0XaMfZqO3/yMlQQUpqXNS0r6UNC+yev19
W1NMSuK1HNL7tO631ZOgeeLyDLl6ES4SDURhPa23aPRjbPT2f6QkqPCwlPSk
bfkKk8KNetjwZYFieCm+zs+SkngtR/UOrTvt+p3Sbo2jH2Cjt/8jJUGF6+9+
m3rStuT9ttBnhUfUhLV9KWn6w2MjKQnyHNhbPSwlNV3diEdXD58fnkhKgqKh
x3joSduS9+yUtCQlwV0c21s1ffhy2fW69YoGPa6izR50Wz5SElSQkgb1npS0
Mh+xNYkmk4nCifsikpTEszm8t9JjeUP3z6rxQ2+LlARFUtKgXpuSZrtT0kxK
ghqO8E0edlU91+g9IyXBqzzsfP6kbcmTknakpNUima/hSUmw5CDfSo+FntEn
y60YeoukJCiSkhhUZajJ/Ozo+C+S3paSwt+Ivcrd3X8zPbCV4+eT/T+DD2re
kMdsEZDypHPXp++z1vJKMf83fxmdgof7mf0VnXtNh9xyFE0bU9LcP6m3UlLK
w25ydtMPW7c9njZv0qhPBu2Ny9zd6+ebpCR4jYedx7rdlunXZ/Sp02yqWDgr
X3+0hqau7/npQK4596/bo+4Uz966fd7cJ5u2/WfhH58fPfy9eZdxuofdOAEp
DxvsfW5LJtRU5p3M6/zqpCQpabeHnRzO9ebOSW179Gx2ez6SkjjdM4a/3yVB
0TMG+6zPbcm06q6UtPo6RPTtJ5bmlrOKD7BShU8hJbX21O06y8v7J3/umqfc
no+kJFp4wBElJUHRw1JSn3pLSavskw870cQUTU/h2+gqzjL15PStu90jN+p0
T+2lyu1aFQuXmqQkLnHjyf9eRzpNSoKi4wONokwPh7OmdMapOTeGi2wqMyVi
TvRFODHaQgfYcOyyeo/sq/qNyo/0KZaS5lPE93U4fZ41vy6+jU6Rkh7vlLAw
tCM9ICVB0cvPMNfIRKFNKSlctphHrk9JxdXRv3N32fSr1cQdb2safNmZ7ZGH
92qMz6O7eEYKZ4VpZZVrotMzE6OvU3OlpAezT5d29IaUBEUPS0ndbksqy2QC
S/g2OiWctSlnpcrnX6TmFqczhNP3V+UxVpxYU39mYovj8EnH9hTzSQz51YLR
WavAkglNqWiTmSslvdbD7lvOsrVbpCQoetjZpudtWd51rKaEs8Ly+T0VrSda
bbS2zILRF5/gxil1QxVOpHMt9tTqYMusKJxbbM+UvkUvTjnukQd2eC5KzVpO
j3Z4PiXVZKjMUtOvMerbBt+4ezx7M2VTz0hJUPSw29cnbUu3dPKz3ZiSwmI1
jcmnpFVUP33rHjkcdqSk6Kx8Spr3SPQ7ePnUU/OFPSnpkezKvPr+kZKgSEoa
1G8LF1f4nk5+p0YpKQwp4a34am5lS1KxK0xPjQ7d542IzK45MSVVftGu5gmU
lPQS9mONyl6SkqBIShrUXSmp0Qfy9KP1s6TKiZueJUUPy+iU+jbXe/xwWD2V
yxdbTTmekmq+dCclvYT9WENKgrM87I73SduSd+OzJJ6tq5QUFlsFokwO8izp
LFsf6i2n5GNRNAflJ0pJb2Y/1pCS4CxS0qCkJBrpLSXlm1RMSak6T/T4086J
KWn+PdFXZmLmbaZwJkw16BgutRrdq09LlvLLblrRvhrqV3T87BRuspQEZ5GS
BiUl0cjpgyh667KcGN7e5N+mao7W+Vmc5Rqd7p592snceYYlwymZnxSd+Fdc
0bP30Uvks8DxuFFcYwvFVewYelISnEVKGpSURCPvGURn0WNfUhJNSUn1ZWqW
kpKgSEoalJREI+8ZRGfRYylTT+7uDI6atqSk5U6Pvl4VS73IzA2bt5q1LLM6
CFPNiL6Ozio2Jt6JC1ISFB25fFRfnd7u3F32JSXRSOURu+/AXo6IRkMjuq7W
K7pgLfByq4GWehs9yUxBfkmVib6ILhsO/OWsZZn6ZtS3KlpJqnOipCQo2nEj
0fTm/5Fa9JiURCMXhJfL6peS4DHqU1JqYmZW/kVxbr7M6lPTYrWpEFesJDMl
JCVB0da7d/cDR5zYe1ISjUhJR9YINDJ0Skq1fMezpEwlmSnADvUpyfOjU5zV
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 9->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
M68Wz1doo8M7+bskKJKSOld/s3Tw5kpKqmnwuSNw+opO+SXYwRr4BD8rjRZI
7YrR9/V78up9sUJbHN5JSoIiKalzm+6UmuYOKekNKemsSl5uilkVaJGS8mcD
KQmYSUlQJCV1Tkq64PWYlHRw2bNqIJqSlifbrSlp+Zh4fr+cUhmIpCTgS0qC
Iimpc7tT0vLGLHpn1X9KWrY/OmV1/5lZsHJFcIHMzr8quTqup1hQmoLjerls
TUqaXALgfaQkKHKJ7FzqbiqfklZvwpurIVJS9L5uNSXscuaG8GDXLjtSDq7o
lHY6LRyRCkfLAjU7/BR8IZA/0muqiu78LgTwNlISFLk4du70lLQvImWixL79
pzKv5b8Sz3x/LiXd3ow3y+SjuUB9SqoJR/mUlDkcls1zOYD3kJKgyGWxc/tS
0io1tEtJm/af1X3jwZRUeT8pJXVS1asUj4srU1L+oAjb6aIAbyAlQZELYucO
PkuKTt+XlVJ3U8X9J1WsRUra18eHpaRTamhRFbPUjr2SmTXv58s34bKpCos7
v0sDPJuUBEUuhZ2rv9tP3R0tPy7fHElJq1uvaLMzc+u7lioTTp+kpFNraFEV
s33HYItXfvva+vBUUhIUSUmd251oikFj991U5EvtxR+A1+9RjVLSr+1J8Hkp
6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvr1oR0paPTCqKSklncJZ4lyZ4+h6
W9vcdGSAa0hJUOSq17npwD/c/XXid87Hb7Q2dS1cS6pr0Smnp6TPVWHhlLWc
3lQnCr5cNeABpCQocr3rXN2Xwffb17WzEtzxAFjf5h093eqstZze2mu6zxB2
H/hAD6QkKHKl61znUSIVlGp2qs67lmpzZckjuk1JjepkXK4gMCgpCYpc4zo3
YpT4VKekfpzYr+NOXMvpDb5mBBjLpoMI6IGUBEWubp2bxk9J8z5WubPtXtEF
pKRGdQJwJSkJiqSkzo2VklKPaZa7WbEeKanzlNSuWp7B7gHAA0hJnatPSXMq
2TG36bOkT/BoadOyW9fV1HApKVPbwbU4b5Cx9besANAbF7LObco1mYhULCMl
9bOuIVLSKTXweC4xAAzKJaxzj0lJjX5xt3uRfUZMSakKV9E1/G3kvmoh5EID
vfF3SVDk4tW53Slp9cdB85RrfnEX9uLT5l9v2L3IPg9ISVPMZ2OSbddUHszl
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
3il9l5IqZYJPMROdsqV2p6Sz1n68kttXsZtL/6CkpBcyMk3VDK+4xKCet9M+
r0f1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBcyMq1tuvrUnDydYOnE
6l5uvn8bd/98Xo/qndJ3KalSPiWFH1fFztohtwal+rX3c8j005LZS04pzyMl
vZCRaW3HCOcvWzu+/YMTTTGfn5f+sXbO5/Wo3rl9l5IqFVPSJxFJTt8hj6ek
cJ9ZVRj9uHqz6lTlrEw9YUtS769346o5Qkp6ISPT2sERDk/m4f0M3CJ1/xbO
GsXzelTvlL5LSZXCIY3GgbBki5N/fYVhI1PToyUrI0/NrEw9NQ0Iu3Al1+5B
SUkvZGRaO2uEp7TKYtc7peN6d4vKBqc+hjXc3J+fTunRcL3Lm/b2fen0lHTz
UP50sC+rfqWmTD9HfkpviNZNipaJjkbY+FR3bnyTmni903cnriElvZCRae30
C1n+8v37/a/Prx5eLXat33X+03/6v/XwatS727fapm0X3illbkK+M/t4bUhJ
lbdVQ/Qub3ffl1qkpP/ln//zHl5NI0llFGqakopqGtZ5Spo/SknsICW9kJFp
7ZqUtLwi3H6PLSXt7t3tW+3ItptvP6KLj5gj8j0avXdn9X1JSqrsVPTsvZy1
nBKdFZZsTUo6i5Q0KCnphYxMC/kg06Lmuf5p8DvtYvdvz0dSUqb9+bl3x4fN
OWJTybs7tbl3Z/V9SUp6qmJGC69EqcKpK9fyTWZWqpLi4sumthuoGmGTGIKU
9E4G53TRE/jxca6pZBr8TrvYu9vzkZSUaX9+7t3xQUraYF89UhL9u31TSkmD
kpLeyeC00CIlVa739nvs3XfaxVGqT0mrke8hJdX07vatdnDbZRYcLkfkv44e
vXf1fW+qZmBvz0dHUlLlV1sXXCbcmX/1MAi2xaCkpHcyOC00ikjFCr932qtV
198bz+XnpaJVpepf1XCkd9HFpy15Z1l404JNU1K+d1uzTP1W3rQzNOrdfBs/
l1rd3i+mh8IFw3qidUYWbNm72iwT62BY4J6UdJmagd2aZcIpS/nCjVJSac9Z
/25tx4qOt+Tx+ul4Py1hEynpnQxOIy2uSrGbqx+rmBZBZnnTW3NjvLqjTs1K
TQxrOKV3qwKPSUnR3u146FOzlaNbrWlKivauFAGmoEz4PlVgU52te1cflFJ9
yUx8ckqKDuzBlLSaOL//ruvilLTqYNjf1MTjikNdX8/pbXubRpuY1qSkdzI4
jRy/HhXrDFcx7UpJYYHU4pX17+tyvmufk1LSt8LVx001n5iSVr1rnZLqq23R
uzCtVExJBYf83FSZ6cSUlO7djpS0r0B3KWnr3yXVDOzWiBQuMsVS0i3PklYd
TNXZYiMWh7q+ntPb9jY7hp0eSEnvZHDa2XcZqqkwdZmbsinmW3iVZVYTK2/F
oxOXHzMX5X0+21PSLIxL3zerj/sqP7F3Z6Wkb52rrbyp2ha925uS8sX2pKTG
vduakpZvpp/tXE6sr/YhPp2lpEZ9rD/Ph0udVbL+AvRxz3DYpjGnH1LSOxmc
drZegypry1zgptifDkUDzpSITuF9dVhVJmHNU3b0uqZ3O54lrZaaaw6fK434
i7vopslE2spqW/QuHRCmYPqqwtXEYu4opKTGvdsRZ6IdnBK9KFS7tXcnOuVZ
0qrAjp/bTcHfH81S6emuX9ylltqxriMtqa8kbN5c1apr88dVgVRLdrdqOC/p
5vNISe9kcJo6eD4Mr2j5a9yUvUOeFwwfNxx8fhS9ez/S2VTvDqak1MRNNZ+S
kjLbblOciW6O5Ya+JSUlCmxNSamJyyn1KemPChv3rj4lZXq9SkyvSEnRAvse
99Skoa2V7xiQfAfrJx5XHOrKSlZvlpV/FjkoLJ+ZFdb/bI02Ma1JSe9kcFrb
NMJ192PJc+yUTknhm/B2uoeUlC+wIyVFw9F0+Bd3LXp3SkrKb/GmKalUYF9K
KiaLmpT0433j3m1NSfk2b615vJSUL7D1QVL9L+vqKz+YkuoL7DtzntKS+krC
quaP05+j0KrYpjeP124r05SU9FrGp5Hpp5piNXXm56Zum1ezUh/zgSha/1kp
qabv9SnmK3xgNMVc8Iu7mt7tTkn1ubhRSqrpXU1+KUWeTIGaqqZGOSLWmK0p
KdPBTZWPlJKKpsFTUmUflxqt5bhV25Yf5/fTn1NSZtmwm6mlnqrzDU2KlPRa
xqeF1Zlw+bHdZXH6+S8nrGJLVLRMODFfLJzeYqeaGvz/Yfe9GvVua5aJbprU
5u4mJf2x4wdZYJ4eii6Y//iJVdVJSip2MHwvJZV/axd+XM1KLXJjShrFagSW
H+f308+8k3kTVvWeEf7745nRSEmvZXxOFz0N/nHf03K9W59HNHo1uhe9PR/1
k5KG23Ybc0S7l961cuOzpNavl18lVxev5cfw/efnFTCz7LL+y/pyOylpUFLS
axmf06WGtPVQP/5O+/Z8JCXt7t3d8UFKak5KIi/6BOrzspsQKWlQUtJrGZ/T
3ZiS+qF3eqd31zu9d/VapKR+nDJELzfFktHbxtbuNCgp6bWMz+lSQ2qogac6
PSVxvdYXqWXqfGdeeGevH0BKei3jc7roadC5EXgwKWloxadmHqudwhgOSkp6
LePTwupM6MQIPJuUNK7K3xa6ih3nZmBQUtJrGZ9G/KwdeA8paVD11ykXsuPc
DwxKSnozQ9SOsQXeQEoaTvBvVNSmpOXfFu2bFb4JWxVt7Vw4+oONVP3RmmvW
fnqokZIGJSW9mSFqx9gCbyAljSWMSPUp6ZNNOvlZ4ZtV9omuLlo4XCqabjI1
p9aeqvY4KWlQUtKbGaJ2jC3wBlLSQKIRaWtKavGmmJLC9n9i0SOsp6bxq3rq
R6aelDQoKenNDFFThheAroyeklI9SjW1svHLelpcu6WkQUlJb2aIai4WqVFa
faNVvyAA3Gj0lLRaavmmpuZ8PflQto+UNCgp6c0M0ScYhMz5OTVxa7wCgNvV
pKTV94Gr98uJqVmrevKFo5fgsJ5U+8P1pmpINT5cyylOr5BrSElvZog+pVg0
n0jrF8lPBHgSf5c0tIddp7rtjpS0ySrJVi6SqSpTf2U9Z5GSBmKIPielpMqa
AR5GShrOg69N3XZNSqp3+kO9TIDasdRBUtJADNGnLiWlJs4fU19WnNlQuM/0
bncPf9ekpOE8dZfu+YDttmG9CUfp+LilasjX3Gh7SUljMUr5QzJ6p1R5FBtb
RtfzXceVjEOGlDSW+t249W6/u/IRj0QnkEqZUcrskPP05ZtVnfOUVZllnat6
VtNTNWwiJY3FKGUiz2pWanp0SmoijMIOHDImISlpLJv24dY7/KbI1rQlrUlJ
lWqe++TvuMIIE53yCfJR8U20zq2kpLEYpVQU2j2rZjr0zAU9w+CsSEkD2brr
Sklncd6odEpKqnyTij+pN6mJm0hJY3n5KE2BcFb042rZTP3tGg+N2G/zjM+S
lDSKHftt8ZK3/JY+9dV9fql8JWENmevyqtqu5G8VmIWjFG7T6H61401YZ/5N
auImUtJYjFJThpfh2GlrGKWZlDSKIykpc3OYulPN3NzmFyyuN3+L22dQkpLq
FVNJdCSlpK3skDWMUlOGl7HYY+sZqy8paQj7dtfKlFRZvv7WtGYt9evtgZS0
yeo5UWbiatayzKYp4SpS0/MtKZKSxmKUmjK8jMUeW89YfUlJQziYkj7p+3wp
qYaUNKjTQ42UNBaj1JThZSzRm5Po9T06PVPs+Pdyu2/zGt04Obq/pKT+7d5X
a46d6CF2Vko6WE8/pKRBSUkvZ5SaMrwMJLW7ZlJSTQ35m5nMes/SqH5H95eU
1LkjEanm24w5s9R/DZL/8iSscPkxLBNdUW+ppLf2UElKwkC1Y2wZSCYlfWK5
ZlU+OjG6YPRNO1JSU1LSG2S+1nAg1JCSBiUlYaCaMryM4vqUlD86Ut8MT4Fw
LdHWhm/CdW06YB3dHynpHaSkg6SkQUlJGKimDC+jyKekTxBtUjdL4fQwgBTv
GVJPnaLTl7Myj6vqF6nk6P5ISa8R/Rphx3cL72SUBiUlYaCaMryM4nhKSt1H
perMHB2peupDUGXJTI+KHN0fKaljp+yfy6MpE5FSh3m7dDDW0SclDUpKwkA1
ZXgZxZGUlElGmZSUWek8N/MkqLJ59cEq05JU87Yu8jxSUp/OikjL96njOnr4
7P7yobI9Y5GSBiUlYaCaMryMopiSKt/nZ20tkApBqZI7UtLug9TRTbeO75yb
gk/NlOPGPeKkpEFJSRiopgwvo6j5zczq4cucMlZlUrNSdW4qk3+/nJgXXeT4
iMHtTtkzM5UU688f46njN6w8fxIoVr6pv03tOL1wpcqrxjUu6/JlK+rHvvaf
PibMDC+jGGJfnX7eQd1b5xAjxgudsmeuKlneZtTUPyVSz7K21ftV/WENYVX5
yvs5QnffoXGN31vn1+dXD6/L9pMrV/QP/sH/08NLSuqQ4WUUQ+yrUlJv/F1S
b1ocF6spp6SkzMRV3tmRkurbeQ0pqXNSUtMV3Z6PjqSkT09nkkcyvAyhhx21
5l7iyKPzc+vsYcRuJyX15paUVFl4U0o68iwp1aq7SEmdk5Karuj2fCQl9czw
MoQbd9QWT4guMFBT25GSunL6twepj8VjVkpakpI6JyU1XdHt+UhK6pnhZQhS
0lYDNbUdKakfLXbIaSE1K7NU8WP4PnyTmV5T+eljskM/LSFKSmq6okxsmS0/
ruam3i8LS0nDmWLubhQktdg/U7crqbuauRmruZ/S3VS0QOsjzhH9kZJ6Yofs
lhuAexXHf1qkpPDOrSbaRMsvp0Tfh/Vftp9cuaJUZgnfrwpHy2TeS0mjCI8y
J0k612j/XAWZz88EFK56mXRSxSrrOb0vK47oj5TUDXtjz9wA3Kt4JxZGlej7
fFA66/1lY3LZioopKTVRSnoqKYnhtEtJ4fvVEZEqE30TRqp8XGrHEf2RkqCC
G4B7Fe/HMimp/pdyUlJqRZnYIiW9lojEWC5LSflQkwlH9YtLSZeRkqDIPcC9
Et9b//iGLRp5psTP51a/mpOS8ivKJ5dV5FlJJaOwgJQ0HCmJgbRLSWHeWa0x
n5J2TLzgcHNEf0lJUOQe4IhMxjnFJ5aSZtHcFJ2+WqSYhqKLtOvmjWryy+5n
SVLSuFb7yd3NgYIWe+mU/tcb5omrN+Ei4ZtoPe16EXJEf0lJt7Mr9s89wL2i
t+6rAvlnSfUFUiUz71eLXzYml61o9JT0cZptRkRiIO1S0pWkpCtJSfeyHw7B
bcC9il9ZZ6JNZko09UhJ4YryyUhKejMpiYE8ICU97xLTOSnpXvbDIbgNuFdx
/OtT0hT8FdLxv0V6bUqaraaEH1PvpaQH6Pb02GeruNe5e8WV3xJceaA5dmZS
0o3sh6Po9jaAr1V+WT0nSj08mqeEi0w/pcpHF7ysy5etaMdznxYvKalbfQ5v
n63idnaMPOOzJCXdxX44ECmpc2Emyr+m9FOhgy8pSUoaTpj6b3Ruv1Z9/Fz+
hXw/runyEAxIhpFZkZLuYlcciJNq5yYpqeWKbs9HUlJTvwfnf/i3/7aH1ymb
KZURlqfxa/aH7wr7eNn/14xJyJiEpKRb2BXHIiV17sRvXI+7rMuXragfR3px
4pg8zPSslLTsV+rjNfvDd5/t42X/jzjr9DI0I5AnJd3C3jgWJ5BB/Wmhzwp3
e8YOedmR9YzhakRKakRKGsup3+gM4+5RhzW75XCcTAYlJQ3hgr48abhON70m
Jc1Trtkfvivs42X/BwbgZDUiKWlQUtIoWh9iDxuucz01JYXd/Jy6pxWrkpIA
NnGyGpGUNCgpaSyC0i0yKWn145zVxOjH1ZRMsVtS0rkV5n+59DMl/VEwmL5O
NIuSqSmZkpGIZOeHffxdEhS5ygxKShpOu2PtqSN2XDG5hO+jE6OzVlkpLP+Y
lBTuuovMEkaeYq6JBqLixGSSOrfv8BJSEhS5ygxKShpUi949e8SOOJKSMhFp
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
z6zRRcPqUkw0GeWfMe1MSXePx3sZ/HrG6nZSEhS5qnau/5Q0t/OyMXmJYni5
7GXj5p2XklJVbUhJHwfjfYx8PWN1OykJiqSkzk09qWnqNcPyBpOUNIjvjl/z
Q7jYx8ys1JRCSvq4Bb1JZthXp8flSXXrmTasdtOC+/aNZf2n7F2j76Kjt/8j
JUEFd7aD+tNCVxXanc4iJY2iOsJc8PIPUd6m5nuk1McjG+6yjX5u5aPvn6O3
/yMlQQUpaVDdpqSPneok4TfMN7p7MLr2HaE+XlX/djotFEd7dSil3h9Zb9Mt
fm7lo++co7f/IyVBBbdAnbv0Vrhka8sbjQl05e7j8odo224ZlrcpjvO3wFxs
iqWbVCXLAlM6C0cXX+4by8WjO8+qtrDysKpwkcq9bug9c+jGf0lJUOQa2rnv
9unjtXk/sXdBDxyGF6hMSZ8gLn1K4SKaR6LLRmNyfu1h/soU2LpI3tC75dCN
/5KSoMh9bOeGTklzF84dE2Arh2FrB1NSvpLMlXo1PfwYLVAfgipL1vQi3/Kx
DN34LykJiqSkzj0gJX3sZqRFvwlffsx/VU49o9dUfUr6ZP9GaVkgfGpTXG+0
WCrsZJJafTjK1Jk39A45dOOBSm48OveMlDT35ZQx4WEyt2r592xl9NrZlJI+
G/fqVXKprPaTTjTRXBYtsONZUqWh98ahGw9UkpLuVRz/J6Wkmv7yQjtSkkdL
uxm0RirO5MlnNzUXgmXhsNpUJavpy4/599HKo6KLVAzY2Lvi0I0HKrnTuNfq
EhMtkE8u80Vp8d/1RSxRfjnxopS07DV8LfeH+X104ifYeexLOxi0FsYa1cwx
dVmdY43YytCN//J3SVAkJd1rdVkJN0c2wkzTOv5EU090+hRb8KKU9LHjsfAj
0i8m5gt8HnGjchdDd7qxhlRKOmjoxn9JSVDkZvVe0cFfbpR0hAmnp1JSccoN
KSnTfd4mdRQUC9h/jjB65+ptPIsHSPSbh1NWWllnbyP2NlISFL3kTmP6KTU9
dEHJTGs/21JSZSbqKCVlBoH3SB0F+QLFWRQZvRN1MpiVB04POm/e40lJUPT4
e9TOO7hqW9jax6ek6DjwKlLSjQzgWToZSSmJSlISFHUeIo4YomuLB0aZ50qn
p6T8xxtS0mf79pp60m5YHi86hsuJxQIcZBhP0XoYV0dEOP0THBdz+WgNq9pS
9bQ71obe8YZu/JeUBEVPvdMYpVPF8f/O3xiFMrMqnzTdkJLm/sZGYFN+vP41
xs4GKfbh4y4Yw3wCCpuxTDqpYpX1nN6XdtVeY+jGf0lJUPTIlPSkHmWzQCr7
TBXF8rnpziyw2ielJLjAI68FV7omJYXvV896UmWib8IzbT4unWvo/W3oxn9J
SVDkyti5Uhb448oWTCnOStXQRRaYL+Kra3f1yEhJsJmdebdbUlI+1GTCUf3i
UlLU0I3/kpKgSErq3JuzQCTvGRlozP68zzUpKcw7q7XnU9KOiY36NfpuNnr7
P1ISVJCSOvfmLHAsJS2fkS3frxbMFOt3ZKApu/Q+rcdtji2rLLM8Q67ehItE
A1FYT+sejb6Pjd7+j5QEFR6Wkp7Ul68wKdyoh47/LFAILxXv87OkJF7KXr1D
60G7fqO0W+PoO9jo7f9ISVDh+rvfpp7Ul7w/LfRZ4RE1YW1vSpq2BCgpifey
Y2/1sJTUdHUj7l3F7+7GIiVB0dDHeOhJfcl7dkpakpLgLvbtrdqN2JX35K1X
NOh+FW32oH35SElQQUoa1HtS0sq8x9YlmkwmCifui0gv2ut4Ibv3VkYsb+jx
WTV+6L5ISVAkJQ3qtSlpdiAl/fGlrJQERfbwTR52VT3X6CMjJcGrPOx8/qS+
5ElJu1LSFJsrJUGBnXwrIxZ6xpgsezF0j6QkKJKSGFR1qIn+3K44S0qKmN7t
7uG/mRHYyv7zyf6fwQc1d+QxPQJSnnTu+vR91lpeKeb/5i+jqyn5a0107jUD
cste9F3nlpT0xwglPkpJcQ+7ydnNOGzte3iKu1GjMRl0NC5z96ifb+7UI3sH
LD3sPNZtX5YNW475qsGpYuGsfP3RGpq6fuS/nevj1eled4pn926fN4/Jpr7/
Lvzr86uH15s3Gad72I0TkPKwg73PvmRCTWXeybzPr05KkpJ2e9jJ4VxvHpxU
36Nns9vzkZTE6Z5x+Pu7JCh6xsE+67MvmVbdlZJWP4eIfvzE0txyVvEBVqrw
KaSk1p7ar7O8fHzy5655yu35SEqihQfsUVISFD0sJfWpt5S0yj75sBNNTNH0
FH6MruIsU09O793tHtmp0z11lCr7tSoWLjVJSVzixpP/vY4MmpQERccPNIoy
IxzOmtIZp+bcGC6yqcyUiDnRN+HEaAvtYMOxyeo9cqzqO5U/0qdYSppPEd/3
4fR51vy++DE6RUp6vFPCwtCOjICUBEUvP8NcIxOFNqWkcNliHrk+JRVXR//O
3WTTT6uJOz7WNPiyM9sjd+/VMT4f3cUzUjgrTCurXBOdnpkYfZ+aKyU9mG26
tGM0pCQoelhK6rYvqSyTCSzhx+iUcNamnJUqn3+TmluczhBO316V+1hxYk39
mYkt9sMn7dtTzCdxyK8WjM5aBZZMaEpFm8xcKem1HnbfcpatwyIlQdHDzjY9
92V517GaEs4Ky+e3VLSeaLXR2jILRt98ghun1A1VOJHOtdhSq50ts6JwbrE9
U/oWvTjluEfu2OG5KDVrOT064PmUVJOhMktNP2PUtw1+cfd4tmbKppGRkqDo
YbevT+pLtwzys92YksJiNY3Jp6RVVD+9d488HHakpOisfEqat0j0N3j51FPz
gz0p6ZFsyrz68ZGSoEhKGtSfFi6u8D2D/E6NUlIYUsJb8dXcypakYleYnhrt
us87IjKb5sSUVPlDu5onUFLSS9iONSpHSUqCIilpUHelpEZfyNOP1s+SKidu
epYU3S2jU+rbXO/xh8PqqVy+2GrK8ZRU86M7KeklbMcaUhKc5WF3vE/qS96N
z5J4tq5SUlhsFYgyOcizpLNsfai3nJKPRdEclJ8oJb2Z7VhDSoKzSEmDkpJo
pLeUlG9SMSWl6jzR4087J6ak+e+JvjITMx8zhTNhqsHAcKnV0b36tmQpv+ym
Fe2roX5Fx89OYZelJDiLlDQoKYlGTj+Iorcuy4nh7U3+Y6rmaJ2fxVmu0enu
2aedzJ1nWDKckvmTohNfxRU9exu9RD4LHI8bxTW2UFzFjkNPSoKzSEmDkpJo
5D0H0VmM2JeURFNSUn2ZmqWkJCiSkgYlJdHIew6isxixlKkndw8GR01bUtJy
o0ffr4ql3mTmhs1bzVqWWe2EqWZE30dnFRsTH8QFKQmKjlw+qq9Ob3fuJvuS
kmikco/dt2Mvj4hGh0Z0Xa1XdMFa4OVWB1rqY/QkMwX5JVUm+ia6bHjgL2ct
y9Q3o75V0UpSgxMlJUHRjhuJpjf/j9RixKQkGrkgvFxWv5QEj1GfklITM7Py
b4pz82VW35oWq02FuGIlmSkhKQmKtt69ux844sTRk5JoREo6skagkaFTUqrl
O54lZSrJTAF2qE9Jnh+d4qxhlJJoJLV/rr7GjH7DmfqeM7ygh1WFi4QLhmtP
NWa1rmgNqZZEC2QOWydGuEAmJnx+HuapieGpILpgTVVhAzJlUh+LJWvqzLcE
OCJ/9V+VbN2YlzhlJKUkGonun5VX/0+Qeiov+vlFls2ov6kIa97akfyYVM4F
TpE6IYS3MauJ4Zcen9iJYmVVODM3v5Z84VS10QXzleTHCtghPLhSxS5ozHsc
H08piUaiO2fqKjylw8UUu0WpWSScHm1bsf5N66ppZ4rTI1zg3APt2YdtTe/8
XRIU1aSkZ59M7nJwVKUkGsnsmakQkQkm9eEoU2e0bcX6M3OX39MWF3eGhB5I
SfWkJDiFlHQXKYk+5eNJ5llMvsCOZ0nRZtTXf9ZEZ0jowYkH2urB8Sm1bSp/
ynoPrkJKgqKmKWl5IrrrdHSBfU2SkuhTKiWtEsry0M68X07Miy4SbdtqVk0l
q8ZHe7qqJzMaxeECTnfxsbZpdb2dB2raIyVBUfRWZFVgd831a9ldcyd17lj8
4BqlJNqp3zk3BYrjdV5/KyIlQSekpHpSEpyiUUpKfQl8CinpIyXRkpRUv7re
7o7gqY58Zxt9pjxPnD+u5oaFo3OjleTfp+o5i5QEp7gsJa3WmDpTrd6EZ5Vo
gXw9NSWj45BfKjWx3pFzo5REO5v2zBYX+mid7e4oUg2oLNm6McDn2LG2upqv
JqZuMKJvKguH5VP1SEnQrYtTUj7spPJLWD78mKmn5twYjUj5paKN3ERKoltu
/msYJbjMwZQUvs9Em09wid8XqT6xO4TVjUoLUhKcopOUVHwTTlyduDKL15cM
W1sT0zL9zZOS6JkIkGd84Eo3pqT6qj6xO4RP4ivf1fSzVFYoJUHRZSlp95cw
qfKpVRwpWVlGSuINmn7VOTojA9fbfdzVf02679KfSUnFeqQk6FajlPSpPpMU
39SfYY6XjLZfSuLNxIGQMYFbHLwhWd1RZD5GC69m5ZctFg6XOouUBGdpl5I+
sVNHOHH5Mfrmkz6zbaqnsmS0qasT2urN7nPdkbGVkrjMwf38GYwA3G730Xfx
YXvvWaJy7VISFBUv+kMc7IOSkhhR9NuDx7t71IF/Z9/BeOUhfO/pon7tUhIU
FW8ARjneR3Skd1ISAC+09dJ52Xcdt3+jsmntUhIU9ZyStn6X20mkqj9PSkkA
sMntYaRPW8dESoKinlPSUqoZnTRvRUoCgHb6vPrfZcdoSElQJCW1ICUBQFMv
/+PBg32XkqCoUUpaHbnhgRz9uDrkVzWEC2YKhx9TfUkVrulIqlOpAuGqU7OK
pCQAmIU3Es9293jD8xWPtR1H4vQz2kw/c0SmQPFNpkBmdZ90UMrXv/tjqrWp
gdpBSgIAgEaapqTw4ypKbE1JqwWjladWV2xbtGHR2lKFw5bkv/ORkgAAoEO3
pKRU9gkXOfFZUrFtmWo3PYeKTomSkgAAoENNU1IxPqTSxPUpKd+w/7+9O0hy
EwYCKJr7X9pZpJLS0FIjZJqxMu+txiCEcDb+BXYuvUxW2z31GpUEAABFTivp
tRpK8XZMd8vh4bTugO7I9uVhhsNs3fGnSz2c6HRwPLZ7uvbYi2/qFyoJAACK
JB/j2zHVa3jsXJ9DJQEAwGdSSd9FJQEAwGeaqaTXI6E0uZL/w/tXqpIAAKDI
fJv8nISpdss7qZIAAKDIpUoSSu+76z1USQAAUORq+wild9z47qkkAAAosnCH
aPQr2XQVvVcqCQAAirz/6T3850J8cde/1IFKAgCAIqWf5KmjkgAAoIhK2pRK
AgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACK
qKRNqSQAACiikjalkgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACiikjal
kgAAoIhK2pRKAgCAIippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pRKAgCA
IippUyoJAACKqKRNqSQAACiikjalkgAAoIhK2pSoAQCAIippUyoJAACKqCQA
AICWSgIAAGipJAAAgJZKAgAAaKkkAACAlkoCAABoqSQAAIDWWiX9+qu7K5+/
3ZLM0z38z9/do9o5J5cKAAAQLRREzJbRbHHm0d6Z4MrnbwNq/hQAAAAHdZWU
J9LprktbZspIJQEAADNurKR/d3NevTs73Xs93XlGg0eP2C38DQAAMHJXJSU1
NNoymnM0+HBelQQAAFS4pZLWtoxejgYvPHH3an69QSUBAAAz7qqkKI5JZjg9
RXfkTCUlGwEAAKIbv5fUbpmspFEB5Yfnu04f5wMAAEisPYqWPMPWhk+8qXT4
wlHyOFwcHI867Bqd4urVAQAAP5mOAAAAaKkkAACA1nIlzf9IwuhBu7WTvvm1
o9OzP5yNEhUAAD7N8veSLu2Kv8aw7P2sOJ3hgVMAAAAf6+FK+oQAUUkAAEBi
oZIO4+MzbKOH4pLn8Q5/x5+tG02VPMs3urSZZXTPmyz1dBndA5PVxncVAAB4
xpuV1L1J1K2kyXtMsT7yAaOR3YWdbukmT3LJySLjuUZld2nxAABAtbsqaTSg
3TIaHKvh9TVYkgGvXtp0Zz5dc6ye7spHBZQvMt94uMyFfxQAAOAuT1ZS3DXT
PqdTxVpJzjgz59VKWriXlMwfrwUAAHjSXZWUp9No73wlXR05X0nxHtA3VtLp
4gEAgGprNyy6t2/irnZA+8m/+7LVTjs6tntgXFiycbSMuMhLV5GseXQJ+SEA
AMCT1j6NJ4f4bA8AAGxt+Z5F9yiJBAAA7M6TXQAAAC2VBAAA0FJJAAAArfib
bwAAAD/cb92N5Po=
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 10->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9UyDH3aRuEiZtxBw5zewbTAYAmsMtoO3M14/uyYunsA6eEl3l3Hp
IoVxinQJpAnZKhC4yryBdHklqU6u3cOj1aX5qz8jzUifDz9uzpFGo9FII+l7
dM51/xd/+t/+4z//T6Zp+jf/2c///ON/8Zf/5V/8xb/47//Jf/7zzX/9+3/z
3/yr3//Z7/6r3/93f/av/uwv/uhP/9OfE/+/n2X/9O9M01+/BgAAYOXz+Xz/
CwAA8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUB
AAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQl
AQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03
fkClW84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA
4J2kJCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP9
6sKlUus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62
VLXFt5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6
tOS+tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRU
fxdarLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU
7JbTx7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf
0X5jStq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVG
G1BcvLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDq
JvmslJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSx
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
A4+Qkh5DSjpdakOW0w8GpU3Tj5jrbPpZzWN2/ZeUBEVS0qCkpPrapKQOU9Km
beyTlHQlKel0j0xJvS3SMykJiqSkQUlJmyqUkjpMSZs2cx/PkgaSH5hbU9Jq
vL8wJRVPdFtT0qrC6El1WWb5YvU6Wjh8m2pktHBYMtXgVDPyK81MH5SUBEXF
Eyl9kpK21hle0A9WeErDjtc/jZySNm1pb6aKlDQfb6vX37c1xd6WkjJ3vDvi
TPT1e1LSJ3uJz0wP98L0a/ZZvc28yBQIy6yKRTNLplXRYvXNyKw0tZahSUlQ
JCUNSkraV/OOlDRVO7ep9SVTmWUpnB4WjpZZlY8uLiXlI0zxdX7WO1PSakxN
UtJGq94Lz1GpDZkSOWJZSVgm/2K59imIJ+GUVDOKhVclwwZX1pOqMJw4LikJ
isIzJ0OQknZXPsQxX9/CaGCZY0vxdWripmWPpKRNG9uVIylp+sNjIylpFk1J
y7vcs1LSt87V2/r6R+ntTHDIFPgkkkI0ZdQEjXwAaZeSUs2orEdKAj5S0rCk
pCP193/YF5u3vIc8KyUVy2fWdSQl1Wxvh7pKSW+wIyWFy86vvy9Wb7dWG7U8
Qu4tGT1o52LRAp+6+BAuWywZvojWli9fLJyaVdOMfIWpieOSkqBodV5lFFLS
EGvZLXMDE94LnfgsaYoFotWszOrepj7F5ONSqphnScu5u58lrZadK9/3TbxR
ensKwkU4JbpU2PPTH4JGOD06ZbUHo29XNaxqi5ZPrTpsSdieVPujzY6uNNVj
45KSoCh6KqB/UlK+hn6c0gmZ2qZsSlqq/MbdFGSi1eItniVFt7pz07GUNJOS
vvIDZzopJU2JZ0lPTUn5U8fByo/XM5aHbamUBEVHbuS4kZSUr+Gf/tP/rYe/
g/chNVErn5IyOWhTSqp8lrR7Y5ebc7ySa+xOSasFp/TX8F6YkjJzd6ekaGKa
Dnzj7spu2a3m1HGk8lPqGcvDtlRKgiIpaVBSUr6G2/PRkZRUE46Whc9NSeHD
o/yCUlJ9UMqnpH0R6TEpKW9rSpoH0WrKnwS/V1oVe0xKKjq4IZtOU/sqP1Kg
hcfs+i8pCYqkpEFJSfkabs9HO1LS6q7jspQUfVQUTUn5oHTWmWSUM9K+lDTv
5dRbKSlqa0pq9/eY3u48ZRQLbz1VHveYXf8lJUGRlDQoKSlfw+35qD4lpT6S
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
Pev55MCNHBiDkpLeoJ+uuDclzWtfpaRVmdXEaLSZZ0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlpOzMzq+Rt3UtJSZuht
KsPD2NeDkpLeoKuuuKYx0dub+TQ1BYFlOWVaBKVorlnFn2JEir4eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZitMLMWqSkDmWG
3rJA6i1PZUcPSkp6g6664qzGZOrJ3NvM9qWkmimViSn6GKt/mZ6f5xZrqNxN
95acC0/p7R3OZ29KyseiecrWlHR3fxxV/MbdFMSf6OJT+mt1mbVISR3KHC2f
xK1ydCIPYy8PSkp6g6664qzGHKlnOi8lpb5fFy0frfCU3jhR6vq+LJBa8JIG
nuxh21vcnCMpKUxDqxdveJa0nLsvJUWfJc22pqRoI+lW6ki76qDmHpm9T8+k
pDforStOac80rZ8LfKpPRFP2mc7xJ0dT4idL0SnHu+JcxWt6dPq4l4CHbW9x
c055lvTOlBTOLaakOcVkUs9qSv6tZ0mdC1LRL0dOak/1eTLhRN1eMsiTkt6g
t6440p7UNWh5CirWP9XFn8pilSkptYrdXdFIzck8vPR3uCGVHra9xbYd+V1S
5llS+GW8x6SkzNyalJR6liQlPVIxWaeWat807tTzVYMMKekNeuuKU9qzqqTm
87plgbNS0hyIvlIpKRWvets19fI3A8/zmO3d92/cFV8UH0KNmJLyUvllPkii
37ILZy2n5N9KSf0rJutodBr6lEINe3lQUtIb9NYVg6ak+uyTKhZd7/GugHr7
/n9J4cTln5R075+UNJDV3bKb55ewowclJb1Bh11xvElhSpqnbE1J8we20Ynh
3Gj5VEpKVSIlcYtNQabpn5QkJb3T6qLw6fIazbmkpEFJSW/QYVec3qT5WlNT
cz7gHP+rr7/DXUOlQa96UtJZpKQvKem4Ec8kbDLo9QIp6SV6641GKam+sJTE
EdEHl0PsTSnpLOHj5hvd2A9S0inu3Ym0dvs4ZR8p6SU67I1zm7SptttuZWJO
7ASut9yDQ+zN6A+L7vq7uzM4gZR0iiHOHuzmcj8oKeklOuyNE5t0V+LosFdb
W3a1uPf59aueL+8K3klKOotTx4O5NAxKSnqJDnujwyZt9YBN2CH19OSFvbHa
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLsqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjb1cvVhtVOStTT9iS1Ovr3bhqjpCSXkjPtHawh8OTeXg/
A7dI3b+Fs0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT06MlKyNPzaxMPTUN
CDfhSq7dg5KSXkjPtHZWD09plcWud8qG27pbVDY49Tas4ebt+dUpWzTc1uVN
e7d96fSUdHNX/urgtqy2KzVl+rXnp/SOaN2kaJlob4SNT23OjS9SE693+uHE
NaSkF9IzrZ1+Ictfvn++/vH50cNfi0PrZ53//ve/7+Gv0dbdvtc27bvwTilz
E/Jzyn/48z/v4S+zdZu2aFXy9v8X9sH/I/bubV9qkZL+9b/+H3v4axpJKqNQ
05RUVNOwzlPS/FZKYgcp6YX0TGvXpKTlFeH2e2wpaffW3b7Xjuy7+fYjuvgQ
KWnTFq1K3p6PDqak3du+JCVVblT07L2ctZwSnRWWbE1KOouUNCgp6YX0TAv5
INOi5rn+afA77eLm356PpKRM+/Nzb89H+1JSZcnb81GLlLSVlPRUxYwWXolS
hVNXruWLzKxUJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHrbs9H
UlKm/fm5t+cjKanevnqkJPp3+66UkgYlJb2TzmmhRUqqXO/t99i777SLvVSf
klY930NKqtm62/fawX2XWXC4lJT/ODosfHs+OjElXXbKqunY2/PRkZRU+dHW
BZcJd+ZfPXSCfTEoKemddE4LjSJSscLvnfZq1fX3xnP5ealoVan6VzUc2bro
4tOWvLMsvGnBpikpv3Vbs0z9Xt50MDTaujmkfIXhZZ4+BcIFw3qidUYXbLF1
W7PMSrTAjc+SrlHTsVuzTDhlKV+4UUrKb+ByeqrYccWWPF4/G95PS9hESnon
ndNIi6tSeHO1WsW0CDLLm96aG+PVHXVqVmpiWMMpW7cq8JiUFN26HQ99avZy
dK81TUnRrVsFomhKikaeaRFwUpmovs5GW7cjzkRf5yc+OyVFO/ZgSlpNnF9/
13VxSlptYLi9qYnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWSwgKp
xSvr37fJ+U37nJSSvhWu3m6q+cSUtNq61impvtoWWxemleKU6LOh4tzio6UW
W3ckJe0r0GFK2vq7pJqO3RqRwkWmWEq65VnSagNTdbbYicWurq/n9La9zY5u
pwdS0jvpnHb2XYZqKkxd5qZsivkWXmWZ1cTKW/HoxOXbzEV5n8/2lDQL49L3
xertvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLV98X6/+u6ny07fu
Rp/OUlKjbaw/z4dLnVWy/gL0cc9w2KY+px9S0jvpnHa2XoMqa8tc4KbYT4ei
AWdKRKfwvjqsKpOw5ik7trpm63Y8S1otNdccPlca8Rt30V2TibSV1bbYulQC
mhKBaJb/Wt1dz5JWBXakpNlq4jI9ba15x9ad6JRnSasCO75uNwW/P5ql0tNd
37hLLbVjXUdaUl9J2Ly5qikIZdECqZbsbtVwXrKZzyMlvZPOaerg+TC8ouWv
cVP2DnleMHzccPD5UfTu/cjGprbuYEpKTdxU8ykpKbPvNsWZ6O5Y7uhbUlK0
wNaUdO6zpGWFLbbu+LOk8PW+ardu3YkOpqRogX2Pe2rS0NbKd3RIfgPrJx5X
7OrKSlYvlpV/FjkoLJ+ZFdb/bI12Ma1JSe+kc1rb1MM1tw2Zc+yUTknhi/B2
uoeUlC+wIyVFw9F0+Bt3LbbulJSU3+NNU1K+wL6UlEo6m1LS6nWLrdudklIT
p9c8S8oX2Pogqf6bdfWVH0xJ9QXa3T+fUnPq2jT9GnnCYptePF67vUxTUtJr
6Z9Gpl/VFKupMz83ddu8mpV6mw9ElTfeja4C0/b/X1L4wGiKueAbdzVbtzsl
1efiRimpZutq8ks+8mQK1FQ1V9Ji6w6mpCnIRFPsYdPDUlLRNHhKqtzGTZeA
u0yJZPSJpaTMsuFmppZ6qs53NClS0mvpnxZWZ8Ll23aXxTnyfK1iS1S0TDgx
Xyyc3uKgmhr8/2H3/TXauq1ZJrprUru7k5Q0tyeMMPP0sPHRBfNvV9OX9bTY
uq0RaWU5MfpaSqr5rl34djUrtciNKWkU0/aUlHkRVvWeHv4eeHe3gs2kpNfS
P6eLngbn63LT9W59HtHor9G96O35qJ+UNNy+i/6Y6Pq/HlJSu793pqQL/l5+
lVxdvJZvw9efX6+AmWWX9V+2LbeTkgYlJb2W/jldqktbd/Xj77Rvz0dS0u6t
uz0fSUmtSUnkRZ9AfV52EyIlDUpKei39c7obU1I/bJ2ts3XXO33r6rVISf04
pYteboolo7f1rcNpUFLSa+mf06W6VFcDT3V6SuJ6rS9Sy9T5zrzwzq1+ACnp
tfTP6aKnQedG4MGkpKEVn5p5rHYKfTgoKem19E8LqzOhEyPwbFLSuCq/W+gq
dpybgUFJSa+lfxrxtXbgPaSkQdVfp1zIjnM/MCgp6c10UTv6FngDKWk4wb9R
UZuSlr8t2jcrfBG2KtrauXD0Cxup+qM116z99FAjJQ1KSnozXdSOvgXeQEoa
SxiR6lPSJ5t08rPCF6vsE11dtHC4VDTdZGpOrT1V7XFS0qCkpDfTRe3oW+AN
pKSBRCPS1pTU4kUxJYXt/8SiR1hPTeNX9dT3TD0paVBS0pvpoqZ0LwBdGT0l
pbYo1dTKxi/raXHtlpIGJSW9mS6quVikemn1iVb9ggBwo9FT0mqp5YuamvP1
5EPZPlLSoKSkN9NFn6ATMufn1MSt8QoAbleTklafB65eLyemZq3qyReOXoLD
elLtD9ebqiHV+HAtpzi9Qq4hJb2ZLvqUYtF8Iq1fJD8R4En8LmloD7tOdbs5
UtImqyRbuUimqkz9lfWcRUoaiC76nJSSKmsGeBgpaTgPvjZ1u2lSUr3TH+pl
AtSOpQ6Skgaiiz51KSk1cX6b+rDizIbCfaZ3u7v7uyYlDeeph3TPA7bbhvUm
7KXj/ZaqIV9zo/0lJY1FL+WHZPROqXIU61tG1/Ndx5X0Q4aUNJb6w7j1Yb+7
8hFHohNIpUwvZQ7IefryxarOecqqzLLOVT2r6akaNpGSxqKXMpFnNSs1PTol
NRFG4QAO6ZOQlDSWTcdw6wN+U2Rr2pLWpKRKNc998ndcYYSJTvkE+aj4Ilrn
VlLSWPRSKgrtnlUzHXrmgp6hc1akpIFsPXSlpLM4b1Q6JSVVvkjFn9SL1MRN
pKSxvLyXpkA4K/p2tWym/naNh0Yct3n6Z0lKGsWO47Z4yVt+Sp/66D6/VL6S
sIbMdXlVbVfytwrMwl4K92n0uNrxIqwz/yI1cRMpaSx6qSndy3ActDX00kxK
GsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3LWByx
9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3E1a1lm05RwFanp+ZYU
SUlj0UtN6V7G4oitp6++pKQhHExJn/R9vpRUQ0oa1OmhRkoai15qSvcylujN
SfT6Hp2eKXb8c7ndt3mNbpyM7i8pqX+7j9WasRMdYmelpIP19ENKGpSU9HJ6
qSndy0BSh2smJdXUkL+Zyaz3LI3qN7q/pKTOHYlINZ9mzJml/mOQ/IcnYYXL
t2GZ6Ip6SyW9tYdKUhI6qh19y0AyKekTyzWr8tGJ0QWjL9qRkpqSkt4g87GG
gVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ1fhOvaNGCN7o+U9A5S0kFS
0qCkJHRUU7qXUeRT0ieINqmbpXB6GECK9wypp07R6ctZmcdV9YtUMro/UtJr
RD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7IyV1
7JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXz3MyToMrm
1QerTEtSzdu6yPNISX06KyItX6fGdXT47P7wobI9Y5GSBiUloaOa0r2MopiS
Kl/nZ20tkApBqZI7UtLuQWp0063jB+em4FMz5bhxR5yUNCgpCR3VlO5lFDXf
mVk9fJlTxqpMalaqzk1l8q+XE/OiixzvMbjdKUdmppJi/fkxnhq/YeX5k0Cx
8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP8UKn
HJmrSpa3GTX1T4nUs6xt9XpVf1hDWFW+8n5G6O47NK7xc+/8+Pzo4e+y4+TK
Ff2jf/S/9/AnJXVI9zKKIY5VKak3fpfUmxbjYjXllJSUmbjKOztSUn07ryEl
dU5Karqi2/PRkZT06elM8ki6lyH0cKDW3EsceXR+bp099NjtpKTe3JKSKgtv
SklHniWlWnUXKalzUlLTFd2ej6SknulehnDjgdriCdEFBmpqO1JSV07/9CD1
tjhmpaQlKalzUlLTFd2ej6SknulehiAlbTVQU9uRkvrR4oCcFlKzMksV34av
wxeZ6TWVn94nO/TTEqKkpKYrysSW2fLtam7q9bKwlDScKebuRkFSi+MzdbuS
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
lJR0CuPr2dxZ1Sumj1SSKpaXkpYckPuEsR0aqUlJm5LO8WdJq+ZtGgjRD7UO
XhylJDonJR1ncD2elLRJ+JwoNTE1a3UJXgrnriqJFs4vUmzhTEoa3VSdiOGg
VWxZKT4kypQvLhWWzDQyPxYyp9a5wJEuuj0fSUlkSEkHGVlvULyO0KfTQ42U
NLopFsahhWi0ueWveJzXjIUp+OArOn1rF92ej6SkqGg6vsuN/SAlHXTv7uMa
t49T9pGSCE2Jmz041zROSpobXD93kpIe7WeH/PN//j/38CcljcuwegkpaVBS
EqGw6wxwWrjiQ/Zqm9qcmhV9W195tM5MbPlava6fJSUdMUlJf0NKgqJNVxn6
ISURqrwJhIN+HlF/+Zf/Qw9/W4/tykvejhQW1pBPLsXX+VlS0m5S0peUtMm+
D2cYnd09KCmJUKbrjHRONG5KmtvfejjsSEnhIplZUtJuUtKXlDQrnhBWBVxP
38O+HpSURKjYdfqWU4yekuataDcitqakaPn8rMxcKSlDSvqSkmb550T1E3ke
O3pQUhKh+q8SXdAYHuwZKWnelhYjYlNKShVOzZp+/bGSlLRJKiV9O3P19jtl
CmRqyJeRkjoU7t/p1ydHqaWuaiC3ccs0KCmJUH3X6WSOeFJKmrfo3EGxKSVt
fZY0bfkmnsG+kskvq1mr0JQqVrOIlNSzaEqazwlS0ptJSZ3LDN7rXbbJ16zo
eTZ13ZX7lIeZFilpPj+E+SWcXlMsevJJ1XDuMXxibVPL3yVlFpGSiqZsxpm2
J6MjKYkhpA6kiw9drpc5AOjBz73zd//u/9vD32XHiQNytx1dp7fZYQqiypSI
P+HE6POg6Nvoi7Dw6Zt2Sp1Ty3/jbvo1JRXXdXxznmQqPQmaC0yxyJOauFrW
s6SB5JNR9Jzg5vkl7OjOSUlssi8o6XM2ieaaKXjiUyyWiU71karRBh6sOZNc
5tuw1ev6Wf9u8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudWey1VIPWWB7OvOzdJ
SWyxu/d0O/WK8SecMlZKmjfzyIAqfhfumj9De2V3Soo+S1rVln/bVUpiVjPS
i0mKR7K7OyclscmR3tPzVIrGnzAH5Yv1n5Lmjd2xFimpWzUpKUxA0aWkJHg2
KalzUhKbHOw9JwRq7E5Js4FS0rzJqXVFp089adw3g5kO/xt3q4mZYpl1SUnQ
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
hNM/wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz
9oZToqv+OfGP//ivevgb5WCDFMfwcRf0YT4Bhc1YJp1Uscp6Tt+WdtVeY+jG
f0lJUPTIlPSkLcpEmFT2mdKPiqJJqquU9Ml+Uroqdns+kpJ4jEdeC650TUoK
X0efH4Vloi/CM20+Lp1r6ONt6MZ/SUlQ5MrYuXyEma9r4ZTirFQNt6ekecM/
v36tLixwez6SkngYB/Nut6SkymdAYTiqX1xKihq68V9SEhRJSZ2ryS/X/F1/
nISJbzX39nwkJfE8jud9rklJqYdBlSlpx8RG2zX6YTZ6+z9SElSQkjonJe1L
SfMiq9fftzXFpCReyyG9T+t+Wz0Jmicuz5CrF+Ei0UAU1tN6i0Y/xkZv/0dK
ggoPS0lP2pavMCncqIcNXxYohpfi6/wsKYnXclTv0LrTrt8p7dY4+gE2evs/
UhJUuP7ut6knbUvebwt9VnhETVjbl5KmPzw2kpIgz4G91cNSUtPVjXh09fD5
4YmkJCgaeoyHnrQtec9OSUtSEtzFsb1V04cvl12vW69o0OMq2uxBt+UjJUEF
KWlQ70lJK/MRW5NoMpkonLgvIklJPJvDeys9ljd0/6waP/S2SElQJCUN6rUp
abY7Jc2kJKjhCN/kYVfVc43eM1ISvMrDzudP2pY8KWlHSlotkvkanpQESw7y
rfRY6Bl9styKobdISoIiKYlBVYaazM+Ojv8i6W0pKfyN2Kvc3f030wNbOX4+
2f8z+KDmDXnMFgEpTzp3ffo+ay2vFPN/85fRKXi4n9lf0bnXdMgtR9G0MSXN
/ZN6KyWlPOwmZzf9sHXb42nzJo36ZNDeuMzdvX6+SUqC13jYeazbbZl+fUaf
Os2mioWz8vVHa2jq+p6fDuSac/+6PepO8eyt2+fNfbJp238W/vH50cPfm3cZ
p3vYjROQ8rDB3ue2ZEJNZd7JvM6vTkqSknZ72MnhXG/unNS2R89mt+cjKYnT
PWP4+10SFD1jsM/63JZMq+5KSauvQ0TffmJpbjmr+AArVfgUUlJrT92us7y8
f/LnrnnK7flISqKFBxxRUhIUPSwl9am3lLTKPvmwE01M0fQUvo2u4ixTT07f
uts9cqNO99ReqtyuVbFwqUlK4hI3nvzvdaTTpCQoOj7QKMr0cDhrSmecmnNj
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

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 11->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9VyDH2QLKOhClWlDjiBFCloURQrKaCINeg8gI4YIKRqkN0iEJnmo
qKjoOIRISKBBQkJI9wFQcASIFjpaqs09s/V6fHt9+mPZa9nXpb8e7W0vLy8v
e9n+be99P//+n/3nf/qf/lvTNP2Lf/fnf/70n/6X/+Hvf/9P/6v/+N/7+eZ3
f/Ev/rN/9hd//p/8R3/xX/z5P/vz3/8Hf/Zv/5z4//0s+2f/zjT91WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
zZlGFpu6KSVFp5xCSgIA3ultKeng9GLh4ylsd5N2p6SayotrrL+Hj3bRqkAx
kuyuf1++yOyUaFMrVxQ2O5WV8uuq3IodpCQA4J2enZIy98b5RTbdhZ6SknY0
tb7O4ooqj4HM1u1OSZ9fj4RNPVO5LZX1Z+R7Mjrl3JRUrE1KAgA40ZNS0id9
m1qZhlI3pbvbuePGvj645ZuxtW2V3VvZ7E198kn3fGZWfQduamrUBSkp/1ZK
AgC4UrcpaQpsqnZ1hxmtbev0ytWlasgUq2/qpmaEddY0O7WKzyKv1ddWU7Km
5lTPrJbK159vW2arM1sXnVKz4dEp0TYXl63flq0aVQsA0Lkb74LcgEHnDFIA
4J2kJCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeSUoCUgxSAOCdpCQgxSAFAN7p
9pQEdO6W8wMAwI1uvAu698YPqHTL+QEA4EbuggAAAJakJAAAgCUpCQAAYElK
AgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpKRB/bbQZ4UAADAo
KWlQUhIAADQiJQ1KSgIAgEakpEFJSQAA0IiUNCgpCQAAGpGSBiUlAQBAI1LS
oKQkAABoREoalJQEAACNSEmDkpIAAKARKWlQUhIAADQiJQ1KSgIAgEakpEFJ
SQAA0IiUNCgpCQAAGpGSBiUlAQBAI1LSoKQkAABoREoalJQEAACNSEmDkpIA
AKARKWlQUhIAADQiJe0w/cH3deUimaoy9afqkZIAAKARKWmrZXed0nuZALVj
qd2kJAAA+JKSNok+9zm9zpqapSQAAGhEStok01f5r8nNX88Lv6e3mrIqs6xz
Vc9qeqqGSlISAAB8SUmb1Dz3yf+eKIww0SmfIB8VX0TrrCclAQDAl5S0ySkp
qfJFKv6kXqQmVpKSAADgS0raJPW7pOg36LY+DJKSAACgB1LSVsVU4lkSAAAM
TUraYfWcKDNxNWtZZtOUcBWp6fmWZEhJAADwJSXxJSUBAMCXlDSo00ONlAQA
AF9S0qCkJAAAaERKGpSUBAAAjUhJg5KSAACgESlpUFISAAA0IiX1L/yHxG90
d2cAAEBzbn3793MH/fj86OHPoQIAwBtISf2TkgAA4EpSUv+kJAAAuJKU1D8p
CQAAriQl9U9KAgCAK0lJtyvugkxKWv0DdKuJqQI1lUhJAAC8lpR0u+I/tV1M
LuHr6MTV62IlUhIAAO8kJd1uilkVkJIAAOAyUtLtoilpuV+6SkkOGAAAHs9N
70GZjHOKT0VKmqVST1ggU0m+2HKrb+14AABoxe3u7VLhaFmg8llS/QOmfCWp
kmHDHDwAADyPG93bZfLRXOD0lLR6bLQvJS3b376fAADgIm5xb1fcBWelpHz8
2Z2SKrcCAABG4ea2fzW/J0pNDAtkykdrq0xJc1MdTgAAjM5tbf/yz5Ku/Ks8
VBxUAAAMzQ1t/4ZLSXOzHVoAAIzIrWz/wm/E3Whf41t0CwAANOImdlC/LfRZ
4ZLDDACAgbh9HdRYKenLwQYAwBDcuA5qxJT05ZADAKBzblkHNW5K+nLgAQDQ
LTergxo9JX05/AAA6JDb1P6d/w/VHdBuA7cu9bvf/Zt+/lp0CwAAd2l368tZ
pjH/f0k7NnNT/T+zyd/5O/9XD39SEgDAw0hJ/XtJSpo3tnItUhIAAI1ISf17
VUqaN7m4LikJAIBGpKT+vTAlzRueWaOUBABAI1JS/16bkubNj663mJKW/7rC
8u1q7qrkqtqaLCYlAQA8jJR0u+IuKKak+R+g+75eTlnOipZPTeknJc2dsFp7
Pr8s5y6TUbHMqryUBADwQlLS7Yr/1HY+vIRhJ5y+fLsqH53SYUqau2JuQ31K
Sk0spiTPkgAA3klKul343Ge1RzLJJZyVSkm7p3SVkr6+XVTzjTspCQCAHaSk
20VT0nK/bEpJBzNRMSX1ozK/rCJP6idIfpcEAMDse8N5dysG1joLfDpLSXf3
998csfX/xt3W3yVJSQAALycl3S4VjpYFWqSkrRHp9pS06hkpCQCARqSk22Xy
0VxgRxTKh6AdEenGlBTtmXb/xp2UBADwclLS7Yq7oPgtuJocFJ2VedFJSsp0
TjElZf4HSau30V8kZaZLSQAAzyYl9a/mi3Bf4ZTirOiUHlJS8cis/8Zd6z8p
CQDgYaSk/tV8F+6av2sOlcpjUkoCAKARKal/70lJm45GKQkAgEakpP6FX5+7
UdNt3LRI+D8/uvGvUbcAAHCLpre+tPPbQp8VVurkCOyhDQAAdKKTe1S2ekBK
6urY66oxAADcy83hoIZOSR0edd/29NYqAABu0eH9KjUGTUndHm9zq/psHgAA
V+r2rpW84VJS50fasm09txMAgAt0fu/KZ/x/4273ghebBCUAAP7aKHewbzYN
+/9LGuvoWjV1oJYDAHCuse5j32nElDTicRU2eLhNAADgFCPezb7NWClp3CMq
2uxBtwUAgCPGvad9j1FS0ujHUqrxQ28UAAA7jH5n+wb9p6RnHEWZTXjA1gEA
UO8Z97dDK+6CYkqa/wG67+vllOWssPw8PVqsJiU96fgp7oXLWgIAwL2edJc7
qFWciRbIJ5dV/AmnL9+uyken1KSk5x05xc152PYCAJDyvHvd4YTPfVZ7JJNc
wlmplLR7SpiSnnrM1GzUIzccAICVp97xDiSakpb7ZVNKqk9A0WWLKenBR0vl
pj24BwAA+Hr2fe8FMhnnFJ/OUtLd/d2WoAQAwEdK6kAqHC0LXJOS8hFJStpX
EgCA4UhJt8vko7nAjii0NSUVI5KUdKQwAAADkZJuV9wFxW/BFV/Xv/WNu6bl
AQAYgpTUv5ovwn2FU8JZ0TyVKSklnb4IAACdk5L6V/NduGv+Hn+o7NvAx3cL
AMDbSEn9k5Ius3sDH98zAACvIiX1L/z63I3u7oy2jmzg4zsHAOA93nDr+0i/
LfRZ4YgOjgVDCQDgGaSkQUlJLRwfC0YTAMADSEmDkpJaOGUsGFAAAKOTkgYl
JTUiKAEAICUNSkpq5KzhYFgBAIxLShqUlNTIicPByAIAGJSUNCgpqZFzh8OO
2uYhaWwCANzFndigpKRGTh8OR4JSi/YAAFAkJQ1KSmqkxXDYWueyvOEJAHA9
KWlQUlIjjYZDvtrpD8LChicAwPWkpEFJSY20Gw71NfvGHQDAvaSkQUlJjTQd
DpWV+9cbAADu5U5sUFJSI62HQ039hiQAwL2kpEFJSe3cHpQMSQCAe0lJg5KS
2rlgRGRWsfqXHAAAuJ77sUFJSe1cMyKMOwCAbklJg5KS2rlsRBh6ANziLwN3
twi6IyUNSkpq58oRYfQBcD0pCYqkpEFJSe1cPCIMQAAuJiVBkZQ0KCmpnetH
hDEIwJWkJCiSkgYlJbVzy4gwDAG4jJQERVLSoKSkdu4aEUYiANeQkqBIShqU
lNTOjSPCYATgAlISFElJg5KS2rl3RBiPALQmJUGRlDQoKampK/+XSZWuaQ8A
byAlQZEbsEFJSU0ZFAA8mJQERVLSoKSkpgwKAB5MSoIiKWlQUlJTBgUADyYl
QZGUNCgpqSmDAoAHk5KgSEoalJTU1I5BUf/vMFygRZ8A8BhSEhS5pxqUlNTU
jkHxc5Efnx89/BnRAORJSVAkJQ1KSmpKSgLgwaQkKJKSBiUlNSUlAfBgUhIU
SUmDkpKakpIAAN5MShqUlNTa1nEhJQEAPIaUNCgpqbVGKWn5L9Et34Zzo9Ol
JACAC0hJg5KSWmuRkpZllgkoWiZaWEoC4Di/S4IiKWlQUlJrrVNSfTLa+l0+
IxqAPCkJiqSkQUlJrbX7xl1qYvSh0o6fOxnRAORJSVAkJQ1KSmqt3b/eEP7C
KJWS9v2LEEY0AHlSEhRJSYOSklpr/W/cpX6O5FkSAK1JSVAkJQ1KSmqtk5S0
IygZ0QDkSUlQJCUNSkpq7bJ/466YkrYGJSMagDwpCYqkpEFJSa01SknR//NR
ONH/LwmAdqQkKJKSBiUltdb6G3ft/oxoAPKkJCiSkgYlJV1g09CQkgAYhZQE
RVLSoKSkC2xNSf1o1ycAPICUBEXuqQYlJV3gmqEh5gBwMSkJitySDUpKukDr
oZF5EmRUAtCOlARFUtKgpKQLtBsa+XBkVALQlJQERe7HBiUlXaDF0Mj/kmiV
lU5fOwB8pCSoICUNSkq6QKOhUUxJH0EJgJakJCiSkgYlJV3gym/crdYYvgCA
s0hJUCQlDUpKukDToRFGpE8iHBmhAAAXk5IGJSVd4MaUlHkNAEBrUtKgpKRr
tPtpUrR+KQkAoAdS0qCkpGs0+mfuKmcJSgC04HdJUCQlDUpKukZ0dBwZMvll
Mynp4HoBYCYlQZGUNCgp6RrnpqTigsVYZLQCcJyUBEVS0qCkpGsUU9I8gopD
qWag1cQiAxaAg6QkKJKSBiUlXSMMROH/5yj6PzzK1FO5uvopALCJlARFUtKg
pKRr1HzjrvhvLGwaYoISAK1JSVAkJQ1KSrrG8ZS0dXxV1mDYArCblARFUtKg
pKRrVKakmv//0e41HvwWHwCsSElQJCUNSkq6Rv0/uRAOpX0ja9OTI4MXgB2k
JCiSkgYlJV1j3z9MV7ngKbUZvwBsJSVBkZQ0KCnpMlv/J0c1i+xYncdJAJxF
SoIiKWlQUtJliv8XpNUgOjigdqQhQxiATaQkKJKSBiUlXebgv+N91uqKYe3g
egF4DykJiqSkQUlJl6kfIKcMpd3PjAxkACpJSVAkJQ1KSrpM5QA5axwd+Wad
sQxADSkJiqSkQUlJl+knJdWsxXAGoEhKgiIpqXNTT+7ujHvUbPiJnZOvqrii
1+4mAOpJSVD05rvfIfzcOz8+P3r4e+1xcnEwOZiSKssAAJAhJXVOSrrd8dhy
4uoq1/janQUAcAopqXNS0u0yG96iT856dPXa/QUAcJyU1DkpqQfRbW/UISc+
KnrzLgMgw++SoEhKulex/6WkHoTb3q43pCQAWpOSoGiUlLSjkaNsV/4fkatJ
SatKUnO/r4vlpaTQatubdsW5Pzt6814DIEVKgqKHpaQhtmVpilkVqIwwNa/n
t6kyUlLUcttb98Pph/qbdxwAUVISFA2Rkr4tPPcz9k5EU9JypxxJSdHnSlLS
Dsvdcdm6Tim2ozAAjyclQdG4KWlu+fIOdjkxnJ6aFVZe37CmPmenpOLzpvwq
ll33KkcOkn3rOrfk1sIAPJuUBEVD3PdOiU/yw4yzLBCdFZYMK7lSKhwtC2yK
MF81KWlVuP5Z0hDHzLmu3ORGKWlHeQCeSkqCoiHueDMJIvXik05Jq6pSEewa
mXw0F9j6LOnH4l9pKJbfkZKWLb+qn2525ZZKSQC0JiVBUf/3uqlk9KlLSZ/g
K3ap+m9MSfkCJ6akMBztTkmV7X+Ai7dx07oEJQB2kJKgqP+73IMpqf7xU5/9
cCQl/Uj//ij1emtKmhvZZ+8dFz2KLlhji8K7F0GnAQ8jJUFR5/e34bfj5rfh
6/BF+Prz6yZHK+lKTYSZAtG5xSm7U9Lc1FSZDju2xi0Jeuu6BKUL6DHgYaQk
KOozGpxouXUjbmnlg54L/ip7Lyy2SqmjWDX4svZfkJJ2L/Vaq9NIz5+rANSQ
kqDo8Rd6KenilPQJDqoRU1I069216nPLH1nqbcKntGE+0pPAiKQkKBru9nWH
Ee/SZ9H7tLscb3mjXjpXtJ2XNX7Hiva1bZTd0YMp/WBRNwIjkpKgaKB7V5Z+
W+izwq/hglKqhVe2fEcgvWZFr3V6Sjrxs4vjjvYOMCApCYpcJQc1REoa7q4s
07Yrm71jXbub1/Pu6McUpKR5yr4OnAb8Ji3wJFISFHV+10qjT4/3ObHxLfrq
oHyrrmzzvq6+cnUvNx3+1xsmKQm4lZQERd3esvI17t3UuYGrtWKTHpySji/+
Nse7a9xxDQAv0ectK7Pn3U1tenp1mZpmn7L5Nfat60gLr9y6BzjeXdPjxjUA
PEzlLSJ3efDd1Fib9uyUdHzx96hP1vlKbj/sG41rAHgGKalzD76bGmvT+k9J
RxY8ZXFmxfNq9OBfPd/cfTCvFs9XaKfDO/ldEhRJSZ2rv1k6eHMlJdU0+Nwe
OH1Fp3wT7GANfIKvlUYLpA7F6Ov6I3n1ulihPQ7vJCVBkZTUuU13Sk1zh5T0
hpR0ViUvN8WsCrRISfmzgZQEzKQkKJKSOiclXfD3mJR0cNmzaiCakpYn260p
afmYeH69nFIZiKQk4EtKgiIpqXO7U9Lyxix6Z9V/Slq2Pzpldf+ZWbByRXCB
zMG/Krka11MsKE3BuF4uW5OSJpcAeB8pCYpcIjuXupvKp6TVi/DmaoiUFL2v
W00JNzlzQ3hw0y4bKQdXdEo7nRaOSIWjZYGaA34KPhDIj/SaqqIHvwsBvI2U
BEUujp07PSXti0iZKLHv+KnMa/mPxDOfn0tJtzfjzTL5aC5Qn5JqwlE+JWWG
w7J5LgfwHlISFLksdm5fSlqlhnYpadPxs7pvPJiSKu8npaROqnqV4ri4MiXl
B0XYThcFeAMpCYpcEDt38FlSdPq+rJS6myoeP6liLVLSvm18WEo6pYYWVTFL
HdgrmVnzcb58ES6bqrB48Ls0wLNJSVDkUti5+rv91N3R8u3yxZGUtLr1ijY7
M7d+01JlwumTlHRqDS2qYrZvDLb4y+9fex+eSkqCIimpc7sTTTFo7L6binyo
vfgBeP0R1Sgl/dieBJ+Xks6q5PSq+BolJQFPJSVBkZTUud5SUjQi7TuKdqSk
1QOjmpJS0imcJc6VGUfX29rmpj0DXENKgiJXvc5NB/7h7q8TP3M+fqO1adPC
taQ2LTrl9JT0uSosnLKW05vqRMGXqwY8gJQERa53nav7MPh++zbtrAR3PADW
t3nHlm511lpOb+01m88Qdg98oAdSEhS50nWu8yiRCko1B1Xnm5Zqc2XJI7pN
SY3qZFyuIDAoKQmKXOM6N2KU+FSnpH6cuF3HnbiW0xt8TQ8wlk2DCOiBlARF
rm6dm8ZPSfMxVnmw7V7RBaSkRnUCcCUpCYqkpM6NlZJSj2mWh1mxHimp85TU
rlqeweEBwANISZ2rT0lzKtkxt+mzpE/waGnTslvX1dRwKSlT28G1OG+QsfW7
rADQGxeyzm3KNZmIVCwjJfWzriFS0ik18HguMQAMyiWsc49JSY2+cbd7kX1G
TEmpClfRNfxu5L5qIeRCA73xuyQocvHq3O6UtPpx0Dzlmm/chVvxafOvN+xe
ZJ8HpKQp5rMxybZrKg/mcgP9kJKgyGWrc/tS0urF9c+Swq1oVPjgUn2u6Ppn
SZ8gSR2sHFIcMNADKQmKpKTOSUlNl+pzRS1WEdZ5VkraUR6Ae0lJUCQlde7g
N+6i0y9OScuvdVWW372ifQu+YS01KWnHN+4y9UORCxDcRUqCIhepzh18ltRD
Stqxyacve2LjB01JxTrDXyedWz+kuAzB9aQkKHJ56lx9qJkf2YRvp4V9EUlK
alHVxWupSUnt6oe8rQ+dgSOkJChyVercvlyT+urdkb8hUlJq8dWPbo48N5GS
WlfCy7kqwQWkJChyPeqclHRk8Snm8+thv3V146akTLUnfozvfMIpXJugKSkJ
ilyJOrc74Ky+cfeelBStYTVllaQOVt7CxSlpxLUAsJuUBEVSUueiT0Puctkm
n17DJCW1r/n6tfAejig4l5QERVfe/XKi3xb6rHC3Uw7ITCz6vPgbd59jCXHf
WuAUrlZwIikJilx3BiUlHalkeuW/3jDXfM3zQScWWnDNglNISVDkijMoKelI
PQdXccGQabSKi79F6dxCI5kD2EXtuMJ3r5/u7u6/iJQERa86JzyJlHSkqoOr
iC4+D6VTxtTpo/Ku+wGnF5oKD+O33eueSNd9vaQfpCQoesOp4JGkpN1VHb8C
ZsLXPKtFEDvork9NnWFobTnuXvhQ4BS6K/TsPpGSoMilZFBS0i215etcTu8w
JX0u/8bdcr3XrIiXu+sIH5qOynhw50hJUPTgM8CzSUm31Laqc3Un1n9K+tz0
YbuTDBeIPi117BXpojz9A6/lIjIoKanDClOJ6cRVnOKWG8hbzjPOb6+SSkmO
gQydU0MvwTu5ggxKSuqwwqnjf70hrP/6sX/X6pzi3iATkRwAKXqmnr6CF3IF
GZSUdGOd+ZTUdBUnumXs3/L0yinunQSlIt1S73l95XdJUOTyMSgp6UidB1fx
jJR02VpuX2mjNeYfXlysxQZ25e4O/sXdnXGaJ21La8/rKykJih52zn8PKWlf
tafc50QXP/cOqr6e624NK5y+dce1W9fPmv/4j/+yh78r+/MuP7fxT/7kf+rh
7zG9/ZgNucbzuktKgqJN9zb0Q0raUe2O+/lMbae06nj9P0v++Pzo4a/DlNR0
RVLSlaSk00U35KzzZOXiJ3bmkTZf3NROSElQJCUNSkraVOHupx6ZOk9p2/H6
R0xJmzbwCCnpMaSk06U2ZDn9YFDaNP2Iuc6mn9U8Ztd/SUlQJCUNSkqqr01K
6jAlbdrGPklJV5KSTvfIlNTbIj2TkqBIShqUlLSpQimpw5S0aTP38SxpIPmB
uTUlrcb7C1NS8US3NSWtKoyeVJdlli9Wr6OFw7epRkYLhyVTDU41I7/SzPRB
SUlQVDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2ev19W1PsbSkp
c8e7I85EX78nJX2yl/jM9HAvTL9mn9XbzItMgbDMqlg0s2RaFS1W34zMSlNr
GZqUBEVS0qCkpH0170hJU7Vzm1pfMpVZlsLpYeFomVX56OJSUj7CFF/nZ70z
Ja3G1CQlbbTqvfAcldqQKZEjlpWEZfIvlmufgngSTkk1o1h4VTJscGU9qQrD
ieOSkqAoPHMyBClpd+VDHPP1LYwGljm2FF+nJm5a9khK2rSxXTmSkqY/PDaS
kmbRlLS8yz0rJX3rXL2tr3+U3s4Eh0yBTyIpRFNGTdDIB5B2KSnVjMp6pCTg
IyUNS0o6Un//h32xect7yLNSUrF8Zl1HUlLN9naoq5T0BjtSUrjs/Pr7YvV2
a7VRyyPk3pLRg3YuFi3wqYsP4bLFkuGLaG358sXCqVk1zchXmJo4LikJilbn
VUYhJQ2xlt0yNzDhvdCJz5KmWCBazcqs7m3qU0w+LqWKeZa0nLv7WdJq2bny
fd/EG6W3pyBchFOiS4U9P/0haITTo1NWezD6dlXDqrZo+dSqw5aE7Um1P9rs
6EpTPTYuKQmKoqcC+icl5WvoxymdkKltyqakpcpv3E1BJlot3uJZUnSrOzcd
S0kzKekrP3Cmk1LSlHiW9NSUlD91HKz8eD1jediWSklQdORGjhtJSfka/tbf
+n97+Dt4H1ITtfIpKZODNqWkymdJuzd2uTnHK7nG7pS0WnBKfw3vhSkpM3d3
SoompunAN+6u7Jbdak4dRyo/pZ6xPGxLpSQokpIGJSXla7g9Hx1JSTXhaFn4
3JQUPjzKLygl1QelfEraF5Eek5LytqakeRCtpvxJ8HulVbHHpKSigxuy6TS1
r/IjBVp4zK7/kpKgSEoalJSUr+H2fLQjJa3uOi5LSdFHRdGUlA9KZ51JRjkj
7UtJ815OvZWSorampHZ/j+ntzlNGsfDWU+Vxj9n1X1ISFElJg5KS8jXcno/q
U1LqI9mDKWkKZKavyqwiVXTxdimpftvvtS/RtPgborsOkpJOJyVt9Zhd/yUl
QZGUNCgpKV9DMbwspabPc1clwwV3pKRUONraD6mUdP3fuWeS/s9LUtKVpKTT
nT5g5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfw
dc2L1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVe
MzdVJrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fa
s7cO9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1S
Uk3Nq6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVz
O8QmUlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5Ck
pE2kJCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGs
pqweFVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJ
c5l7TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7Ny
XfeeLpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0
mJLmwrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLb
lDQvcv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDn
K2hk9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtM
r3R3r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+Ms
UtLjTYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLS
oKSkx0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlIS
FElJg5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xX
EODxpCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r
+v/eH1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6
/j/xLLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8l
QZGUNCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6
tHT7Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhK
GpSU9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw3
62qmAzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlv
cG9XrPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVt
GMAQpCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4B
neSO4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vri
cjM69wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9
K/Y14PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+V
bmkScLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0Bmhh
OcyLozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX
38FkndUtUOO3f/2v+/m7uzPWluOxODZ/FviX//K/6eHv3tOIlFQp3E1TdUpy
vRid3TcoKekNOumKc5tRc9VIzf05/cfnRw9/newa3uNnNpl+joAO/npISavT
iJREOzUp6VP3GyWGIyUNSkp6g066olEzMief1CwpideSkjJSiSlV+PZ8JCUN
JJN39s1iIFLSoKSkN+ikK5o2I3y0lPmWgpTEa0lJGfP3nWoGppREvSkQzlpO
ic6q+QYFfbLjBiUlvUE/XXFBS+ZzUeqS9JGSsupvETM5dCAP295i86SkjPBE
kenMVEr6LrV6+50S3iovi4WVpAp3lZL8LgmKOr9wkCIlvUE/XXFZS6L3GMu5
t+ejzlNSPg6E/dnhhlR62PYWN6c+Jc3/xsL3dapAtPyTUlKqM/OxJfW25vXy
bfhCSupZzycHbuTAGJSU9Ab9dMW9KWle+yolrcqsJkajzTwrWiBTfriUFJ7b
U3eMHW5LjYdtb3FzKlNMGH+KxVJhapSUFHZXvjOnbGyZ6tLQcmJmVs/fuJOS
ljJDb1MZHsa+HpSU9AZddcU1jYne3synqSkILMsp0yIoRXPNKv4UI1L09Vgp
aXmGz1z6L2zmaR62vcXNqQkyYZlMSlrlqXFTUqh4Gsk/S5pij4EyE6MVZtYi
JXUoM/SWBVJveSo7elBS0ht01RVnNSZTT+beZrYvJdVMqUxM0cdY/cv0/Dy3
WEPlbrq35Fx4Sm/vcD57U1I+Fs1Ttqaku/vjqOI37qYg/kQXn9Jfq8usRUrq
UOZo+SRulaMTeRh7eVBS0ht01RVnNeZIPdN5KSn1/bpo+WiFp/TGiVLX92WB
1IKXNPBkD9ve4uYcSUlhGlq9eMOzpOXcfSkp+ixptjUlRRtJt1JH2lUHNffI
7H16JiW9QW9dcUp7pmn9XOBTfSKass90jj85mhI/WYpOOd4V5ype06PTx70E
PGx7i5tzyrOkd6akcG4xJc0pJpN6VlPybz1L6lyQin45clJ7qs+TCSfq9pJB
npT0Br11xZH2pK5By1NQsf6pLv5UFqtMSalV7O6KRmpO5uGlv8MNqfSw7S22
7cjvkjLPksIv4z0mJWXm1qSk1LMkKemRisk6tVT7pnGnnq8aZEhJb9BbV5zS
nlUlNZ/XLQuclZLmQPSVSkmpeNXbrqmXvxl4nsds775/4674ovgQasSUlJfK
L/NBEv2WXThrOSX/VkrqXzFZR6PT0KcUatjLg5KS3qC3rhg0JdVnn1Sx6HqP
dwXU2/f/SwonLv+kpHv/pKSBrO6W3Ty/hB09KCnpDTrsiuNNClPSPGVrSpo/
sI1ODOdGy6dSUqoSKYlbbAoyTf+kJCnpnVYXhU+X12jOJSUNSkp6gw674vQm
zdeamprzAef4X339He4aKg161ZOSziIlfUlJx414JmGTQa8XSEkv0VtvNEpJ
9YWlJI6IPrgcYm9KSWcJHzff6MZ+kJJOce9OpLXbxyn7SEkv0WFvnNukTbXd
disTc2IncL3lHhxib0Z/WHTX392dwQmkpFMMcfZgN5f7QUlJL9Fhb5zYpLsS
R4e92tqyq8W9z69f9Xx5V/BOUtJZnDoezKVhUFLSS3TYGx02aasHbMIOqacn
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
XJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9kJ5p
qqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6IT3T
2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+7f0M
mX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2XkioV
U9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1gz0c
nszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZeWpm
ZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+vTtmi
4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258kZp4
vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Nt/+//p4a/R1t2+1zbt
u/BOKXMT8nPKP/pH/0sPf5mt27RFq5K///1/28Pf7iNz97YvtUhJ//M//sc9
/DWNJJVRqGlKKqppWOcpaX4rJbGDlPRCeqa1a1LS8opw+z22lLR7627fa0f2
3Xz7EV18iJS0aYtWJW/PRwdT0u5tX5KSKjcqevZezlpOic4KS7YmJZ1FShqU
lPRCeqaFfJBpUfNc/zT4nXZx82/PR1JSpv35ubfno30pqbLk7fmoRUraSkp6
qmJGC69EqcKpK9fyRWZWqpLi4sumtuuoGmGTGIKU9E4653TRE/jxfq6pZBr8
Tru4dbfnIykp0/783NvzkZRUb189UhL9u31XSkmDkpLeSee00CIlVa739nvs
3XfaxV6qT0mrnu8hJdVs3e177eC+yyw4XErKfxwdFr49H52Yki47ZdV07O35
6EhKqvxo64LLhDvzrx46wb4YlJT0TjqnhUYRqVjh9057ter6e+O5/LxUtKpU
/asajmxddPFpS95ZFt60YNOUlN+6rVmmfi9vOhgabd0cUr7C8DJPnwLhgmE9
0TqjC7bYuq1ZZiVa4MZnSdeo6ditWSacspQv3Cgl5TdwOT1V7LhiSx6vnw3v
pyVsIiW9k85ppMVVKby5Wq1iWgSZ5U1vzY3x6o46NSs1MazhlK1bFXhMSopu
3Y6HPjV7ObrXmqak6NatAlE0JUUjz7QIOKlMVF9no63bEWeir/MTn52Soh17
MCWtJs6vv+u6OCWtNjDc3tTE44pdXV/P6W17m0a7mNakpHfSOY0cvx4V6wxX
Me1KSWGB1OKV9e/b5PymfU5KSd8KV2831XxiSlptXeuUVF9ti60L00pxSvTZ
UHFu8dFSi607kpL2FegwJW39XVJNx26NSOEiUywl3fIsabWBqTpb7MRiV9fX
c3rb3mZHt9MDKemddE47+y5DNRWmLnNTNsV8C6+yzGpi5a14dOLybeaivM9n
e0qahXHp+2L1dl/lJ27dWSnpW+dqL2+qtsXW7UtJ+WL7UlKLrdudkpYvvq9X
/91U+elbd6NPZymp0TbWn+fDpc4qWX8B+rhnOGxTn9MPKemddE47W69BlbVl
LnBT7KdD0YAzJaJTeF8dVpVJWPOUHVtds3U7niWtlpprDp8rjfiNu+iuyUTa
ympbbF0qAU2JQDTLf63urmdJqwI7UtJsNXGZnrbWvGPrTnTKs6RVgR1ft5uC
3x/NUunprm/cpZbasa4jLamvJGzeXNUUhLJogVRLdrdqOC/ZzOeRkt5J5zR1
8HwYXtHy17gpe4c8Lxg+bjj4/Ch6935kY1NbdzAlpSZuqvmUlJTZd5viTHR3
LHf0LSkpWmBrSjr3WdKywhZbd/xZUvh6X7Vbt+5EB1NStMC+xz01aWhr5Ts6
JL+B9ROPK3Z1ZSWrF8vKP4scFJbPzArrf7ZGu5jWpKR30jmtberhmtuGzDl2
Sqek8EV4O91DSsoX2JGSouFoOvyNuxZbd0pKyu/xpikpX2BfSkolnU0pafW6
xdbtTkmpidNrniXlC2x9kFT/zbr6yg+mpPoC7e6fT6k5dW2afo08YbFNLx6v
3V6mKSnptfRPI9OvaorV1Jmfm7ptXs1Kvc0Hosob70ZXgWn7/y8pfGA0xVzw
jbuardudkupzcaOUVLN1NfklH3kyBWqqmitpsXUHU9IUZKIp9rDpYSmpaBo8
JVVu46ZLwF2mRDL6xFJSZtlwM1NLPVXnO5oUKem19E8LqzPh8m27y+Iceb5W
sSUqWiacmC8WTm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5etj46IL5
t6vpy3pabN3WiLSynBh9LSXVfNcufLualVrkxpQ0iml7Ssq8CKt6Tw9/D7y7
W8FmUtJr6Z/TRU+D83W56Xq3Po9o9NfoXvT2fNRPShpu30V/THT9Xw8pqd3f
O1PSBX8vv0quLl7Lt+Hrz69XwMyyy/ov25bbSUmDkpJeS/+cLtWlrbv68Xfa
t+cjKWn31t2ej6Sk1qQk8qJPoD4vuwmRkgYlJb2W/jndjSmpH7bO1tm6652+
dfVapKR+nNJFLzfFktHb+tbhNCgp6bX0z+lSXaqrgac6PSVxvdYXqWXqfGde
eOdWP4CU9Fr653TR06BzI/BgUtLQik/NPFY7hT4clJT0WvqnhdWZ0IkReDYp
aVyV3y10FTvOzcCgpKTX0j+N+Fo78B5S0qDqr1MuZMe5HxiUlPRmuqgdfQu8
gZQ0nODfqKhNScvfFu2bFb4IWxVt7Vw4+oWNVP3RmmvWfnqokZIGJSW9mS5q
R98CbyAljSWMSPUp6ZNNOvlZ4YtV9omuLlo4XCqabjI1p9aeqvY4KWlQUtKb
6aJ29C3wBlLSQKIRaWtKavGimJLC9n9i0SOsp6bxq3rqe6aelDQoKenNdFFT
uheAroyeklJblGpqZeOX9bS4dktJg5KS3kwX1VwsUr20+kSrfkEAuNHoKWm1
1PJFTc35evKhbB8paVBS0pvpok/QCZnzc2ri1ngFALerSUmrzwNXr5cTU7NW
9eQLRy/BYT2p9ofrTdWQany4llOcXiHXkJLeTBd9SrFoPpHWL5KfCPAkfpc0
tIddp7rdHClpk1WSrVwkU1Wm/sp6ziIlDUQXfU5KSZU1AzyMlDScB1+but00
Kane6Q/1MgFqx1IHSUkD0UWfupSUmji/TX1YcWZD4T7Tu93d/V2Tkobz1EO6
5wHbbcN6E/bS8X5L1ZCvudH+kpLGopfyQzJ6p1Q5ivUto+v5ruNK+iFDShpL
/WHc+rDfXfmII9EJpFKmlzIH5Dx9+WJV5zxlVWZZ56qe1fRUDZtISWPRS5nI
s5qVmh6dkpoIo3AAh/RJSEoay6ZjuPUBvymyNW1Ja1JSpZrnPvk7rjDCRKd8
gnxUfBGtcyspaSx6KRWFds+qmQ49c0HP0DkrUtJAth66UtJZnDcqnZKSKl+k
4k/qRWriJlLSWF7eS1MgnBV9u1o2U3+7xkMjjts8/bMkJY1ix3FbvOQtP6VP
fXSfXypfSVhD5rq8qrYr+VsFZmEvhfs0elzteBHWmX+RmriJlDQWvdSU7mU4
DtoaemkmJY3iSErK3Bym7lQzN7f5BYvrzd/i9hmUpKR6xVQS7UkpaSsHZA29
1JTuZSyO2Hr66ktKGsK+w7UyJVWWr781rVlL/Xp7ICVtsnpOlJm4mrUss2lK
uIrU9HxLiqSkseilpnQvY3HE1tNXX1LSEA6mpE/6Pl9KqiElDer0UCMljUUv
NaV7GUv05iR6fY9OzxQ7/rnc7tu8RjdORveXlNS/3cdqzdiJDrGzUtLBevoh
JQ1KSno5vdSU7mUgqcM1k5JqasjfzGTWe5ZG9RvdX1JS545EpJpPM+bMUv8x
SP7Dk7DC5duwTHRFvaWS3tpDJSkJHdWOvmUgmZT0ieWaVfnoxOiC0RftSElN
SUlvkPlYw0CoISUNSkpCRzWlexnF9SkpPzpSnwxPgXAt0daGL8J1bRqwRvdH
SnoHKekgKWlQUhI6qindyyjyKekTRJvUzVI4PQwgxXuG1FOn6PTlrMzjqvpF
KhndHynpNaIfI+z4bOGd9NKgpCR0VFO6l1EcT0mp+6hUnZnRkaqnPgRVlsxs
UZHR/ZGSOnbK8bkcTZmIlBrm7dLBWKNPShqUlISOakr3MoojKSmTjDIpKbPS
eW7mSVBl8+qDVaYlqeZtXeR5pKQ+nRWRlq9T4zo6fHZ/+FDZnrFISYOSktBR
TeleRlFMSZWv87O2FkiFoFTJHSlp9yA1uunW8YNzU/CpmXLcuCNOShqUlISO
akr3Moqa78ysHr7MKWNVJjUrVeemMvnXy4l50UWO9xjc7pQjM1NJsf78GE+N
37Dy/EmgWPmm7W1qx+mFK1VeNa5x2SZftqJ+7Gv/6X3CTPcyiiGO1enXO6h7
6xyix3ihU47MVSXL24ya+qdE6lnWtnq9qj+sIawqX3k/I3T3HRrX+Ll3fnx+
9PB32XFy5Yr+yT/5H3v4k5I6pHsZxRDHqpTUG79L6k2LcbGackpKykxc5Z0d
Kam+ndeQkjonJTVd0e356EhK+vR0Jnkk3csQejhQa+4ljjw6P7fOHnrsdlJS
b25JSZWFN6WkI8+SUq26i5TUOSmp6Ypuz0dSUs90L0O48UBt8YToAgM1tR0p
qSunf3qQelscs1LSkpTUOSmp6Ypuz0dSUs90L0OQkrYaqKntSEn9aHFATgup
WZmlim/D1+GLzPSayk/vkx36aQlRUlLTFWViy2z5djU39XpZWEoazhRzd6Mg
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
/d89/DktECUlncL4ejZ3VvWK6SOVpIrlpaQlB+Q+YWyHRmpS0qakc/xZ0qp5
mwZC9EOtgxdHKYnOSUnHGVyPJyVtEj4nSk1MzVpdgpfCuatKooXzixRbOJOS
RjdVJ2I4aBVbVooPiTLli0uFJTONzI+FzKl1LnCki27PR1ISGVLSQUbWGxSv
I/Tp9FAjJY1uioVxaCEabW75Kx7nNWNhCj74ik7f2kW35yMpKSqaju9yYz9I
SQfdu/u4xu3jlH2kJEJT4mYPzjWNk5LmBtfPnaSkR/vZIX/6p/9DD39S0rgM
q5eQkgYlJREKu84Ap4VLPmWvtanNqVnRt/WVR+vMxJav1ev6WVLSEZOU9Nek
JCjadJWhH1ISocqbQDjo5xH1D/7B/9bD39Zju/KStyOFhTXkk0vxdX6WlLSb
lPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0JSXN
iieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+pKRZ
/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVtkkpJ
385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56UkuYt
OndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLnMoP3
epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJmUWk
pKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/O53/6aHv8uOEwfkbju6Tm+z
wxRElSkRf8KJ0edB0bfRF2Hh0zftlDqnlv/G3fRrSiqu6/jmPMlUehI0F5hi
kSc1cbWsZ0kDySej6DnBzfNL2NGdk5LYZF9Q0udsEs01U/DEp1gsE53qI1Wj
DTxYcya5zLdhq9f1s/5o8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWW
B7OvOyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/21VKYlYz
0otJikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4
Nimpc1ISmxzsPScEauxOSbOBUtK8yal1RadPPWncN4OZDv8bd6uJmWKZdUlJ
0D+n0M5NiZQ0X/6iE5dzVyXDBVOVnJuS6hd3QB5xSu/ZBeRN21NSapFRUtK8
4eGU6GX055Qfnx89/BnOK6nkMu/K6LfsVrNSBVYyEen2lOR3SVAkJXUulZLC
dBNOXCajTJlUYgqXOrghp5ckdFbvOTOQURl59qWkaMjqJCV9Er/jlpIGUgwv
l/1JSdA590KdO5KSMnmnuEjTlDQfdam7iyMrerlze8++IGqVcb7CjDNPD8uE
szJlUuu6JSXNPRBaFbg9H0lJUVLSl5S0lBnO0bfheL+urVwoeptKP6a9KWnK
PhXakbb2HSepe4nlgedsc6LTe88pgtCU+I7c9X/3Hpz5O6vb85GUFBW9Kt3l
xn6Qklam9K1IZlZqCs9w+zglb9qekma7U9Jq8RbfuNt0/qFeo96zU1iapKT0
zfY89/Z8JCU18owulZJWMtlndascvWl5xlHBipTUuR0p6ZRnSU2/cfeRklpq
F5TsGr6qPiW/Soed8MmmpLnY6nX9LCnpXs/oUilpJdyt0yIlhW9XxZ5xVLBy
71WGoumJv0v6+MZdS0070N6BTyknfkrPkpZzU6/zs6SkGz2jS6WklWJK+iQC
UepmhgeQkjpXn5KmP/y735UTL05J4XZ9/OsNbbTuQCcNOnfj8bnMSltTUrhI
ZpaUdKNndKmUtHIkJS0/IeFJ7NbOZSLMSmpiWD5aT75Yo5S0dRY1rulAu4lu
9XBwbk1J0fKpWcsUVgxQPfTGwzyjS6WklZqU9Kn7jRKPISV1LpWSrv+TkkZx
WQfaU/Qpektz4sWu5nPjTSkpVTg/q/IZk3F6UPjxY8rdLd1GSlrJ5J19s3iA
EYf2qzwyJeWvKQ7Ig67sQCcQ+pG6cV0epacHpcxK2z1LkpLu9YwulZKWMpk3
OiU6a9C8TIYd2rn8tfhil23yNSt6qus70C6jK1P1B79HVpE/VU6Nf5c0SUn3
eUaXSklQdOXdLyf6baHPCndzQB50Swc6k9CPG1PSssDWlBSmnsysyogkJbXw
jC6VkqDIvc2gpCRSbuxA+44ehClpWnwl5qxV5J+2ZyLMXH71un7Wa1NSJ9vS
STMOkpKgSErqXOoTy1tctsnXrOjBbuzDKw8VqDGd+q83VJ4epwP/dndl9qkv
eXyrO9HJtnTSjIOkJChyS9O51pfaTRflyzb5mhU92O19eHsDYHb8aIymofzH
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
5dFFojXclZIqrT4EuLs5f6UmxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6
T0lzOy/rk5eofNBzwZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qm
XtMtbzBJSYOYKv6B7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfG
sv5Tjq7RD9HR2/+RkqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp
9fbIjrtsp59b+ejH5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu
5AZS7O3VUEq9PrLepnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePy
F9G23dItb1Ps5+nXX41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnU
DX1kDt34LykJilxDO/dz7/zDf/i/9vC34zhxdEEPDMMLVKakTxCXPqVwEc0j
0WWjMTm/9jB/ZQpsXSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlf
SeZKvZoevo0WqA9BlSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9U
Tj2911R9Svpkf6O0LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZK
mrfllD7hYYofqufvJ6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ah
Gw9UkpLuVez/J6Wkmu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f5
19HKo6KLVHTY2Ifi0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPX
tD0lpd5SQ6e1MFavZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6
otOXE69PSR8HHgurz6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7Tz
lzslFWHC6amUVJxyS0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H
3kZKgqKX3GlMv0pND11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqz
cuD0oPPmPZ6UBEWPv0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLO
Q8QRQ2za/MAo81zp9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2N
qxERTv8E42IuH61hVVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70x
Jc3bG06JrvrnxD/+47/s4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuN
oRv/JSVB0SNT0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1
KSl8HX1+FJaJvgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLm
Df/8+rW6sMDt+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zz
d/1xEia+1dzb85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyU
tC8lzYusXn/f1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739
HykJKjwsJT1pW77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo
7f9ISVDh+rvfpp60LXm/LfRZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHV
w+eHJ5KSoGjoMR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+U
BBWkpEG9JyWtzEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo
16ak2e6UNJOSoIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIs
Oci30mOhZ/TJciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl
+Plk/8/gg5o35DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPG
lDT3T+qtlJTysJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1
GX3qNJsqFs7K1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v
3mWc7mE3TkDKwwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+k
JE73jOHvd0lQ9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO
8vL+yZ+75im35yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9
OX3rbvfIjTrdU3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFq
zo3hIpvKTImYE30RToy20AE2HLus3iP7qn6j8iN9iqWk+RTxfR1On2fNr4tv
o1OkpMc7JSwM7UgPSElQ9PIzzDUyUWhTSgqXLeaR61NScXX079xdNv1qNXHH
25oGX3Zme+ThvRrj8+gunpHCWWFaWeWa6PTMxOjr1Fwp6cHs06UdvSElQdHD
UlK325LKMpnAEr6NTglnbcpZqfL5F6m5xekM4fT9VXmMFSfW1J+Z2OI4fNKx
PcV8EkN+tWB01iqwZEJTKtpk5kpJr/Ww+5azbO0WKQmKHna26Xlblncdqynh
rLB8fk9F64lWG60ts2D0xSe4cUrdUIUT6VyLPbU62DIrCucW2zOlb9GLU457
5IEdnotSs5bTox2eT0k1GSqz1PRrjPq2wTfuHs/eTNnUM1ISFD3s9vVJ29It
nfxsN6aksFhNY/IpaRXVT9+6Rw6HHSkpOiufkuY9Ev0OXj711HxhT0p6JLsy
r75/pCQokpIG9dvCxRW+p5PfqVFKCkNKeCu+mlvZklTsCtNTo0P3eSMis2tO
TEmVX7SreQIlJb2E/VijspekJCiSkgZ1V0pq9IE8/Wj9LKly4qZnSdHDMjql
vs31Hj8cVk/l8sVWU46npJov3UlJL2E/1pCS4CwPu+N90rbk3fgsiWfrKiWF
xVaBKJODPEs6y9aHessp+VgUzUH5iVLSm9mPNaQkOIuUNCgpiUZ6S0n5JhVT
UqrOEz3+tHNiSpp/T/SVmZh5mymcCVMNOoZLrUb36tOSpfyym1a0r4b6FR0/
O4WbLCXBWaSkQUlJNHL6IIreuiwnhrc3+bepmqN1fhZnuUanu2efdjJ3nmHJ
cErmJ0Un/hVX9Ox99BL5LHA8bhTX2EJxFTuGnpQEZ5GSBiUl0ch7BtFZ9NiX
lERTUlJ9mZqlpCQokpIGJSXRyHsG0Vn0WMrUk7s7g6OmLSlpudOjr1fFUi8y
c8PmrWYty6wOwlQzoq+js4qNiXfigpQERUcuH9VXp7c7d5d9SUk0UnnE7juw
lyOi0dCIrqv1ii5YC7zcaqCl3kZPMlOQX1Jloi+iy4YDfzlrWaa+GfWtilaS
6pwoKQmKdtxINL35f6QWPSYl0cgF4eWy+qUkeIz6lJSamJmVf1Gcmy+z+tS0
WG0qxBUryUwJSUlQtPXu3f3AESf2npREI1LSkTUCjQydklIt3/EsKVNJZgqw
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

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 12->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3r9cyDH2bhpHC1BNwYDGbTLrjYLrDrIp3degm4ceElu0sKb2AdCOme
vyFVajdp0qVIeUOc2kXAtQkE0qRxmerk3j38tLo1r3oZaUa6Lr48nCONRqOR
RtLn6Jz7+c//9L/9Z3/+d6Zp+td/9+d//tm//O//y7/6q3/5P/zJf/bzzX/1
l//6v/mLv/yz//qf/uV/92d/8Wd/9V/86X/yc+L/97Psn/6n0/TXrwEAAFj5
fD7f/wIAALzcMigBAAAgIgEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAASzempAkYwS3nBwCAG914
F3TvjR9Q6ZbzAwDAjW68C3IDBp0zSAGAd5KSgBSDFAB4JykJSDFIAYB3kpKA
FIMUAHgnKQlIMUgBgHeSkoAUgxQAeCcpCUgxSAGAd+o2Je3+P7YsF5n/G1qV
TNVQv7pwqdR6jzT1yFryS9VsbLTNqR7LlMzUuZxYLBNdUU390bYVNznVhnzH
TomDLVVt8W1m0zK9tM+5tQEAjOLGu6Diqle3lJV1RusP7y3z1W7qk1Tl9bN2
NDWcHi25r20pqTYXV1TclfnoUWzhpvozbaupP/+2cr/kZ9XvteKyB0lJAMA7
PSkl1d+FFqttlJIy07c2dXesqLwz39qG+jv56H6P1lzfwvr6N4WvfPMyTd06
pTIlFbvl9LEsJQEA7/TslBTOqrzxPj0l7bjhr3++UD9lX5NqytTvrJoEdDAl
ZZbdd7TfmJI2rUtKAgA4RecpaammwpqqahbZmpIy9W9ab/0ip6SkTd27XCpT
bWq90QYUF6+sNlqsOLFeTeaq2UGhVJ3hKorr2rdpeZuODQCAx7jxLqi46vpk
USyQukk+KyWlltq63vwi+VCzIyUVG5NpZGaLUi3PlGyRkqL159uWqT8fbaI1
ZxpZbOqmlBSdcgopCQB4p7elpIPTi4WPp7DdTdqdkmoqL66x/h4+2kWrAsVI
srv+ffkis1OiTa1cUdjsVFbKr6tyK3aQkgCAd3p2SsrcG+cX2XQXekpK2tHU
+jqLK6o8BjJbtzslfX49Ejb1TOW2VNafke/J6JRzU1KxNikJAOBET0pJn/Rt
amUaSt2U7m7njhv7+uCWb8bWtlV2b2WzN/XJJ93zmVn1HbipqVEXpKT8WykJ
AOBK3aakKbCp2tUdZrS2rdMrV5eqIVOsvqmbmhHWWdPs1Co+i7xWX1tNyZqa
Uz2zWipff75tma3ObF10Ss2GR6dE21xctn5btmpULQBA5268C3IDBp0zSAGA
d5KSgBSDFAB4JykJSDFIAYB3kpKAFIMUAHgnKQlIMUgBgHeSkoAUgxQAeKfb
UxLQuVvODwAAN7rxLujeGz+g0i3nBwCAG7kLAgAAWJKSAAAAlqQkAACAJSkJ
AABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgb120KfFQIAwKCk
pEFJSQAA0IiUNCgpCQAAGpGSBiUlAQBAI1LSoKQkAABoREoalJQEAACNSEmD
kpIAAKARKWlQUhIAADQiJQ1KSgIAgEakpEFJSQAA0IiUNCgpCQAAGpGSBiUl
AQBAI1LSoKQkAABoREoalJQEAACNSEmDkpIAAKARKWlQUhIAADQiJQ1KSgIA
gEakpEFJSQAA0IiUtMP0O9/XlYtkqsrUn6pHSgIAgEakpK2W3XVK72UC1I6l
dpOSAADgS0raJPrc5/Q6a2qWkgAAoBEpaZNMX+W/Jjd/PS/8nt5qyqrMss5V
PavpqRoqSUkAAPAlJW1S89wn/3uiMMJEp3yCfFR8Ea2znpQEAABfUtImp6Sk
yhep+JN6kZpYSUoCAIAvKWmT1O+Sot+g2/owSEoCAIAeSElbFVOJZ0kAADA0
KWmH1XOizMTVrGWZTVPCVaSm51uSISUBAMCXlMSXlAQAAF9S0qBODzVSEgAA
fElJg5KSAACgESlpUFISAAA0IiUNSkoCAIBGpKRBSUkAANCIlNS/8B8Sv9Hd
nQEAAM259e3fzx304/Ojhz+HCgAAbyAl9U9KAgCAK0lJ/ZOSAADgSlJS/6Qk
AAC4kpTUPykJAACuJCXdrrgLMilp9Q/QrSamCtRUIiUBAPBaUtLtiv/UdjG5
hK+jE1evi5VISQAAvJOUdLspZlVASgIAgMtISbeLpqTlfukqJTlgAAB4PDe9
B2Uyzik+FSlplko9YYFMJfliy62+teMBAKAVt7u3S4WjZYHKZ0n1D5jylaRK
hg1z8AAA8DxudG+XyUdzgdNT0uqx0b6UtGx/+34CAICLuMW9XXEXnJWS8vFn
d0qq3AoAABiFm9v+1fyeKDUxLJApH62tMiXNTXU4AQAwOre1/cs/S7ryr/JQ
cVABADA0N7T9Gy4lzc12aAEAMCK3sv0LvxF3o32Nb9EtAADQiJvYQf220GeF
Sw4zAAAG4vZ1UGOlpC8HGwAAQ3DjOqgRU9KXQw4AgM65ZR3UuCnpy4EHAEC3
3KwOavSU9OXwAwCgQ25T+3f+P1R3QLsN3LrUn/ekRbcAAHCXdre+nGUa8/+X
tGMzN9X/M5v8k3/yv/XwJyUBADyMlNS/l6SkeWMr1yIlAQDQiJTUv1elpHmT
i+uSkgAAaERK6t8LU9K84Zk1SkkAADQiJfXvtSlp3vzoeospafmvKyzfruau
Sq6qrcliUhIAwMNISbcr7oJiSpr/Abrv6+WU5axo+dSUflLS3Amrtefzy3Lu
MhkVy6zKS0kAAC8kJd2u+E9t58NLGHbC6cu3q/LRKR2mpLkr5jbUp6TUxGJK
8iwJAOCdpKTbhc99Vnskk1zCWamUtHtKVynp69tFNd+4k5IAANhBSrpdNCUt
98umlHQwExVTUj8q88sq8qR+guR3SQAAzL43nHe3YmCts8Cns5R0d3//7RFb
/2/cbf1dkpQEAPByUtLtUuFoWaBFStoakW5PSauekZIAAGhESrpdJh/NBXZE
oXwI2hGRbkxJ0Z5p92/cSUkAAC8nJd2uuAuK34KryUHRWZkXnaSkTOcUU1Lm
f5C0ehv9RVJmupQEAPBsUlL/ar4I9xVOKc6KTukhJRWPzPpv3LX+k5IAAB5G
SupfzXfhrvm75lCpPCalJAAAGpGS+veelLTpaJSSAABoRErqX/j1uRs13cZN
i4T/86MbNeoWAABu0fTWl3Z+W+izwkqdHIE9tAEAgE50co/KVg9ISV0de101
BgCAe7k5HNTQKanDo+7bnt5aBQDALTq8X6XGoCmp2+NtblWfzQMA4Erd3rWS
N1xK6vxIW7at53YCAHCBzu9d+Yz/b9ztXvBik6AEAMDfGOUO9s2mYf9/SWMd
XaumDtRyAADONdZ97DuNmJJGPK7CBg+3CQAAnGLEu9m3GSsljXtERZs96LYA
AHDEuPe07zFKShr9WEo1fuiNAgBgh9HvbN+g/5T0jKMoswkP2DoAAOo94/52
aMVdUExJ8z9A9329nLKcFZafp0eL1aSkJx0/xb1wWUsAALjXk+5yB7WKM9EC
+eSyij/h9OXbVfnolJqU9Lwjp7g5D9teAABSnnevO5zwuc9qj2SSSzgrlZJ2
TwlT0lOPmZqNeuSGAwCw8tQ73oFEU9Jyv2xKSfUJKLpsMSU9+Gip3LQH9wAA
AF/Pvu+9QCbjnOLTWUq6u7/bEpQAAPhISR1IhaNlgWtSUj4iSUn7SgIAMBwp
6XaZfDQX2BGFtqakYkSSko4UBgBgIFLS7Yq7oPgtuOLr+re+cde0PAAAQ5CS
+lfzRbivcEo4K5qnMiWlpNMXAQCgc1JS/2q+C3fN3+MPlX0b+PhuAQB4Gymp
f1LSZXZv4ON7BgDgVaSk/oVfn7vR3Z3R1pENfHznAAC8xxtufR/pt4U+KxzR
wbFgKAEAPIOUNCgpqYXjY8FoAgB4AClpUFJSC6eMBQMKAGB0UtKgpKRGBCUA
AKSkQUlJjZw1HAwrAIBxSUmDkpIaOXE4GFkAAIOSkgYlJTVy7nDYUds8JI1N
AIC7uBMblJTUyOnD4UhQatEeAACKpKRBSUmNtBgOW+tcljc8AQCuJyUNSkpq
pNFwyFc7/U5Y2PAEALielDQoKamRdsOhvmbfuAMAuJeUNCgpqZGmw6Gycv96
AwDAvdyJDUpKaqT1cKip35AEALiXlDQoKamd24OSIQkAcC8paVBSUjsXjIjM
Klb/kgMAANdzPzYoKamda0aEcQcA0C0paVBSUjuXjQhDD4Bb/K+Bu1sE3ZGS
BiUltXPliDD6ALielARFUtKgpKR2Lh4RBiAAF5OSoEhKGpSU1M71I8IYBOBK
UhIUSUmDkpLauWVEGIYAXEZKgiIpaVBSUjt3jQgjEYBrSElQJCUNSkpq58YR
YTACcAEpCYqkpEFJSe3cOyKMRwBak5KgSEoalJTU1JX/y6RK17QHgDeQkqDI
DdigpKSmDAoAHkxKgiIpaVBSUlMGBQAPJiVBkZQ0KCmpKYMCgAeTkqBIShqU
lNSUQQHAg0lJUCQlDUpKamrHoKj/dxgu0KJPAHgMKQmK3FMNSkpqaseg+LnI
j8+PHv6MaADypCQokpIGJSU1JSUB8GBSEhRJSYOSkpqSkgB4MCkJiqSkQUlJ
TUlJAABvJiUNSkpqbeu4kJIAAB5DShqUlNRao5S0/Jfolm/DudHpUhIAwAWk
pEFJSa21SEnLMssEFC0TLSwlAXCc3yVBkZQ0KCmptdYpqT4Zbf0unxENQJ6U
BEVS0qCkpNbafeMuNTH6UGnHz52MaADypCQokpIGJSW11u5fbwh/YZRKSfv+
RQgjGoA8KQmKpKRBSUmttf437lI/R/IsCYDWpCQokpIGJSW11klK2hGUjGgA
8qQkKJKSBiUltXbZv3FXTElbg5IRDUCelARFUtKgpKTWGqWk6P/5KJzo/5cE
QDtSEhRJSYOSklpr/Y27dn9GNAB5UhIUSUmDkpIusGloSEkAjEJKgiIpaVBS
0gW2pqR+tOsTAB5ASoIi91SDkpIucM3QEHMAuJiUBEVuyQYlJV2g9dDIPAky
KgFoR0qCIilpUFLSBdoNjXw4MioBaEpKgiL3Y4OSki7QYmjkf0m0ykqnrx0A
PlISVJCSBiUlXaDR0CimpI+gBEBLUhIUSUmDkpIucOU37lZrDF8AwFmkJCiS
kgYlJV2g6dAII9InEY6MUACAi0lJg5KSLnBjSsq8BgCgNSlpUFLSNdr9NCla
v5QEANADKWlQUtI1Gv0zd5WzBCUAWvC7JCiSkgYlJV0jOjqODJn8spmUdHC9
ADCTkqBIShqUlHSNc1NSccFiLDJaAThOSoIiKWlQUtI1iilpHkHFoVQz0Gpi
kQELwEFSEhRJSYOSkq4RBqLw/3MU/R8eZeqpXF39FADYREqCIilpUFLSNWq+
cVf8NxY2DTFBCYDWpCQokpIGJSVd43hK2jq+KmswbAHYTUqCIilpUFLSNSpT
Us3//2j3Gg9+iw8AVqQkKJKSBiUlXaP+n1wIh9K+kbXpyZHBC8AOUhIUSUmD
kpKuse8fpqtc8JTajF8AtpKSoEhKGpSUdJmt/5OjmkV2rM7jJADOIiVBkZQ0
KCnpMsX/C9JqEB0cUDvSkCEMwCZSEhRJSYOSki5z8N/xPmt1xbB2cL0AvIeU
BEVS0qCkpMvUD5BThtLuZ0YGMgCVpCQokpIGJSVdpnKAnDWOjnyzzlgGoIaU
BEVS0qCkpMv0k5Jq1mI4A1AkJUGRlNS5qSd3d8Y9ajb8xM7JV1Vc0Wt3EwD1
pCQoevPd7xB+7p0fnx89/L32OLk4mBxMSZVlAADIkJI6JyXd7nhsOXF1lWt8
7c4CADiFlNQ5Kel2mQ1v0SdnPbp67f4CADhOSuqclNSD6LY36pATHxW9eZcB
kOF3SVAkJd2r2P9SUg/CbW/XG1ISAK1JSVA0Skra0chRtiv/j8jVpKRVJam5
39fF8lJSaLXtTbvi3J8dvXmvAZAiJUHRw1LSENuyNMWsClRGmJrX89tUGSkp
arntrfvh9EP9zTsOgCgpCYqGSEnfFp77GXsnoilpuVOOpKTocyUpaYfl7rhs
XacU21EYgMeTkqBo3JQ0t3x5B7ucGE5PzQorr29YU5+zU1LxeVN+Fcuue5Uj
B8m+dZ1bcmthAJ5NSoKiIe57p8Qn+WHGWRaIzgpLhpVcKRWOlgU2RZivmpS0
Klz/LGmIY+ZcV25yo5S0ozwATyUlQdEQd7yZBJF68UmnpFVVqQh2jUw+mgts
fZb0Y/GvNBTL70hJy5Zf1U83u3JLpSQAWpOSoKj/e91UMvrUpaRP8BW7VP03
pqR8gRNTUhiOdqekyvY/wMXbuGldghIAO0hJUNT/Xe7BlFT/+KnPfjiSkn6k
f3+Uer01Jc2N7LP3joseRRessUXh3Yug04CHkZKgqPP72/DbcfPb8HX4Inz9
+XWTo5V0pSbCTIHo3OKU3SlpbmqqTIcdW+OWBL11XYLSBfQY8DBSEhT1GQ1O
tNy6Ebe08kHPBX+VvRcWW6XUUawafFn7L0hJu5d6rdVppOfPVQBqSElQ9PgL
vZR0cUr6BAfViCkpmvXuWvW55Y8s9TbhU9owH+lJYERSEhQNd/u6w4h36bPo
fdpdjre8US+dK9rOyxq/Y0X72jbK7ujBlH6wqBuBEUlJUDTQvStLvy30WeHX
cEEp1cIrW74jkF6zotc6PSWd+NnFcUd7BxiQlARFrpKDGiIlDXdXlmnblc3e
sa7dzet5d/RjClLSPGVfB04DfpMWeBIpCYo6v2ul0afH+5zY+BZ9dVC+VVe2
eV9XX7m6l5sO/+sNk5QE3EpKgqJub1n5Gvdu6tzA1VqxSQ9OSccXf5vj3TXu
uAaAl+jzlpXZ8+6mNj29ukxNs0/Z/Br71nWkhVdu3QMc767pceMaAB6m8haR
uzz4bmqsTXt2Sjq++HvUJ+t8Jbcf9o3GNQA8g5TUuQffTY21af2npCMLnrI4
s+J5NXrwr55v7j6YV4vnK7TT4Z38LgmKpKTO1d8sHby5kpJqGnxuD5y+olO+
CXawBj7B10qjBVKHYvR1/ZG8el2s0B6Hd5KSoEhK6tymO6WmuUNKekNKOquS
l5tiVgVapKT82UBKAmZSEhRJSZ2Tki74e0xKOrjsWTUQTUnLk+3WlLR8TDy/
Xk6pDERSEvAlJUGRlNS53SlpeWMWvbPqPyUt2x+dsrr/zCxYuSK4QObgX5Vc
jespFpSmYFwvl61JSZNLALyPlARFLpGdS91N5VPS6kV4czVESore162mhJuc
uSE8uGmXjZSDKzqlnU4LR6TC0bJAzQE/BR8I5Ed6TVXRg9+FAN5GSoIiF8fO
nZ6S9kWkTJTYd/xU5rX8R+KZz8+lpNub8WaZfDQXqE9JNeEon5Iyw2HZPJcD
eA8pCYpcFju3LyWtUkO7lLTp+FndNx5MSZX3k1JSJ1W9SnFcXJmS8oMibKeL
AryBlARFLoidO/gsKTp9X1ZK3U0Vj59UsRYpad82PiwlnVJDi6qYpQ7slcys
+ThfvgiXTVVYPPhdGuDZpCQocinsXP3dfuruaPl2+eJISlrdekWbnZlbv2mp
MuH0SUo6tYYWVTHbNwZb/OX3r70PTyUlQZGU1LndiaYYNHbfTUU+1F78ALz+
iGqUkn5sT4LPS0lnVXJ6VXyNkpKAp5KSoEhK6lxvKSkakfYdRTtS0uqBUU1J
KekUzhLnyoyj621tc9OeAa4hJUGRq17npgP/cPfXiZ85H7/R2rRp4VpSmxad
cnpK+lwVFk5Zy+lNdaLgy1UDHkBKgiLXu87VfRh8v32bdlaCOx4A69u8Y0u3
Omstp7f2ms1nCLsHPtADKQmKXOk613mUSAWlmoOq801Ltbmy5BHdpqRGdTIu
VxAYlJQERa5xnRsxSnyqU1I/Ttyu405cy+kNvqYHGMumQQT0QEqCIle3zk3j
p6T5GKs82Hav6AJSUqM6AbiSlARFUlLnxkpJqcc0y8OsWI+U1HlKalctz+Dw
AOABpKTO1aekOZXsmNv0WdIneLS0admt62pquJSUqe3gWpw3yNj6XVYA6I0L
Wec25ZpMRCqWkZL6WdcQKemUGng8lxgABuUS1rnHpKRG37jbvcg+I6akVIWr
6Bp+N3JftRByoYHe+F0SFLl4dW53Slr9OGiecs037sKt+LT51xt2L7LPA1LS
FPPZmGTbNZUHc7mBfkhJUOSy1bl9KWn14vpnSeFWNCp8cKk+V3T9s6RPkKQO
Vg4pDhjogZQERVJS56Skpkv1uaIWqwjrPCsl7SgPwL2kJCiSkjp38Bt30ekX
p6Tl17oqy+9e0b4F37CWmpS04xt3mfqhyAUI7iIlQZGLVOcOPkvqISXt2OTT
lz2x8YOmpGKd4a+Tzq0fUlyG4HpSEhS5PHWuPtTMj2zCt9PCvogkJbWo6uK1
1KSkdvVD3taHzsARUhIUuSp1bl+uSX317sjfECkptfjqRzdHnptISa0r4eVc
leACUhIUuR51Tko6svgU8/n1sN+6unFTUqbaEz/Gdz7hFK5N0JSUBEWuRJ3b
HXBW37h7T0qK1rCaskpSBytv4eKUNOJaANhNSoIiKalz0achd7lsk0+vYZKS
2td8/Vp4D0cUnEtKgqIr73450W8LfVa42ykHZCYWfV78jbvPsYS4by1wClcr
OJGUBEWuO4OSko5UMr3yX2+Ya77m+aATCy24ZsEppCQocsUZlJR0pJ6Dq7hg
yDRaxcXfonRuoZHMAeyidlzhu9dPd3f3X0RKgqJXnROeREo6UtXBVUQXn4fS
KWPq9FF51/2A0wtNhYfx2+51T6Trvl7SD1ISFL3hVPBIUtLuqo5fATPha57V
IogddNenps4wtLYcdy98KHAK3RV6dp9ISVDkUjIoKemW2vJ1Lqd3mJI+l3/j
brnea1bEy911hA9NR2U8uHOkJCh68Bng2aSkW2pb1bm6E+s/JX1u+rDdSYYL
RJ+WOvaKdFGe/oHXchEZlJTUYYWpxHTiKk5xyw3kLecZ57dXSaUkx0CGzqmh
l+CdXEEGJSV1WOHU8b/eENZ//di/a3VOcW+QiUgOgBQ9U09fwQu5ggxKSrqx
znxKarqKE90y9m95euUU906CUpFuqfe8vvK7JChy+RiUlHSkzoOreEZKumwt
t6+00RrzDy8u1mIDu3J3B//i7s44zZO2pbXn9ZWUBEUPO+e/h5S0r9pT7nOi
i597B1Vfz3W3hhVO37rj2q3rZ81/+If/roe/K/vzLj+38Y/+6P/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
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
LE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKvIiWdyDnkqV5yWXwe
Kekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJULhaDkpJeos/e6LNV
9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZGtw2rNHr7dyh+x2z0
y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64PZPfqHG3C1rwuyQo
cu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRBSUkv0W1vdNuwSqO3
f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i597ouW1FQzeeqNTv
kjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUkCElJjTjPPImUNCgp
6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd90bnzcsYt+UAx0lJ
7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e45f6E46Skl2jaGz8r
//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTtjenFKenjSHsfMeFL
P/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN+HoAKWlQUtJLSElN
N//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1KuZ0fn6Z93kpIuYHCN
TkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReSkqBIShqUlPQSd6Wk
MAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkpnL47JeWrlZJoyi6u
p6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp47mGzr7Zl885qj+Hw
NlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+PwllSEterGVN3Db3j
Tm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3UhKtVQ4oKalRhcDM
+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5rQNqdTVcfnwRfqyR
f5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSoIVJSfeTJRKEwTOVX
124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD4VX8LulixteIpKRB
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
nbLtUlKlTPApZqJT9tTulHTW2o9XcvsqdnPpH5SU9EJ6pqma7hWXGNTzDtrn
bVE9KelKmewTPk4Ki7UISvVLnVjsAv20ZOaKPygp6YX0TGubrj41J08nWDqx
upeb79/GPT6ft0X1Ttl2KalSPiWFb1fFzjogtwal+rX3M2T6acnsJaeU55GS
XkjPtLajh/OXrR2f/sGJppjPr5f+sQ7O521RvXO3XUqqVExJn0QkOf2APJ6S
wmNmVWH07erFaqMqZ2XqCVuSen29G1fNEVLSC+mZ1g72cHgyD+9n4Bap+7dw
1iiet0X1Ttl2KalS2KXROBCWbHHyr68wbGRqerRkZeSpmZWpp6YB4SZcybV7
UFLSC+mZ1s7q4Smtstj1TtlwW3eLygan3oY13Lw9vzpli4bburxp77YvnZ6S
bu7KXx3cltV2paZMv/b8lN4RrZsULRPtjbDxqc258UVq4vVOP5y4hpT0Qnqm
tdMvZPnL98/XPz4/evhrcWj9rPP3f/8/9PDXaOtu32ub9l14p5S5Cfk55Q/+
4N/38JfZuk1btCr5j/7R/9nD3+4jc/e2L7VISf/gH/zfPfw1jSSVUahpSiqq
aVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiUtGmL
ViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQaVHz
XP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnCqSvX
8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMpKdP+
/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9Jq57v
ISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuCy4Q7
868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTxaUve
WRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22LqtWWYl
WuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPOaaTF
VSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm615qm
pOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/rujgl
rTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTilfXv
2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUoutO5KS
9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fTAynp
nXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti9XZf
5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ejT2cp
qdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GAMyWi
U3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFNiUA0
y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v3KWW
2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4KXuH
PC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpga0o6
91nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2dWUl
qxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvdQ0rK
F9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnTa54l
5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0TyPT
r2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLqc3Gj
lFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8BdpkQy
+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgvFk5v
cVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd1oi0
spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf00VP
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
MoOSkgbVYuue3WNHHElJmYi0nHJ7SmoRFqIpabmWKXhytMoyxQKrKWG8yk/x
LAkOkpKgyFVmUFLSuFp88n9uhY+xOyWlMlGqku+JNL+ux/ikU1JNrpGSoAdS
0mWcpsblKjMoKWlo5467N/TYPlN1cgm/SrcpJd37jbvTpcLRskBNSgrLZHLT
qs4wJUVrG6tjoR9S0jWco4bmKjMoKekBztrS9/TYVsWUlHk2JCVF89FcoJiS
ZqekpFRtY3Us9ENKuoAT1OhcZQYlJT3DKQPwVT22ye6UFM5N5aYHp6R8gcqv
z6WeCtWnpHxtY3Us9ENKuoAT1OhcZQYlJT3JwU1+YY9VOpKS8kEpGqYek5KK
tn4vLpWSVo+HdtT2sI6Fy0hJrTk7PYCrzKCkpIc5MhLf2WM18rHlKzMxLJOZ
Ukxkd3fGmcKosgw1qbdTWpiMUgXC2u7uDBiSlNSas9MDuMoMSkp6JEHpXPnk
cspf5SoetoOm4Itzd/09rGPhMlJSU05NzyAlDUpKeqp9Q/LlnZYiJTUiJcHo
pKR2nJceQ0oalJT0bFs7QadFZb7idb27O+NMd/flL+7uDBiSlNSO89JjuMoM
Skp6vE1jU6dxpZ/H24/Pjx7+HPmwj5TUiJPSk0hJg5KSXqKyN3QaV5KSYHRS
UiNOSk8iJQ1KSnqPmg7RaVxJSoLRSUlQJCUNSkp6leI41WlcSUqC0UlJUCQl
DUpKeqFMz+g0riQlweikJCiSkjZZ/qtKx/ttRw3t9peUNITUAaDTuNIyJa3+
xbkwxczT5/9GS4YLpuqRkoDeOBc9kpRUb9lRu/utXbY6WLOUNBBBiXuFEabm
9fy2JiLV1CklAZ1wLnokKalS2EtSUiMOyBrhyNVvXKYmJUWf+1SmpMrkJSUB
PXAieiopqVL+JyGZblx9SW/1evVita6wTHRu2Ibo2/xWSEkjWj3fvLElvMq+
lJRKOlISXM/vks7iLPRgUlKlmic4medN4YtPNg1lFqwskFpFipQ0qJoIDOcK
o8rSxSnJVQx2kJLO4vzzYK4vlXanpNXEVITZ9yL1jCmzihQpaWgGMlfKPEua
3178LOnIEGgxdqaenL51PICUdArj69mcQiuFvTQFH+DPU1a9unwblt/3oqZk
amKUlDQ6Y5nLTLtS0pR+zDSfNg9+427fKGgxcH7W+Xu/9x97+HNaIEpKOoXx
9WzurOoV00cqSRXLS0lLDsh9wtgOjdSkpE1J5/izpFXzNg2E6IdaBy+OUhKd
k5KOM7geT0raJHxOlJqYmrW6BC+Fc1eVRAvnFym2cCYljW6qTsRw0Cq2rBQf
EmXKF5cKS2YamR8LmVPrXOBIF92ej6QkMqSkg4ysNyheR+jT6aFGShrdFAvj
0EI02tzyVzzOa8bCFHzwFZ2+tYtuz0dSUlQ0Hd/lxn6Qkg66d/dxjdvHKftI
SYSmxM0enGsaJyXNDa6fO0lJj/azQ/7iL/6nHv6kpHEZVi8hJQ1KSiIUdp0B
TguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp6W9ISVC06SpDP6QkQpU3
gXDQzyPq93//P/Twt/XYrrzk7UhhYQ355FJ8nZ8lJe0mJX1JSZvs+3CG0dnd
g5KSCGW6zkjnROOmpLn9rYfDjpQULpKZJSXtJiV9SUmz4glhVcD19D3s60FJ
SYSKXadvOcXoKWneinYjYmtKipbPz8rMlZIypKQvKWmWf05UP5HnsaMHJSUR
qv8q0QWN4cGekZLmbWkxIjalpFTh1Kzp1x8rSUmbpFLStzNXb79TpkCmhnwZ
KalD4f6dfn1ylFrqqgZyG7dMg5KSCNV3nU7miCelpHmLzh0Um1LS1mdJ05Zv
4hnsK5n8spq1Ck2pYjWLSEk9i6ak+ZwgJb2ZlNS5zOC93mWbfM2KnmdT1125
T3mYaZGS5vNDmF/C6TXFoiefVA3nHsMn1ja1/F1SZhEpqWjKZpxpezI6kpIY
QupAuvjQ5XqZA4Ae/Nw7//yf/889/F12nDggd9vRdXqbHaYgqkyJ+BNOjD4P
ir6NvggLn75pp9Q5tfw37qZfU1JxXcc350mm0pOgucAUizypiatlPUsaSD4Z
Rc8Jbp5fwo7unJTEJvuCkj5nk2iumYInPsVimehUH6kabeDBmjPJZb4NW72u
n/V7i18kLSdKSTWKKSmMS6vnPvlkFJaUkjqXykerAqm3PJh93TkpiU12955u
p97jU9K8mUcGVPG7cNf8Gdoru1NS9FnSqrb8265SErOakV5MUjyS3d05KYlN
jvSenqdSNP6EOShfrP+UNG/sjrVISd2qSUlhAoouJSXBs0lJnZOS2ORg7zkh
UGN3SpoNlJLmTU6tKzp96knjvhnMdPjfuFtNzBTLrEtKgv45hXZuSqSk+fIX
nbicuyoZLpiq5NyUVL+4A/KIU3rPLiBv2p6SUouMkpLmDQ+nRC+jP6f8+Pzo
4c9wXkkll3lXRr9lt5qVKrCSiUi3pyS/S4IiKalzqZQUpptw4jIZZcqkElO4
1MENOb0kobN6z5mBjMrIsy8lRUNWJynpk/gdt5Q0kGJ4uexPSoLOuRfq3JGU
lMk7xUWapqT5qEvdXRxZ0cud23v2BVGrjPMVZpx5elgmnJUpk1rXLSlp7oHQ
qsDt+UhKipKSvqSkpcxwjr4Nx/t1beVC0dtU+jHtTUlT9qnQjrS17zhJ3Uss
DzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aDlLQypW9FMrNS
U3iG28cpedP2lDTbnZJWi7f4xt2m8w/1GvWencLSJCWlb7bnubfnIympkWd0
qZS0ksk+q1vl6E3LM44KVqSkzu1ISac8S2r6jbuPlNRSu6Bk1/BV9Sn5VTrs
hE82Jc3FVq/rZ0lJ93pGl0pJK+FunRYpKXy7KvaMo4KVe68yFE1P/F3Sxzfu
WmragfYOfEo58VN6lrScm3qdnyUl3egZXSolrRRT0icRiFI3MzyAlNS5+pQ0
/e7f/a6ceHFKCrfr419vaKN1Bzpp0Lkbj89lVtqaksJFMrOkpBs9o0ulpJUj
KWn5CQlPYrd2LhNhVlITw/LRevLFGqWkrbOocU0H2k10q4eDc2tKipZPzVqm
sGKA6qE3HuYZXSolrdSkpE/db5R4DCmpc6mUdP2flDSKyzrQnqJP0VuaEy92
NZ8bb0pJqcL5WZXPmIzTg8KPH1Pubuk2UtJKJu/sm8UDjDi0X+WRKSl/TXFA
HnRlBzqB0I/UjevyKD09KGVW2u5ZkpR0r2d0qZS0lMm80SnRWYPmZTLs0M7l
r8UXu2yTr1nRU13fgXYZXZmqP/g9sor8qXJq/LukSUq6zzO6VEqCoivvfjnR
bwt9VribA/KgWzrQmYR+3JiSlgW2pqQw9WRmVUYkKamFZ3SplARF7m0GJSWR
cmMH2nf0IExJ0+IrMWetIv+0PRNh5vKr1/WzXpuSOtmWTppxkJQERVJS51Kf
WN7isk2+ZkUPdmMfXnmoQI3p1H+9ofL0OB34t7srs099yeNb3YlOtqWTZhwk
JUGRW5rOtb7UbrooX7bJ16zowW7vw9sbALPjR2M0DeU/PpKSWgj7/3PHbcwz
ulRKgiIpqXNSEjv00IfOLXRi93FYzEGZmnNP5S+3b/P7kdqo5dbVb+Z1/V6h
VZdVkJKg6PZxSt4kJbFdP33YT0t4p623o2fdwf5c/E/+5H/p4e9JY3C1LdOv
j5bqK7n9enrxVRXYR0rq3AvP5w7I47rqQycZ+nf6Z/tSUgtSEnAlNzCde+H5
3AF5XId92GGTeLmmX3ySkloIU9I8RUoCTiclda7mfD5f6H8s/leDK6nyy4md
nM8dkMf12YfHv8I03fRjbZ6kXTJareX2fPS8lLQSPSEUd66U9OV3SVDkfqNz
NeFlFX+iqSc6ffr1/8TRyfncAXlct3148ISz76NjaPrYKLXG2/PRS1JSODG/
u7d+9piZW3Pp7OGqGiUlQZGU1Ln8GTicm0pJPxaPmVIJq5PzuQPyuM77cHfz
Vp8Yn9QcHuviZLRadSa2fK1e188K30pJy4mhVYHKCFP/+aSUBI8kJXVua0qq
D1CTb9w9WufdWHnmWd3kSEkUpe6Nr29GPrkUX1cWKwalp46U1F6OpqTVaURK
+khJUOH2Swl5LVJSca6U9ABDdOPWRqYSE/SQjJZ2pKRwkdSsrSmJ2WdXSpoW
nzFO2W9lSEnwJPN5gz7lT7+ZueGsybOkNxmlGzedguabnFG2jqZWd79dmTam
pGj51Kxp8ZW8N3/jLioVjpYFNqWkVDJakpLgkfq8vjDbmpJWUSiclfoETEp6
mLG6sbK1Y20UjXSbjJY2paRU4dSsMGRJSbNMPpoLbEpJy6CUumLuC0pSEnSu
/2vNy9WEl5rUE01PUtKDDdeNNeei4TaKs+Tvezu0KSXte5YkJUUVDxIp6UtK
gqKBLjrvVHPuDR/6T4HK8j2czx2Qpxi0GzPNHusmmVOMu9O3pqR8GpqO/S7p
7s7oy76UVPk5pJQETzLoBeg99p17W/xJSWMZtxudlF5uuMdGUTtSUn0akpKO
2PHZ4/JFVOdX1SgpCYpGvxI9npTEPqN34+jtZ5NnJKOlTHiZt3T1esesYkSS
kkIvvKpGSUlQ9KSr0iOlPrm6xWWbfM2Knu0B3fiATSDv4nPLlaaK/LL7b1Pl
j+zeIyYp6W9ISVD01CvU4/220GeF+zgaT/SAznSCep7rP3i5hZTULSnpS0qC
osdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGLG/tBSoKi28cpefee
wFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3Ayoz1KaNPV4Js+f1
5/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7M/5Wb+3h6+DRcvxg
q1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLX/8x/+2h797d1D/Ua6+hRe4a9sP
VhJ93cj1vcTzOIrgDW65sFJvGiclDXFTN5BJShrEz/75x//4f+/h75o9dfr4
vfgAczxznKMI3sCdaud6S0lzq+Sd1qSkUbwkJTUd6atq5xWlXszlM+eicNno
umAHRxG8gfvbexX7P5+S5ruC7+vllOWs1SKpGupT0rLxUtI+Nbv+9nwkJdV4
cEq6coCnskw09aSKhbOi9bTZAl7kAUeR3yVBkfvbexWDRia/LGctk06Yg6LF
wllbU9JqK1r20wPV7PpieFlaTdzx9t6UVHkUFfvt+oZNj0tJV3ZvuOrii086
E6VmLTfHyYrjHnAUSUlQ5P72XlPMqkAxIq2mZGZVvt6aktihZtfXPOUJX4cv
ihP7SUn5+/PVrGtOX8WGPSMlFTv/GqenpHw9sM8DjiIpCYpuvya+XPRWeblT
6lNSTYCSkvpRs+sPpqRoyXyxflJSeGqKnqwuOIPVNKw+xYRTvsK30fWenpKi
W3SxKR12oi+KbysrvEx8nL/Gxb19jQdsl5QERQ8+iV3ggovL1FNK4jKfU1NS
WKym8h5S0twbn/RtSevm1TRsd0paTYy+Dl8cTEnhJtwr1Z5Mn3+2fKcuX087
XXXyjR7ZDw/YHCkJip537hpL8fI9tUxJq+xT8yzJAXOWml1fk19mqe/RhXNr
ak6t5S6fbEq6vWH1ESksPJVCUGX9xZS0bDOt6efQk/rkAdsiJUGRi+a9wjuu
sMDWKJSZlYpXqbWkvnHnmDmuZtdvepZUOXEa6lnSqkBqwdsbdjwlZSo5kpLy
xxgt6O2Mx3TOA7ZCSoKix5yyBlXs/0x+SWWfKXhaVP+kqTIl1bScvJpd3y4l
bQpKt6SkVIGaidc3bNPX7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUj
zHwvlPn1UKZ8WKA+Jc3Nu75PXqJ1SqoPSlempE1lrjl91eTZyggza/csySn9
Xjq/hl7qgZQERS6pnatPMa3/UseJQ6iRYoSZb4lTE5e35dFFojXclZIqrT4E
uLs5f60mxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6T0lzOy/rk5eofNBz
wZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qmXtMtbzBJSYOYKv6B
7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfGsv5Tjq7RD9HR2/+R
kqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp9fbIjrtsp59b+ejH
5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu5AZS7O3VUEq9PrLe
pnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePyF9G23dItb1Ps5+nX
X41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnUDX1kDt34LykJilxD
O/dz7/z9v///9PC34zhxdEEPDMMLVKakTxCXPqVwEc0j0WWjMTm/9jB/ZQps
XSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlfSeZKvZoevo0WqA9B
lSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9UTj2911R9Svpkf6O0
LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZKmrfllD7hYYofqufv
J6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ahGw9UkpLuVez/J6Wk
mu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f519HKo6KLVHTY2Ifi
0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPXtD0lpd5SQ6e1MFav
ZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6otOXE69PSR8HHgur
z6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7TzlzslFWHC6amUVJxy
S0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H3kZKgqKX3GlMv0pN
D11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqzcuD0oPPmPZ6UBEWP
v0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLOQ8QRQ2za/MAo81zp
9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2NqxERTv8E42IuH61h
VVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70xJc3bG06JrvrnxD/8
w3/Xw98oBxukOIaPu6AP8wkobMYy6aSKVdZz+ra0q/YaQzf+S0qCokempCdt
USbCpLLPlH5UFE1SXaWkT/aT0lWx2/ORlMRjPPJacKVrUlL4Ovr8KCwTfRGe
afNx6VxDH29DN/5LSoIiV8bO5SPMfF0LpxRnpWq4PSXNG/759Wt1YYHb85GU
xMM4mHe7JSVVPgMKw1H94lJS1NCN/5KSoEhK6lxNfrnm7/rjJEx8q7m35yMp
iedxPO9zTUpKPQyqTEk7JjbartEPs9Hb/5GSoIKU1DkpaV9KmhdZvf6+rSkm
JfFaDul9Wvfb6knQPHF5hly9CBeJBqKwntZbNPoxNnr7P1ISVHhYSnrStnyF
SeFGPWz4skAxvBRf52dJSbyWo3qH1p12/U5pt8bRD7DR2/+RkqDC9Xe/TT1p
W/J+W+izwiNqwtq+lDT97rGRlAR5DuytHpaSmq5uxKOrh88PTyQlQdHQYzz0
pG3Je3ZKWpKS4C6O7a2aPny57HrdekWDHlfRZg+6LR8pCSpISYN6T0pamY/Y
mkSTyUThxH0RSUri2RzeW+mxvKH7Z9X4obdFSoIiKWlQr01Js90paSYlQQ1H
+CYPu6qea/SekZLgVR52Pn/StuRJSTtS0mqRzNfwpCRYcpBvpcdCz+iT5VYM
vUVSEhRJSQyqMtRkfnZ0/BdJb0tJ4W/EXuXu7r+ZHtjK8fPJ/p/BBzVvyGO2
CEh50rnr0/dZa3mlmP+bv4xOwcP9zP6Kzr2mQ245iqaNKWnun9RbKSnlYTc5
u+mHrdseT5s3adQng/bGZe7u9fNNUhK8xsPOY91uy/TrM/rUaTZVLJyVrz9a
Q1PX9/x0INec+9ftUXeKZ2/dPm/uk03b/rPwj8+PHv7evMs43cNunICUhw32
PrclE2oq807mdX51UpKUtNvDTg7nenPnpLY9eja7PR9JSZzuGcPf75Kg6BmD
fdbntmRadVdKWn0dIvr2E0tzy1nFB1ipwqeQklp76nad5eX9kz93zVNuz0dS
Ei084IiSkqDoYSmpT72lpFX2yYedaGKKpqfwbXQVZ5l6cvrW3e6RG3W6p/ZS
5XatioVLTVISl7jx5H+vI50mJUHR8YFGUaaHw1lTOuPUnBvDRTaVmRIxJ/oi
nBhtoQNsOHZZvUf2Vf1G5Uf6FEtJ8yni+zqcPs+aXxffRqdISY93SlgY2pEe
kJKg6OVnmGtkotCmlBQuW8wj16ek4uro37m7bPrVauKOtzUNvuzM9sjDezXG
59FdPCOFs8K0sso10emZidHXqblS0oPZp0s7ekNKgqKHpaRutyWVZTKBJXwb
nRLO2pSzUuXzL1Jzi9MZwun7q/IYK06sqT8zscVx+KRje4r5JIb8asHorFVg
yYSmVLTJzJWSXuth9y1n2dotUhIUPexs0/O2LO86VlPCWWH5/J6K1hOtNlpb
ZsHoi09w45S6oQon0rkWe2p1sGVWFM4ttmdK36IXpxz3yAM7PBelZi2nRzs8
n5JqMlRmqenXGPVtg2/cPZ69mbKpZ6QkKHrY7euTtqVbOvnZbkxJYbGaxuRT
0iqqn751jxwOO1JSdFY+Jc17JPodvHzqqfnCnpT0SHZlXn3/SElQJCUN6reF
iyt8Tye/U6OUFIaU8FZ8NbeyJanYFaanRofu80ZEZtecmJIqv2hX8wRKSnoJ
+7FGZS9JSVAkJQ3qrpTU6AN5+tH6WVLlxE3PkqKHZXRKfZvrPX44rJ7K5Yut
phxPSTVfupOSXsJ+rCElwVkedsf7pG3Ju/FZEs/WVUoKi60CUSYHeZZ0lq0P
9ZZT8rEomoPyE6WkN7Mfa0hJcBYpaVBSEo30lpLyTSqmpFSdJ3r8aefElDT/
nugrMzHzNlM4E6YadAyXWo3u1aclS/llN61oXw31Kzp+dgo3WUqCs0hJg5KS
aOT0QRS9dVlODG9v8m9TNUfr/CzOco1Od88+7WTuPMOS4ZTMT4pO/Cuu6Nn7
6CXyWeB43CiusYXiKnYMPSkJziIlDUpKopH3DKKz6LEvKYmmpKT6MjVLSUlQ
JCUNSkqikfcMorPosZSpJ3d3BkdNW1LScqdHX6+KpV5k5obNW81allkdhKlm
RF9HZxUbE+/EBSkJio5cPqqvTm937i77kpJopPKI3XdgL0dEo6ERXVfrFV2w
Fni51UBLvY2eZKYgv6TKRF9Elw0H/nLWskx9M+pbFa0k1TlRUhIU7biRaHrz
/0gtekxKopELwstl9UtJ8Bj1KSk1MTMr/6I4N19m9alpsdpUiCtWkpkSkpKg
aOvdu/uBI07sPSmJRqSkI2sEGhk6JaVavuNZUqaSzBRgh/qU5PnRKc7qRimJ
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 13->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9cyDH2aRpEiZzthgzDbbubExpM2CixgXi0PcGi/ZmMCyC+tA2O6p
Ugf8BtKmcmHSBMLdh6RJl8aEQELegqvje/fw0+rW/NWfkWak6+LLwznSaDQa
aSR9js65n9/7oz/7J//1fzBN07/8j3/+55/88//uP/vzP//nf/Ff/Cc/3/yX
f/ov/5t/8ad//F/953/63/7xv/jjP/9P/+g//Dnx3/0s+0f/0TT95WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
evLC3lht8gt7AKSksziBPJiUNCgp6SX67I0+W1Vv9Pbvk09J73meMm/vagq8
ipR0IueQp3rJZfF5pKSX6LM3+mxVvdHbv0/ls6TRO2f13cLU3NE3E+iH88lT
uVgMSkp6iT57o89W1Ru9/fusklE0LIzeM+E23tgY4D2cbR7JdWRQUtJLdNsb
3Tas0ujt36H4HbPRLwfRJ0e3tASABxj9svhaUtJLdNsb3Tas0ujt36Hylzjj
9kx+o8bdLmjB75KgyLVjUFLSS3TbG902rNLo7d/htSlpnj7upsHppCQokpIG
JSW9RLe90W3DKo3e/q1W/6ZB9BdJo18Ois+Sht46OJeU1IKTzMO4cAxKSnqJ
nnuj57YVDd14olK/S/IsCUJSUgtOMg8jJQ1KSnqJnnuj57YVDd14UqLfKpSS
ICQlNeI88yRS0qCkpJfouTd6blvR0I0nI/99QvsdvqSkRpxknsRVY1BS0kt0
3hudNy9j3JYDHCclteP68hhS0qCkpJdo2htTT9ptZmrbL14jQD+kpHZcXx7j
lvsTjpOSXqJpb/ys/MfnRw9/UhJXuumTgF7c3f10QUpqykB7BufMQUlJL9G0
N6YXp6SPI+19xIQv/cBHSmrM+HoGp8pBSUkvISU13fzrV8pd7O6QPnkzKak1
4+sBpKRBSUkvISU13fzrV8r1XOYydM5rSUmtGVkP4Aw5KCnpJaSkppt//Uq5
nh2dp3/eSUq6gME1OilpUFLSS9yYkuYfL3xfrybOs/LTV/VISVzMXq6hl15I
SoIiKWlQUtJL3JWSwgSUmpV/nSogJXEBu7ievnobKQmKpKRBSUmD2rp1t6Sk
cPrulJSvVkqiKbu4nr56GykJiqSkQUlJgxo0JR1JTFISd0nt4vlboKkymSvj
uYfNvtqWzTurPYbD20hJlzG4xiUlDUpKGtRy65b3adfckoWV16Sk1Q+Lir8/
CmdJSVyvZkzdNfSOO715nW8vjMvgGpeUNCgpaSxTzKfiM+EeUlLqOVGYkurf
Skm0VjmgpKRGFQIz42tQUtKgpKRBrbZu9bF2sfzpjbkmJeUj0l0p6fP0g+3l
tg6o1dVw+fFF+LFG/kW+AakPSaKfouSbl1n7qs50P1V1DnCEwTUoKWlQUtKg
hkhJ9ZEnE4XCMJVfXbvNzPfALevlApsGVBhtUpEn/yKTWbauZTlr69qjBYoM
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
fcy1iTd73tH7vC2qd8q2S0mVMsGnmIlO2VO7U9JZaz9eye2r2M2lf1BS0gvp
maZquldcYlDPO2ift0X1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBfS
M61tuvrUnDydYOnE6l5uvn8b9/h83hbVO2XbpaRK+ZQUvl0VO+uA3BqU6tfe
z5DppyWzl5xSnkdKeiE909qOHs5ftnZ8+gcnmmI+v176xzo4n7dF9c7ddimp
UjElfRKR5PQD8nhKCo+ZVYXRt6sXq42qnJWpJ2xJ6vX1blw1R0hJL6RnWjvY
w+HJPLyfgVuk7t/CWaN43hbVO2XbpaRKYZdG40BYssXJv77CsJGp6dGSlZGn
ZlamnpoGhJtwJdfuQUlJL6RnWjurh6e0ymLXO2XDbd0tKhucehvWcPP2/OqU
LRpu6/Kmvdu+dHpKurkrf3VwW1bblZoy/drzU3pHtG5StEy0N8LGpzbnxhep
idc7/XDiGlLSC+mZ1k6/kOUv3z9f//j86OGvxaH1s87f+71/28Nfo627fa9t
2nfhnVLmJuTnlL/7d//PHv4yW7dpi1Yl//AP/3UPf7uPzN3bvtQiJf29v/d/
9PDXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+kf/6H/u4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3
dqSk+nZeQ0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJ
Sb25JSVVFt6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2
pKSunP7pQeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATkt
pGZlliq+DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2N
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
7/9fPfw5LRAlJZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKq
eZsGQvRDrYMXRymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziT
kkY3VSdiOGgVW1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsU
ryP06fRQIyWNboqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/
SEkH3bv7uMbt45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/+If/uoc/KWlc
htVLSEmDkpIIhV1ngNPCJZ+y19rU5tSs6Nv6yqN1ZmLL1+p1/Swp6YhJSvor
UhIUbbrK0A8piVDlTSAc9POI+ht/4//v4W/rsV15yduRwsIa8sml+Do/S0ra
TUr6kpI22ffhDKOzuwclJRHKdJ2RzonGTUlz+1sPhx0pKVwkM0tK2k1K+pKS
ZsUTwqqA6+l72NeDkpIIFbtO33KK0VPSvBXtRsTWlBQtn5+VmSslZUhJX1LS
LP+cqH4iz2NHD0pKIlT/VaILGsODPSMlzdvSYkRsSkmpwqlZ068/VpKSNkml
pG9nrt5+p0yBTA35MlJSh8L9O/365Ci11FUN5DZumQYlJRGq7zqdzBFPSknz
Fp07KDalpK3PkqYt38Qz2Fcy+WU1axWaUsVqFpGSehZNSfM5QUp6Mympc5nB
e73LNvmaFT3Ppq67cp/yMNMiJc3nhzC/hNNrikVPPqkazj2GT6xtavm7pMwi
UlLRlM040/ZkdCQlMYTUgXTxocv1MgcAPfi5d/7BP/jfevi77DhxQO62o+v0
NjtMQVSZEvEnnBh9HhR9G30RFj59006pc2r5b9xNv6ak4rqOb86TTKUnQXOB
KRZ5UhNXy3qWNJB8MoqeE9w8v4Qd3TkpiU32BSV9zibRXDMFT3yKxTLRqT5S
NdrAgzVnkst8G7Z6XT/r9xe/SFpOlJJqFFNSGJdWz33yySgsKSV1LpWPVgVS
b3kw+7pzUhKb7O493U69x6ekeTOPDKjid+Gu+TO0V3anpOizpFVt+bddpSRm
NSO9mKR4JLu7c1ISmxzpPT1PpWj8CXNQvlj/KWne2B1rkZK6VZOSwgQUXUpK
gmeTkjonJbHJwd5zQqDG7pQ0GyglzZucWld0+tSTxn0zmOnwv3G3mpgpllmX
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
N65GRDj9E4yLuXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3
xpQ0b284JbrqnxP/5E/+VQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7a
awzd+C8pCYoemZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GV
rklJ4evo86OwTPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faU
NG/459ev1YUFbs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnl
mr/rj5Mw8a3m3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLn
pKR9KWleZPX6+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo
7f9ISVDhYSnpSdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/A
Rm//R0qCCtff/Tb1pG3J+22hzwqPqAlr+1LS9LvHRlIS5Dmwt3pYSmq6uhGP
rh4+PzyRlARFQ4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8
pCSoICUN6j0paWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSk
Qb02Jc12p6SZlAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OS
YMlBvpUeCz2jT5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/Znpg
K8fPJ/t/Bh/UvCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655Sia
NqakuX9Sb6WklIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3T
r8/oU6fZVLFwVr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4
e/Mu43QPu3ECUh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8
JCVxumcMf79LgqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anb
dZaX90/+3DVPuT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl
6snpW3e7R27U6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemM
U3NuDBfZVGZKxJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35d
fBudIiU93ilhYWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJ
O97WNPiyM9sjD+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmK
HpaSut2WVJbJBJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GT
ju0p5pMY8qsFo7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hN
CWeF5fN7KlpPtNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy
3CMP7PBclJq1nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qW
bunkZ7sxJYXFahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZ
lXn1/SMlQZGUNKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZld
c2JKqvyiXc0TKCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbR
KfVtrvf44bB6KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cp
KSy2CkSZHORZ0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjep
mJJSdZ7o8aedE1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o
+Nkp3GQpCc4iJQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMM
S4ZTMj8pOvGvuKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLH
vqQkmpKS6svULCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6
kZkbNm81a1lmdRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bf
gb0cEY2GRnRdrVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0
klTnRElJULTjRqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWn
psVqUyGuWElmSkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJT
gB3qU5LnR6c4qxulJBpJHZ+rjzGjn3CmPucML+hhVeEi4YLh2lONWa0rWkOq
JdECmWHrxAgXyMSEz6/DPDUxPBVEF6ypKmxApkzqbbFkTZ35lgBH5K/+q5Kt
G/MSp/SklEQj0eOz8ur/CVJP5UU/v8iyGfU3FWHNWzck3yeVc4FTpE4I4W3M
amL4occndqJYWRXOzM2vJV84VW10wXwl+b4CdggHV6rYBY15j+P9KSXRSPTg
TF2Fp3S4mGK3KDWLhNOjbSvWv2ldNe1McXqEC5w70J49bGu2zu+SoKgmJT37
ZHKXg70qJdFI5shMhYhMMKkPR5k6o20r1p+Zu/yctri4MyT0QEqqJyXBKaSk
u0hJ9CkfTzLPYvIFdjxLijajvv6zJjpDQg9OHGirB8en1Lap/CnrPbgKKQmK
mqak5YnortPRBfY1SUqiT6mUtEooy6Gdeb2cmBddJNq21ayaSlaNj27pqp5M
bxS7CzjdxWNt0+p6Ow/UtEdKgqLorciqwO6a69eyu+ZO6tyx+ME1Skm0U39w
bgoUx+u8/lZESoJOSEn1pCQ4RaOUlPoQ+BRS0kdKoiUpqX51vd0dwVMd+cw2
+kx5nji/Xc0NC0fnRivJv07VcxYpCU5xWUparTF1plq9CM8q0QL5empKRvsh
v1RqYr0j50YpiXY2HZktLvTROtvdUaQaUFmydWOAz7GxtrqaryambjCiLyoL
h+VT9UhJ0K2LU1I+7KTyS1g+fJupp+bcGI1I+aWijdxESqJbbv5r6CW4zMGU
FL7ORJtPcInfF6k+sTuE1Y1KC1ISnKKTlFR8EU5cnbgyi9eXDFtbE9My25sn
JdEzESBP/8CVbkxJ9VV9YncIn8RHvqvpZ6msUEqCostS0u4PYVLlU6s4UrKy
jJTEGzT9qHN0egaut3vc1X9Muu/Sn0lJxXqkJOhWo5T0qT6TFF/Un2GOl4y2
X0rizcSBkD6BWxy8IVndUWTeRguvZuWXLRYOlzqLlARnaZeSPrFTRzhx+Tb6
4pM+s22qp7JktKmrE9rqxe5z3ZG+lZK4zMHj/Bn0ANxu9+i7eNjee5aoXLuU
BEXFi/4Qg31QUhIjin568Hh39zrwl/YNxiuH8L2ni/q1S0lQVLwBGGW8j+jI
1klJALzQ1kvnZZ913P6Jyqa1S0lQ1HNK2vpZbieRqv48KSUBwCa3h5E+be0T
KQmKek5JS6lmdNK8FSkJANrp8+p/lx29ISVBkZTUgpQEAE29/MeDB7ddSoKi
RilpNXLDgRx9uxryqxrCBTOFw7epbUkVrtmQ1EalCoSrTs0qkpIAYBbeSDzb
3f0Nz1ccaztG4vRrtJl+zRGZAsUXmQKZ1X3SQSlf/+63qdamOmoHKQkAABpp
mpLCt6sosTUlrRaMVp5aXbFt0YZFa0sVDluS/8xHSgIAgA7dkpJS2efft3cH
S3KCUABF8/8/3VmkkmIEHog+RzLnrKYVETubvqXdqQ+58V7ScG3BtKfuQzW3
NKkkAAB4odRKGuZDryaer6R4YadeBqttnnqNSgIAgCTDSvqshlJ9O6a55fBw
WnNAc2T58jDDYbbm+OFSDycaDq6PbZ6uPPbkm/qFSgIAgCTBx/hyTPYaHjvX
e6gkAAB4J5X0XVQSAAC800wlfR4JpcmV/B+uX6lKAgCAJPNt8nMSJtst76RK
AgCAJKcqSShdd9d7qJIAACDJ2fYRSlfc+O6pJAAASLJwh6j3K9k0Jb1XKgkA
AJJc//Re/edCfHHXv9SBSgIAgCSpn+TJo5IAACCJStqUSgIAgCQqaVMqCQAA
kqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2
pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIA
gCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqik
TakkAABIopI2pZIAACCJStqUqAEAgCQqaVMqCQAAkqgkAACAkkoCAAAoqSQA
AICSSgIAACipJAAAgJJKAgAAKKkkAACA0lol/fqruSuev9wSzNM8/M/fzaPK
OSeXCgAAUFsoiDpberPVM/f2zgRXPH8ZUPOnAAAAOMirpDiRhrtObZkpI5UE
AADMuLGS/t3N+bTu7DTv9TTn6Q3uPWK38DcAAEDPXZUU1FBvS2/O3uDDeVUS
AACQ4ZZKWtvSe9kbvPDE3af49QaVBAAAzLirkmr1mGCG4SmaI2cqKdgIAABQ
u/F7SeWWyUrqFVB8eLxr+DgfAABAYO1RtOAZtjJ86ptKhy8cBY/D1YProw67
eqc4e3UAAMBPpiMAAABKKgkAAKC0XEnzP5LQe9Bu7aQXv3Y0PPvD2ShRAQDg
bZa/l3RqV/1rDMuuZ8VwhgdOAQAAvNbDlfSGAFFJAABAYKGSDuPrZ9h6D8UF
z+Md/q5/tq43VfAsX+/SZpbRPG+w1OEymgcGq63fVQAA4BkXK6l5k6hZSZP3
mOr6iAf0RjYXNtzSTJ7gkoNF1ufqld2pxQMAANnuqqTegHJLb3BdDZ+vwRIM
+LTSpjnzcM119TRX3iugeJHxxsNlLvyjAAAAd3mykupdM+0znKquleCMM3Oe
raSFe0nB/PW1AAAAT7qrkuJ06u2dr6SzI+crqb4H9I2VNFw8AACQbe2GRfP2
Tb2rHFB+8m++LJXT9o5tHlgvLNjYW0a9yFNXEay5dwnxIQAAwJPWPo0Hh/hs
DwAAbG35nkXzKIkEAADszpNdAAAAJZUEAABQUkkAAACl+jffAAAAfrjfa7x2
Kw==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 14->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
/ynpyIKnLM6seF6NHvyr55u7D+bV4vkK7XR4J79LgiIpqXP1N0sHb66kpJoG
n9sDp6/olG+CHayBT/C10miB1KEYfV1/JK9eFyu0x+GdpCQokpI6t+lOqWnu
kJLekJLOquTlpphVgRYpKX82kJKAmZQERVJS56SkC/4ek5IOLntWDURT0vJk
uzUlLR8Tz6+XUyoDkZQEfElJUCQldW53SlremEXvrPpPScv2R6es7j8zC1au
CC6QOfhXJVfjeooFpSkY18tla1LS5BIA7yMlQZFLZOdSd1P5lLR6Ed5cDZGS
ovd1qynhJmduCA9u2mUj5eCKTmmn08IRqXC0LFBzwE/BBwL5kV5TVfTgdyGA
t5GSoMjFsXOnp6R9ESkTJfYdP5V5Lf+ReObzcynp9ma8WSYfzQXqU1JNOMqn
pMxwWDbP5QDeQ0qCIpfFzu1LSavU0C4lbTp+VveNB1NS5f2klNRJVa9SHBdX
pqT8oAjb6aIAbyAlQZELYucOPkuKTt+XlVJ3U8XjJ1WsRUrat40PS0mn1NCi
KmapA3slM2s+zpcvwmVTFRYPfpcGeDYpCYpcCjtXf7efujtavl2+OJKSVrde
0WZn5tZvWqpMOH2Skk6toUVVzPaNwRZ/+f1r78NTSUlQJCV1bneiKQaN3XdT
kQ+1Fz8Arz+iGqWkH9uT4PNS0lmVnF4VX6OkJOCppCQokpI611tKikakfUfR
jpS0emBUU1JKOoWzxLky4+h6W9vctGeAa0hJUOSq17npwD/c/XXiZ87Hb7Q2
bVq4ltSmRaecnpI+V4WFU9ZyelOdKPhy1YAHkJKgyPWuc3UfBt9v36adleCO
B8D6Nu/Y0q3OWsvprb1m8xnC7oEP9EBKgiJXus51HiVSQanmoOp801Jtrix5
RLcpqVGdjMsVBAYlJUGRa1znRowSn+qU1I8Tt+u4E9dyeoOv6QHGsmkQAT2Q
kqDI1a1z0/gpaT7GKg+23Su6gJTUqE4AriQlQZGU1LmxUlLqMc3yMCvWIyV1
npLaVcszODwAeAApqXP1KWlOJTvmNn2W9AkeLW1aduu6mhouJWVqO7gW5w0y
tn6XFQB640LWuU25JhORimWkpH7WNURKOqUGHs8lBoBBuYR17jEpqdE37nYv
ss+IKSlV4Sq6ht+N3FcthFxooDd+lwRFLl6d252SVj8Omqdc8427cCs+bf71
ht2L7POAlDTFfDYm2XZN5cFcbqAfUhIUuWx1bl9KWr24/llSuBWNCh9cqs8V
Xf8s6RMkqYOVQ4oDBnogJUGRlNQ5KanpUn2uqMUqwjrPSkk7ygNwLykJiqSk
zh38xl10+sUpafm1rsryu1e0b8E3rKUmJe34xl2mfihyAYK7SElQ5CLVuYPP
knpISTs2+fRlT2z8oCmpWGf466Rz64cUlyG4npQERS5PnasPNfMjm/DttLAv
IklJLaq6eC01Kald/ZC39aEzcISUBEWuSp3bl2tSX7078jdESkotvvrRzZHn
JlJS60p4OVcluICUBEWuR52Tko4sPsV8fj3st65u3JSUqfbEj/GdTziFaxM0
JSVBkStR53YHnNU37t6TkqI1rKasktTBylu4OCWNuBYAdpOSoEhK6lz0achd
Ltvk02uYpKT2NV+/Ft7DEQXnkpKg6Mq7X07020KfFe52ygGZiUWfF3/j7nMs
Ie5bC5zC1QpOJCVBkevOoKSkI5VMr/zXG+aar3k+6MRCC65ZcAopCYpccQYl
JR2p5+AqLhgyjVZx8bconVtoJHMAu6gdV/ju9dPd3f0XkZKg6FXnhCeRko5U
dXAV0cXnoXTKmDp9VN51P+D0QlPhYfy2e90T6bqvl/SDlARFbzgVPJKUtLuq
41fATPiaZ7UIYgfd9ampMwytLcfdCx8KnEJ3hZ7dJ1ISFLmUDEpKuqW2fJ3L
6R2mpM/l37hbrveaFfFydx3hQ9NRGQ/uHCkJih58Bng2KemW2lZ1ru7E+k9J
n5s+bHeS4QLRp6WOvSJdlKd/4LVcRAYlJXVYYSoxnbiKU9xyA3nLecb57VVS
KckxkKFzaugleCdXkEFJSR1WOHX8rzeE9V8/9u9anVPcG2QikgMgRc/U01fw
Qq4gg5KSbqwzn5KaruJEt4z9W55eOcW9k6BUpFvqPa+v/C4Jilw+BiUlHanz
4CqekZIuW8vtK220xvzDi4u12MCu3N3Bv7i7M07zpG1p7Xl9JSVB0cPO+e8h
Je2r9pT7nOji595B1ddz3a1hhdO37rh26/pZ8x/+4b/p4e/K/rzLz238oz/6
X3r4e0xvP2ZDrvG87pKSoGjTvQ39kJJ2VLvjfj5T2ymtOl7/z5I/Pj96+Osw
JTVdkZR0JSnpdNENOes8Wbn4iZ15pM0XN7UTUhIUSUmDkpI2Vbj7qUemzlPa
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
6t7HXJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9
kJ5pqqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6
IT3T2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+
7f0MmX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2X
kioVU9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1
gz0cnszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZ
eWpmZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+v
Ttmi4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258
kZp4vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Ht/73/t4a/R1t2+
1zbtu/BOKXMT8nPK3/yb/2cPf5mt27RFq5J/5+/87z387T4yd2/7UouU9I/+
0f/Yw1/TSFIZhZqmpKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72
vXZk3823H9HFh0hJm7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZ
pKRBSUkvpGdayAeZFjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSk
raSkpypmtPBKlCqcunItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+ea
SqbB77SLW3d7PpKSMu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6
b7/H3n2nXeyl+pS06vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZN
x96ej46kpMqPti64TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89L
RatK1b+q4cjWRReftuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQ
LhjWE60zumCLrduaZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx
+tnwflrCJlLSO+mcRlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHH
pKTo1u146FOzl6N7rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkp
KdqxB1PSauL8+ruui1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etR
sc5wFdOulBQWSC1eWf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0U
p0SfDRXnFh8ttdi6IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4s
dnV9Pae37W12dDs9kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yu
yvt8tqekWRiXvi9Wb/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn5
4vt69d9NlZ++dTf6dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/Ua
VFlb5gI3xX46FA04UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvu
mkykray2xdalEtCUCESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjx
dbsp+P3RLJWe7vrGXWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemd
dE5TB8+H4RUtf42bsnfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcp
zkR3x3JH35KSogW2pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2
Vr6jQ/IbWD/xuGJXV1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrlt
yJxjp3RKCl+Et9M9pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmU
klavW2zd7pSUmji95llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb
9OLx2u1lmpKSXkv/NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdG
U8wF37ir2brdKak+FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaS
iqbBU1LlNm66BNxlSiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzO
kedrFVuiomXCifli4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eN
jy6Yf7uavqynxdZtjUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw
98C7uxVsJiW9lv45XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQ
ktr9vTMlXfD38qvk6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqr
H3+nfXs+kpJ2b93t+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2t
u97pW1evRUrqxyld9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqm
znfmhXdu9QNISa+lf04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0Y
gWeTksZV+d1CV7Hj3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova
0bfAG0hJwwn+jYralLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLS
m+midvQt8AZS0ljCiFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IG
JSW9mS5qR98CbyAlDSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLe
TBc1pXsB6MroKSm1RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuN
npJWSy1f1NScrycfyvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5
MTVrVU++cPQSHNaTan+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP
4ndJQ3vYdarbzZGSNlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1
qdtNk5Lqnf5QLxOgdix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4
Tz2kex6w3TasN2EvHe+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8y
pKSx1B/GrQ/73ZWPOBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQW
vZSJPKtZqenRKamJMAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4woj
THTKJ8hHxRfROreSksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikp
qfJFKv6kXqQmbiIljeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve
8lP61Ef3+aXylYQ1ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN
6V6G46CtoZdmUtIojqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZy
QNbQS03pXsbiiK2nr76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nL
MpumhKtITc+3pEhKGoteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS
0lj0UlO6l7FEb06i1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUd
rKcfUtKgpKSX00tN6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPO
LPUfg+Q/PAkrXL4Ny0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3R
jpTUlJT0BpmPNQyEGlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YB
a3R/pKR3kJIOkpIGJSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8
rqpfpJLR/ZGSXiP6McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQ
ZcnMFhUZ3R8pqWOnHJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiT
kjIrnedmngRVNq8+WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQo
KQkd1ZTuZRTFlFT5Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRB
SUnoqKZ0L6Oo+c7M6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvP
j/HU+A0rz58EipVv2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+
vYO6t84heowXOuXIXFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ97
58fnRw9/lx0nV67or/21/6eHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzE
Vd7ZkZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHH
bicl9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQ
U9uRkrpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH
5LSQmpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4Uwx
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
/+AP/r8e/pwWiJKSTmF8PZs7q3rF9JFKUsXyUtKSA3KfMLZDIzUpaVPSOf4s
adW8TQMh+qHWwYujlETnpKTjDK7Hk5I2CZ8TpSamZq0uwUvh3FUl0cL5RYot
nElJo5uqEzEctIotK8WHRJnyxaXCkplG5sdC5tQ6FzjSRbfnIymJDCnpICPr
DYrXEfp0eqiRkkY3xcI4tBCNNrf8FY/zmrEwBR98Radv7aLb85GUFBVNx3e5
sR+kpIPu3X1c4/Zxyj5SEqEpcbMH55rGSUlzg+vnTlLSo/3skL/7d/+3Hv6k
pHEZVi8hJQ1KSiIUdp0BTguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp
6S9JSVC06SpDP6QkQpU3gXDQzyPqb//tf93D39Zju/KStyOFhTXkk0vxdX6W
lLSblPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0
JSXNiieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+
pKRZ/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVt
kkpJ385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56U
kuYtOndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLn
MoP3epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJ
mUWkpKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/JN/8t/18HfZceKA3G1H
1+ltdpiCqDIl4k84Mfo8KPo2+iIsfPqmnVLn1PLfuJt+TUnFdR3fnCeZSk+C
5gJTLPKkJq6W9SxpIPlkFD0nuHl+CTu6c1ISm+wLSvqcTaK5Zgqe+BSLZaJT
faRqtIEHa84kl/k2bPW6ftYfLH6RtJwoJdUopqQwLq2e++STUVhSSupcKh+t
CqTe8mD2deekJDbZ3Xu6nXqPT0nzZh4ZUMXvwl3zZ2iv7E5J0WdJq9ryb7tK
ScxqRnoxSfFIdnfnpCQ2OdJ7ep5K0fgT5qB8sf5T0ryxO9YiJXWrJiWFCSi6
lJQEzyYldU5KYpODveeEQI3dKWk2UEqaNzm1ruj0qSeN+2Yw0+F/4241MVMs
sy4pCfrnFNq5KZGS5stfdOJy7qpkuGCqknNTUv3iDsgjTuk9u4C8aXtKSi0y
SkqaNzycEr2M/pzy4/Ojhz/DeSWVXOZdGf2W3WpWqsBKJiLdnpL8LgmKpKTO
pVJSmG7CictklCmTSkzhUgc35PSShM7qPWcGMiojz76UFA1ZnaSkT+J33FLS
QIrh5bI/KQk6516oc0dSUibvFBdpmpLmoy51d3FkRS93bu/ZF0StMs5XmHHm
6WGZcFamTGpdt6SkuQdCqwK35yMpKUpK+pKSljLDOfo2HO/XtZULRW9T6ce0
NyVN2adCO9LWvuMkdS+xPPCcbU50eu85RRCaEt+Ru/7v3oMzf2d1ez6SkqKi
V6W73NgPUtLKlL4VycxKTeEZbh+n5E3bU9Jsd0paLd7iG3ebzj/Ua9R7dgpL
k5SUvtme596ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+
UlJL7YKSXcNX1afkV+mwEz7ZlDQXW72unyUl3esZXSolrYS7dVqkpPDtqtgz
jgpW7r3KUDQ98XdJH9+4a6lpB9o78CnlxE/pWdJybup1fpaUdKNndKmUtFJM
SZ9EIErdzPAAUlLn6lPS9Pt/97ty4sUpKdyuj3+9oY3WHeikQeduPD6XWWlr
SgoXycySkm70jC6VklaOpKTlJyQ8id3auUyEWUlNDMtH68kXa5SSts6ixjUd
aDfRrR4Ozq0pKVo+NWuZwooBqofeeJhndKmUtFKTkj51v1HiMaSkzqVS0vV/
UtIoLutAe4o+RW9pTrzY1XxuvCklpQrnZ1U+YzJODwo/fky5u6XbSEkrmbyz
bxYPMOLQfpVHpqT8NcUBedCVHegEQj9SN67Lo/T0oJRZabtnSVLSvZ7RpVLS
UibzRqdEZw2al8mwQzuXvxZf7LJNvmZFT3V9B9pldGWq/uD3yCryp8qp8e+S
JinpPs/oUikJiq68++VEvy30WeFuDsiDbulAZxL6cWNKWhbYmpLC1JOZVRmR
pKQWntGlUhIUubcZlJREyo0daN/RgzAlTYuvxJy1ivzT9kyEmcuvXtfPem1K
6mRbOmnGQVISFElJnUt9YnmLyzb5mhU92I19eOWhAjWmU//1hsrT43Tg3+6u
zD71JY9vdSc62ZZOmnGQlARFbmk61/pSu+mifNkmX7OiB7u9D29vAMyOH43R
NJT/+EhKaiHs/88dtzHP6FIpCYqkpM5JSezQQx86t9CJ3cdhMQdlas49lb/c
vs3vR2qjlltXv5nX9XuFVl1WQUqCotvHKXmTlMR2/fRhPy3hnbbejp51B/tz
8X/wD/6nHv6eNAZX2zL9+mipvpLbr6cXX1WBfaSkzr3wfO6APK6rPnSSoX+n
f7YvJbUgJQFXcgPTuReezx2Qx3XYhx02iZdr+sUnKamFMCXNU6Qk4HRSUudq
zufzhf7H4n81uJIqv5zYyfncAXlcn314/CtM000/1uZJ2iWj1Vpuz0fPS0kr
0RNCcedKSV9+lwRF7jc6VxNeVvEnmnqi06df/08cnZzPHZDHdduHB084+z46
hqaPjVJrvD0fvSQlhRPzu3vrZ4+ZuTWXzh6uqlFSEhRJSZ3Ln4HDuamU9GPx
mCmVsDo5nzsgj+u8D3c3b/WJ8UnN4bEuTkarVWdiy9fqdf2s8K2UtJwYWhWo
jDD1n09KSfBIUlLntqak+gA1+cbdo3XejZVnntVNjpREUere+Ppm5JNL8XVl
sWJQeupISe3laEpanUakpI+UBBVuv5SQ1yIlFedKSQ8wRDdubWQqMUEPyWhp
R0oKF0nN2pqSmH12paRp8RnjlP1WhpQETzKfN+hT/vSbmRvOmjxLepNRunHT
KWi+yRll62hqdffblWljSoqWT82aFl/Je/M37qJS4WhZYFNKSiWjJSkJHqnP
6wuzrSlpFYXCWalPwKSkhxmrGytbO9ZG0Ui3yWhpU0pKFU7NCkOWlDTL5KO5
wKaUtAxKqSvmvqAkJUHn+r/WvFxNeKlJPdH0JCU92HDdWHMuGm6jOEv+vrdD
m1LSvmdJUlJU8SCRkr6kJCga6KLzTjXn3vCh/xSoLN/D+dwBeYpBuzHT7LFu
kjnFuDt9a0rKp6Hp2O+S7u6MvuxLSZWfQ0pJ8CSDXoDeY9+5t8WflDSWcbvR
SenlhntsFLUjJdWnISnpiB2fPS5fRHV+VY2SkqBo9CvR40lJ7DN6N47efjZ5
RjJayoSXeUtXr3fMKkYkKSn0wqtqlJQERU+6Kj1S6pOrW1y2ydes6Nke0I0P
2ATyLj63XGmqyC+7/zZV/sjuPWKSkv6SlARFT71CPd5vC31WuI+j8UQP6Ewn
qOe5/oOXW0hJ3ZKSvqQkKHr8peqppCSKHtOZj9mQN3tDMlo68yn+YXd3Rl/u
3hu/uLEfpCQoun2cknfvCXwl38hTNvZ4Jcye1J9nHWNcqebsAdxCSoIi16/O
TR1/N6AyQ23a2OOVMHtefz5vix5JMoL+SUlQ5FrWuT5T0qYnTZWb6Thc2fO0
r5m7O+Ov9NYevg4eLccPtsoFHT/wJSVBkUtG56bOUtLpN9KOwJSf3fI3/sb/
1cPfvTuo/yhX38IL3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN
4mf//PW//n/38HfNnjp9/F58gDmeOc5RBG/gTrVzvaWkuVXyTmtS0ihekpKa
jvRVtfOKUi/m8plzUbhsdF2wg6MI3sD97b2K/Z9PSfNdwff1cspy1mqRVA31
KWnZeClpn5pdf3s+kpJqPDglXTnAU1kmmnpSxcJZ0XrabAEv8oCjyO+SoMj9
7b2KQSOTX5azlkknzEHRYuGsrSlptRUt++mBanZ9MbwsrSbueHtvSqo8ior9
dn3DpselpCu7N1x18cUnnYlSs5ab42TFcQ84iqQkKHJ/e68pZlWgGJFWUzKz
Kl9vTUnsULPra57yhK/DF8WJ/aSk/P35atY1p69iw56Rkoqdf43TU1K+Htjn
AUeRlARFt18TXy56q7zcKfUpqSZASUn9qNn1B1NStGS+WD8pKTw1RU9WF5zB
ahpWn2LCKV/h2+h6T09J0S262JQOO9EXxbeVFV4mPs5f4+LevsYDtktKgqIH
n8QucMHFZeopJXGZz6kpKSxWU3kPKWnujU/6tqR182oatjslrSZGX4cvDqak
cBPulWpPps8/W75Tl6+nna46+UaP7IcHbI6UBEXPO3eNpXj5nlqmpFX2qXmW
5IA5S82ur8kvs9T36MK5NTWn1nKXTzYl3d6w+ogUFp5KIaiy/mJKWraZ1vRz
6El98oBtkZKgyEXzXuEdV1hgaxTKzErFq9RaUt+4c8wcV7PrNz1Lqpw4DfUs
aVUgteDtDTuekjKVHElJ+WOMFvR2xmM65wFbISVB0WNOWYMq9n8mv6SyzxQ8
Lap/0lSZkmpaTl7Nrm+XkjYFpVtSUqpAzcTrG7bp63ar8t9qaxasT0mS0Y10
e94z+ucBWyElQZEraefyEWa+F8r8eihTPixQn5Lm5l3fJy/ROiXVB6UrU9Km
MtecvmrybGWEmbV7luSUfi+dX0Mv9UBKgiKX1M7Vp5jWf6njxCHUSDHCzLfE
qYnL2/LoItEa7kpJlVYfAtzdnL9Qk2KiySj/jGl3Srq7P95L59fTV7eTkqDI
VbVz/aekuZ2X9clLVD7oueDPzs07KyWlAtGmlPQxGO+j5+vpq9tJSVAkJXVu
6klNU6/pljeYpKRBTBX/QPdX+DYzKzWlmJI+bkFvkun21elxeVLdeqYNq920
4L5jY1n/KUfX6Ifo6O3/SElQwZ3toH5b6KpCh9NZpKRRVEaYC/5W9+E39skL
1XyOlHp7ZMddttPPrXz043P09n+kJKggJQ2q25T0cVCdJPyE+UZ3d0bXpi5T
0ucRN3IDKfb2aiilXh9Zb9M9fm7lox+co7f/IyVBBbdAnbv4Zjhva8sb9Ql0
5e5x+Yto227plrcp9vP066/Gpli6SVWyLDCls3B08eWxsVw8evCsagsrD6sK
F6k86oY+Modu/JeUBEWuoZ37uXf+m9/9roe/HceJowt6YBheoDIlfYK49CmF
i2geiS4bjcn5tYf5K1Ng6yJ5Qx+WQzf+S0qCIvexnRs6Jc2bcG6fAFsZhq0d
TEn5SjJX6tX08G20QH0IqixZsxX5lo9l6MZ/SUlQJCV17gEp6eMwIy36Sfjy
bf6jcurpvabqU9In+xulZYHwqU1xvdFiqbCTSWr14ShTZ97QB+TQjQcqufHo
3DNS0rwtp/QJD1P8UD1/P0k9vdfOppT02XhUr5JLZbWfdKKJ5rJogR3PkioN
fTQO3XigkpR0r2L/Pykl1WwvL7QjJXm0tJtOa6R4Js88u6m5ECwLh9WmKllN
X77Nv45WHhVdpKLDxj4Uh248UMmdxr1Wl5hogXxy+fq+Xk5ZzoqWX068LCUt
txq+pu0pKfWWGjqthbF6NTOmLqtzrB5bGbrxX36XBEVS0r2m2KeCqwKZ2LKK
P9HUE52+nHh9Svo48FhYfS49T8wX+DziRuUuuu50Y3WplHTQ0I3/kpKgyM3q
vaKdv9wpqQgTTk+lpOKUW1JSZvN5m9QoKBZw/Byh987VW38WB0j0k4dTVlpZ
Z2899jZSEhS95E5j+lVqeuiCkpnWfrakpMpM1FVKynQC75EaBfkCxVkU6b0T
ddKZlQOnB5037/GkJCh6/D1q5xu4alvY2senpGg/8CpS0o104Fk66UkpiUpS
EhR1HiKOGGLT5gdGmedKp6ek/NtbUtJn+/4qPrO7UrtuebxoHy4nFgtwkG48
RetuXI2IcPonGBdz+WgNq9pS9bQba0MfeEM3/ktKgqKn3mmMslHF/p/O/l1S
fu6NKWne3nBKdNU/J/7hH/6bHv5GOdggxTF83AV9mE9AYTOWSSdVrLKe07el
XbXXGLrxX1ISFD0yJT1pizIRJpV9pvSjomiS6iolfbKflK6K3Z6PpCQe45HX
gitdk5LC19HnR2GZ6IvwTJuPS+ca+ngbuvFfUhIUuTJ2Lh9h5utaOKU4K1XD
7Slp3vDPr1+rCwvcno+kJB7GwbzbLSmp8hlQGI7qF5eSooZu/JeUBEVSUudq
8ss1f9cfJ2HiW829PR9JSTyP43mfa1JS6mFQZUraMbHRdo1+mI3e/o+UBBWk
pM5JSftS0rzI6vX3bU0xKYnXckjv07rfVk+C5onLM+TqRbhINBCF9bTeotGP
sdHb/5GSoMLDUtKTtuUrTAo36mHDlwWK4aX4Oj9LSuK1HNU7tO6063dKuzWO
foCN3v6PlAQVrr/7bepJ25L320KfFR5RE9b2paTp94+NpCTIc2Bv9bCU1HR1
Ix5dPXx+eCIpCYqGHuOhJ21L3rNT0pKUBHdxbG/V9OHLZdfr1isa9LiKNnvQ
bflISVBBShrUe1LSynzE1iSaTCYKJ+6LSFISz+bw3kqP5Q3dP6vGD70tUhIU
SUmDem1Kmu1OSTMpCWo4wjd52FX1XKP3jJQEr/Kw8/mTtiVPStqRklaLZL6G
JyXBkoN8Kz0WekafLLdi6C2SkqBISmJQlaEm87Oj479IeltKCn8j9ip3d//N
9MBWjp9P9v8MPqh5Qx6zRUDKk85dn77PWssrxfzf/GV0Ch7uZ/ZXdO41HXLL
UTRtTElz/6TeSkkpD7vJ2U0/bN32eNq8SaM+GbQ3LnN3r59vkpLgNR52Hut2
W6Zfn9GnTrOpYuGsfP3RGpq6vuenA7nm3L9uj7pTPHvr9nlzn2za9p+Ff3x+
9PD35l3G6R524wSkPGyw97ktmVBTmXcyr/Ork5KkpN0ednI415s7J7Xt0bPZ
7flISuJ0zxj+fpcERc8Y7LM+tyXTqrtS0urrENG3n1iaW84qPsBKFT6FlNTa
U7frLC/vn/y5a55yez6SkmjhAUeUlARFD0tJfeotJa2yTz7sRBNTND2Fb6Or
OMvUk9O37naP3KjTPbWXKrdrVSxcapKSuMSNJ/97Hek0KQmKjg80ijI9HM6a
0hmn5twYLrKpzJSIOdEX4cRoCx1gw7HL6j2yr+o3Kj/Sp1hKmk8R39fh9HnW
/Lr4NjpFSnq8U8LC0I70gJQERS8/w1wjE4U2paRw2WIeuT4lFVdH/87dZdOv
VhN3vK1p8GVntkce3qsxPo/u4hkpnBWmlVWuiU7PTIy+Ts2Vkh7MPl3a0RtS
EhQ9LCV1uy2pLJMJLOHb6JRw1qaclSqff5GaW5zOEE7fX5XHWHFiTf2ZiS2O
wycd21PMJzHkVwtGZ60CSyY0paJNZq6U9FoPu285y9ZukZKg6GFnm563ZXnX
sZoSzgrL5/dUtJ5otdHaMgtGX3yCG6fUDVU4kc612FOrgy2zonBusT1T+ha9
OOW4Rx7Y4bkoNWs5Pdrh+ZRUk6EyS02/xqhvG3zj7vHszZRNPSMlQdHDbl+f
tC3d0snPdmNKCovVNCafklZR/fSte+Rw2JGSorPyKWneI9Hv4OVTT80X9qSk
R7Ir8+r7R0qCIilpUL8tXFzhezr5nRqlpDCkhLfiq7mVLUnFrjA9NTp0nzci
MrvmxJRU+UW7midQUtJL2I81KntJSoIiKWlQd6WkRh/I04/Wz5IqJ256lhQ9
LKNT6ttc7/HDYfVULl9sNeV4Sqr50p2U9BL2Yw0pCc7ysDveJ21L3o3Pkni2
rlJSWGwViDI5yLOks2x9qLecko9F0RyUnyglvZn9WENKgrNISYOSkmikt5SU
b1IxJaXqPNHjTzsnpqT590RfmYmZt5nCmTDVoGO41Gp0rz4tWcovu2lF+2qo
X9Hxs1O4yVISnEVKGpSURCOnD6LorctyYnh7k3+bqjla52dxlmt0unv2aSdz
5xmWDKdkflJ04l9xRc/eRy+RzwLH40ZxjS0UV7Fj6ElJcBYpaVBSEo28ZxCd
RY99SUk0JSXVl6lZSkqCIilpUFISjbxnEJ1Fj6VMPbm7Mzhq2pKSljs9+npV
LPUiMzds3mrWsszqIEw1I/o6OqvYmHgnLkhJUHTk8lF9dXq7c3fZl5REI5VH
7L4DezkiGg2N6Lpar+iCtcDLrQZa6m30JDMF+SVVJvoiumw48JezlmXqm1Hf
qmglqc6JkpKgaMeNRNOb/0dq0WNSEo1cEF4uq19KgseoT0mpiZlZ+RfFufky
q09Ni9WmQlyxksyUkJQERVvv3t0PHHFi70lJNCIlHVkj0MjQKSnV8h3PkjKV
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
06cvSA==
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 15->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9UyjH2QLKFIi7SJF0iTKm/ZVquwqUUraILo02WITIUUbaQcJ7SpP
xQnkEDgEDuCGCiqUliAqKChyAlSLO3vx+vXt+fTH2DP2demvR15e4/F47LH9
W17rfv7On/03//S/+o+mafpXf+Pnf/7pP//v/slf/uU//6v//D/9+eK/+It/
9V//i7/48//yP/uL//bP/8Wf/+Wf/tl//HPm//uz7J/9J9P0H6YBAABY+Xw+
3/8CAAC83DIoAQAAICIBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEs3pqQJGMEt5wcAgBvdeBd0
740fUOmW8wMAwI1uvAtyAwadM0gBgHeSkoAUgxQAeCcpCUgxSAGAd5KSgBSD
FAB4JykJSDFIAYB3kpKAFIMUAHgnKQlIMUgBgHfqNiXt/j+2LBeZ/xtalUzV
UL+6cKnUeo809cha8kvVbGy0zakey5TM1LmcWSwTXVFN/dG2FTc51YZ8x06J
gy1VbfFlZtMyvbTPubUBAIzixrug4qpXt5SVdUbrD+8t89Vu6pNU5fVv7Whq
OD9acl/bUlJtLq6ouCvz0aPYwk31Z9pWU3/+ZeV+yb9Vv9eKyx4kJQEA7/Sk
lFR/F1qstlFKyszf2tTdsaLyznxrG+rv5KP7PVpzfQvr698UvvLNyzR165zK
lFTsltPHspQEALzTs1NS+FbljffpKWnHDX/984X6OfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWZ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
nrI4s+J5NXrwr55v7j6YV4vnK7TT4Z38LgmKpKTO1d8sHby5kpJqGnxuD5y+
olO+CXawBj7B10qjBVKHYnS6/kheTRcrtMfhnaQkKJKSOrfpTqlp7pCS3pCS
zqrk5aaYVYEWKSl/NpCSgJmUBEVSUuekpAv+HpOSDi57Vg1EU9LyZLs1JS0f
E8/TyzmVgUhKAr6kJCiSkjq3OyUtb8yid1b9p6Rl+6NzVvefmQUrVwQXyBz8
q5KrcT3FgtIUjOvlsjUpaXIJgPeRkqDIJbJzqbupfEpaTYQ3V0OkpOh93WpO
uMmZG8KDm3bZSDm4olPa6bRwRCocLQvUHPBT8IFAfqTXVBU9+F0I4G2kJChy
cezc6SlpX0TKRIl9x09lXst/JJ75/FxKur0Zb5bJR3OB+pRUE47yKSkzHJbN
czmA95CSoMhlsXP7UtIqNbRLSZuOn9V948GUVHk/KSV1UtWrFMfFlSkpPyjC
droowBtISVDkgti5g8+SovP3ZaXU3VTx+EkVa5GS9m3jw1LSKTW0qIpZ6sBe
ybw1H+fLiXDZVIXFg9+lAZ5NSoIil8LO1d/tp+6Oli+XE0dS0urWK9rszLv1
m5YqE86fpKRTa2hRFbN9Y7DFX37/2vvwVFISFElJndudaIpBY/fdVORD7cUP
wOuPqEYp6cf2JPi8lHRWJadXxdcoKQl4KikJiqSkzvWWkqIRad9RtCMlrR4Y
1ZSUkk7hLHGuzDi63tY2N+0Z4BpSEhS56nVuOvAPd3+d+Jnz8RutTZsWriW1
adE5p6ekz1Vh4ZS1nN5UJwq+XDXgAaQkKHK961zdh8H327dpZyW44wGwvs07
tnSrs9Zyemuv2XyGsHvgAz2QkqDIla5znUeJVFCqOag637RUmytLHtFtSmpU
J+NyBYFBSUlQ5BrXuRGjxKc6JfXjxO067sS1nN7ga3qAsWwaREAPpCQocnXr
3DR+SpqPscqDbfeKLiAlNaoTgCtJSVAkJXVurJSUekyzPMyK9UhJnaekdtXy
DA4PAB5ASupcfUqaU8mOd5s+S/oEj5Y2Lbt1XU0Nl5IytR1ci/MGGVu/ywoA
vXEh69ymXJOJSMUyUlI/6xoiJZ1SA4/nEgPAoFzCOveYlNToG3e7F9lnxJSU
qnAVXcPvRu6rFkIuNNAbv0uCIhevzu1OSasfB81zrvnGXbgVnzb/esPuRfZ5
QEqaYj4bk2y7pvJgLjfQDykJily2OrcvJa0mrn+WFG5Fo8IHl+pzRdc/S/oE
Sepg5ZDigIEeSElQJCV1TkpqulSfK2qxirDOs1LSjvIA3EtKgiIpqXMHv3EX
nX9xSlp+rauy/O4V7VvwDWupSUk7vnGXqR+KXIDgLlISFLlIde7gs6QeUtKO
TT592RMbP2hKKtYZ/jrp3PohxWUIriclQZHLU+fqQ838yCZ8OS3si0hSUouq
Ll5LTUpqVz/kbX3oDBwhJUGRq1Ln9uWa1FfvjvwNkZJSi69+dHPkuYmU1LoS
Xs5VCS4gJUGR61HnpKQji08xn18P+62rGzclZao98WN85xNO4doETUlJUORK
1LndAWf1jbv3pKRoDas5qyR1sPIWLk5JI64FgN2kJCiSkjoXfRpyl8s2+fQa
Jimpfc3Xr4X3cETBuaQkKLry7pcT/bbQZ4W7nXJAZmLR58XfuPscS4j71gKn
cLWCE0lJUOS6Mygp6Ugl0yv/9Ya55mueDzqx0IJrFpxCSoIiV5xBSUlH6jm4
iguGTKNVXPwtSucWGskcwC5qxxW+e/10d3f/RaQkKHrVOeFJpKQjVR1cRXTx
eSidMqZOH5V33Q84vdBUeBi/7V73RLru6yX9ICVB0RtOBY8kJe2u6vgVMBO+
5rdaBLGD7vrU1BmG1pbj7oUPBU6hu0LP7hMpCYpcSgYlJd1SW77O5fwOU9Ln
8m/cLdd7zYp4ubuO8KHpqIwHd46UBEUPPgM8m5R0S22rOld3Yv2npM9NH7Y7
yXCB6NNSx16RLsrTP/BaLiKDkpI6rDCVmE5cxSluuYG85Tzj/PYqqZTkGMjQ
OTX0EryTK8igpKQOK5w6/tcbwvqvH/t3rc4p7g0yEckBkKJn6ukreCFXkEFJ
STfWmU9JTVdxolvG/i1Pr5zi3klQKtIt9Z7XV36XBEUuH4OSko7UeXAVz0hJ
l63l9pU2WmP+4cXFWmxgV+7u4F/c3RmnedK2tPa8vpKSoOhh5/z3kJL2VXvK
fU508XPvoOrrue7WsMLpW3dcu3X9rPlP/uTf9/B3ZX/e5ec2/u53/66Hv8f0
9mM25BrP6y4pCYo23dvQDylpR7U77ucztZ3SquP1/yz54/Ojh78OU1LTFUlJ
V5KSThfdkLPOk5WLn9iZR9p8cVM7ISVBkZQ0KClpU4W7n3pk6jylbcfrHzEl
bdrAI6Skx5CSTpfakOX8g0Fp0/wj5jqbflbzmF3/JSVBkZQ0KCmpvjYpqcOU
tGkb+yQlXUlKOt0jU1Jvi/RMSoIiKWlQUtKmCqWkDlPSps3cx7OkgeQH5taU
tBrvL0xJxRPd1pS0qjB6Ul2WWU6spqOFw5epRkYLhyVTDU41I7/SzPxBSUlQ
VDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2mv6+rCn2tpSUuePd
EWei0+9JSZ/sJT4zP9wL06/ZZ/UyM5EpEJZZFYtmlkyrosXqm5FZaWotQ5OS
oEhKGpSUtK/mHSlpqnZuU+tLpjLLUjg/LBwtsyofXVxKykeY4nT+rXempNWY
mqSkjVa9F56jUhsyJXLEspKwTH5iufYpiCfhnFQzioVXJcMGV9aTqjCcOS4p
CYrCMydDkJJ2Vz7EMV/fwmhgmWNLcTo1c9OyR1LSpo3typGUNP3hsZGUNIum
pOVd7lkp6Vvn6mV9/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlY
UtKR+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn6e/E6uXWaqOW
R8i9JaMH7VwsWuBTFx/CZYslw4lobfnyxcKpt2qaka8wNXNcUhIUrc6rjEJK
GmItu2VuYMJ7oROfJU2xQLR6K7O6t6lPMfm4lCrmWdLy3d3PklbLzpXv+ybe
KL09BeEinBNdKuz56Q9BI5wfnbPag9GXqxpWtUXLp1YdtiRsT6r90WZHV5rq
sXFJSVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJ
SV/5gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfw+9//2x7+
Dt6H1EStfErK5KBNKanyWdLujV1uzvFKrrE7Ja0WnNJfw3thSsq8uzslRRPT
dOAbd1d2y241p44jlZ9Sz1getqVSEhRJSYOSkvI13J6PjqSkmnC0LHxuSgof
HuUXlJLqg1I+Je2LSI9JSXlbU9I8iFZzfhf8XmlV7DEpqejghmw6Te2r/EiB
Fh6z67+kJCiSkgYlJeVruD0f7UhJq7uOy1JS9FFRNCXlg9JZZ5JRzkj7UtK8
l1MvpaSorSmp3d9jervzlFEsvPVUedxjdv2XlARFUtKgpKR8Dbfno/qUlPpI
9mBKmgKZ+asyq0gVXbxdSqrf9nvtSzQt/oboroOkpNNJSVs9Ztd/SUlQJCUN
SkrK11AML0up+fO7q5LhgjtSUiocbe2HVEq6/u/cM0n/5yUp6UpS0ulOH7Dz
CS06vTrjhSfAsMDn11uUsHx0qegip2zsY3Y9UCl/n0a3pKR8DTX5JZyumVhN
b01JxXC0tR+empLqe+Au4e3fje7ujObu7uBf3N0Z5zhxQ6Zfo82q8pp3U2Uy
y9avdDopKD1m1wOVnnTOfxUpKV/DvpRUM6em8jAl7bi/qizc5jZwpz1763AP
ADucOL7Cqqa6uPRZpKFVJas54XkmM1F8dwenI3ihFvc2XEBKytfQKCXV1Lxa
avcQu2ZgRtfSz2mhk2bAI501vlKnkU91SpqnV2UyGUdKOsjvkqCon9shNpGS
8jXU55evmpS0NSLNS93VDwdX1MnJoYc2wCOdnpKiD4k2FUtN1DxCkpI2kZKg
qJMbIbaSkvI1bHqWVHx55FnSZ+8ouz0lze/efoq4vQHwSCeOrOiJYjVn9aio
8mU4kSpQWc/uDdy9bJ+kJCjq4RaIHaSkfA2NUtLWoLT6bHPTcOskJc1l7j1R
OE1BC01H1mOG7WM2ZElKgqLbb37YR0rK19AuJW0KStFtqYxLVw7MynXde7pw
poIWGo2sxwzYx2zIipQERVLSoKSkfA3F8LISfTc1J7pUfUpatjNToMOUNBe+
5aThTAUtnD6in3Rf8ZgNCUlJUPSks9mrSEn5Gjb9eqjdX/2X2cKS3aakeZHr
Tx1OVtCIwRV6dp9ISVAkJQ1KSsrXcHs+qk9Jy2Yvy3eekuYFLz6BOF9BI6sn
7Hc35x7v6QEpCYrecCp4JCkpX8Pt+WhHSpobf8s1+sjqLm6tUxZcYHqlu3v9
OlISFL3ttPAYUlK+hn4c3IqDXbFpdcdruKzBV/YMwPNISVB08Z0YZ5GSHm9a
/D8+LuiTs1YxVmsB3klKgiIpaVBS0uOt+uGCuHRi5YISQM+kJCiSkgYlJT1e
qh/ajdlzq73g3OJQAdhHSoIiKWlQUtLj5fuhxaOlFj0/0PMvgPeQkqBIShqU
lPR4lf1w7hBu95Sq3W51wABsJSVBkZQ0KCnp8Tb1w1mPllo/9xniu4IAjycl
QZGUNCgp6fH29cPBuHTNv7pw+locMwCbSElQJCUNSkp6vIP9sHtoX9P/9/6o
yjEGAORJSYOSkh7vlH7Y8Wjpyv6/60dVjjEAIE9KGpSU9Hh3/bvc1/f/iWeh
Hds4r93JEACYuTEYlJT0eO3+Xe58zXf1/1nnokwlU8xq1Q4/4A38LgmKpKRB
SUmP17Qf8gP/xl1wyhmpWMOqwOrR0sG1A/RPSoIiKWlQUtIbtO6K1KOl23fB
wfOSlASQJyVBkZQ0KCnpDS7rilVc6mQXHDk7bfpWYYfbDtCUlARFUtKgpKQ3
uL4rlj/VuXjVKY2CUljSyRB4DykJitwYDEpKeoN7/yGFfnbE7sZkvllXMx/g
qaQkKOrqXoh6UtIb3PuvKHw6Oz/sa8zyq3RSEsCXlARFXd0FUU9KeoN7u2KV
LzrZL1tbsox70QW72jqAa0hJUOT2YFBS0ht0kpKWczrZO5taMv2qacMAhiAl
QZHbhkFJSW/QW0qa53dy3qhpxhS4pm0APZOSoMhtw6CkpDe4vSvyDegkdxS/
SiclAaxISVDktmFQUtIb3N4VlQ3o4TQSbYOgBBAlJdXIXD6iL1fXF5eb0bln
GJSU9Aa3d8WmBvSQQSqz0i1tA+iHlFQpE3yKmcjlZnTuGQYlJb3B7V2xrwG3
n1WKWemWVgH0Q0qqlMk+4eOksJgrztDcMwxKSnqDHrpidxtujyT5rHRLk4DT
zSPa0N5ESqqUT0nhy1Uxx+TQnFUGJSW9QQ9dcbwN9waTVFa6pTFAC8thXhzd
4Vdwb9S+b5KkpErhbpqCg22KBaKwGMO5fZyyj5T0Bj10xYltOH62ufoOJuus
boEa//Jf/pt+/u7ujLXleCyOzZ8Ffve7f9fD372nESmpUribpuqU5HoxOrtv
UFLSG3TSFec2o+aqkXr35/wfnx89/HWya3iPn9lk+jkCOvjrISWtTiNSEu3U
pKRP3W+UGI6UNCgp6Q066YpGzcicfFJvSUm8lpSUkUpMqcK35yMpaSCZvLPv
LQYiJQ1KSnqDTrqiaTPCR0uZbylISbyWlJQxf9+pZmBKSdSbAuFbyznRt2q+
QUGf7LhBSUlv0E9XXNCS+VyUuiR9pKSs+lvETA4dyMO2t9g8KSkjPFFkOjOV
kr5LrV5+54S3ystiYSWpwl2lJL9LgqLOLxykSElv0E9XXNaS6D3G8t3b81Hn
KSkfB8L+7HBDKj1se4ubU5+S5n9j4TudKhAt/6SUlOrMfGxJvayZXr4MJ6Sk
nvV8cuBGDoxBSUlv0E9X3JuS5rWvUtKqzGpmNNrMb0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlrOzLzV8zfupKSlzNDb
VIaHsa8HJSW9QVddcU1jorc382lqCgLLcs60CErRXLOKP8WIFJ0eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZmtMLMWqSkDmWG
3rJA6iVPZUcPSkp6g6664qzGZOrJ3NvM9qWkmjmViSn6GKt/mZ6f3y3WULmb
7i05F57S2zucz96UlI9F85ytKenu/jiq+I27KYg/0cWn9NfqMmuRkjqUOVo+
iVvl6Ewexl4elJT0Bl11xVmNOVLPdF5KSn2/Llo+WuEpvXGi1PV9WSC14CUN
PNnDtre4OUdSUpiGVhNveJa0fHdfSoo+S5ptTUnRRtKt1JF21UHNPTJ7n55J
SW/QW1ec0p5pWj8X+FSfiKbsM53jT46mxE+WonOOd8W5itf06PxxLwEP297i
5pzyLOmdKSl8t5iS5hSTST2rOfmXniV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMu/WpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1
n9ctC5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrjhRfAg1YkrKS+WX+SCJ
fssufGs5J/9SSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb
9/9LCmcu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8Z2tKmj+wjc4M
342WT6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1
NecDzvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJ
HBF9cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibm
xE7gess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1
tWVXi3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2Bur
TX5hD4CUdBYnkAeTkgYlJb1En73RZ6vqjd7+ffIp6T3PU+btXc2BV5GSTuQc
8lQvuSw+j5T0En32Rp+tqjd6+/epfJY0euesvluYenf0zQT64XzyVC4Wg5KS
XqLP3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6
+3cofsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hx
twta8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmuePu2lwOikJiqSkQUlJL9Ft
b3TbsEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6Llt
RUM3nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04
zzyJlDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583L
GLflAMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOk
pJdo2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp
40h7HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClp
UFLSS0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mf
d5KSLmBwjU5KGpSU9BI3pqT5xwvf6dXM+a38/FU9UhIXs5dr6KUXkpKgSEoa
lJT0EnelpDABpd7KT6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy/OyXl
q5WSaMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2
ZfPOao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8K3pCSu
VzOm7hp6x53evM63F8ZlcI1LShqUlDSWKeZT8ZlwDykp9ZwoTEn1L6UkWqsc
UFJSowqBmfE1KClpUFLSoFZbt/pYu1j+9MZck5LyEemulPR5+sH2clsH1Opq
uPz4IvxYIz+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3k
yUShMEzlV9duM/M9cMt6ucCmARVGm1TkyU9kMsvWtSzf2rr2aIEiw+FV/C7p
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLkqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjL1cTq42qfCtTT9iS1PT1blw1R0hJL6RnWjvYw+HJPLyf
gVuk7t/Ct0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT86MlKyNPzVuZemoa
EG7ClVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6mVYw83b86tTtmi4rcub
9m770ukp6eau/NXBbVltV2rO9GvPT+kd0bpJ0TLR3ggbn9qcGydSM693+uHE
NaSkF9IzrZ1+Ictfvn9O//j86OGvxaH1s85//I//px7+Gm3d7Xtt074L75Qy
NyE/5/zpn/4vPfxltm7TFq1K/sN/+L/28Lf7yNy97UstUtLf//v/ew9/TSNJ
ZRRqmpKKahrWeUqaX0pJ7CAlvZCeae2alLS8Itx+jy0l7d662/fakX03335E
Fx8iJW3aolXJ2/PRwZS0e9uXpKTKjYqevZdvLedE3wpLtiYlnUVKGpSU9EJ6
poV8kGlR81z/NPiddnHzb89HUlKm/fl3b89H+1JSZcnb81GLlLSVlPRUxYwW
XolShVNXruVE5q1UJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHr
bs9HUlKm/fl3b89HUlK9ffVISfTv9l0pJQ1KSnonndNCi5RUud7b77F332kX
e6k+Ja16voeUVLN1t++1g/sus+BwKSn/cXRY+PZ8dGJKuuyUVdOxt+ejIymp
8qOtCy4T7sy/eugE+2JQUtI76ZwWGkWkYoXfO+3Vquvvjefy81LRqlL1r2o4
snXRxacteWdZeNOCTVNSfuu2Zpn6vbzpYGi0dXNI+QrDyzx/CoQLhvVE64wu
2GLrtmaZlWiBG58lXaOmY7dmmXDOUr5wo5SU38Dl/FSx44otebx+NryflrCJ
lPROOqeRFlel8OZqtYppEWSWN701N8arO+rUW6mZYQ2nbN2qwGNSUnTrdjz0
qdnL0b3WNCVFt24ViKIpKRp5pkXASWWi+jobbd2OOBOdzs98dkqKduzBlLSa
OU9/13VxSlptYLi9qZnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWS
wgKpxSvr37fJ+U37nJSSvhWuXm6q+cSUtNq61impvtoWWxemleKc6LOh4rvF
R0sttu5IStpXoMOUtPV3STUduzUihYtMsZR0y7Ok1Qam6myxE4tdXV/P6W17
mx3dTg+kpHfSOe3suwzVVJi6zE3ZFPMtvMoyq5mVt+LRmcuXmYvyPp/tKWkW
xqXvxOrlvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLSe+06v/bqr8
9K270aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn2
06FowJkS0Sm8rw6ryiSsec6Ora7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22
LpWApkQgmuW/VnfXs6RVgR0pabaauUxPW2vesXUnOuVZ0qrAjq/bTcHvj2ap
9HTXN+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4Pgyv
aPlr3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSMzfVfEpKyuy7TXEmujuWO/qW
lBQtsDUlnfssaVlhi607/iwpnN5X7datO9HBlBQtsO9xT00a2lr5jg7Jb2D9
zOOKXV1ZyWpiWflnkYPC8pm3wvqfrdEupjUp6Z10TmuberjmtiFzjp3SKSmc
CG+ne0hJ+QI7UlI0HE2Hv3HXYutOSUn5Pd40JeUL7EtJqaSzKSWtplts3e6U
lJo5veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2zTxeO32Mk1J
Sa+lfxqZflVTrKbO/Lup2+bVW6mX+UBUeePd6Cowbf//JYUPjKaYC75xV7N1
u1NSfS5ulJJqtq4mv+QjT6ZATVVzJS227mBKmoJMNMUeNj0sJRVNg6ekym3c
dAm4y5RIRp9YSsosG25maqmn6nxHkyIlvZb+aWF1Jly+bHdZnH79lxNWsSUq
WiacmS8Wzm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5ftj46IL5l6v5
y3pabN3WiLSynBmdlpJqvmsXvly9lVrkxpQ0iml7SspMhFW9p4e/B97drWAz
Kem19M/poqfB+brcdL1bn0c0+mt0L3p7PuonJQ2376I/Jrr+r4eU1O7vnSnp
gr+XXyVXF6/ly3D68+sVMLPssv7LtuV2UtKgpKTX0j+nS3Vp665+/J327flI
Stq9dbfnIympNSmJvOgTqM/LbkKkpEFJSa+lf053Y0rqh62zdbbueqdvXb0W
Kakfp3TRy02xZPS2vnU4DUpKei39c7pUl+pq4KlOT0lcr/VFapk635kX3rnV
DyAlvZb+OV30NOjcCDyYlDS04lMzj9VOoQ8HJSW9lv5pYXUmdGIEnk1KGlfl
dwtdxY5zMzAoKem19E8jvtYOvIeUNKj665QL2XHuBwYlJb2ZLmpH3wJvICUN
J/g3KmpT0vK3RfveCifCVkVbOxeOfmEjVX+05pq1nx5qpKRBSUlvpova0bfA
G0hJYwkjUn1K+mSTTv6tcGKVfaKrixYOl4qmm0zNqbWnqj1OShqUlPRmuqgd
fQu8gZQ0kGhE2pqSWkwUU1LY/k8seoT11DR+VU99z9STkgYlJb2ZLmpK9wLQ
ldFTUmqLUk2tbPyynhbXbilpUFLSm+mimotFqpdWn2jVLwgANxo9Ja2WWk7U
1JyvJx/K9pGSBiUlvZku+gSdkDk/p2ZujVcAcLualLT6PHA1vZyZemtVT75w
9BIc1pNqf7jeVA2pxodrOcXpFXINKenNdNGnFIvmE2n9IvmZAE/id0lDe9h1
qtvNkZI2WSXZykUyVWXqr6znLFLSQHTR56SUVFkzwMNIScN58LWp202Tkuqd
/lAvE6B2LHWQlDQQXfSpS0mpmfPL1IcVZzYU7jO9293d3zUpaThPPaR7HrDd
Nqw3YS8d77dUDfmaG+0vKWkseik/JKN3SpWjWN8yup7vOq6kHzKkpLHUH8at
D/vdlY84Ep1AKmV6KXNAzvOXE6s65zmrMss6V/Ws5qdq2ERKGoteykSe1Vup
+dE5qZkwCgdwSJ+EpKSxbDqGWx/wmyJb05a0JiVVqnnuk7/jCiNMdM4nyEfF
iWidW0lJY9FLqSi0+62a+dAzF/QMnbMiJQ1k66ErJZ3FeaPSKSmpciIVf1IT
qZmbSEljeXkvTYHwrejL1bKZ+ts1Hhpx3ObpnyUpaRQ7jtviJW/5KX3qo/v8
UvlKwhoy1+VVtV3J3yowC3sp3KfR42rHRFhnfiI1cxMpaSx6qSndy3ActDX0
0kxKGsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3L
WByx9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3P11rLMpjnhKlLz
8y0pkpLGopea0r2MxRFbT199SUlDOJiSPun7fCmphpQ0qNNDjZQ0Fr3UlO5l
LNGbk+j1PTo/U+z453K7b/Ma3TgZ3V9SUv92H6s1Yyc6xM5KSQfr6YeUNCgp
6eX0UlO6l4GkDtdMSqqpIX8zk1nvWRrVb3R/SUmdOxKRaj7NmDNL/ccg+Q9P
wgqXL8My0RX1lkp6aw+VpCR0VDv6loFkUtInlmtW5aMzowtGJ9qRkpqSkt4g
87GGgVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ0nwnVtGrBG90dKegcp
6SApaVBSEjqqKd3LKPIp6RNEm9TNUjg/DCDFe4bUU6fo/OVbmcdV9YtUMro/
UtJrRD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7
IyV17JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXzu5kn
QZXNqw9WmZakmrd1keeRkvp0VkRaTqfGdXT47P7wobI9Y5GSBiUloaOa0r2M
opiSKqfzb20tkApBqZI7UtLuQWp0063jB+em4FMz57hxR5yUNCgpCR3VlO5l
FDXfmVk9fJlTxqpM6q1UnZvK5KeXM/OiixzvMbjdKUdmppJi/fkxnhq/YeX5
k0Cx8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP
8UKnHJmrSpa3GTX1T4nUs6xtNb2qP6whrCpfeT8jdPcdGtf4uXd+fH708HfZ
cXLlin6uqo8/Kak7updRDHGsSkm98buk3rQYF6s5p6SkzMxV3tmRkurbeQ0p
qXNSUtMV3R2ODqWkT09nkkfSvQyhhwO15l7iyKPzc+vsocduJyX15paUVFl4
U0o68iwp1aq7SEmdk5KarujucCQldU33MoQbD9QWT4guMFBT25GSunL6pwep
l8UxKyUtSUmdk5KarujucCQldU33MgQpaauBmtqOlNSPFgfktJB6K7NU8WU4
HU5k5tdUfnqf7NBPS4iSkpquKBNblkP81+lP+q0VKWlIwX50kqRrLY7P1O1K
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
tECUlHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEP
tQ5eHKUkOiclHWdwPZ6UtEn4nCg1M/XW6hK8FL67qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o/K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/buTlPRoPzvkH/yD/62HPylpXIbVS0hJ
g5KSCIVdZ4DTwiWfstfa1ObUW9GX9ZVH68zElq/VdP1bUtIRk5T016QkKNp0
laEfUhKhyptAOOjnEfV3/+7/2cPf1mO78pK3I4WFNeSTS3E6/5aUtJuU9CUl
bbLvwxlGZ3cPSkoilOk6I50TjZuS5va3Hg47UlK4SOYtKWk3KelLSpoVTwir
Aq6n72FfD0pKIlTsOn3LKUZPSfNWtBsRW1NStHz+rcy7UlKGlPQlJc3yz4nq
Z/I8dvSgpCRC9V8luqAxPNgzUtK8LS1GxKaUlCqcemv69cdKUtImqZT07czV
y++cKZCpIV9GSupQuH+nX58cpZa6qoHcxi3ToKQkQvVdp5M54kkpad6icwfF
ppS09VnStOWbeAb7Sia/rN5ahaZUsZpFpKSeRVPSfE6Qkt5MSupcZvBe77JN
vmZFz7Op667cpzzMtEhJ8/khzC/h/Jpi0ZNPqoZzj+ETa5ta/i4ps4iUVDRl
M860PRkdSUkMIXUgXXzocr3MAUAPfu6df/bP/oce/i47ThyQu+3oOr3NDlMQ
VaZE/AlnRp8HRV9GJ8LCp2/aKXVOLf+Nu+nXlFRc1/HNeZKp9CRoLjDFIk9q
5mpZz5IGkk9G0XOCm+eXsKM7JyWxyb6gpM/ZJJprpuCJT7FYJjrVR6pGG3iw
5kxymW/DVtP1b/1+8Yuk5UwpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWSB7Ov
Oyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/2VVKYlYz0otJ
ikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4Nimp
c1ISmxzsPScEauxOSbOBUtK8yal1RedPPWncN4OZDv8bd6uZmWKZdUlJ0D+n
0M5NiZQ0X/6iM5fvrkqGC6YqOTcl1S/ugDzilN6zC8ibtqek1CKjpKR5w8M5
0cvozzk/Pj96+DOcV1LJZd6V0W/Zrd5KFVjJRKTbU5LfJUGRlNS5VEoK0004
c5mMMmVSiSlc6uCGnF6S0Fm958xARmXk2ZeSoiGrk5T0SfyOW0oaSDG8XPYn
JUHn3At17khKyuSd4iJNU9J81KXuLo6s6OXO7T37gqhVxvkKM848PywTvpUp
k1rXLSlp7oHQqsDt+UhKipKSvqSkpcxwjr4Mx/t1beVC0dtU+jHtTUlT9qnQ
jrS17zhJ3UssDzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aD
lLQypW9FMm+l5vAMt49T8qbtKWm2OyWtFm/xjbtN5x/qNeo9O4WlSUpK32zP
796ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+UlJL7YKS
XcNX1afkV+mwEz7ZlDQXW03XvyUl3esZXSolrYS7dVqkpPDlqtgzjgpW7r3K
UDQ98XdJH9+4a6lpB9o78CnlxE/pWdLy3dR0/i0p6UbP6FIpaaWYkj6JQJS6
meEBpKTO1aek6Q//7nflzItTUrhdH/96QxutO9BJg87deHwus9LWlBQuknlL
SrrRM7pUSlo5kpKWn5DwJHZr5zIRZiU1MywfrSdfrFFK2voWNa7pQLuJbvVw
cG5NSdHyqbeWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIO
tKfoU/SW5sSLXc3nxptSUqpw/q3KZ0zG6UHhx48pd7d0GylpJZN39r3FA4w4
tF/lkSkpf01xQB50ZQc6gdCP1I3r8ig9PShlVtruWZKUdK9ndKmUtJTJvNE5
0bcGzctk2KGdy1+LL3bZJl+zoqe6vgPtMroyVX/we2QV+VPl1Ph3SZOUdJ9n
dKmUBEVX3v1yot8W+qxwNwfkQbd0oDMJ/bgxJS0LbE1JYerJvFUZkaSkFp7R
pVISFLm3GZSURMqNHWjf0YMwJU2Lr8SctYr80/ZMhJnLr6br33ptSupkWzpp
xkFSEhRJSZ1LfWJ5i8s2+ZoVPdiNfXjloQI1plP/9YbK0+N04N/ursw+9SWP
b3UnOtmWTppxkJQERW5pOtf6UrvponzZJl+zoge7vQ9vbwDMjh+N0TSU//hI
Smoh7P/PHbcxz+hSKQmKpKTOSUns0EMfOrfQid3HYTEHZWrOPZW/3L7N70dq
o5ZbV7+Z1/V7hVZdVkFKgqLbxyl5k5TEdv30YT8t4Z223o6edQf7raCPv+eM
wdW2LF9u2sW3X08vvqoC+0hJnXvh+dwBeVxXfegkQ/9O/2xfSmpBSgKu5Aam
cy88nzsgj+uwDztsEi/X9ItPUlILYUqa50hJwOmkpM7VnM/nC/2Pxf9qcCVV
fjmzk/O5A/K4PvvwjK8w3fNjbZ6kXTIK1nJ7PnpaSlqJnhCKO1dK+vK7JChy
v9G5mvCyij/R1BOdP/36f+Lo5HzugDyu2z48eMLZ99ExNH1slF7j7fnoFSkp
nJnf3Vs/e8y8W3Pp7OGqGiUlQZGU1Ln8GTh8N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyShYdTK2zO36dbr+rfCllPTHmaFVgcoIU//5pJQEjyQl
dW5rSqoPUJNv3D1a591YeeZZ3eRISRSl7o3vaEYuuVRMVxYrBqVnjpTUXo6m
pNVpREr6SElQ4fZLCXktUlLxXSnpAYboxq2NTCUm6CEZLe1KSeEiqbe2pSRm
n10paVp8xjhlv5UhJcGTzOcN+pQ//WbeDd+aPEt6k1G6cdMpaL7JGWXraGp1
99uVb6O2pKRo+dRb8/z8Wp78LCklFY6WBTalpFQyWpKS4JH6vL4w25qSVlEo
fCv1CZiU9DBjdWNla8faKBrpNhktbUxJqcKpt8KQJSX9/zL5aC6wKSUtg1Lq
irkvKElJ0Ln+rzUvVxNealJPND1JSQ82XDfWnIuG2yjOkr/v7dDGlLTvWZKU
FFE8SKSkLykJiga66LxTzbl3vnkI54Rv5cv3cD53QJ5i0G7MNHusm2ROMe5O
356S8mloqlhcSqqyLyVVfg4pJcGTDHoBeo99594Wf1LSWMbtRiell1t+vHN3
W/bblZLq05CUtF/NVXX1yeFyIqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LR
Uja8/HFbf53e8VYxIhlKay+8qkZJSVD0pKvSI6U+ubrFZZt8zYqe7QHd+IBN
IO/ic8uVvpvV7G9T5Q/s3iMmKemvSUlQ9NQr1OP9ttBnhfs4Gk/0gM50gnqe
6z94uYWU1C0p6UtKgqLHX6qeSkqi6DGd+ZgNebM3JKOlM57en+buzujL3Xvj
Fzf2g5QERbePU/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj
7wZUZqhNG3u8EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVz
d2f8UW/t4evg0XL8YKtc0PEDX1ISFLlkdG7qLCWdfiPtCEz5dkwff3fuoP6j
XH0LL3DXth+sJDrdyPW9xPM4iuANbrmwUm8aJyUNcVM3kG/39PFnN+X87J+/
9bf+7x7+rtlTp4/fiw8wxzPHOYrgDdypdq63lDS3St5pTUoaxUtSUtORvqp2
XlFqYi6fOReFy0bXBTs4iuAN3N/eq9j/+ZQ03xV8p5dzlm+tFknVUJ+Slo2X
kvap2fV3hyMpqcqDU9KVAzyVZaKpJ1UsfCtaT5st4EUecBT5XRIUub+9VzFo
ZPLL8q1l0glzULRY+NbWlLTaipb99EA1u74YXlZ1/Dpzx8s7U1LlUVTst+sb
Nj0uJV3ZveGqixOfdCZKvbXcHCcrjnvAUSQlQZH723sFN7rr3TElwks4f0qk
pEwaSk1vTUnsULPra57yxKbDieLMXlJS/v589dY1p69iw6ZHpKRi518jzDLR
dDNVp6R8PbDPA44iKQmKbr8mvlz0Vnm5U6bqlFQToKSkftTs+sMpKVoyX6yX
lBSemqInqwvOYDUNq08x4Zyv8GV0vaenpOgWXWy59uXxn5oovqys8DLRXfke
F/f2NR6wXVISFD34JHaBCy4uU08pict8Tk5JYbGayu9PSXNvfNK3Ja2bV9Ow
3SlpNTM6HU4cTEnhJtwr1Z5Mn3+2fKcuX087XXXyjR7ZDw/YHCkJip537hpL
8fI9tUxJq+xT8yzJAXOWml1fl5L+uHQiJYXv1tScWss9PtmUdHvD6iNSWHgq
haDK+ospadlmWtPPoSf1yQO2RUqCIhfNe4V3XGGBrVEo81YqXqXWkvrGnWPm
uJpdv/FZUuXMaaBnSasCqQVvb9jxlJSp5EhKyh9jtKC3Mx7TOQ/YCikJih5z
yhpUsf8z+SWVfabgaVH9k6bKlFTTcvJqdn3LlLQpKHXxrzdE519wHNY0bNPX
7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUjzHwvlPn1UKZ8WKA+Jc3N
u75PXqJ9SqoPStelpE1lrjl9FddSn5Jm7Z4lOaXfS+fX0Es9kJKgyCW1c/Up
pvVf6jhxCDVSEWH+eFOcmDkFZfIv70xJlabVVnWgJsVEk1H+GdPulHR3f7yX
zq+nr24nJUGRq2rn+k9Jczsv65OXqAgvl/3ZuTlnpaRUINqUkj4G4330fD19
dTspCYqkpM5NPalp6jXd8gbf7uzjz27NmSr+ge6v8GXmrdScYkr6uAW9Sabb
V6fH5Ul165k2rHbTgvuOjWX9pxxdox+io7f/IyVBBXe2g/ptoasKHU5nkZJG
URlhLvhb3Yff2CcvVPM5UurlkR132U4/t/LRj8/R2/+RkqCClDSoblPSx0F1
kvAT5hvd3Rldm7pMSZ9H3MgNpNjbq6GUmj6y3qZ7/NzKRz84R2//R0qCCm6B
OnfxzXDe1pY36hPoyt3j8hfRtt3SLW9T7OfpD9+vC8tHZ0YrD3dotJ5VgXmp
5eLRg2dVW1h5WFW4SOVRN/SROXTjv6QkKHIN7dzPvfOv//VvPfztOE4cXdAD
w/AClSnpE8SlTylcRPNIdNloTM6vPcxfmQJbF8kb+rAcuvFfUhIUuY/t3NAp
ad6Ec/sE2MowbO1gSspXkrlSr+aHL6MF6kNQZcmarci3fCxDN/5LSoIiKalz
D0hJH4cZadFPwpcv8x+VU0/vNVWfkj7Z3ygtC4RPbYrrjRZLhZ1MUqsPR5k6
84Y+IIduPFDJjUfnnpGS5m05pU94mMytWn6arfReO5tS0mfjUb1KLpXVftKJ
JprLogV2PEuqNPTROHTjgUpS0r2K/f+klFSzvbzQjpTk0dJuOq2R4pk88+ym
5kKwLBxWm6pkNX/5Mj8drTwqukhFh419KA7deKCSO417rS4x0QL55PL1nV7O
Wb4VLb+ceVlKWm41fE3bU1LqJTV0Wgtj9WpmTF1W51g9tjJ047/8LgmKpKR7
TbFPBVcFMrFlFX+iqSc6fznz+pT0ceCxsPpcep6ZL/B5xI3KXXTd6cbqUinp
oKEb/yUlQZGb1XtFO3+5U1IRJpyfSknFObekpMzm8zapUVAs4Pg5Qu+dq7f+
LA6Q6CcPp6y0ss7eeuxtpCQoesmdxvSr1PzQBSUzrf1sSUmVmairlJTpBN4j
NQryBYpvUaT3TtRJZ1YOnB503rzHk5Kg6PH3qJ1v4KptYWsfn5Ki/cCrSEk3
0oFn6aQnpSQqSUlQ1HmIOGKITZsfGGWeK52ekvIvb0lJn+37K/Wo7hbtuuXx
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
AKBU/+YbAADAD/cbK4B6rw==
                   "], {{0, 761}, {1122, 0}}, {0, 
                   255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}]}, 
                Dynamic[$CellContext`i58$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->Automatic,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i58$$, \
$CellContext`i58$1096135$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 15, 1}, 15, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{851., {305.6044921875, 310.8955078125}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[311]=",
 CellID->1509656058]
}, Open  ]],

Cell["\<\
We can set the ResultsFormat to \"Movie\" to output a movie version:\
\>", "MathCaption",
 CellID->596901522],

Cell[BoxData[
 RowBox[{"KEGGPathwayVisual", "[", 
  RowBox[{"\"\<path:hsa04662\>\"", ",", 
   RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Movie\>\""}], ",", 
   RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
   RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
  "]"}]], "Input",
 CellLabel->"In[232]:=",
 CellID->1227765117]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Tutorials"
}], "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[ButtonBox["MathIOmica Dynamic Transcriptome",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]], \
"RelatedTutorials",
 CellID->795520170],

Cell[TextData[ButtonBox["MathIOmica Overview",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaOverview"]], "RelatedTutorials",
 CellID->1258435320],

Cell[TextData[ButtonBox["MathIOmica Guide",
 BaseStyle->"Link",
 ButtonData->"paclet:MathIOmica/guide/MathIOmicaGuide"]], "RelatedTutorials",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"MathIOmica: Omics Analysis Tutorial",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:MathIOmica/guide/MathIOmica", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2019, 9, 5, 14, 29, 50.456150}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "MathIOmica`", 
    "keywords" -> {"MathIOmica"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Math I Omica Package Tutorial", "language" -> "en", "paclet" -> 
    "MathIOmica Package", "status" -> "None", "summary" -> 
    "MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.). After a brief discussion of data in MathIOmica, each example \
data (transcriptome, proteome and metabolome) are imported and preprocessed. \
Next a simulation is carried out to obtain datasets for each omics used to \
assess statistical significance cutoffs. The datasets are combined, and \
classified for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered. N.B.1 For a more streamlined/simple example with less discussion \
please check out the tutorial on MathIOmica Dynamic Transcriptome.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$69965, "title" -> 
    "MathIOmica: Omics Analysis Tutorial", "titlemodifier" -> "", 
    "windowtitle" -> "MathIOmica: Omics Analysis Tutorial", "type" -> 
    "Tutorial", "uri" -> "MathIOmica/tutorial/MathIOmicaTutorial", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> ""},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[1427126, 34691, 21355, 357, 70, "Output",ExpressionUUID->"329c8e39-7f75-4f65-8b4c-3b879ad342cd",
   CellTags->"RasterizedOutput",
   CellID->1792329068],
  Cell[1751006, 42796, 372119, 6107, 70, "Output",ExpressionUUID->"410fa533-ca5f-43bf-98f2-fd10f2f6a492",
   CellTags->"RasterizedOutput",
   CellID->866798143],
  Cell[2301098, 53435, 21757, 363, 70, "Output",ExpressionUUID->"ac9970a8-b719-4c0a-857f-110f7bf4ae5b",
   CellTags->"RasterizedOutput",
   CellID->1822657880],
  Cell[2363325, 54491, 22220, 371, 70, "Output",ExpressionUUID->"e8ccca6d-ddb6-47fc-a9f3-71a40d5d4d74",
   CellTags->"RasterizedOutput",
   CellID->855736338],
  Cell[2454344, 56221, 189071, 3106, 70, "Output",ExpressionUUID->"600ed31e-4972-4818-b640-5a0b0852647d",
   CellTags->"RasterizedOutput",
   CellID->1644939596]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 3217100, 68879}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[607, 21, 8932, 185, 70, "AnchorBarGrid",ExpressionUUID->"3f938b3d-bd82-4296-a3b4-33f8340e4a88",
 CellID->1],
Cell[CellGroupData[{
Cell[9564, 210, 72, 1, 70, "Title",ExpressionUUID->"fd896e06-5ae8-464c-86d6-755b77fe5da6",
 CellID->509267359],
Cell[9639, 213, 46995, 822, 70, "TutorialJumpBox",ExpressionUUID->"28c2a5a2-14d4-49f9-b89a-b91dd7f160d8"],
Cell[56637, 1037, 898, 14, 70, "Text",ExpressionUUID->"71c92279-535f-4027-b39e-257cc94ac38f",
 CellID->2044157074],
Cell[57538, 1053, 573, 10, 70, "Text",ExpressionUUID->"559af10d-c8ab-458c-8803-d571be89e6f9",
 CellID->985017158],
Cell[58114, 1065, 333, 9, 70, "Text",ExpressionUUID->"d4aa78d2-7c2a-4f11-9eb1-fd5f64751dbb",
 CellID->429607656],
Cell[58450, 1076, 665, 19, 70, "Text",ExpressionUUID->"9c098676-74de-43d9-9cc2-6bfdecc71c8a",
 CellID->54176507],
Cell[CellGroupData[{
Cell[59140, 1099, 70, 1, 70, "Section",ExpressionUUID->"b5a58a18-b15b-4e05-b461-fb0816007e56",
 CellID->2133290847],
Cell[59213, 1102, 339, 10, 70, "Text",ExpressionUUID->"95baf246-532b-48a6-803f-3e10f6941632",
 CellID->1534169418],
Cell[59555, 1114, 67, 1, 70, "MathCaption",ExpressionUUID->"7cbd7f8a-014c-4ce5-aa57-c9dd81cf8a54",
 CellID->1217948648],
Cell[59625, 1117, 98, 3, 70, "Input",ExpressionUUID->"9e80573f-7000-420b-8077-7cae1ecf64d9",
 CellID->262742254],
Cell[59726, 1122, 75, 1, 70, "MathCaption",ExpressionUUID->"7240c7c4-dbf6-46da-900e-989972eb9b02",
 CellID->1869508656],
Cell[59804, 1125, 119, 3, 70, "Input",ExpressionUUID->"4e12c8dd-8fb4-47c0-bd4f-027dd2dcb5fe",
 CellID->998742135]
}, Open  ]],
Cell[CellGroupData[{
Cell[59960, 1133, 57, 1, 70, "Section",ExpressionUUID->"e484d2c4-b5ad-4ccc-b615-cd9d95efb4a4",
 CellID->671613477],
Cell[60020, 1136, 540, 11, 70, "Text",ExpressionUUID->"c3809a70-dfa2-45d8-a894-63249f9de5a9",
 CellID->1313645745],
Cell[CellGroupData[{
Cell[60585, 1151, 66, 1, 70, "Subsection",ExpressionUUID->"e7d52169-7d4e-4d6d-ba7a-583b60c0b8de",
 CellID->501197291],
Cell[60654, 1154, 521, 13, 70, "Text",ExpressionUUID->"d1d887f5-f306-41a3-b941-2dda035387a2",
 CellID->1179683263],
Cell[CellGroupData[{
Cell[61200, 1171, 66, 1, 70, "Subsubsection",ExpressionUUID->"aad3591b-3a6e-40d4-b1f4-c1a9f2271a70",
 CellID->929984066],
Cell[61269, 1174, 847, 26, 70, "Text",ExpressionUUID->"0df520f2-cb0f-453f-8fdd-07edf69464fa",
 CellID->1165527708],
Cell[62119, 1202, 315, 10, 70, "Text",ExpressionUUID->"d736f251-2d5f-4090-9e36-2045fe7f74a0",
 CellID->1597287192],
Cell[62437, 1214, 168, 6, 70, "MathCaption",ExpressionUUID->"92e27026-66d4-43c1-aec4-a069188aeef5",
 CellID->174991658],
Cell[62608, 1222, 7316, 207, 70, "Text",ExpressionUUID->"c8b24a76-db2e-49aa-8c90-2ab383ff2576",
 CellID->1192006303],
Cell[69927, 1431, 717, 21, 70, "Text",ExpressionUUID->"fa6fd417-378a-4c8d-b99c-2ec0875ef9c0",
 CellID->2001356434],
Cell[70647, 1454, 278, 6, 70, "MathCaption",ExpressionUUID->"4919c37c-8311-4e93-bb92-de2905782999",
 CellID->299944951],
Cell[70928, 1462, 3483, 95, 70, "Input",ExpressionUUID->"4214c8cb-5334-40ae-b100-876f8a5638d0",
 CellID->1030671948],
Cell[74414, 1559, 248, 7, 70, "Text",ExpressionUUID->"1dd06bff-e730-4c75-b80f-02436269e84b",
 CellID->1097212187]
}, Open  ]],
Cell[CellGroupData[{
Cell[74699, 1571, 86, 1, 70, "Subsubsection",ExpressionUUID->"09dae2f2-b52d-4d83-a115-5d2bbf44e356",
 CellID->1010514183],
Cell[74788, 1574, 292, 8, 70, "Text",ExpressionUUID->"46cd7c1d-2ffd-4efe-bc82-09ed7fbf3795",
 CellID->1276400541],
Cell[75083, 1584, 375, 10, 70, "Text",ExpressionUUID->"14a45253-c3f7-4823-8cb3-41092935a3e8",
 CellID->200159297],
Cell[75461, 1596, 465, 14, 70, "Text",ExpressionUUID->"41607283-6c7d-4842-bc07-7d0f35b795aa",
 CellID->471195666],
Cell[75929, 1612, 706, 22, 70, "Text",ExpressionUUID->"7c7651b2-5dd3-4536-b6ea-a71ba6a8b499",
 CellID->1897113300],
Cell[76638, 1636, 5363, 142, 70, "DefinitionBox",ExpressionUUID->"9d228936-5b83-4fba-82d8-b5707d5b3eb1",
 CellID->953451491],
Cell[82004, 1780, 196, 7, 70, "Caption",ExpressionUUID->"d92d1d24-7d44-448f-8096-1de30c78e65b",
 CellID->7357]
}, Open  ]],
Cell[CellGroupData[{
Cell[82237, 1792, 75, 1, 70, "Subsubsection",ExpressionUUID->"8608fb61-cf52-4849-aca4-a34e9be7fd63",
 CellID->1310432575],
Cell[82315, 1795, 548, 17, 70, "Text",ExpressionUUID->"87fca903-33a7-466c-87de-8b5f09d3533b",
 CellID->1202669251],
Cell[82866, 1814, 8591, 253, 70, "DefinitionBox",ExpressionUUID->"11ce2c54-0c65-416d-8b42-dfc66a18d699",
 CellID->438464085],
Cell[91460, 2069, 196, 7, 70, "Caption",ExpressionUUID->"39ee3be4-965e-41d6-97b7-fc75a51bdb68",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91705, 2082, 55, 1, 70, "Subsection",ExpressionUUID->"e8a24dbf-0b56-4089-91b3-2cd1384496da",
 CellID->490101258],
Cell[91763, 2085, 357, 11, 70, "Text",ExpressionUUID->"5dd57886-6332-476b-93c5-28f2498fd7da",
 CellID->249980817],
Cell[92123, 2098, 115, 3, 70, "MathCaption",ExpressionUUID->"b8512b16-9d54-41be-9377-fe3039bcfffe",
 CellID->2139419895],
Cell[92241, 2103, 166, 5, 70, "Input",ExpressionUUID->"fe5d679c-dab7-4b83-9fed-4cab92dd5410",
 CellID->1911473544],
Cell[92410, 2110, 545, 16, 70, "Text",ExpressionUUID->"56bae4b7-557c-4235-bef7-29aac5ff0008",
 CellID->1570546560],
Cell[92958, 2128, 12167, 341, 70, "DefinitionBox",ExpressionUUID->"c269482c-d737-4722-964d-02059e605fc1",
 CellID->1722327182],
Cell[105128, 2471, 583, 19, 70, "Caption",ExpressionUUID->"08137f2d-891b-4ede-8b13-8032fcab7384",
 CellID->231225297],
Cell[105714, 2492, 127, 4, 70, "Text",ExpressionUUID->"3344f209-b3a3-4391-9a07-632f1848fca2",
 CellID->1540904390],
Cell[105844, 2498, 3157, 86, 70, "DefinitionBox",ExpressionUUID->"0dd5fa5e-0827-4651-8261-ffee42ae947b",
 CellID->312091046],
Cell[109004, 2586, 577, 18, 70, "Caption",ExpressionUUID->"0460d64d-2518-4324-aafd-c80691b40626",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109630, 2610, 57, 1, 70, "Section",ExpressionUUID->"593ba1bd-4d94-446b-b2b3-d7d1c0d0451a",
 CellID->540567276],
Cell[109690, 2613, 175, 4, 70, "Text",ExpressionUUID->"8e0e5a1a-4901-47c9-9af3-994a89c93a38",
 CellID->1827655092],
Cell[CellGroupData[{
Cell[109890, 2621, 82, 1, 70, "Subsection",ExpressionUUID->"32ab1178-ffaf-4860-894a-bdd886ef8555",
 CellID->257268298],
Cell[109975, 2624, 961, 31, 70, "Text",ExpressionUUID->"caa4b72f-b1e3-4418-b56d-f7785e2717a2",
 CellID->1539574452],
Cell[110939, 2657, 187, 6, 70, "MathCaption",ExpressionUUID->"1ee85a97-867a-4e7b-9842-43bbe83c2e81",
 CellID->787376419],
Cell[CellGroupData[{
Cell[111151, 2667, 286, 9, 70, "Input",ExpressionUUID->"f9b6538e-fe96-428a-bbd7-4f157f506366",
 CellID->641241319],
Cell[111440, 2678, 11477, 295, 70, "Output",ExpressionUUID->"4edbf44d-1c4c-4470-aca6-d78b4ada01c5",
 CellID->76837286]
}, Open  ]],
Cell[122932, 2976, 266, 7, 70, "MathCaption",ExpressionUUID->"d63e407e-b54e-44b4-8c44-3dba0f46723b",
 CellID->546537213],
Cell[CellGroupData[{
Cell[123223, 2987, 137, 4, 70, "Input",ExpressionUUID->"2f34a6fa-abda-435e-8e60-4b165f11683a",
 CellID->863380672],
Cell[123363, 2993, 396, 8, 70, "Output",ExpressionUUID->"985a5550-ff0b-49fb-b07a-a156f31fee22",
 CellID->1272316944]
}, Open  ]],
Cell[123774, 3004, 241, 5, 70, "Text",ExpressionUUID->"452edd58-9429-4672-85af-53bc1bed4b23",
 CellID->1566749700],
Cell[CellGroupData[{
Cell[124040, 3013, 142, 4, 70, "Input",ExpressionUUID->"5e2f0675-9fe7-4a33-b890-6748e0d64847",
 CellID->908486935],
Cell[124185, 3019, 395, 8, 70, "Output",ExpressionUUID->"09687f0e-9dee-4812-914c-8377d6a72442",
 CellID->535902783]
}, Open  ]],
Cell[124595, 3030, 304, 10, 70, "MathCaption",ExpressionUUID->"772be2b4-a1ad-4afa-9477-249568c6c6ee",
 CellID->392276805],
Cell[CellGroupData[{
Cell[124924, 3044, 225, 8, 70, "Input",ExpressionUUID->"53d81091-6903-43a1-9417-4626f068492a",
 CellID->221465345],
Cell[125152, 3054, 604, 19, 70, "Output",ExpressionUUID->"e2ba221d-e837-40b1-a817-b04aeb4dcfcc",
 CellID->29914394]
}, Open  ]],
Cell[125771, 3076, 775, 19, 70, "Text",ExpressionUUID->"e4ec6cd1-44b2-4cfd-86d0-765ceaa73b0f",
 CellID->464982744],
Cell[126549, 3097, 196, 4, 70, "MathCaption",ExpressionUUID->"bbecf24a-3e3f-405d-a57d-2120911780ab",
 CellID->1833142640],
Cell[CellGroupData[{
Cell[126770, 3105, 267, 9, 70, "Input",ExpressionUUID->"37714b2f-1adb-4c75-836f-5a04eab28757",
 CellID->1827950618],
Cell[127040, 3116, 2682, 80, 70, "Output",ExpressionUUID->"49e3f676-12c5-4340-a1c6-efaa3688727d",
 CellID->679977437]
}, Open  ]],
Cell[129737, 3199, 164, 4, 70, "Text",ExpressionUUID->"974900ea-a534-4461-b124-df23c5849aba",
 CellID->1488223786],
Cell[129904, 3205, 193, 4, 70, "MathCaption",ExpressionUUID->"12ad118b-330d-47b1-a557-2a4342704d1f",
 CellID->1609229737],
Cell[CellGroupData[{
Cell[130122, 3213, 432, 14, 70, "Input",ExpressionUUID->"68e760b1-80f2-43f0-8db2-ae688898fe53",
 CellID->915139441],
Cell[130557, 3229, 9607, 274, 70, "Output",ExpressionUUID->"0d9aa1e1-c975-4199-a60f-03cb310f8d0a",
 CellID->794006111]
}, Open  ]],
Cell[140179, 3506, 69, 1, 70, "MathCaption",ExpressionUUID->"e4f1d870-7d37-48c9-9e85-cc3f79cabe97",
 CellID->1516242184],
Cell[CellGroupData[{
Cell[140273, 3511, 458, 15, 70, "Input",ExpressionUUID->"93dd8f6e-926f-4169-bddb-a4699525c32d",
 CellID->1441431186],
Cell[140734, 3528, 9607, 274, 70, "Output",ExpressionUUID->"a7b8ca6f-64fa-4ceb-94f7-c57aec6cb644",
 CellID->702184882]
}, Open  ]],
Cell[150356, 3805, 247, 5, 70, "MathCaption",ExpressionUUID->"03a70593-e446-431d-85d3-93460f83ebf1",
 CellID->1478232418],
Cell[150606, 3812, 78, 2, 70, "WolframAlphaLong",ExpressionUUID->"f3a76d3b-349e-4cbb-bec0-2c75b94011f8",
 CellID->413937183],
Cell[150687, 3816, 66, 1, 70, "Text",ExpressionUUID->"c276b8ae-cd74-4558-af0f-8b370b6c6c5b",
 CellID->90413432],
Cell[150756, 3819, 196806, 3234, 70, "Text",ExpressionUUID->"9ff0296d-60e4-4718-aa8a-047cc9a41afd",
 CellID->984259520]
}, Open  ]],
Cell[CellGroupData[{
Cell[347599, 7058, 78, 1, 70, "Subsection",ExpressionUUID->"bdad4d3e-c12d-45f1-9776-9f57ef67d06b",
 CellID->964105434],
Cell[347680, 7061, 224, 5, 70, "Text",ExpressionUUID->"f8e9f41b-26a6-4465-9308-730f03f318c8",
 CellID->1926312606],
Cell[CellGroupData[{
Cell[347929, 7070, 82, 1, 70, "Subsubsection",ExpressionUUID->"8a67e098-294f-491f-87b6-c6358f9a6a20",
 CellID->433330108],
Cell[CellGroupData[{
Cell[348036, 7075, 77, 1, 70, "Subsubsubsection",ExpressionUUID->"d35e4632-5b19-4fb7-808e-978c8a6d804d",
 CellID->62840614],
Cell[348116, 7078, 257, 5, 70, "Text",ExpressionUUID->"937ab086-55dd-4e0c-b130-3f43565f5a56",
 CellID->1020016945],
Cell[348376, 7085, 118, 3, 70, "MathCaption",ExpressionUUID->"9412bfeb-d6dd-44d9-9235-4c6e75a8520b",
 CellID->381670302],
Cell[348497, 7090, 1108, 22, 70, "Input",ExpressionUUID->"3ab5809c-ed55-4be9-90fb-37af185af828",
 CellID->199112125],
Cell[349608, 7114, 184, 7, 70, "MathCaption",ExpressionUUID->"fa958c28-e9a1-4bf4-b416-e5b1dec2bf90",
 CellID->1332666250],
Cell[CellGroupData[{
Cell[349817, 7125, 185, 5, 70, "Input",ExpressionUUID->"834c7d93-d036-4eaf-89b4-8ba37bae514a",
 CellID->2014709187],
Cell[350005, 7132, 11415, 294, 70, "Output",ExpressionUUID->"607ac3cc-b565-43ee-a964-881995ce84ab",
 CellID->2120249074]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361469, 7432, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"e232d6b6-fc61-4ed4-b397-d1ecf0ef28aa",
 CellID->1747728821],
Cell[361543, 7435, 416, 13, 70, "DefinitionBox",ExpressionUUID->"a6b84b47-78e9-46f6-aaac-43b2b5b334fe",
 CellID->818482745],
Cell[361962, 7450, 471, 14, 70, "Caption",ExpressionUUID->"389b88eb-a4ab-4ee8-bd7c-ce781ee62162",
 CellID->1606736180],
Cell[362436, 7466, 373, 10, 70, "MathCaption",ExpressionUUID->"1a613326-336e-4aac-bc1f-d90219ae9c50",
 CellID->1093504481],
Cell[CellGroupData[{
Cell[362834, 7480, 298, 7, 70, "Input",ExpressionUUID->"d564d49d-9d45-4df3-8bd6-bb9b1a58b60b",
 CellID->364761141],
Cell[363135, 7489, 11111, 287, 70, "Output",ExpressionUUID->"b2c29c73-0a85-41c2-bb7a-c496b790cf99",
 CellID->2073287215]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[374295, 7782, 75, 1, 70, "Subsubsubsection",ExpressionUUID->"7626e4c4-682b-4917-8c36-685deb36bdd8",
 CellID->1673762423],
Cell[374373, 7785, 296, 8, 70, "Text",ExpressionUUID->"a5703eee-a92d-4a5e-a9f3-26501f65dbd5",
 CellID->529597330],
Cell[374672, 7795, 654, 20, 70, "DefinitionBox",ExpressionUUID->"8e74fde2-4ae1-4f59-86fc-7d24567c6961",
 CellID->1118958870],
Cell[375329, 7817, 254, 8, 70, "Caption",ExpressionUUID->"50729c60-9538-4319-abd8-3952dd6cc73a",
 CellID->827431311],
Cell[375586, 7827, 1220, 33, 70, "DefinitionBox3Col",ExpressionUUID->"9134e127-c60e-4a5e-9522-7bfdc28e5a13",
 CellID->29072],
Cell[376809, 7862, 243, 9, 70, "Caption",ExpressionUUID->"c43ca08d-9225-4a45-9d65-d2f97afe2d8e",
 CellID->956870455],
Cell[377055, 7873, 360, 13, 70, "MathCaption",ExpressionUUID->"c168ac5e-d89d-4fef-90f5-99ce316016ba",
 CellID->1372190648],
Cell[CellGroupData[{
Cell[377440, 7890, 183, 5, 70, "Input",ExpressionUUID->"e2f12889-2542-46e4-84cc-894666844b35",
 CellID->581335803],
Cell[377626, 7897, 11278, 290, 70, "Output",ExpressionUUID->"0fbb28d0-dda5-4cf6-9e78-266f2e74120a",
 CellID->1591346998]
}, Open  ]],
Cell[388919, 8190, 289, 9, 70, "MathCaption",ExpressionUUID->"5afb9496-6d36-494f-aaca-e9a758ce9cd0",
 CellID->351193473],
Cell[CellGroupData[{
Cell[389233, 8203, 244, 6, 70, "Input",ExpressionUUID->"231ebdb3-d1bb-43b8-802b-4b65770c363b",
 CellID->1223638755],
Cell[389480, 8211, 11278, 290, 70, "Output",ExpressionUUID->"a0bda134-2404-4165-bbc7-d0710bc73cdf",
 CellID->1007655648]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[400807, 8507, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"fcbe7564-743a-498c-b0e5-9666993a23ca",
 CellID->1524282659],
Cell[400870, 8510, 480, 14, 70, "Text",ExpressionUUID->"930e3141-094c-4330-ac5d-c2ad5a5f162c",
 CellID->222118196],
Cell[401353, 8526, 620, 18, 70, "DefinitionBox",ExpressionUUID->"35381932-d699-4ffb-b831-ac6d923a89b6",
 CellID->1425592616],
Cell[401976, 8546, 444, 13, 70, "Caption",ExpressionUUID->"ad7efc7f-5ce4-4f32-97e1-875e47c8f2fc",
 CellID->460047533],
Cell[402423, 8561, 857, 24, 70, "DefinitionBox3Col",ExpressionUUID->"e71421a5-ccac-4223-8d4c-7efbb32495a6",
 CellID->2081738160],
Cell[403283, 8587, 247, 9, 70, "Caption",ExpressionUUID->"9f1f783b-1f49-4da5-8cec-679f08caac91",
 CellID->969678196],
Cell[403533, 8598, 139, 4, 70, "Text",ExpressionUUID->"aa897545-5f49-4cc6-a896-4006e0772bb3",
 CellID->2046575969],
Cell[403675, 8604, 175, 4, 70, "MathCaption",ExpressionUUID->"eec1fe1b-15d9-4cae-85fc-c89d179b0875",
 CellID->132360816],
Cell[CellGroupData[{
Cell[403875, 8612, 274, 8, 70, "Input",ExpressionUUID->"3fc442d4-a863-49f9-b6f5-2f2b66f88bae",
 CellID->1942659867],
Cell[CellGroupData[{
Cell[404174, 8624, 2522, 70, 70, "Print",ExpressionUUID->"e4b2a1c9-2c99-4832-9044-e5d3ec71917f",
 CellID->1221241714],
Cell[406699, 8696, 322, 9, 70, "Print",ExpressionUUID->"fa828264-e282-4f5d-a2d9-2cd606070314",
 CellID->1908272819],
Cell[407024, 8707, 20209, 421, 70, "Print",ExpressionUUID->"f33312f3-1f76-48b6-98d3-ec920f89c2ea",
 CellID->1820484635]
}, Open  ]],
Cell[427248, 9131, 11278, 290, 70, "Output",ExpressionUUID->"073e1d9f-acf0-4d0f-be26-f9f73bbf1fb2",
 CellID->1685741636]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[438587, 9428, 77, 1, 70, "Subsubsection",ExpressionUUID->"1f481f74-3653-4413-a729-115a9a4dd715",
 CellID->267016150],
Cell[438667, 9431, 751, 21, 70, "Text",ExpressionUUID->"f9f17a7a-e8fd-4907-9ad2-3da752e7516b",
 CellID->94668970],
Cell[439421, 9454, 664, 19, 70, "DefinitionBox",ExpressionUUID->"f48b5169-3362-4625-8e39-4f3ec01e7f66",
 CellID->1824801338],
Cell[440088, 9475, 293, 9, 70, "MathCaption",ExpressionUUID->"e96866a6-e55d-4632-a0d0-6c04e9d658b1",
 CellID->2019621014],
Cell[CellGroupData[{
Cell[440406, 9488, 150, 4, 70, "Input",ExpressionUUID->"39082734-dae2-4a22-bcdb-4289d3175db5",
 CellID->643857816],
Cell[440559, 9494, 287, 7, 70, "Output",ExpressionUUID->"e64ec2cc-29b2-4098-900c-5d05c4a9dc03",
 CellID->15810684]
}, Open  ]],
Cell[440861, 9504, 142, 4, 70, "MathCaption",ExpressionUUID->"e845e0b3-9359-4d5b-8e36-825923997c7c",
 CellID->148216279],
Cell[CellGroupData[{
Cell[441028, 9512, 159, 4, 70, "Input",ExpressionUUID->"cd07b1bb-d91b-41bc-ba78-80d3eba5c3e4",
 CellID->2137454280],
Cell[441190, 9518, 12668, 311, 70, "Output",ExpressionUUID->"c400e1c7-6b9f-44dc-8399-0e49961db4d3",
 CellID->344747750]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[453907, 9835, 120, 3, 70, "Subsubsection",ExpressionUUID->"b325848c-c3be-44ad-8f93-1df3377c3a62",
 CellID->1837977213],
Cell[454030, 9840, 144, 4, 70, "Text",ExpressionUUID->"f6e9775e-f060-4165-9cda-3f94c0b14d02",
 CellID->1135789927],
Cell[454177, 9846, 617, 19, 70, "DefinitionBox",ExpressionUUID->"074ec1ec-abf2-4b97-aa76-50ee6e814fea",
 CellID->1719166110],
Cell[454797, 9867, 90, 1, 70, "Caption",ExpressionUUID->"0a81231a-3d6e-4f80-acc2-14cc3581dad9",
 CellID->1779824032],
Cell[454890, 9870, 280, 9, 70, "MathCaption",ExpressionUUID->"921eae76-98fe-40e8-9cd4-ae5de354423c",
 CellID->1087636944],
Cell[CellGroupData[{
Cell[455195, 9883, 186, 5, 70, "Input",ExpressionUUID->"3cbf8386-6269-4744-a5f3-b12003f7acd8",
 CellID->533314544],
Cell[455384, 9890, 12636, 310, 70, "Output",ExpressionUUID->"3125bdbf-f118-4207-bbdd-724a0923b9ce",
 CellID->1534941352]
}, Open  ]],
Cell[468035, 10203, 386, 11, 70, "Text",ExpressionUUID->"07a7bd13-05b5-4a74-8e01-03952038b66d",
 CellID->440466924],
Cell[468424, 10216, 631, 18, 70, "DefinitionBox",ExpressionUUID->"b0405e85-7886-40f2-9be4-1ad348064277",
 CellID->1719094828],
Cell[469058, 10236, 121, 3, 70, "Caption",ExpressionUUID->"ec376ca0-5349-4178-a3dc-43bbd56e82f7",
 CellID->581787458],
Cell[469182, 10241, 3623, 100, 70, "DefinitionBox3Col",ExpressionUUID->"d7206c98-9e05-4b43-83b9-137c4fa7517d",
 CellID->1460313503],
Cell[472808, 10343, 269, 10, 70, "Caption",ExpressionUUID->"0a447cb1-cd61-42a7-bbe0-53d8863a9da3",
 CellID->2045927005],
Cell[473080, 10355, 171, 4, 70, "MathCaption",ExpressionUUID->"94e8b20c-3b21-41dd-b27e-1318653f8289",
 CellID->1398268181],
Cell[CellGroupData[{
Cell[473276, 10363, 235, 6, 70, "Input",ExpressionUUID->"e96005b9-e20c-4c62-b418-d5d2b28a32a5",
 CellID->779768946],
Cell[473514, 10371, 12823, 314, 70, "Output",ExpressionUUID->"c6ae1abb-a177-46e9-89b0-857aeed11f48",
 CellID->1779061158]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[486386, 10691, 106, 2, 70, "Subsubsection",ExpressionUUID->"7e7783d4-ef39-4089-a078-1406c33a5173",
 CellID->384896847],
Cell[486495, 10695, 284, 9, 70, "MathCaption",ExpressionUUID->"18dd6b76-7b3f-4500-a9a5-961a5cd70f2b",
 CellID->1747726374],
Cell[CellGroupData[{
Cell[486804, 10708, 191, 5, 70, "Input",ExpressionUUID->"f93b2215-1221-4717-92d4-19c9e673d557",
 CellID->755844152],
Cell[486998, 10715, 12848, 314, 70, "Output",ExpressionUUID->"4ac8ff3f-4867-4d13-84ee-97c676dff515",
 CellID->1063560421]
}, Open  ]],
Cell[499861, 11032, 342, 9, 70, "DefinitionBox",ExpressionUUID->"64bd439f-09fe-4188-ac9b-d8697b77bd3b",
 CellID->1164836919],
Cell[500206, 11043, 64, 1, 70, "Caption",ExpressionUUID->"0b2fd6b0-1b08-436b-af70-915f010e0721",
 CellID->953171581],
Cell[500273, 11046, 349, 11, 70, "MathCaption",ExpressionUUID->"1d05b8c9-bac6-448f-afc9-b6763aa383a1",
 CellID->1883423327],
Cell[CellGroupData[{
Cell[500647, 11061, 172, 4, 70, "Input",ExpressionUUID->"c16657cf-5f96-4292-a498-627bb118e6b6",
 CellID->786900109],
Cell[500822, 11067, 258, 4, 70, "Print",ExpressionUUID->"0760c04a-a177-4f04-9419-19b33f85c5fb",
 CellID->1253250375],
Cell[501083, 11073, 9425, 242, 70, "Output",ExpressionUUID->"f9515e00-fc89-430d-8ffb-e1e10048f8ae",
 CellID->859442849]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[510569, 11322, 72, 1, 70, "Subsection",ExpressionUUID->"f981ee41-fb10-496e-8fda-92f92c367a0b",
 CellID->1956292219],
Cell[510644, 11325, 533, 9, 70, "Text",ExpressionUUID->"28ea93b3-46ac-4b56-98a1-94f20d8d0f56",
 CellID->673780035],
Cell[CellGroupData[{
Cell[511202, 11338, 78, 1, 70, "Subsubsection",ExpressionUUID->"33a6128d-b28e-4288-a2a8-9d477f63255b",
 CellID->576856357],
Cell[511283, 11341, 253, 9, 70, "Text",ExpressionUUID->"7140d995-e739-446a-b16f-c9393eba7aab",
 CellID->1399228810],
Cell[511539, 11352, 592, 16, 70, "DefinitionBox",ExpressionUUID->"82ab5a88-f587-4ffb-bec1-1c963ef46e0c",
 CellID->1661281776],
Cell[512134, 11370, 166, 4, 70, "Caption",ExpressionUUID->"a0d2f0cb-ea8c-4ec4-ac94-eb1ea0da19c6",
 CellID->2000128109],
Cell[512303, 11376, 74, 1, 70, "Text",ExpressionUUID->"247b6f59-bfa2-4447-b307-dde0ead2b22b",
 CellID->809854710],
Cell[CellGroupData[{
Cell[512402, 11381, 191, 5, 70, "Input",ExpressionUUID->"e5bd6e67-cc2b-417c-afe4-8b4c92674688",
 CellID->2018927283],
Cell[512596, 11388, 11572, 295, 70, "Output",ExpressionUUID->"aaa33903-b825-46e6-96ca-201134c672b3",
 CellID->1775673247]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[524217, 11689, 127, 3, 70, "Subsubsection",ExpressionUUID->"fd330d2c-760f-4a38-b318-4badbe642a72",
 CellID->1483609541],
Cell[524347, 11694, 325, 10, 70, "MathCaption",ExpressionUUID->"f154dd43-1b31-4422-92c7-ea32f55a7a90",
 CellID->214676973],
Cell[524675, 11706, 329, 9, 70, "Input",ExpressionUUID->"4fac5b11-c817-4da6-8a5a-79d681b0c4a1",
 CellID->303358251],
Cell[525007, 11717, 353, 13, 70, "MathCaption",ExpressionUUID->"06dfa045-d3c3-43e7-a52c-c30cba99b901",
 CellID->375344567],
Cell[525363, 11732, 224, 7, 70, "Input",ExpressionUUID->"5a138080-0e0d-463c-bae8-951a6c95f8d2",
 CellID->1256666330],
Cell[525590, 11741, 290, 9, 70, "MathCaption",ExpressionUUID->"f1ed3889-7f0f-4ce6-be58-70a235c91574",
 CellID->1035495647],
Cell[525883, 11752, 285, 8, 70, "Input",ExpressionUUID->"bf6864cd-00b7-4e1a-9d00-0138c70615d0",
 CellID->367863841],
Cell[526171, 11762, 173, 4, 70, "MathCaption",ExpressionUUID->"185af9df-5302-480e-8b47-336e909cc124",
 CellID->61312748],
Cell[CellGroupData[{
Cell[526369, 11770, 292, 8, 70, "Input",ExpressionUUID->"60e6bcf1-16b9-43aa-bd6d-1dbd6f283cdf",
 CellID->1838688723],
Cell[CellGroupData[{
Cell[526686, 11782, 2526, 70, 70, "Print",ExpressionUUID->"700d5c71-78dc-4ea9-b3ac-2e22771ab4b9",
 CellID->793810163],
Cell[529215, 11854, 323, 9, 70, "Print",ExpressionUUID->"004390ff-b323-48d9-b32b-31bcf1c8190b",
 CellID->1398994377],
Cell[529541, 11865, 20224, 421, 70, "Print",ExpressionUUID->"ed21c8fa-8afb-438b-a1ba-78c533ec3857",
 CellID->100043236]
}, Open  ]],
Cell[549780, 12289, 11071, 283, 70, "Output",ExpressionUUID->"24a0e00c-9e3f-4d96-8140-f1be11a3530f",
 CellID->1866962899]
}, Open  ]],
Cell[560866, 12575, 159, 4, 70, "MathCaption",ExpressionUUID->"de802840-60d8-40cb-8345-2832fcb604c2",
 CellID->274183705],
Cell[CellGroupData[{
Cell[561050, 12583, 177, 4, 70, "Input",ExpressionUUID->"a3680ecc-d220-4c07-90a6-1d9eca44bc4d",
 CellID->1853107120],
Cell[561230, 12589, 9519, 244, 70, "Output",ExpressionUUID->"e7bf5d6a-50b4-45f6-a9d6-4c8b32675aca",
 CellID->1161877176]
}, Open  ]],
Cell[570764, 12836, 271, 9, 70, "MathCaption",ExpressionUUID->"5dffaf0e-f616-4fc5-a50c-d9d05a7dc7a5",
 CellID->373642571],
Cell[CellGroupData[{
Cell[571060, 12849, 204, 5, 70, "Input",ExpressionUUID->"694de805-02bf-4141-9b95-507b0a53044c",
 CellID->568506969],
Cell[571267, 12856, 9551, 244, 70, "Output",ExpressionUUID->"e3903095-c193-43b9-8417-4b8dfedc3605",
 CellID->600894861]
}, Open  ]],
Cell[580833, 13103, 170, 4, 70, "MathCaption",ExpressionUUID->"84fd75ff-06d0-429c-b0c1-da04798fdbfc",
 CellID->369078912],
Cell[CellGroupData[{
Cell[581028, 13111, 254, 6, 70, "Input",ExpressionUUID->"76f48ae2-e48f-4438-a9e9-3c0e9eb6d460",
 CellID->1176501448],
Cell[581285, 13119, 9552, 244, 70, "Output",ExpressionUUID->"a6fec54e-f563-49b9-9d79-3651f6798867",
 CellID->1771820633]
}, Open  ]],
Cell[590852, 13366, 284, 9, 70, "MathCaption",ExpressionUUID->"b60a09db-177c-4aab-9741-00bc3a9b12b5",
 CellID->1458062219],
Cell[CellGroupData[{
Cell[591161, 13379, 209, 5, 70, "Input",ExpressionUUID->"4b93610f-be76-484c-95b0-98fd30abcc79",
 CellID->715818816],
Cell[591373, 13386, 9572, 245, 70, "Output",ExpressionUUID->"a0e7b38b-d419-429e-94e6-e115cdad8008",
 CellID->1492281749]
}, Open  ]],
Cell[600960, 13634, 348, 11, 70, "MathCaption",ExpressionUUID->"fd03da90-7551-4db4-ab56-3d8101b1517d",
 CellID->841142010],
Cell[CellGroupData[{
Cell[601333, 13649, 195, 6, 70, "Input",ExpressionUUID->"9e419014-2c0f-4c45-90b1-e4adf9811050",
 CellID->188913869],
Cell[601531, 13657, 258, 4, 70, "Print",ExpressionUUID->"ee1608bc-bc10-4abe-8add-0d10034d15ad",
 CellID->1269750011],
Cell[601792, 13663, 9572, 245, 70, "Output",ExpressionUUID->"a1616953-9816-4008-a4b4-93d90e40b1dc",
 CellID->1143434638]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[611425, 13915, 85, 1, 70, "Subsection",ExpressionUUID->"4c0de7e9-899a-4837-809c-6f5d187d60ec",
 CellID->834625544],
Cell[611513, 13918, 397, 11, 70, "Text",ExpressionUUID->"c4fecd0b-8ef6-4617-ab65-361b0c367162",
 CellID->1375671789],
Cell[611913, 13931, 3715, 103, 70, "DefinitionBox",ExpressionUUID->"d49825ab-2811-48ac-8a55-3e24797f3bfc",
 CellID->628162865],
Cell[615631, 14036, 99, 1, 70, "Caption",ExpressionUUID->"70795b72-bd81-4956-8809-86379ef0a717",
 CellID->503663403],
Cell[615733, 14039, 7597, 186, 70, "DefinitionBox3Col",ExpressionUUID->"5bea2a11-cc5e-40f9-bf59-db58bc89194b",
 CellID->495990132],
Cell[623333, 14227, 275, 10, 70, "Caption",ExpressionUUID->"c6a8d1c0-1101-4b3e-8d85-612d6a132d65",
 CellID->1722114517],
Cell[623611, 14239, 1070, 19, 70, "Text",ExpressionUUID->"ece1ea86-c96e-4892-a150-15ec8f201716",
 CellID->1268036459],
Cell[624684, 14260, 3758, 76, 70, "DefinitionBox",ExpressionUUID->"f0fcd6be-565c-4434-81be-cc204ba1a2fe",
 CellID->1644998689],
Cell[628445, 14338, 274, 10, 70, "Caption",ExpressionUUID->"5675270e-7bbb-46c0-9603-9146628f5605",
 CellID->788494545],
Cell[628722, 14350, 376, 10, 70, "Text",ExpressionUUID->"4cdaaa0d-0719-429b-8146-fd14a124f17d",
 CellID->1104163398],
Cell[629101, 14362, 1015, 26, 70, "DefinitionBox",ExpressionUUID->"ec1fed3e-0661-4379-9450-ba034ba05f22",
 CellID->219567939],
Cell[630119, 14390, 174, 4, 70, "Caption",ExpressionUUID->"5c871d77-6fb0-47a4-a08e-e561b3e8b611",
 CellID->908945433],
Cell[630296, 14396, 1700, 41, 70, "DefinitionBox3Col",ExpressionUUID->"a72c086c-b6c3-4460-a242-e4ccdfbeb667",
 CellID->1624929440],
Cell[631999, 14439, 255, 9, 70, "Caption",ExpressionUUID->"70e3d039-1cd8-4d85-87e9-a644a86ebd8d",
 CellID->639559181],
Cell[632257, 14450, 404, 11, 70, "Text",ExpressionUUID->"6c137743-9a20-4f8a-8470-bf74d6bdebe7",
 CellID->67687095],
Cell[632664, 14463, 3791, 93, 70, "DefinitionBox",ExpressionUUID->"5cb4bc63-3bb3-423d-8828-9697e96435b5",
 CellID->131328315],
Cell[636458, 14558, 347, 12, 70, "Caption",ExpressionUUID->"db7201aa-fb03-461e-ae3c-bf10c29d7150",
 CellID->751094438],
Cell[636808, 14572, 993, 30, 70, "Text",ExpressionUUID->"fdf2aba4-c056-426d-ae10-18e7ee9a46e9",
 CellID->1062814029],
Cell[637804, 14604, 4220, 125, 70, "Text",ExpressionUUID->"4afaa893-7693-4f10-82ef-cc5c961ee317",
 CellID->2093893304],
Cell[642027, 14731, 203, 5, 70, "MathCaption",ExpressionUUID->"1ccbe3fe-85e3-4ca6-91a5-ab5a50a448b8",
 CellID->1669899255],
Cell[CellGroupData[{
Cell[642255, 14740, 202, 6, 70, "Input",ExpressionUUID->"b4d34e49-cc5b-4ba1-a1de-acd1aca4a6e7",
 CellID->532996142],
Cell[642460, 14748, 66, 1, 70, "Output",ExpressionUUID->"e8e8642b-d940-4061-a967-4e57f96032b1",
 CellID->177650624]
}, Open  ]],
Cell[642541, 14752, 145, 4, 70, "MathCaption",ExpressionUUID->"d11c9d67-cb2a-4730-8da8-68418d09256b",
 CellID->365627628],
Cell[CellGroupData[{
Cell[642711, 14760, 272, 7, 70, "Input",ExpressionUUID->"aea3b486-2bf6-4549-a848-786693588449",
 CellID->186560353],
Cell[642986, 14769, 434, 13, 70, "Output",ExpressionUUID->"baae031c-2287-4c68-a301-a0de21d9ec63",
 CellID->811386742]
}, Open  ]],
Cell[643435, 14785, 130, 3, 70, "MathCaption",ExpressionUUID->"de8b9a9e-e077-43b1-b3c8-981352e75fdd",
 CellID->1987903082],
Cell[CellGroupData[{
Cell[643590, 14792, 339, 7, 70, "Input",ExpressionUUID->"4bf70628-c94b-4995-80c8-11dd3ca287ef",
 CellID->136519148],
Cell[643932, 14801, 136, 2, 70, "Print",ExpressionUUID->"8f5f8ddb-1d5f-4255-92cc-897690ac4923",
 CellID->1026543908],
Cell[644071, 14805, 10021, 257, 70, "Output",ExpressionUUID->"adf9e89e-1c11-447e-bebc-43c842a5990b",
 CellID->755245404]
}, Open  ]],
Cell[654107, 15065, 657, 18, 70, "Text",ExpressionUUID->"8808b095-feab-4268-ac0f-118afffd9e92",
 CellID->673783308],
Cell[654767, 15085, 4219, 125, 70, "Text",ExpressionUUID->"39cfb40c-47c8-44dd-b3e1-ebde0095bad3",
 CellID->594786925],
Cell[658989, 15212, 99, 1, 70, "MathCaption",ExpressionUUID->"20277d18-4f5b-4952-b0d4-20f967c25e85",
 CellID->1134620377],
Cell[CellGroupData[{
Cell[659113, 15217, 119, 3, 70, "Input",ExpressionUUID->"a9244652-20e2-4a01-b2a6-c50d9b1c135e",
 CellID->2057374526],
Cell[659235, 15222, 289, 6, 70, "Output",ExpressionUUID->"50e0e180-8e83-4232-9f94-21e36ad940c8",
 CellID->568030100]
}, Open  ]],
Cell[659539, 15231, 91, 1, 70, "MathCaption",ExpressionUUID->"a2ff9f98-25f0-493c-9fd4-835c9b56cea6",
 CellID->172558847],
Cell[CellGroupData[{
Cell[659655, 15236, 176, 6, 70, "Input",ExpressionUUID->"50934da8-7444-4950-81a6-31e708c9422d",
 CellID->1093618079],
Cell[659834, 15244, 603, 14, 70, "Output",ExpressionUUID->"7aee276e-8a28-43fa-9155-c9becf2cd353",
 CellID->1781151258]
}, Open  ]],
Cell[660452, 15261, 103, 2, 70, "MathCaption",ExpressionUUID->"069a1471-19c0-4f24-90fe-a7d8946a0b30",
 CellID->47471690],
Cell[CellGroupData[{
Cell[660580, 15267, 182, 6, 70, "Input",ExpressionUUID->"42f33eb5-78c1-4e02-8105-0131171cd1e6",
 CellID->1140260793],
Cell[660765, 15275, 9551, 236, 70, "Output",ExpressionUUID->"fe0cadd0-35d4-404a-a55f-fb6e7d31123f",
 CellID->384783444]
}, Open  ]],
Cell[670331, 15514, 343, 10, 70, "Text",ExpressionUUID->"71dc4148-f465-4ff1-b320-4e4e3da8f8de",
 CellID->1070903617],
Cell[670677, 15526, 3042, 83, 70, "DefinitionBox",ExpressionUUID->"dc71e744-c947-412b-9a6c-7ed54dc8c33c",
 CellID->1990717933],
Cell[673722, 15611, 123, 3, 70, "Caption",ExpressionUUID->"9fa3b245-533e-449d-9392-b17efe076fb2",
 CellID->201079671],
Cell[673848, 15616, 2024, 50, 70, "DefinitionBox3Col",ExpressionUUID->"3b4f3932-4a99-4179-a40a-0633ea7d1509",
 CellID->3905959],
Cell[675875, 15668, 244, 9, 70, "Caption",ExpressionUUID->"d870aed6-c7c2-4309-bcc5-be0f8134bdc9",
 CellID->1222943503],
Cell[676122, 15679, 566, 17, 70, "MathCaption",ExpressionUUID->"38ba5485-ad58-45be-92c3-f96963e80892",
 CellID->661398041],
Cell[CellGroupData[{
Cell[676713, 15700, 272, 7, 70, "Input",ExpressionUUID->"f5d8791c-1336-4d41-b02a-10d2c9c8f096",
 CellID->741518215],
Cell[676988, 15709, 616, 12, 70, "Output",ExpressionUUID->"71e6cc1a-e91a-474c-b81f-9cf60b8936dd",
 CellID->1561171098]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[677665, 15728, 54, 1, 70, "Section",ExpressionUUID->"3cc62825-8722-45e8-8246-a60f8dde67a2",
 CellID->1387790784],
Cell[CellGroupData[{
Cell[677744, 15733, 78, 1, 70, "Subsection",ExpressionUUID->"eb755c64-76ff-4f7e-ac76-4832397205c8",
 CellID->1225055698],
Cell[677825, 15736, 952, 31, 70, "Text",ExpressionUUID->"74d9d24b-a1c8-4b4d-a2fd-742aa293c1c0",
 CellID->72301240],
Cell[678780, 15769, 100, 1, 70, "MathCaption",ExpressionUUID->"3d3b2f32-9ce7-4eb5-815d-14b9cbd5dc0d",
 CellID->1419719176],
Cell[CellGroupData[{
Cell[678905, 15774, 295, 9, 70, "Input",ExpressionUUID->"82a0ec6e-ec7d-411b-915e-68e64021f759",
 CellID->458823941],
Cell[679203, 15785, 11059, 285, 70, "Output",ExpressionUUID->"439a17e6-8732-4990-b523-c5a6f597b35a",
 CellID->647445040]
}, Open  ]],
Cell[690277, 16073, 267, 7, 70, "MathCaption",ExpressionUUID->"a9e8ee10-04b1-466b-91b2-087a6d3b9e10",
 CellID->1754470356],
Cell[CellGroupData[{
Cell[690569, 16084, 142, 4, 70, "Input",ExpressionUUID->"e0b46a79-45c5-4861-8ff2-4aa8b1e3ed06",
 CellID->285316335],
Cell[690714, 16090, 355, 7, 70, "Output",ExpressionUUID->"4f9d8fe0-64eb-45cf-ace1-963abd715a08",
 CellID->309147931]
}, Open  ]],
Cell[691084, 16100, 263, 5, 70, "Text",ExpressionUUID->"32c106e2-fd8a-40be-b3f4-22e0b36e0339",
 CellID->460190071],
Cell[691350, 16107, 306, 10, 70, "MathCaption",ExpressionUUID->"f4460dc3-29d1-46b5-812f-073163c4b4dd",
 CellID->1259531385],
Cell[CellGroupData[{
Cell[691681, 16121, 229, 8, 70, "Input",ExpressionUUID->"e6e1b068-993d-46c1-bae3-a83449fae224",
 CellID->1197679216],
Cell[691913, 16131, 511, 15, 70, "Output",ExpressionUUID->"81aaf481-9802-4093-af4f-e40e07492f75",
 CellID->1086334224]
}, Open  ]],
Cell[692439, 16149, 815, 24, 70, "Text",ExpressionUUID->"edbd6c7e-7615-4d9a-b6c1-245f7530a2bf",
 CellID->1823731250],
Cell[693257, 16175, 453, 8, 70, "Text",ExpressionUUID->"92d5a806-bbc2-4786-b659-fab3296ce1b0",
 CellID->220886326],
Cell[CellGroupData[{
Cell[693735, 16187, 88, 1, 70, "Subsubsubsection",ExpressionUUID->"925bf04a-eaba-4e63-bc68-02d9e5037f84",
 CellID->237385776],
Cell[693826, 16190, 575, 16, 70, "Text",ExpressionUUID->"28d84eee-28dc-4459-bfdd-7efb4a7a5033",
 CellID->1605734052],
Cell[694404, 16208, 2625, 71, 70, "DefinitionBox",ExpressionUUID->"5672eb82-b32f-4633-a48d-59e901885c2c",
 CellID->730612315],
Cell[697032, 16281, 91, 1, 70, "Caption",ExpressionUUID->"50c69295-9612-485f-a523-6971628b7da9",
 CellID->69474757],
Cell[697126, 16284, 97, 1, 70, "MathCaption",ExpressionUUID->"5804ddb8-f250-46a0-9c93-aa0d276e5b20",
 CellID->1155116896],
Cell[CellGroupData[{
Cell[697248, 16289, 146, 4, 70, "Input",ExpressionUUID->"3b7b1ba3-e78a-431f-9864-ba6bdd1c4839",
 CellID->797502192],
Cell[697397, 16295, 9802, 248, 70, "Output",ExpressionUUID->"094bf296-689d-4e61-a76f-750bb9baf762",
 CellID->113335974]
}, Open  ]],
Cell[707214, 16546, 141, 4, 70, "MathCaption",ExpressionUUID->"ae474871-c675-43ac-aee9-061e33d1eff8",
 CellID->811349928],
Cell[CellGroupData[{
Cell[707380, 16554, 169, 5, 70, "Input",ExpressionUUID->"cc9d0704-856d-4f2a-826a-06f4c7347e2c",
 CellID->1984565093],
Cell[707552, 16561, 464, 10, 70, "Output",ExpressionUUID->"def9c94c-c4c6-41ee-9f6d-0d9dc27aafc2",
 CellID->19720129]
}, Open  ]],
Cell[708031, 16574, 201, 4, 70, "MathCaption",ExpressionUUID->"e67e052d-8ec0-4009-b3a4-01fd0e00535d",
 CellID->589880236],
Cell[CellGroupData[{
Cell[708257, 16582, 369, 9, 70, "Input",ExpressionUUID->"f297d2ea-9efd-4279-8e25-1729129e438c",
 CellID->557131970],
Cell[708629, 16593, 429, 11, 70, "Output",ExpressionUUID->"76fe3889-19cc-4ee5-aac5-7ffacdf70510",
 CellID->723726465]
}, Open  ]],
Cell[709073, 16607, 147, 4, 70, "Text",ExpressionUUID->"ad86d3ce-4a0b-443a-ad93-7074e4a42bb5",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[709269, 16617, 70, 1, 70, "Subsection",ExpressionUUID->"c37a04c2-ff1d-4449-9a9b-f94e32bc08e4",
 CellID->1281067914],
Cell[709342, 16620, 483, 8, 70, "Text",ExpressionUUID->"1dd65f95-5b18-49ad-99f3-46dc93095c6f",
 CellID->1997801546],
Cell[CellGroupData[{
Cell[709850, 16632, 90, 1, 70, "Subsubsection",ExpressionUUID->"187dc7b9-e893-496f-a4cb-dd4a21ef8ffb",
 CellID->1973203023],
Cell[CellGroupData[{
Cell[709965, 16637, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"d70ee242-b8f6-4cbf-ac3f-1593f0c629cb",
 CellID->666869090],
Cell[710041, 16640, 416, 12, 70, "Text",ExpressionUUID->"5eec34b8-980f-4195-8cbd-d20a3837b542",
 CellID->611320926],
Cell[710460, 16654, 480, 14, 70, "DefinitionBox",ExpressionUUID->"2da334f7-f91f-445b-9ae7-b88d3c043083",
 CellID->351641937],
Cell[710943, 16670, 135, 4, 70, "Caption",ExpressionUUID->"9fae6c1c-99fc-4062-b167-eb368e647d9e",
 CellID->171038615],
Cell[711081, 16676, 1561, 46, 70, "DefinitionBox3Col",ExpressionUUID->"9f7f2387-51de-4479-a3cc-8895e00e5606",
 CellID->1055700668],
Cell[712645, 16724, 266, 10, 70, "Caption",ExpressionUUID->"8d992c4c-b7cb-4734-820c-28d28de4e59e",
 CellID->651235562],
Cell[712914, 16736, 360, 8, 70, "MathCaption",ExpressionUUID->"e31a938b-71c4-4ff3-a7b8-e9f77966c294",
 CellID->1312882619],
Cell[CellGroupData[{
Cell[713299, 16748, 302, 7, 70, "Input",ExpressionUUID->"49baa28d-bf4a-48bc-a1b0-a8f91814865e",
 CellID->223704608],
Cell[CellGroupData[{
Cell[713626, 16759, 425, 10, 70, "Print",ExpressionUUID->"1e5764c2-4334-4902-9b69-db0821196539",
 CellID->916487219],
Cell[714054, 16771, 426, 10, 70, "Print",ExpressionUUID->"edb28e52-1a87-481f-8701-2f9a97e4440e",
 CellID->1393161984],
Cell[714483, 16783, 423, 10, 70, "Print",ExpressionUUID->"fbf73632-3616-4913-9ce7-3b5d5309fb22",
 CellID->1933820101],
Cell[714909, 16795, 426, 10, 70, "Print",ExpressionUUID->"a5cba432-546d-4e3f-a6b1-e98dc6ec16aa",
 CellID->1615625703],
Cell[715338, 16807, 422, 10, 70, "Print",ExpressionUUID->"98a8d9d6-c12a-42f2-8ad8-8fefc381835f",
 CellID->944609390],
Cell[715763, 16819, 407, 10, 70, "Print",ExpressionUUID->"2230943a-e4f5-4aee-b5f5-3fdf84799942",
 CellID->1760647747],
Cell[716173, 16831, 406, 10, 70, "Print",ExpressionUUID->"9479e36f-591d-409f-a32b-8193a2a2f955",
 CellID->729347633],
Cell[716582, 16843, 408, 10, 70, "Print",ExpressionUUID->"c8df1fca-3676-487c-a9b2-bdd67b18f801",
 CellID->928300839],
Cell[716993, 16855, 400, 9, 70, "Print",ExpressionUUID->"d69139e7-34cc-45ff-97df-a238d7aca76d",
 CellID->200801478],
Cell[717396, 16866, 409, 10, 70, "Print",ExpressionUUID->"78532280-b156-4362-8a27-678f9b59d4c4",
 CellID->584112668],
Cell[717808, 16878, 408, 10, 70, "Print",ExpressionUUID->"c9a10a95-e8a1-49b8-9c87-e0dec3d343f8",
 CellID->805571796],
Cell[718219, 16890, 420, 10, 70, "Print",ExpressionUUID->"2867eeac-8071-4d27-9339-20f942838cc2",
 CellID->507574800],
Cell[718642, 16902, 426, 10, 70, "Print",ExpressionUUID->"958cefd4-527e-41c6-8be1-257ac30c9450",
 CellID->1093520098]
}, Open  ]],
Cell[719083, 16915, 10862, 281, 70, "Output",ExpressionUUID->"1a7d9d40-c21b-4d09-804b-263aaaf1de29",
 CellID->627236060]
}, Open  ]],
Cell[729960, 17199, 123, 3, 70, "MathCaption",ExpressionUUID->"f269ccce-7421-440e-b4d8-a6f44dbb6125",
 CellID->1190633123],
Cell[CellGroupData[{
Cell[730108, 17206, 310, 10, 70, "Input",ExpressionUUID->"e184c349-f3bc-4bba-a618-c29e072639b0",
 CellID->718275515],
Cell[730421, 17218, 186498, 4955, 70, "Output",ExpressionUUID->"9893d380-a5af-4f8b-9509-0c30a9e7dcb7",
 CellID->2106720944]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[916968, 22179, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"b3fe57b4-5b33-423e-9656-45d045e40531",
 CellID->528878766],
Cell[917049, 22182, 255, 5, 70, "MathCaption",ExpressionUUID->"74654f71-4031-47f1-bcad-0c8bf8b548d8",
 CellID->1740422649],
Cell[917307, 22189, 1109, 22, 70, "Input",ExpressionUUID->"96fe38e4-6b0b-4c57-8c47-d12f6036946b",
 CellID->750369086],
Cell[918419, 22213, 184, 7, 70, "MathCaption",ExpressionUUID->"4e7ec11e-6ef2-4ee6-82b0-90f433a592f0",
 CellID->1712427223],
Cell[CellGroupData[{
Cell[918628, 22224, 203, 6, 70, "Input",ExpressionUUID->"4263566c-107e-4eab-b047-d71273be1793",
 CellID->188499867],
Cell[918834, 22232, 10617, 274, 70, "Output",ExpressionUUID->"10699738-4ea6-4bbf-8bb1-6790f07a373d",
 CellID->2096017719]
}, Open  ]],
Cell[929466, 22509, 90, 1, 70, "MathCaption",ExpressionUUID->"afd8fc21-0be5-4044-b95b-29b2b1c95005",
 CellID->292613774],
Cell[CellGroupData[{
Cell[929581, 22514, 170, 4, 70, "Input",ExpressionUUID->"0f7748b0-c475-4e09-9e8b-1f1f58531adb",
 CellID->222147988],
Cell[929754, 22520, 265, 7, 70, "Output",ExpressionUUID->"2efee81f-de74-4bdf-a0a2-ad98803b1466",
 CellID->448057845]
}, Open  ]],
Cell[930034, 22530, 394, 7, 70, "Text",ExpressionUUID->"f7f5a761-f9aa-401f-8f78-e8431a62a9b5",
 CellID->1796883614],
Cell[930431, 22539, 466, 12, 70, "MathCaption",ExpressionUUID->"dd151828-f664-4159-84c5-216519c0bedd",
 CellID->306227952],
Cell[CellGroupData[{
Cell[930922, 22555, 508, 14, 70, "Input",ExpressionUUID->"345878b1-5801-4d21-b9c2-e7747152529d",
 CellID->1402371052],
Cell[931433, 22571, 10617, 274, 70, "Output",ExpressionUUID->"1dc81039-fd05-4427-91ce-07d3a6d8398e",
 CellID->1430534533]
}, Open  ]],
Cell[942065, 22848, 81, 1, 70, "MathCaption",ExpressionUUID->"7021ed1a-c6ea-45ab-b2ed-3d3d5f75bef3",
 CellID->136402831],
Cell[CellGroupData[{
Cell[942171, 22853, 175, 5, 70, "Input",ExpressionUUID->"b40cd6a8-0958-4654-ad69-fd9923c8b5c1",
 CellID->1157329268],
Cell[942349, 22860, 290, 7, 70, "Output",ExpressionUUID->"91e6e7a6-ff34-4f8e-89cb-7f33653fc8f8",
 CellID->1914467966]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[942688, 22873, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"2d350be8-8bd2-4a90-8b96-00abfbac8ddb",
 CellID->1560572010],
Cell[942762, 22876, 473, 11, 70, "Text",ExpressionUUID->"ae11d565-c64c-41af-8001-7dcfbecb7f23",
 CellID->1315991259],
Cell[943238, 22889, 526, 16, 70, "DefinitionBox",ExpressionUUID->"c3afc6f9-aabe-4d64-9583-5df602a0e2a9",
 CellID->391089394],
Cell[943767, 22907, 111, 3, 70, "Caption",ExpressionUUID->"d18eb9dc-f8a4-4a04-9248-793d48dea187",
 CellID->1739485138],
Cell[943881, 22912, 1518, 44, 70, "DefinitionBox3Col",ExpressionUUID->"f83cc9c8-d627-4ee9-b002-429b6fea81f2",
 CellID->2083543412],
Cell[945402, 22958, 256, 9, 70, "Caption",ExpressionUUID->"7c49beb8-2a90-461a-946c-7ccc4ce09fbe",
 CellID->1245777502],
Cell[945661, 22969, 336, 8, 70, "MathCaption",ExpressionUUID->"dc211455-73f9-4736-851a-b7d86f93e639",
 CellID->178778395],
Cell[CellGroupData[{
Cell[946022, 22981, 313, 7, 70, "Input",ExpressionUUID->"7ca18a96-d898-408a-b85a-608090c205a8",
 CellID->398862612],
Cell[946338, 22990, 10616, 274, 70, "Output",ExpressionUUID->"1ddeab4b-aef5-42aa-a03d-45fff7b47a92",
 CellID->715621561]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[957003, 23270, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"2c4db75e-36f3-4ded-9ba5-497cf2a0bcf8",
 CellID->1066609228],
Cell[957066, 23273, 481, 14, 70, "Text",ExpressionUUID->"d1d14710-38cf-4a60-8c3b-88d09a874330",
 CellID->1455293487],
Cell[CellGroupData[{
Cell[957572, 23291, 214, 6, 70, "Input",ExpressionUUID->"ea6cb672-aa2e-43b0-9ff5-2d6fea527c7d",
 CellID->1426380326],
Cell[CellGroupData[{
Cell[957811, 23301, 5297, 154, 70, "Print",ExpressionUUID->"7297d7bc-ede2-40dd-af84-ae78878e8e2e",
 CellID->1543152527],
Cell[963111, 23457, 499, 13, 70, "Print",ExpressionUUID->"3a810af4-b3b3-4890-b781-143f6fba585e",
 CellID->604516470],
Cell[963613, 23472, 54912, 1134, 70, "Print",ExpressionUUID->"0b50b042-1499-4ea7-a14e-8b68ebe63dc6",
 CellID->363177333]
}, Open  ]],
Cell[1018540, 24609, 10607, 274, 70, "Output",ExpressionUUID->"08993f4b-1ce0-4553-92c2-99241609458e",
 CellID->772910957]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1029208, 24890, 73, 1, 70, "Subsubsection",ExpressionUUID->"c1fb290d-cfee-4097-a547-e9645a9958bb",
 CellID->1796762249],
Cell[1029284, 24893, 93, 1, 70, "Text",ExpressionUUID->"24f8e744-32b1-42dd-979c-ea7a413c930b",
 CellID->1723717413],
Cell[1029380, 24896, 145, 4, 70, "MathCaption",ExpressionUUID->"627edf2c-860d-44a9-928d-92e62d0a21c4",
 CellID->141883528],
Cell[CellGroupData[{
Cell[1029550, 24904, 171, 4, 70, "Input",ExpressionUUID->"d2ac9682-46c3-448d-b679-ccdbce80dea7",
 CellID->929606926],
Cell[1029724, 24910, 9647, 248, 70, "Output",ExpressionUUID->"b63b705c-cdc4-4c9e-8c2a-d23e741f30e8",
 CellID->185873596]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1039420, 25164, 100, 1, 70, "Subsubsection",ExpressionUUID->"c1e28c65-2617-46d2-acae-617b0478399a",
 CellID->1908271188],
Cell[1039523, 25167, 286, 9, 70, "MathCaption",ExpressionUUID->"d160d6da-e020-4e42-b602-34b73d7a3444",
 CellID->1758442397],
Cell[CellGroupData[{
Cell[1039834, 25180, 197, 5, 70, "Input",ExpressionUUID->"f9d22f7f-1c6b-4f7f-ba29-76949b99c007",
 CellID->471416365],
Cell[1040034, 25187, 10412, 263, 70, "Output",ExpressionUUID->"8bfb82fd-141c-4f12-8956-e7258f4d4202",
 CellID->1536305234]
}, Open  ]],
Cell[1050461, 25453, 349, 11, 70, "MathCaption",ExpressionUUID->"25e8238f-55d8-4f66-abe5-b754692c2398",
 CellID->2143452651],
Cell[CellGroupData[{
Cell[1050835, 25468, 176, 4, 70, "Input",ExpressionUUID->"92c12582-0c8b-4614-b3e7-cf95e74e44fb",
 CellID->970526932],
Cell[1051014, 25474, 10412, 263, 70, "Output",ExpressionUUID->"d327365b-f59f-45fe-9ba0-9c92c1c890ed",
 CellID->1486179957]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061487, 25744, 67, 1, 70, "Subsection",ExpressionUUID->"252b3731-93b8-4d9c-b50f-f1edab65e923",
 CellID->1059869896],
Cell[1061557, 25747, 532, 9, 70, "Text",ExpressionUUID->"647be54d-3903-4345-a761-5b03a30885ab",
 CellID->214174283],
Cell[CellGroupData[{
Cell[1062114, 25760, 73, 1, 70, "Subsubsection",ExpressionUUID->"e0c1ad55-c05d-4cec-8d85-b104bfd81e15",
 CellID->444582009],
Cell[1062190, 25763, 74, 1, 70, "Text",ExpressionUUID->"abf3dfce-7b22-4efb-af34-5538393e6c38",
 CellID->168882663],
Cell[CellGroupData[{
Cell[1062289, 25768, 195, 5, 70, "Input",ExpressionUUID->"e03eaf1d-b429-4521-8bdc-eb26bf60ee6a",
 CellID->1585019354],
Cell[1062487, 25775, 11281, 289, 70, "Output",ExpressionUUID->"1e09ec42-6bdb-4902-9be1-9f922ea384fa",
 CellID->844239042]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1073817, 26070, 122, 3, 70, "Subsubsection",ExpressionUUID->"f9e9a1a1-7e22-43dd-bb2c-4e9d981d9c85",
 CellID->1807183132],
Cell[1073942, 26075, 374, 8, 70, "MathCaption",ExpressionUUID->"f9fd9439-5fcd-4358-8cdb-fb8f98c0c964",
 CellID->1847604807],
Cell[CellGroupData[{
Cell[1074341, 26087, 312, 7, 70, "Input",ExpressionUUID->"470ede5c-ba0f-4baa-bcfd-d6878543218b",
 CellID->80455629],
Cell[CellGroupData[{
Cell[1074678, 26098, 425, 10, 70, "Print",ExpressionUUID->"275baf85-0b70-403a-be03-18db68381cd0",
 CellID->534263066],
Cell[1075106, 26110, 423, 10, 70, "Print",ExpressionUUID->"fcee1350-c3fd-4030-94de-cc1389b9e5b5",
 CellID->2122200127],
Cell[1075532, 26122, 422, 10, 70, "Print",ExpressionUUID->"5834372f-50b8-4367-a4e3-0ccbb8ffcbd9",
 CellID->840909824],
Cell[1075957, 26134, 421, 10, 70, "Print",ExpressionUUID->"5d25f87f-6fff-49a6-ad9c-dd8e8faea311",
 CellID->53150085],
Cell[1076381, 26146, 423, 10, 70, "Print",ExpressionUUID->"e479ec68-a36c-4e1e-a6a3-1b69e512eab7",
 CellID->1067283359],
Cell[1076807, 26158, 407, 10, 70, "Print",ExpressionUUID->"86579726-e118-45dc-a282-d82db996a2cc",
 CellID->1639847900],
Cell[1077217, 26170, 409, 10, 70, "Print",ExpressionUUID->"c5e8eaef-465c-4e7e-a976-1567c3932ae2",
 CellID->961166574],
Cell[1077629, 26182, 409, 10, 70, "Print",ExpressionUUID->"b3e6b753-2767-4e75-9572-197915f818df",
 CellID->1489251853],
Cell[1078041, 26194, 410, 10, 70, "Print",ExpressionUUID->"fa74ae5b-e282-46b3-8b2c-69ffc90ed73f",
 CellID->1713518480],
Cell[1078454, 26206, 409, 10, 70, "Print",ExpressionUUID->"c0a70269-369b-4077-b80c-87e9e7a846bd",
 CellID->499513137],
Cell[1078866, 26218, 406, 10, 70, "Print",ExpressionUUID->"2cbcc081-05ec-4688-bdd4-aec67e085e31",
 CellID->406807222],
Cell[1079275, 26230, 422, 10, 70, "Print",ExpressionUUID->"9feabf61-f4e4-461c-8c54-cdc64d76024f",
 CellID->690439218],
Cell[1079700, 26242, 425, 10, 70, "Print",ExpressionUUID->"ab0f56df-6b63-4b87-a2b4-8a4b701948fb",
 CellID->820946473]
}, Open  ]],
Cell[1080140, 26255, 10682, 273, 70, "Output",ExpressionUUID->"cc575783-bd74-413d-879e-1e7deacf7758",
 CellID->2128264267]
}, Open  ]],
Cell[1090837, 26531, 199, 7, 70, "MathCaption",ExpressionUUID->"d4c1f447-d604-4fb0-bc6d-eaaf2758f139",
 CellID->1446718475],
Cell[1091039, 26540, 243, 7, 70, "Input",ExpressionUUID->"df047909-5fdc-4764-97b0-9ac93974205d",
 CellID->1187557991],
Cell[1091285, 26549, 90, 1, 70, "MathCaption",ExpressionUUID->"1210e7d7-8144-408e-b98d-0c843f243051",
 CellID->918869862],
Cell[CellGroupData[{
Cell[1091400, 26554, 188, 5, 70, "Input",ExpressionUUID->"485bb467-3271-4255-95b7-175485aa9326",
 CellID->890865057],
Cell[1091591, 26561, 266, 7, 70, "Output",ExpressionUUID->"eb7f91de-f988-4e1b-af06-e0ac33c97ae7",
 CellID->1249911037]
}, Open  ]],
Cell[1091872, 26571, 508, 12, 70, "MathCaption",ExpressionUUID->"72c110b9-70a1-4fe5-a5c2-74ace41f2237",
 CellID->916506595],
Cell[1092383, 26585, 557, 16, 70, "Input",ExpressionUUID->"994aeb0d-7f82-4b29-bd40-c879012b068a",
 CellID->1973625881],
Cell[1092943, 26603, 80, 1, 70, "MathCaption",ExpressionUUID->"3818352b-fde0-4726-8637-717c272b1f03",
 CellID->19000568],
Cell[CellGroupData[{
Cell[1093048, 26608, 197, 6, 70, "Input",ExpressionUUID->"d346e330-8a52-4b67-96be-385f0d377afc",
 CellID->1514966620],
Cell[1093248, 26616, 289, 7, 70, "Output",ExpressionUUID->"c06c359f-305a-4f61-95ed-848561593144",
 CellID->569763905]
}, Open  ]],
Cell[1093552, 26626, 349, 9, 70, "MathCaption",ExpressionUUID->"a80c2a90-a19b-4443-9ac4-3c18eabaed03",
 CellID->1183809265],
Cell[CellGroupData[{
Cell[1093926, 26639, 332, 7, 70, "Input",ExpressionUUID->"7e113a42-04a7-4dce-aaa8-6d0e1f75a485",
 CellID->1993811047],
Cell[1094261, 26648, 10699, 273, 70, "Output",ExpressionUUID->"d9773f0b-b3b4-4157-8b9d-8d96a5ff326e",
 CellID->1808037231]
}, Open  ]],
Cell[1104975, 26924, 491, 14, 70, "Text",ExpressionUUID->"54b75b54-033a-42e6-b305-c44085d7c258",
 CellID->1212150445],
Cell[CellGroupData[{
Cell[1105491, 26942, 232, 6, 70, "Input",ExpressionUUID->"f6977f5c-9165-4f6b-930a-67e66a7da752",
 CellID->1582653673],
Cell[CellGroupData[{
Cell[1105748, 26952, 10252, 303, 70, "Print",ExpressionUUID->"50bb3bf4-c1f1-4f61-9eb9-91ed45100790",
 CellID->1368119989],
Cell[1116003, 27257, 819, 20, 70, "Print",ExpressionUUID->"7fb9c087-f67d-460b-ac4d-5e57a81deb11",
 CellID->885246694],
Cell[1116825, 27279, 115750, 2382, 70, "Print",ExpressionUUID->"d30f1389-e131-4612-bb9b-d864c3a2ae9e",
 CellID->574479642]
}, Open  ]],
Cell[1232590, 29664, 10722, 274, 70, "Output",ExpressionUUID->"db99e1c4-9190-49b3-af87-83f0ee4dcd0d",
 CellID->314696655]
}, Open  ]],
Cell[1243327, 29941, 125, 3, 70, "MathCaption",ExpressionUUID->"2d78884e-632f-49e4-b47a-f4fb32a57cc9",
 CellID->1388846014],
Cell[CellGroupData[{
Cell[1243477, 29948, 193, 5, 70, "Input",ExpressionUUID->"a42d7912-93db-4f06-bcda-dbeb2c209356",
 CellID->1335198055],
Cell[1243673, 29955, 8681, 227, 70, "Output",ExpressionUUID->"1e51ae1f-7f6d-4c6c-8e9e-487ae734d8a8",
 CellID->2001941671]
}, Open  ]],
Cell[1252369, 30185, 286, 9, 70, "MathCaption",ExpressionUUID->"578e47b3-8216-4272-8bd8-a6b4aee38d76",
 CellID->1164916883],
Cell[CellGroupData[{
Cell[1252680, 30198, 217, 6, 70, "Input",ExpressionUUID->"f0d637f6-c68b-4b14-913d-ae79bab8a493",
 CellID->149642882],
Cell[1252900, 30206, 9710, 249, 70, "Output",ExpressionUUID->"34c96a1f-b627-4b71-837e-43cc772c9e2d",
 CellID->2007366948]
}, Open  ]],
Cell[1262625, 30458, 349, 11, 70, "MathCaption",ExpressionUUID->"9cce78d3-05d1-4d00-90eb-d5d2efc4d712",
 CellID->1523959247],
Cell[CellGroupData[{
Cell[1262999, 30473, 197, 5, 70, "Input",ExpressionUUID->"411fc008-787e-4dd9-97bc-29e9fc11de59",
 CellID->145606560],
Cell[1263199, 30480, 9709, 249, 70, "Output",ExpressionUUID->"63e85e4c-5cd4-470e-9fe3-9934e945111f",
 CellID->848200666]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1272969, 30736, 81, 1, 70, "Subsection",ExpressionUUID->"b15ef97e-10c4-482d-b09b-90557c935aee",
 CellID->2003973854],
Cell[1273053, 30739, 867, 24, 70, "Text",ExpressionUUID->"e817c2fe-b477-4397-baee-35f7b6463803",
 CellID->1328457457],
Cell[1273923, 30765, 159, 4, 70, "MathCaption",ExpressionUUID->"0f41054a-cb12-4c62-9819-96a17104720e",
 CellID->1629616244],
Cell[CellGroupData[{
Cell[1274107, 30773, 226, 6, 70, "Input",ExpressionUUID->"be06c830-f56b-4f47-a1d8-8580acc7b72a",
 CellID->2101262717],
Cell[1274336, 30781, 91, 2, 70, "Output",ExpressionUUID->"33374a01-c92e-481d-8ed7-93717adbce2b",
 CellID->384258966]
}, Open  ]],
Cell[1274442, 30786, 140, 4, 70, "MathCaption",ExpressionUUID->"a2f0da4d-135b-4696-82a3-64257b6b4b23",
 CellID->218785383],
Cell[CellGroupData[{
Cell[1274607, 30794, 297, 8, 70, "Input",ExpressionUUID->"f68eda63-6ba2-480b-88ea-b02eb574fa0b",
 CellID->633928417],
Cell[1274907, 30804, 586, 17, 70, "Output",ExpressionUUID->"c5413327-dc54-4ea6-b8ee-a038976f2255",
 CellID->1148116342]
}, Open  ]],
Cell[1275508, 30824, 125, 3, 70, "MathCaption",ExpressionUUID->"8e9eff85-e5a3-4bd0-bcf4-849f45dfcc87",
 CellID->1746502806],
Cell[CellGroupData[{
Cell[1275658, 30831, 364, 8, 70, "Input",ExpressionUUID->"08b8b3d5-18cd-4e98-8c69-e4652a66dafb",
 CellID->1666173246],
Cell[1276025, 30841, 136, 2, 70, "Print",ExpressionUUID->"5c76eb6e-58bb-453b-8da2-1faec1244294",
 CellID->1621576223],
Cell[1276164, 30845, 8728, 228, 70, "Output",ExpressionUUID->"ca994a00-9f5a-4dca-b19d-087900a860fd",
 CellID->116615884]
}, Open  ]],
Cell[1284907, 31076, 757, 23, 70, "Text",ExpressionUUID->"798d13d5-4d49-46be-83b9-2c8c7928d283",
 CellID->808687274],
Cell[1285667, 31101, 98, 1, 70, "MathCaption",ExpressionUUID->"6abe6e3f-3201-4ae3-b307-c741c88b2d5a",
 CellID->690387281],
Cell[CellGroupData[{
Cell[1285790, 31106, 122, 3, 70, "Input",ExpressionUUID->"f4d9de34-d339-4184-a9e8-acd6c28c0fa3",
 CellID->484887026],
Cell[1285915, 31111, 230, 6, 70, "Output",ExpressionUUID->"71ef9179-c4fd-4fc4-8401-f46413aa5340",
 CellID->459471277]
}, Open  ]],
Cell[1286160, 31120, 92, 1, 70, "MathCaption",ExpressionUUID->"1b5c8276-3c4d-4920-aed9-fd4a555d1c63",
 CellID->1931356472],
Cell[CellGroupData[{
Cell[1286277, 31125, 181, 6, 70, "Input",ExpressionUUID->"a42ecef8-8d4f-4ab7-828a-92862b9d3740",
 CellID->1092900499],
Cell[1286461, 31133, 449, 11, 70, "Output",ExpressionUUID->"60b38603-6696-456c-8c46-8aeb79ed9fce",
 CellID->1294671978]
}, Open  ]],
Cell[1286925, 31147, 104, 2, 70, "MathCaption",ExpressionUUID->"61764f23-899b-463c-94f9-47bdc0850ac7",
 CellID->642146293],
Cell[CellGroupData[{
Cell[1287054, 31153, 186, 6, 70, "Input",ExpressionUUID->"c94aaa05-5830-4703-8c80-8df465868756",
 CellID->1447420276],
Cell[1287243, 31161, 6723, 159, 70, "Output",ExpressionUUID->"5e324ca9-f916-4c7a-b54e-99abc3637059",
 CellID->157992455]
}, Open  ]],
Cell[1293981, 31323, 567, 17, 70, "MathCaption",ExpressionUUID->"7d6612b4-381a-4ffe-8fc7-0efa4049e990",
 CellID->1243280944],
Cell[CellGroupData[{
Cell[1294573, 31344, 276, 7, 70, "Input",ExpressionUUID->"38fb0ce7-49ad-4aa7-bd3d-197ab00138ba",
 CellID->806940498],
Cell[1294852, 31353, 616, 12, 70, "Output",ExpressionUUID->"0eda381e-8637-45a9-994e-5b41dc4918a6",
 CellID->1715219372]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1295529, 31372, 55, 1, 70, "Section",ExpressionUUID->"be8e0b2a-0e05-4040-bf6d-0b29d553d65b",
 CellID->779816621],
Cell[CellGroupData[{
Cell[1295609, 31377, 80, 1, 70, "Subsection",ExpressionUUID->"70beb53a-2a7e-410b-aad0-fcd671902853",
 CellID->1971981026],
Cell[1295692, 31380, 956, 31, 70, "Text",ExpressionUUID->"d0bbd8ad-a3c8-48cd-bf8c-fdf96b46a6bb",
 CellID->1838680125],
Cell[1296651, 31413, 186, 4, 70, "MathCaption",ExpressionUUID->"32aba622-6f52-4062-a795-a592a9046470",
 CellID->902655240],
Cell[CellGroupData[{
Cell[1296862, 31421, 334, 10, 70, "Input",ExpressionUUID->"ffba2693-eeff-4d25-8000-4904ba663c77",
 CellID->1102136272],
Cell[1297199, 31433, 10178, 263, 70, "Output",ExpressionUUID->"724679d5-46d2-4a1a-82ed-3be4c4620db9",
 CellID->1616524567]
}, Open  ]],
Cell[CellGroupData[{
Cell[1307414, 31701, 334, 10, 70, "Input",ExpressionUUID->"7a55d972-558b-469b-968b-3c8348d665e0",
 CellID->1021092447],
Cell[1307751, 31713, 10967, 283, 70, "Output",ExpressionUUID->"d5a7ae0b-8bb0-474c-873c-109772b135a9",
 CellID->1548290285]
}, Open  ]],
Cell[1318733, 31999, 266, 7, 70, "MathCaption",ExpressionUUID->"f7565a29-bd59-4f61-8c91-967e0d662ada",
 CellID->969019879],
Cell[CellGroupData[{
Cell[1319024, 32010, 162, 5, 70, "Input",ExpressionUUID->"ec83ba02-c331-426f-a9b5-24bbeb711c04",
 CellID->1948611152],
Cell[1319189, 32017, 337, 7, 70, "Output",ExpressionUUID->"e4c6a488-5de6-4161-8169-707797c78db4",
 CellID->1243364280]
}, Open  ]],
Cell[CellGroupData[{
Cell[1319563, 32029, 161, 5, 70, "Input",ExpressionUUID->"e3816809-7a6c-4716-853f-89e1a2bcb704",
 CellID->619818574],
Cell[1319727, 32036, 337, 7, 70, "Output",ExpressionUUID->"d313c3d2-74eb-492b-800b-c1cc7ccb537d",
 CellID->1440862894]
}, Open  ]],
Cell[1320079, 32046, 177, 4, 70, "Text",ExpressionUUID->"facf651f-8ccc-4cbe-80cb-20746309191f",
 CellID->1900924848],
Cell[1320259, 32052, 300, 10, 70, "MathCaption",ExpressionUUID->"8224bdc0-5348-4890-8ffc-8f3caa012b02",
 CellID->729703917],
Cell[CellGroupData[{
Cell[1320584, 32066, 246, 8, 70, "Input",ExpressionUUID->"d462439b-684a-4c32-8f88-b19a8def23f8",
 CellID->2002108649],
Cell[1320833, 32076, 1022, 28, 70, "Output",ExpressionUUID->"27125dfa-97e9-4396-b9cd-ef2695c8b477",
 CellID->81485738]
}, Open  ]],
Cell[1321870, 32107, 1053, 28, 70, "Text",ExpressionUUID->"5ef1cc2e-7bb5-4538-aa60-59a034d6abdd",
 CellID->527526154],
Cell[1322926, 32137, 353, 11, 70, "MathCaption",ExpressionUUID->"c870982d-05c2-490c-8b5f-22989f7f7f7b",
 CellID->449223127],
Cell[CellGroupData[{
Cell[1323304, 32152, 279, 8, 70, "Input",ExpressionUUID->"dfba44ff-5ff9-4f2d-9027-3d1ae86afe6e",
 CellID->1688076284],
Cell[1323586, 32162, 10659, 275, 70, "Output",ExpressionUUID->"b43f50af-2776-42ec-9d44-effe51558dc0",
 CellID->2034427395]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334294, 32443, 72, 1, 70, "Subsection",ExpressionUUID->"4d9c1c4b-17bb-4f0a-8861-857091c71f55",
 CellID->1357359281],
Cell[1334369, 32446, 472, 8, 70, "Text",ExpressionUUID->"32b139d0-f7e7-4756-a20e-5de92219a0cb",
 CellID->1802528277],
Cell[CellGroupData[{
Cell[1334866, 32458, 144, 4, 70, "Subsubsection",ExpressionUUID->"ca7dac42-60ac-406f-8d34-8444bd4537fb",
 CellID->524759768],
Cell[CellGroupData[{
Cell[1335035, 32466, 80, 1, 70, "Subsubsubsection",ExpressionUUID->"775a028c-5f4c-46d1-ae98-1af9f2733f63",
 CellID->1551861331],
Cell[1335118, 32469, 391, 7, 70, "Text",ExpressionUUID->"77f79017-ce17-465d-ac90-0e3116c0c5e3",
 CellID->944497302],
Cell[1335512, 32478, 594, 18, 70, "DefinitionBox",ExpressionUUID->"300d7c97-9745-4c02-a90a-a3891662f956",
 CellID->1659581078],
Cell[1336109, 32498, 206, 7, 70, "Caption",ExpressionUUID->"070bc042-9246-49b2-bbc4-ca091b12502e",
 CellID->1061570710],
Cell[1336318, 32507, 2237, 58, 70, "DefinitionBox3Col",ExpressionUUID->"6ea76b78-63a7-4b90-a814-0dce2c5b0ef5",
 CellID->524783694],
Cell[1338558, 32567, 262, 10, 70, "Caption",ExpressionUUID->"ac5f26d7-8fd1-4c37-87a6-347d9c474312",
 CellID->324206829],
Cell[1338823, 32579, 138, 4, 70, "MathCaption",ExpressionUUID->"c604eaee-a70a-4dcc-a12e-1fc7634a43cf",
 CellID->873132756],
Cell[CellGroupData[{
Cell[1338986, 32587, 334, 9, 70, "Input",ExpressionUUID->"8e6fa1c9-e833-4f97-a00c-8c5d3addab8e",
 CellID->986470141],
Cell[1339323, 32598, 10678, 276, 70, "Output",ExpressionUUID->"544b96eb-ffcf-42f2-bab9-92608b3e8da3",
 CellID->469857818]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1350050, 32880, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"18f2449b-a3fb-44a5-8a38-87b2ad3f0c71",
 CellID->128983684],
Cell[1350126, 32883, 356, 8, 70, "MathCaption",ExpressionUUID->"a3f2202f-1587-4a1e-b6c2-aac7ca817fb4",
 CellID->1069961234],
Cell[CellGroupData[{
Cell[1350507, 32895, 309, 7, 70, "Input",ExpressionUUID->"306175d6-a34c-40e4-abf0-52808aa22841",
 CellID->1957883507],
Cell[CellGroupData[{
Cell[1350841, 32906, 421, 10, 70, "Print",ExpressionUUID->"df05a414-ce3b-4a34-b7cb-f1def9660ab0",
 CellID->64325918],
Cell[1351265, 32918, 425, 10, 70, "Print",ExpressionUUID->"cb4272c0-8ad4-4037-8343-d43677c98108",
 CellID->107170713],
Cell[1351693, 32930, 421, 10, 70, "Print",ExpressionUUID->"13c70536-07dc-4fc0-acb7-b0db0e9ce7b9",
 CellID->95796752],
Cell[1352117, 32942, 422, 10, 70, "Print",ExpressionUUID->"b79ad048-2962-4081-a4aa-1cb162b9d0b2",
 CellID->824325630],
Cell[1352542, 32954, 425, 10, 70, "Print",ExpressionUUID->"ebf21572-a4ba-4b86-9b56-987c61100bb2",
 CellID->524837664],
Cell[1352970, 32966, 426, 10, 70, "Print",ExpressionUUID->"0f4b6078-7cdf-43b8-91f0-3831ab652791",
 CellID->1492609609],
Cell[1353399, 32978, 426, 10, 70, "Print",ExpressionUUID->"8aede2d7-42da-4287-89fb-1f6b32471b29",
 CellID->1812054345],
Cell[1353828, 32990, 423, 10, 70, "Print",ExpressionUUID->"d1d47cfd-a366-4ccc-9e8a-47414340bed7",
 CellID->1204774573],
Cell[1354254, 33002, 423, 10, 70, "Print",ExpressionUUID->"b958c512-9474-4599-96c4-f6cd362bb5b2",
 CellID->1653787195],
Cell[1354680, 33014, 426, 10, 70, "Print",ExpressionUUID->"e39d4b12-e675-435d-9b8a-208e672ff8bd",
 CellID->1967842748],
Cell[1355109, 33026, 423, 10, 70, "Print",ExpressionUUID->"847a4f67-7a38-4574-8085-7f13344e6b1b",
 CellID->1388283531],
Cell[1355535, 33038, 421, 10, 70, "Print",ExpressionUUID->"96b8c75a-3f5b-4168-9ad8-fb5a6a51e122",
 CellID->66431071]
}, Open  ]],
Cell[1355971, 33051, 10420, 269, 70, "Output",ExpressionUUID->"3098a2a3-45e3-4345-8aa9-fc0f3c5d1559",
 CellID->637169717]
}, Open  ]],
Cell[1366406, 33323, 123, 3, 70, "MathCaption",ExpressionUUID->"47533f0b-c670-41eb-8e47-ab704c0a9954",
 CellID->2078239195],
Cell[CellGroupData[{
Cell[1366554, 33330, 313, 10, 70, "Input",ExpressionUUID->"600e1fb7-93dd-4e7a-9bc8-fcd71d26728f",
 CellID->144631910],
Cell[1366870, 33342, 48485, 1030, 70, "Output",ExpressionUUID->"420f4691-4c08-4c2d-90ed-d02253a67a93",
 CellID->841573546]
}, Open  ]],
Cell[1415370, 34375, 94, 1, 70, "MathCaption",ExpressionUUID->"db8392e1-3b5c-4ebe-9096-99ae1767a82f",
 CellID->1914505686],
Cell[CellGroupData[{
Cell[1415489, 34380, 654, 15, 70, "Input",ExpressionUUID->"97b96d68-679d-443a-a0c0-5957db6c9cc5",
 CellID->1349581601],
Cell[1416146, 34397, 10491, 271, 70, "Output",ExpressionUUID->"09a7eb19-afbb-4add-b397-40cb07043725",
 CellID->1805328114]
}, Open  ]],
Cell[1426652, 34671, 134, 4, 70, "MathCaption",ExpressionUUID->"3761faaa-f9f7-44e7-9ac9-2cb04b2856ce",
 CellID->2141940815],
Cell[CellGroupData[{
Cell[1426811, 34679, 312, 10, 70, "Input",ExpressionUUID->"5e36d626-759b-4808-ac94-64d45d154b23",
 CellID->1785374157],
Cell[1427126, 34691, 21355, 357, 70, "Output",ExpressionUUID->"329c8e39-7f75-4f65-8b4c-3b879ad342cd",
 CellTags->"RasterizedOutput",
 CellID->1792329068]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1448530, 35054, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"7d97730e-5012-4cbf-b350-54d4962d9c2e",
 CellID->418653686],
Cell[1448611, 35057, 213, 5, 70, "Text",ExpressionUUID->"581d970e-1bbe-402a-9f64-fa43c08fe778",
 CellID->1156073030],
Cell[1448827, 35064, 1108, 22, 70, "Input",ExpressionUUID->"1f25642f-bcb6-4edf-bb1a-8e1d5c8a7995",
 CellID->38250836],
Cell[1449938, 35088, 184, 7, 70, "MathCaption",ExpressionUUID->"28b72d6a-603a-415f-954c-a89a686507bb",
 CellID->1834860801],
Cell[CellGroupData[{
Cell[1450147, 35099, 208, 6, 70, "Input",ExpressionUUID->"b975a8dc-b2a3-4d69-b589-6acfbbad7a1b",
 CellID->640311487],
Cell[1450358, 35107, 10410, 269, 70, "Output",ExpressionUUID->"df61851c-2484-442e-a8a4-d1f945bd016a",
 CellID->658156183]
}, Open  ]],
Cell[1460783, 35379, 90, 1, 70, "MathCaption",ExpressionUUID->"e040c887-3528-4ab4-92ad-afab3f8b229b",
 CellID->571106757],
Cell[CellGroupData[{
Cell[1460898, 35384, 178, 4, 70, "Input",ExpressionUUID->"c5e5f5bf-2fde-45ca-8667-a8fe061a85b8",
 CellID->1486846456],
Cell[1461079, 35390, 253, 7, 70, "Output",ExpressionUUID->"cdc4714c-7505-4c0e-81c6-1234201911c2",
 CellID->2090185631]
}, Open  ]],
Cell[1461347, 35400, 308, 6, 70, "Text",ExpressionUUID->"0c464bea-bed1-4f74-bbfa-57eb50331871",
 CellID->280773926],
Cell[1461658, 35408, 356, 11, 70, "MathCaption",ExpressionUUID->"d55794d5-5a5b-42ef-b88c-bc7edfad701a",
 CellID->945801823],
Cell[CellGroupData[{
Cell[1462039, 35423, 524, 13, 70, "Input",ExpressionUUID->"cb8fc8f7-a00f-499d-9669-5dbb5b953094",
 CellID->417284067],
Cell[1462566, 35438, 10456, 270, 70, "Output",ExpressionUUID->"f8de4a8a-f93f-45bc-bcf9-1b9692c63ca8",
 CellID->1212402591]
}, Open  ]],
Cell[1473037, 35711, 81, 1, 70, "MathCaption",ExpressionUUID->"0b26018c-747a-4880-bcb5-5c2423e97aa2",
 CellID->430709602],
Cell[CellGroupData[{
Cell[1473143, 35716, 183, 5, 70, "Input",ExpressionUUID->"54575cd8-7e0d-4d67-a8b2-9b8097db51df",
 CellID->1916390424],
Cell[1473329, 35723, 290, 7, 70, "Output",ExpressionUUID->"4c9a55c8-27c8-40cf-9205-8c1ea1132132",
 CellID->1525504201]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1473668, 35736, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"bd01320f-7a4d-4086-ae5e-15552e6fd63f",
 CellID->1084739385],
Cell[1473731, 35739, 594, 15, 70, "Text",ExpressionUUID->"939fab5d-5c4d-48a5-a5cd-0fb8c18c0306",
 CellID->1226164312],
Cell[CellGroupData[{
Cell[1474350, 35758, 300, 8, 70, "Input",ExpressionUUID->"b92465de-40f0-4e49-aebf-3d8d9b1576a9",
 CellID->890515172],
Cell[CellGroupData[{
Cell[1474675, 35770, 4555, 133, 70, "Print",ExpressionUUID->"efb5f45e-8746-4d8f-907d-02e8fdfc367c",
 CellID->341844674],
Cell[1479233, 35905, 450, 12, 70, "Print",ExpressionUUID->"f73db8cc-cd48-460a-953f-508e0c15ca8b",
 CellID->864680193],
Cell[1479686, 35919, 45702, 947, 70, "Print",ExpressionUUID->"50680311-817b-46c7-bd4b-e3ed1b44c07d",
 CellID->658164502]
}, Open  ]],
Cell[1525403, 36869, 10247, 265, 70, "Output",ExpressionUUID->"4206e50d-52a0-4a05-8c33-fcf82e667128",
 CellID->82519417]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1535699, 37140, 69, 1, 70, "Subsubsubsection",ExpressionUUID->"4c06855a-c3e9-4dd1-9ba7-87bcf56d93fc",
 CellID->1252715262],
Cell[1535771, 37143, 493, 12, 70, "Text",ExpressionUUID->"7f1611d6-77b6-46c9-b511-b09235324656",
 CellID->1581980320],
Cell[1536267, 37157, 685, 19, 70, "DefinitionBox",ExpressionUUID->"98b1d95e-8b09-4825-a880-2f0ceb184638",
 CellID->472784104],
Cell[1536955, 37178, 308, 9, 70, "Caption",ExpressionUUID->"88aa7480-be12-4411-8e03-880c08f0d103",
 CellID->392942028],
Cell[1537266, 37189, 197, 4, 70, "MathCaption",ExpressionUUID->"76da696d-b078-4fd7-973b-6a7e017c7660",
 CellID->1324534886],
Cell[CellGroupData[{
Cell[1537488, 37197, 225, 5, 70, "Input",ExpressionUUID->"2df79dfd-ce50-4d98-bea6-ab7a3fb9e4e1",
 CellID->642344200],
Cell[1537716, 37204, 9079, 239, 70, "Output",ExpressionUUID->"240d1c9f-0b09-4fb0-b3af-525e6dfe80d3",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1546856, 37450, 75, 1, 70, "Subsubsection",ExpressionUUID->"1e021fc3-25a0-4ef0-9491-2773c7ae82f4",
 CellID->1109625018],
Cell[1546934, 37453, 92, 1, 70, "Text",ExpressionUUID->"da1839c2-57e4-47fa-a3e2-20492653992e",
 CellID->719686978],
Cell[1547029, 37456, 162, 4, 70, "MathCaption",ExpressionUUID->"57d41e52-a5ad-49cc-a85a-0574fdc23b3e",
 CellID->1151139342],
Cell[CellGroupData[{
Cell[1547216, 37464, 191, 6, 70, "Input",ExpressionUUID->"8f87c8ef-37fb-4ee6-98ef-349316b15caa",
 CellID->518745171],
Cell[1547410, 37472, 7419, 199, 70, "Output",ExpressionUUID->"08bb0c68-2a6e-4458-926f-d7da90865dd4",
 CellID->824935153]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1554878, 37677, 118, 3, 70, "Subsubsection",ExpressionUUID->"7e0a77be-e88c-48ad-b2c9-5b4f75ef704e",
 CellID->1009763177],
Cell[1554999, 37682, 482, 12, 70, "Text",ExpressionUUID->"94dfdbe9-9686-4813-b7ea-5823c4255bfc",
 CellID->278067401],
Cell[1555484, 37696, 169, 4, 70, "MathCaption",ExpressionUUID->"2a6dac4b-ec60-41a6-9103-6517041db465",
 CellID->96962883],
Cell[CellGroupData[{
Cell[1555678, 37704, 250, 6, 70, "Input",ExpressionUUID->"46b3092a-b1bc-4ab9-9c25-ca3d2834ab85",
 CellID->1862570155],
Cell[1555931, 37712, 8581, 225, 70, "Output",ExpressionUUID->"028f47ab-f5f3-434e-957c-83f0755cbe76",
 CellID->530691439]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1564561, 37943, 104, 2, 70, "Subsubsection",ExpressionUUID->"9b0fe139-d3bc-436f-bb06-dc29bb3ce8a0",
 CellID->1412731195],
Cell[1564668, 37947, 283, 9, 70, "MathCaption",ExpressionUUID->"5bf42020-d77d-47f7-86c4-219e34df7d7c",
 CellID->966741969],
Cell[CellGroupData[{
Cell[1564976, 37960, 208, 5, 70, "Input",ExpressionUUID->"846ebd70-23bb-44a2-b97e-8cb2fad58288",
 CellID->170999781],
Cell[1565187, 37967, 9619, 247, 70, "Output",ExpressionUUID->"b33ffc77-6571-472d-bd72-79a74b870842",
 CellID->1856841682]
}, Open  ]],
Cell[1574821, 38217, 348, 11, 70, "MathCaption",ExpressionUUID->"8e5aa45c-82ca-4105-9478-35cb5eb4e21d",
 CellID->245953314],
Cell[CellGroupData[{
Cell[1575194, 38232, 192, 5, 70, "Input",ExpressionUUID->"82dad2c7-f027-47c1-9048-ce0f8cd61ad2",
 CellID->1978811570],
Cell[1575389, 38239, 9619, 247, 70, "Output",ExpressionUUID->"09a51fa0-6290-4fb0-97d6-a858391ecd8b",
 CellID->1324492706]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1585069, 38493, 68, 1, 70, "Subsection",ExpressionUUID->"6b12b92d-44f3-4b6c-ac7b-3837b5a2089b",
 CellID->453326653],
Cell[1585140, 38496, 511, 9, 70, "Text",ExpressionUUID->"d557c3a8-6777-4794-af9e-be8a94128e19",
 CellID->184556424],
Cell[CellGroupData[{
Cell[1585676, 38509, 73, 1, 70, "Subsubsection",ExpressionUUID->"91c1ce9f-69de-4be7-b765-bffdb21b0d9f",
 CellID->633718938],
Cell[1585752, 38512, 75, 1, 70, "Text",ExpressionUUID->"f6fcfd2a-238e-4b06-8c47-21926ea9fc64",
 CellID->1542785493],
Cell[CellGroupData[{
Cell[1585852, 38517, 202, 5, 70, "Input",ExpressionUUID->"e642e498-509f-4699-b717-6f243576b277",
 CellID->878226973],
Cell[1586057, 38524, 8910, 235, 70, "Output",ExpressionUUID->"083fc7d8-303d-44c8-a069-bed4df24e856",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1595016, 38765, 123, 3, 70, "Subsubsection",ExpressionUUID->"3db4948e-19c1-4aab-abf6-9ef16de5e1e1",
 CellID->360522749],
Cell[1595142, 38770, 160, 4, 70, "MathCaption",ExpressionUUID->"2e7c4634-e369-4164-8093-43c92ad7db0f",
 CellID->677226397],
Cell[1595305, 38776, 367, 10, 70, "Input",ExpressionUUID->"31a5d995-6252-42ff-91a0-8365dbff99a9",
 CellID->480725279],
Cell[1595675, 38788, 365, 8, 70, "MathCaption",ExpressionUUID->"1a228f5f-e23e-4694-bc15-36b73a548cfe",
 CellID->700277754],
Cell[CellGroupData[{
Cell[1596065, 38800, 327, 7, 70, "Input",ExpressionUUID->"a71cba7f-58f7-46e0-98b2-09a378a7ca02",
 CellID->1357825918],
Cell[CellGroupData[{
Cell[1596417, 38811, 423, 10, 70, "Print",ExpressionUUID->"f73605a0-9ae5-44d2-8acc-4d02246d6591",
 CellID->1877585153],
Cell[1596843, 38823, 425, 10, 70, "Print",ExpressionUUID->"0bd05482-ef24-44e7-9f66-fdc316ba9e1e",
 CellID->163355591],
Cell[1597271, 38835, 422, 10, 70, "Print",ExpressionUUID->"7e9fcc65-c32d-4080-b552-9f5a6011f0f2",
 CellID->259759008],
Cell[1597696, 38847, 425, 10, 70, "Print",ExpressionUUID->"55d90de2-1304-4523-ad10-a0c0a621128b",
 CellID->778641117],
Cell[1598124, 38859, 425, 10, 70, "Print",ExpressionUUID->"762f599f-b96c-44b8-bfdb-f8936a1eccb2",
 CellID->617410823],
Cell[1598552, 38871, 421, 10, 70, "Print",ExpressionUUID->"23fcb21d-91c7-480a-b936-afa497a54d12",
 CellID->71021389],
Cell[1598976, 38883, 422, 10, 70, "Print",ExpressionUUID->"1de2adea-1be4-40ff-aaad-487f19b99948",
 CellID->901761449],
Cell[1599401, 38895, 422, 10, 70, "Print",ExpressionUUID->"5e21a36e-d790-4df8-ac33-7bfd7aaae75e",
 CellID->932516019],
Cell[1599826, 38907, 423, 10, 70, "Print",ExpressionUUID->"3703797e-3235-41b3-b7cd-aa2c3edb48ea",
 CellID->1175383913],
Cell[1600252, 38919, 425, 10, 70, "Print",ExpressionUUID->"58c9c56b-4173-4bac-b7d5-518d24db3a12",
 CellID->290081537],
Cell[1600680, 38931, 423, 10, 70, "Print",ExpressionUUID->"3199478c-8055-484f-be13-a162276a8440",
 CellID->1628114812],
Cell[1601106, 38943, 425, 10, 70, "Print",ExpressionUUID->"d1105f92-75a8-4ba8-9db3-e839308a6656",
 CellID->458717401]
}, Open  ]],
Cell[1601546, 38956, 8906, 234, 70, "Output",ExpressionUUID->"c19c2b61-590c-476c-9e18-9311dc316194",
 CellID->197065877]
}, Open  ]],
Cell[1610467, 39193, 94, 1, 70, "MathCaption",ExpressionUUID->"1d1f0831-665e-4ebd-8c2a-9777f8ac5a55",
 CellID->1180721070],
Cell[CellGroupData[{
Cell[1610586, 39198, 681, 15, 70, "Input",ExpressionUUID->"fe1037c6-bb94-4e88-bf32-04ebcc5e5a84",
 CellID->1630125210],
Cell[1611270, 39215, 9020, 237, 70, "Output",ExpressionUUID->"77448a35-1b26-4f7d-b557-f8581385b8eb",
 CellID->666411065]
}, Open  ]],
Cell[1620305, 39455, 217, 7, 70, "MathCaption",ExpressionUUID->"03a27077-da62-4889-8574-12da6ab21e40",
 CellID->314732997],
Cell[1620525, 39464, 249, 7, 70, "Input",ExpressionUUID->"52b660ec-c623-41ae-a67c-6fa58af2a709",
 CellID->465258018],
Cell[1620777, 39473, 91, 1, 70, "MathCaption",ExpressionUUID->"f9911a93-07a7-49d0-90fc-ca54a162713d",
 CellID->1296207012],
Cell[CellGroupData[{
Cell[1620893, 39478, 198, 6, 70, "Input",ExpressionUUID->"9a6f9f9e-3e60-4946-a62a-5ad7a26f74cd",
 CellID->1277135516],
Cell[1621094, 39486, 253, 7, 70, "Output",ExpressionUUID->"ab2221fd-2bb2-4daa-a094-4998c98d6edb",
 CellID->1243550350]
}, Open  ]],
Cell[1621362, 39496, 370, 11, 70, "MathCaption",ExpressionUUID->"3d7a06a5-6caa-4c20-9b49-68041d359379",
 CellID->115749397],
Cell[1621735, 39509, 573, 15, 70, "Input",ExpressionUUID->"40b07b63-c04a-45db-857a-c59fcdbd3556",
 CellID->1927414844],
Cell[1622311, 39526, 81, 1, 70, "MathCaption",ExpressionUUID->"6e047cb9-02e0-4f2f-9885-4c89e433e6aa",
 CellID->889199561],
Cell[CellGroupData[{
Cell[1622417, 39531, 204, 6, 70, "Input",ExpressionUUID->"8373a1c7-9ee6-4439-a977-849f6a819cad",
 CellID->438322254],
Cell[1622624, 39539, 290, 7, 70, "Output",ExpressionUUID->"c140e344-7b75-4056-8f6d-546f52434b37",
 CellID->1039879846]
}, Open  ]],
Cell[1622929, 39549, 595, 15, 70, "MathCaption",ExpressionUUID->"09a73b0a-beea-469c-a2e3-2a94efa29413",
 CellID->107474856],
Cell[CellGroupData[{
Cell[1623549, 39568, 342, 9, 70, "Input",ExpressionUUID->"e21a1b91-bb0c-4a2a-942a-e4a0c05a8a6f",
 CellID->1335914459],
Cell[CellGroupData[{
Cell[1623916, 39581, 4203, 118, 70, "Print",ExpressionUUID->"5053c3df-5912-4ddb-be94-8397c35e5b10",
 CellID->1038652436],
Cell[1628122, 39701, 455, 12, 70, "Print",ExpressionUUID->"4f80fbe5-8b4e-49e3-a0ef-d2f1e43c4261",
 CellID->1884409036],
Cell[1628580, 39715, 46172, 954, 70, "Print",ExpressionUUID->"438b9fc2-917e-4f6a-aaa4-5c309418c9a9",
 CellID->173842096]
}, Open  ]]
}, Open  ]],
Cell[1674779, 40673, 170, 4, 70, "MathCaption",ExpressionUUID->"58348ca7-141d-420c-bd97-06474dd55ba7",
 CellID->40883495],
Cell[1674952, 40679, 223, 7, 70, "Input",ExpressionUUID->"2e331af6-96b0-40dc-a88c-fae31556d760",
 CellID->2081617072],
Cell[1675178, 40688, 181, 4, 70, "MathCaption",ExpressionUUID->"fefd18f9-f3a1-4baf-8468-faca59537f54",
 CellID->1475115608],
Cell[1675362, 40694, 289, 7, 70, "Input",ExpressionUUID->"969c974a-09d3-44a0-9f76-31cc2a90be26",
 CellID->1716802688],
Cell[1675654, 40703, 283, 9, 70, "MathCaption",ExpressionUUID->"a0435db1-bc27-436d-ad66-85dfc3345362",
 CellID->454276768],
Cell[1675940, 40714, 249, 7, 70, "Input",ExpressionUUID->"b52a2388-fc07-4491-bd8a-a53fda61184d",
 CellID->725274691],
Cell[1676192, 40723, 349, 11, 70, "MathCaption",ExpressionUUID->"f6ea5578-1f49-4a8e-abdc-16930d0b358e",
 CellID->1396633943],
Cell[1676544, 40736, 233, 7, 70, "Input",ExpressionUUID->"a229a654-c238-46f2-a249-68178b25e34a",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1676826, 40749, 82, 1, 70, "Subsection",ExpressionUUID->"2caa4591-00d2-4c4c-bb12-364dab376041",
 CellID->298821825],
Cell[1676911, 40752, 869, 24, 70, "Text",ExpressionUUID->"fad8ca75-431b-4150-92bd-27b824b20ced",
 CellID->1481646089],
Cell[1677783, 40778, 161, 4, 70, "MathCaption",ExpressionUUID->"91842d5c-aab4-47cf-9791-f1a6fcba3a99",
 CellID->1952930858],
Cell[CellGroupData[{
Cell[1677969, 40786, 240, 7, 70, "Input",ExpressionUUID->"faf2d13d-9755-44db-ac1e-b017ee776610",
 CellID->768869658],
Cell[1678212, 40795, 92, 2, 70, "Output",ExpressionUUID->"608bea20-cfcd-4835-8a2b-41b04f107345",
 CellID->1856700619]
}, Open  ]],
Cell[1678319, 40800, 141, 4, 70, "MathCaption",ExpressionUUID->"986fb761-8041-4758-ad1a-48a8023b78cf",
 CellID->1337236679],
Cell[CellGroupData[{
Cell[1678485, 40808, 314, 9, 70, "Input",ExpressionUUID->"7d30890d-9b9a-45f1-b09a-b8db5aa9c8b2",
 CellID->1520498098],
Cell[1678802, 40819, 269, 8, 70, "Output",ExpressionUUID->"13046838-9057-4494-8e65-6ba574d6b8f7",
 CellID->1886752990]
}, Open  ]],
Cell[1679086, 40830, 125, 3, 70, "MathCaption",ExpressionUUID->"19ecfbaf-3b0f-46ac-92fb-89cc13de0f93",
 CellID->1474915870],
Cell[CellGroupData[{
Cell[1679236, 40837, 381, 8, 70, "Input",ExpressionUUID->"e9ddba62-5881-4483-8596-5b00579bd5e5",
 CellID->507289769],
Cell[1679620, 40847, 136, 2, 70, "Print",ExpressionUUID->"a2909a2b-ae0b-4fae-9a64-7e2c52a216f7",
 CellID->1019182225],
Cell[1679759, 40851, 10068, 259, 70, "Output",ExpressionUUID->"d55f7aa8-82d7-40e4-a597-86df41c205bb",
 CellID->1066388514]
}, Open  ]],
Cell[1689842, 41113, 616, 19, 70, "Text",ExpressionUUID->"93340eae-ac2c-4b4b-af97-4148fbc0776d",
 CellID->754816834],
Cell[1690461, 41134, 99, 1, 70, "MathCaption",ExpressionUUID->"774f0b0f-d7cc-4e6f-a989-05476e688d96",
 CellID->1020626209],
Cell[CellGroupData[{
Cell[1690585, 41139, 126, 3, 70, "Input",ExpressionUUID->"6f4f2d43-1011-4fa5-9e1a-359121906d12",
 CellID->1712806074],
Cell[1690714, 41144, 251, 6, 70, "Output",ExpressionUUID->"22342846-d1c4-43df-99bc-6059bbb37bba",
 CellID->497917949]
}, Open  ]],
Cell[1690980, 41153, 92, 1, 70, "MathCaption",ExpressionUUID->"8e5fa81f-c161-43b8-932f-99e660bad04e",
 CellID->1056863292],
Cell[CellGroupData[{
Cell[1691097, 41158, 183, 6, 70, "Input",ExpressionUUID->"d272caba-24ed-413a-a2aa-963df7be6af2",
 CellID->864104307],
Cell[1691283, 41166, 501, 12, 70, "Output",ExpressionUUID->"ca7f1d69-9c49-434a-9a32-37199aef238c",
 CellID->2040720583]
}, Open  ]],
Cell[1691799, 41181, 104, 2, 70, "MathCaption",ExpressionUUID->"a50d6b49-c5b7-4511-94ad-b393799e78f9",
 CellID->575017700],
Cell[CellGroupData[{
Cell[1691928, 41187, 188, 6, 70, "Input",ExpressionUUID->"a1ebb054-6bb7-48b9-aeab-b3f408dc4152",
 CellID->646072400],
Cell[1692119, 41195, 6483, 157, 70, "Output",ExpressionUUID->"e64bf68e-a84a-47e3-8123-8b9bfd07063b",
 CellID->1348085108]
}, Open  ]],
Cell[1698617, 41355, 566, 17, 70, "MathCaption",ExpressionUUID->"717d7666-7493-4f19-8441-0586cd6e32c6",
 CellID->861507568],
Cell[CellGroupData[{
Cell[1699208, 41376, 288, 7, 70, "Input",ExpressionUUID->"2ee5dbfb-1a5e-46b8-a279-ac4ac9321513",
 CellID->1022947302],
Cell[1699499, 41385, 615, 12, 70, "Output",ExpressionUUID->"970ad040-56e1-49d4-945b-20dfa262920b",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1700175, 41404, 64, 1, 70, "Section",ExpressionUUID->"95b668db-1df0-4bd3-a590-40ff8b639e87",
 CellID->1340833355],
Cell[1700242, 41407, 707, 19, 70, "Text",ExpressionUUID->"436f64c8-8714-4b63-92cd-b80ab1295b09",
 CellID->834349127],
Cell[CellGroupData[{
Cell[1700974, 41430, 80, 1, 70, "Subsection",ExpressionUUID->"88579fa0-375e-4d50-81b7-d7b1c035396d",
 CellID->1502510612],
Cell[1701057, 41433, 666, 18, 70, "DefinitionBox",ExpressionUUID->"44fa2a23-9989-476a-b509-0f14d5714302",
 CellID->1289482141],
Cell[1701726, 41453, 68, 1, 70, "Caption",ExpressionUUID->"e9f69ee9-504c-4e7d-8edb-f48bf297de07",
 CellID->2068861910],
Cell[1701797, 41456, 303, 10, 70, "MathCaption",ExpressionUUID->"bd91c409-8bf7-43cf-8924-72e7fed1fcfa",
 CellID->681556684],
Cell[CellGroupData[{
Cell[1702125, 41470, 298, 8, 70, "Input",ExpressionUUID->"367c163e-d6a7-4407-ad70-974c62cf9244",
 CellID->245414890],
Cell[1702426, 41480, 10022, 257, 70, "Output",ExpressionUUID->"d1f0381a-eaeb-4418-a2b9-59eb1e0f9ff6",
 CellID->808884430]
}, Open  ]],
Cell[1712463, 41740, 99, 1, 70, "MathCaption",ExpressionUUID->"35016f97-fdd8-4627-a3fd-00c5587d86b7",
 CellID->1179244319],
Cell[CellGroupData[{
Cell[1712587, 41745, 275, 9, 70, "Input",ExpressionUUID->"764be91b-277b-4aa5-8b4d-b00e2bc282ce",
 CellID->764718377],
Cell[1712865, 41756, 699, 15, 70, "Output",ExpressionUUID->"9df0de05-15fd-4cf8-941c-4eba30aedcba",
 CellID->729829850]
}, Open  ]],
Cell[CellGroupData[{
Cell[1713601, 41776, 118, 3, 70, "Input",ExpressionUUID->"6ab25d40-c3a9-486c-9794-4ec6dbee84fc",
 CellID->432691270],
Cell[1713722, 41781, 290, 6, 70, "Output",ExpressionUUID->"6d742700-9f87-4037-b2ba-ea4cd0d0455d",
 CellID->1950743689]
}, Open  ]],
Cell[1714027, 41790, 125, 3, 70, "MathCaption",ExpressionUUID->"dff9a4e7-5c24-4307-9e9b-f14c89f07b8f",
 CellID->2090161703],
Cell[CellGroupData[{
Cell[1714177, 41797, 334, 11, 70, "Input",ExpressionUUID->"e5332a20-dcc4-4ef3-a7b6-9ae234487145",
 CellID->810244695],
Cell[1714514, 41810, 1518, 35, 70, "Output",ExpressionUUID->"71cc7717-e073-4a7d-866d-b4de483ff322",
 CellID->1387605075]
}, Open  ]],
Cell[CellGroupData[{
Cell[1716069, 41850, 180, 6, 70, "Input",ExpressionUUID->"b660ed56-2b8f-4bab-8254-762325b3c880",
 CellID->75235690],
Cell[1716252, 41858, 605, 14, 70, "Output",ExpressionUUID->"86de2756-9485-455b-9380-d23e3668bdeb",
 CellID->916666016]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1716906, 41878, 72, 1, 70, "Subsection",ExpressionUUID->"06fbb79f-7743-446e-800f-fd6950be1855",
 CellID->1764557057],
Cell[1716981, 41881, 1846, 53, 70, "Text",ExpressionUUID->"d9d9c49a-dfd9-4d11-8bbb-39020c64b4ce",
 CellID->32166003],
Cell[1718830, 41936, 384, 9, 70, "Text",ExpressionUUID->"a221fd72-8a45-4135-bc8a-2568f3158a0a",
 CellID->58096227],
Cell[1719217, 41947, 1643, 39, 70, "DefinitionBox",ExpressionUUID->"fdad8d45-2054-4511-b51d-2327db7f071f",
 CellID->1813135289],
Cell[1720863, 41988, 76, 1, 70, "Caption",ExpressionUUID->"5b0eac32-dd1d-4b6a-a946-0a808025b792",
 CellID->571851293],
Cell[1720942, 41991, 2252, 55, 70, "DefinitionBox3Col",ExpressionUUID->"563d4dba-a102-4e70-8f02-f402a34515e3",
 CellID->1454392793],
Cell[1723197, 42048, 263, 10, 70, "Caption",ExpressionUUID->"33175a9a-dd50-4c8c-ac2f-60778db2bee1",
 CellID->1320801797],
Cell[1723463, 42060, 240, 5, 70, "Text",ExpressionUUID->"ec654323-3c31-4183-9bd2-dbbd7781279d",
 CellID->416113495],
Cell[1723706, 42067, 6752, 161, 70, "Text",ExpressionUUID->"ea9a8494-9747-4cc2-a39d-41e58022f8aa",
 CellID->1412755833],
Cell[1730461, 42230, 1752, 41, 70, "DefinitionBox",ExpressionUUID->"a8d2f1bb-1d96-41df-878b-ea4fe0590528",
 CellID->1608083999],
Cell[1732216, 42273, 297, 10, 70, "Caption",ExpressionUUID->"8ffd5b2a-b634-48fa-a18d-a51223bbf5aa",
 CellID->986073698],
Cell[1732516, 42285, 147, 4, 70, "MathCaption",ExpressionUUID->"f8a3de23-c872-41c6-b420-fa9aa35f1994",
 CellID->565513990],
Cell[CellGroupData[{
Cell[1732688, 42293, 179, 5, 70, "Input",ExpressionUUID->"c9e5f6ba-81c4-48fe-a75d-755c41268419",
 CellID->1978491955],
Cell[1732870, 42300, 10901, 276, 70, "Output",ExpressionUUID->"f5f70774-0a00-4824-a89b-3e1a4d8341b5",
 CellID->92211928]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1743832, 42583, 53, 1, 70, "Section",ExpressionUUID->"1a756111-7123-4218-bbde-dec5a31ae8b3",
 CellID->1200455778],
Cell[1743888, 42586, 762, 20, 70, "Text",ExpressionUUID->"62d487bc-b37a-41b5-b344-2967ff5bc1d6",
 CellID->944139540],
Cell[1744653, 42608, 1371, 37, 70, "DefinitionBox",ExpressionUUID->"02c50aa4-4864-4a99-88bd-2885d03af08f",
 CellID->581300403],
Cell[1746027, 42647, 82, 1, 70, "Caption",ExpressionUUID->"448cb768-1688-496a-a9c6-8180814a464c",
 CellID->1012763018],
Cell[1746112, 42650, 842, 24, 70, "DefinitionBox3Col",ExpressionUUID->"74dc151d-e690-47c7-b17f-58eb4f4dd06a",
 CellID->2015411944],
Cell[1746957, 42676, 284, 10, 70, "Caption",ExpressionUUID->"afe3069a-92cb-412c-abfd-ab1341f52896",
 CellID->768978677],
Cell[1747244, 42688, 2901, 77, 70, "DefinitionBox3Col",ExpressionUUID->"4603eabd-32b7-4d1c-bd4f-4e13a10b3616",
 CellID->1299131947],
Cell[1750148, 42767, 281, 10, 70, "Caption",ExpressionUUID->"4c8d7a18-ce57-4b4a-9d3e-564fe43e6eac",
 CellID->1044394180],
Cell[1750432, 42779, 400, 7, 70, "MathCaption",ExpressionUUID->"2b725c3f-87f1-4b89-a8ff-51200ca7518f",
 CellID->1376228890],
Cell[CellGroupData[{
Cell[1750857, 42790, 146, 4, 70, "Input",ExpressionUUID->"815295c6-4fe2-4e8e-8d48-4d8e0f7df446",
 CellID->1880076040],
Cell[1751006, 42796, 372119, 6107, 70, "Output",ExpressionUUID->"410fa533-ca5f-43bf-98f2-fd10f2f6a492",
 CellTags->"RasterizedOutput",
 CellID->866798143]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2123174, 48909, 65, 1, 70, "Section",ExpressionUUID->"2bf392a4-9a0d-49bb-ab01-204f98c13510",
 CellID->2035743524],
Cell[2123242, 48912, 277, 5, 70, "Text",ExpressionUUID->"b040105b-4a3e-48ef-a2b1-78243ce16e8e",
 CellID->1722961908],
Cell[CellGroupData[{
Cell[2123544, 48921, 65, 1, 70, "Subsection",ExpressionUUID->"ae93117a-d9e6-480e-9058-692d14a97f95",
 CellID->2013711891],
Cell[2123612, 48924, 745, 19, 70, "Text",ExpressionUUID->"1cd71e3e-3fed-4ac1-84c3-c05612533ffa",
 CellID->1112357573],
Cell[2124360, 48945, 501, 13, 70, "DefinitionBox",ExpressionUUID->"26e7dbcf-f944-4d11-b8b9-6755a9f9aac8",
 CellID->329777640],
Cell[2124864, 48960, 158, 4, 70, "Caption",ExpressionUUID->"ff7542f4-d5fe-4411-8c6a-c15f9193dfcc",
 CellID->2064986220],
Cell[2125025, 48966, 10175, 252, 70, "DefinitionBox3Col",ExpressionUUID->"056f87c2-b1cf-45b7-9035-133603a10e3b",
 CellID->740180373],
Cell[2135203, 49220, 242, 9, 70, "Caption",ExpressionUUID->"dc7947ce-5939-4c70-9a20-8ac06829bf60",
 CellID->1986245587],
Cell[2135448, 49231, 1937, 58, 70, "Text",ExpressionUUID->"17ec4038-af92-4f6b-be4c-de9d6cdc0fc5",
 CellID->296707676],
Cell[2137388, 49291, 5849, 143, 70, "Text",ExpressionUUID->"490015a7-4bcd-4397-8e46-ce51c797f6da",
 CellID->308882198],
Cell[2143240, 49436, 956, 24, 70, "Text",ExpressionUUID->"f6ea66b4-e225-44ff-a1fe-3c7a262e612b",
 CellID->915126987],
Cell[2144199, 49462, 411, 12, 70, "Text",ExpressionUUID->"45df6ced-9309-4697-9bb0-e1c234dfa8d9",
 CellID->875538647],
Cell[2144613, 49476, 744, 23, 70, "DefinitionBox",ExpressionUUID->"01530399-ac56-4cff-8d0f-d84764b3e97d",
 CellID->1158915490],
Cell[2145360, 49501, 80, 1, 70, "Caption",ExpressionUUID->"47f83141-1af9-40b9-a158-c25e23eccd71",
 CellID->215962140],
Cell[2145443, 49504, 353, 6, 70, "MathCaption",ExpressionUUID->"2e5d82d3-f0ca-4296-b1f6-8eda252d65b9",
 CellID->54495101],
Cell[2145799, 49512, 454, 11, 70, "Input",ExpressionUUID->"6e2615f2-1b8a-4cc2-94b4-c420f5c0cf07",
 CellID->1071128885],
Cell[2146256, 49525, 88, 1, 70, "MathCaption",ExpressionUUID->"81f57320-0b29-4af5-b92a-bc31357b4c62",
 CellID->618975626],
Cell[CellGroupData[{
Cell[2146369, 49530, 114, 3, 70, "Input",ExpressionUUID->"cfd95ff1-efbb-46cf-b3c0-ba3492bcb2be",
 CellID->712560114],
Cell[2146486, 49535, 290, 6, 70, "Output",ExpressionUUID->"22119b72-5f43-43d5-bd00-99a09fcc4f93",
 CellID->1709177902]
}, Open  ]],
Cell[2146791, 49544, 116, 3, 70, "MathCaption",ExpressionUUID->"cd33575b-4b03-4167-854d-51c98f3724d0",
 CellID->2051853087],
Cell[CellGroupData[{
Cell[2146932, 49551, 221, 6, 70, "Input",ExpressionUUID->"b7f722ce-b118-4cbc-8b9a-2e33946f6c1b",
 CellID->1202429683],
Cell[2147156, 49559, 43355, 1121, 70, "Output",ExpressionUUID->"bd4bf5e9-b25b-4a59-9bc3-f53413c6ad48",
 CellID->1411736642]
}, Open  ]],
Cell[2190526, 50683, 434, 11, 70, "MathCaption",ExpressionUUID->"fe4bc713-132e-4222-a719-ba79386e338b",
 CellID->430804357],
Cell[CellGroupData[{
Cell[2190985, 50698, 227, 7, 70, "Input",ExpressionUUID->"32c2fd70-647a-402f-ade8-434e209901bf",
 CellID->1361454062],
Cell[2191215, 50707, 2471, 60, 70, "Output",ExpressionUUID->"7107176e-0fa6-4746-ac10-f62b5ca7dc0c",
 CellID->500244026]
}, Open  ]],
Cell[2193701, 50770, 453, 11, 70, "MathCaption",ExpressionUUID->"68c9a82a-1422-47a6-b026-3be3166f7b00",
 CellID->170022261],
Cell[CellGroupData[{
Cell[2194179, 50785, 213, 6, 70, "Input",ExpressionUUID->"605f0698-19ed-4e9d-a920-f0a368dd5462",
 CellID->1410890117],
Cell[2194395, 50793, 2572, 74, 70, "Output",ExpressionUUID->"e92d243c-59a0-4daa-bee6-be5a148d7746",
 CellID->948909842]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2197016, 50873, 58, 1, 70, "Subsection",ExpressionUUID->"2f37a395-2d26-4b98-b0de-24f11e7aacc7",
 CellID->113475317],
Cell[CellGroupData[{
Cell[2197099, 50878, 138, 4, 70, "Subsubsection",ExpressionUUID->"630864c6-9780-4679-bb90-07c542403501",
 CellID->794541302],
Cell[2197240, 50884, 772, 19, 70, "Text",ExpressionUUID->"2f8cd83e-1180-4196-808b-cb233f89c666",
 CellID->1511547068],
Cell[2198015, 50905, 523, 13, 70, "DefinitionBox",ExpressionUUID->"a2107e96-35c9-4ea2-afb6-d6bee5e00794",
 CellID->1987511513],
Cell[2198541, 50920, 187, 4, 70, "Caption",ExpressionUUID->"c884a61c-eec2-4ccc-8bbe-ea4dcf6e5f16",
 CellID->2145353553],
Cell[2198731, 50926, 13106, 313, 70, "DefinitionBox3Col",ExpressionUUID->"770d5e36-0494-40c4-80c9-f4d36eaf6eea",
 CellID->706732141],
Cell[2211840, 51241, 245, 9, 70, "Caption",ExpressionUUID->"c200fe24-ea15-4701-837f-fd08c827b4b3",
 CellID->315042230],
Cell[2212088, 51252, 153, 5, 70, "Text",ExpressionUUID->"fc18bb8e-3328-4ba5-9403-77f5473b030e",
 CellID->1844849291],
Cell[2212244, 51259, 281, 9, 70, "Text",ExpressionUUID->"cc9b0e9b-d738-4f36-ab6a-77af84bc61e2",
 CellID->420108894],
Cell[2212528, 51270, 433, 11, 70, "Text",ExpressionUUID->"a61834d5-1030-4375-a28e-e279bf794a2a",
 CellID->1991433769],
Cell[2212964, 51283, 820, 23, 70, "Text",ExpressionUUID->"0fe0fc71-e54a-4b91-8771-df151b541ef9",
 CellID->446395410],
Cell[2213787, 51308, 524, 12, 70, "Text",ExpressionUUID->"421ca077-945c-4193-a4ce-dd5ccb2f3a5d",
 CellID->1407276899],
Cell[2214314, 51322, 110, 3, 70, "Text",ExpressionUUID->"65bcbdf5-09dc-48e0-8c27-cfaf114a2468",
 CellID->1865437082],
Cell[2214427, 51327, 5359, 131, 70, "Text",ExpressionUUID->"6e50047a-2172-44db-962f-a778b1c23c5c",
 CellID->1474295269],
Cell[2219789, 51460, 169, 5, 70, "Text",ExpressionUUID->"86373459-cf2c-45ed-af0b-915dc125b790",
 CellID->814266997],
Cell[2219961, 51467, 1161, 37, 70, "Text",ExpressionUUID->"33d25d63-abaf-4373-bee7-f287c1bc7aa5",
 CellID->1619619895],
Cell[2221125, 51506, 175, 5, 70, "Text",ExpressionUUID->"8db99d35-c927-4946-ad15-0d22c6ef2cc7",
 CellID->1596349540],
Cell[2221303, 51513, 504, 14, 70, "Text",ExpressionUUID->"36bcf7cc-8b7f-43f4-b6fc-7209e6fcb235",
 CellID->1333516809],
Cell[2221810, 51529, 961, 24, 70, "Text",ExpressionUUID->"fc287f92-9062-47fc-b401-0deed3fc371f",
 CellID->1277668771],
Cell[2222774, 51555, 606, 12, 70, "Text",ExpressionUUID->"73ef8f23-6090-478e-8481-98d6e5491cd1",
 CellID->1090047844],
Cell[2223383, 51569, 536, 9, 70, "Text",ExpressionUUID->"f351ba5f-e37c-4036-ac08-d8026984dbb0",
 CellID->251121551],
Cell[2223922, 51580, 359, 6, 70, "MathCaption",ExpressionUUID->"fe685ce8-56ad-4fc9-af0c-98b78436eb18",
 CellID->1339044942],
Cell[2224284, 51588, 452, 11, 70, "Input",ExpressionUUID->"8d05d4ef-6e5e-4858-91cd-807e80f19336",
 CellID->1847203281],
Cell[2224739, 51601, 121, 3, 70, "MathCaption",ExpressionUUID->"97ca2a71-0841-412e-b089-fb044bcf885b",
 CellID->1921942735],
Cell[CellGroupData[{
Cell[2224885, 51608, 117, 3, 70, "Input",ExpressionUUID->"579f3b28-9df8-4c1d-82a6-f9a81fe86ade",
 CellID->1790012618],
Cell[2225005, 51613, 148, 4, 70, "Output",ExpressionUUID->"5a43a954-466e-40cc-87b3-168b63a95428",
 CellID->921808109]
}, Open  ]],
Cell[2225168, 51620, 95, 1, 70, "MathCaption",ExpressionUUID->"11ef2c21-69e8-407b-a451-4793b96f4da1",
 CellID->1116859782],
Cell[CellGroupData[{
Cell[2225288, 51625, 133, 3, 70, "Input",ExpressionUUID->"ef61880c-9ed1-4b9a-9b01-5bda078d0b29",
 CellID->1866845763],
Cell[2225424, 51630, 10576, 271, 70, "Output",ExpressionUUID->"668810fd-db8c-4ba5-b906-7a0178ff24bb",
 CellID->881858505]
}, Open  ]],
Cell[CellGroupData[{
Cell[2236037, 51906, 135, 3, 70, "Input",ExpressionUUID->"ecdce799-fec1-428a-8175-6337ffda6b74",
 CellID->1218496248],
Cell[2236175, 51911, 9304, 200, 70, "Output",ExpressionUUID->"83cc21db-c990-4949-a11b-d6278b0a887e",
 CellID->1408890497]
}, Open  ]],
Cell[2245494, 52114, 125, 3, 70, "MathCaption",ExpressionUUID->"a760edde-1be7-4aa4-bafb-1aa886c9b34e",
 CellID->1431426074],
Cell[CellGroupData[{
Cell[2245644, 52121, 265, 7, 70, "Input",ExpressionUUID->"828870c2-d555-45f9-a0e6-abf10e994977",
 CellID->1866212024],
Cell[2245912, 52130, 32811, 698, 70, "Output",ExpressionUUID->"371f81c9-5be3-472c-955e-ed4c489005cc",
 CellID->1982568702]
}, Closed]],
Cell[2278738, 52831, 368, 11, 70, "Text",ExpressionUUID->"6a3f62a9-69b7-4c5e-9412-3d3493e4f8fc",
 CellID->488726451],
Cell[2279109, 52844, 1288, 33, 70, "DefinitionBox",ExpressionUUID->"ce06a7bc-2b0d-432e-a1ff-713091ddcbcb",
 CellID->2038566199],
Cell[2280400, 52879, 98, 1, 70, "Caption",ExpressionUUID->"5a0bf8ba-bde5-426e-9024-6fad5b320609",
 CellID->1228002355],
Cell[2280501, 52882, 1178, 31, 70, "DefinitionBox3Col",ExpressionUUID->"b5f93c06-dce8-4323-ab4e-7f1f96555364",
 CellID->1076877467],
Cell[2281682, 52915, 269, 10, 70, "Caption",ExpressionUUID->"79c6476a-81b1-43dd-9e43-e2262db4124a",
 CellID->87410953],
Cell[2281954, 52927, 309, 10, 70, "MathCaption",ExpressionUUID->"72b797c8-7ab3-42a8-b417-168496409163",
 CellID->1660367008],
Cell[2282266, 52939, 405, 12, 70, "Input",ExpressionUUID->"826e6246-62de-4676-a510-6a8a963a19f1",
 CellID->1385794338],
Cell[2282674, 52953, 329, 10, 70, "MathCaption",ExpressionUUID->"08869175-765a-4311-82ac-adb21c267c12",
 CellID->1754716454],
Cell[2283006, 52965, 352, 10, 70, "Input",ExpressionUUID->"efaadf33-9766-4222-8ac3-a58335daa725",
 CellID->126518127]
}, Open  ]],
Cell[CellGroupData[{
Cell[2283395, 52980, 79, 1, 70, "Subsubsection",ExpressionUUID->"5e3eb786-f3d8-420a-98d0-216668b6b1ab",
 CellID->36506248],
Cell[2283477, 52983, 310, 9, 70, "Text",ExpressionUUID->"661d5df7-cdf4-4ff7-8a99-6f94b7841ac0",
 CellID->1912770077],
Cell[2283790, 52994, 364, 11, 70, "DefinitionBox",ExpressionUUID->"60d7b11a-e290-4e99-bced-190f907b9af6",
 CellID->672020044],
Cell[2284157, 53007, 66, 1, 70, "Caption",ExpressionUUID->"60d4062d-c3ba-4e36-b4ff-b8f451720814",
 CellID->1024379935],
Cell[2284226, 53010, 14012, 328, 70, "DefinitionBox3Col",ExpressionUUID->"d2e3dba0-bd2c-447c-b89c-a15671732d7e",
 CellID->812822320],
Cell[2298241, 53340, 255, 9, 70, "Caption",ExpressionUUID->"fb47c6ba-989b-43ac-87e1-402e2190e69b",
 CellID->961253673],
Cell[2298499, 53351, 925, 22, 70, "DefinitionBox",ExpressionUUID->"9d83f34f-b63f-49a0-90c5-488876291d0e",
 CellID->746904677],
Cell[2299427, 53375, 307, 9, 70, "Caption",ExpressionUUID->"177b6bfb-14d8-4911-893c-a4c9fc1c95eb",
 CellID->1184989624],
Cell[2299737, 53386, 100, 1, 70, "MathCaption",ExpressionUUID->"d9b4bba9-e7e6-457f-9641-a5b9d6d63b37",
 CellID->1676459694],
Cell[CellGroupData[{
Cell[2299862, 53391, 180, 5, 70, "Input",ExpressionUUID->"66baa102-159e-4d37-a079-8526fea2fd19",
 CellID->1272628418],
Cell[2300045, 53398, 358, 9, 70, "Output",ExpressionUUID->"75186ae0-9cc3-4e52-99b0-187317118934",
 CellID->545314925]
}, Open  ]],
Cell[2300418, 53410, 74, 1, 70, "MathCaption",ExpressionUUID->"0a574e72-d98f-468a-899f-2e14abbd3770",
 CellID->1218512518],
Cell[2300495, 53413, 223, 6, 70, "Input",ExpressionUUID->"3225a2e5-c77c-4c00-993e-05fbfa974770",
 CellID->1135832234],
Cell[2300721, 53421, 77, 1, 70, "MathCaption",ExpressionUUID->"681d5691-d760-4f8f-aa6a-e94ec95bec39",
 CellID->64193474],
Cell[CellGroupData[{
Cell[2300823, 53426, 272, 7, 70, "Input",ExpressionUUID->"9b589b9e-6545-4d70-b34f-bc01e3a2b15e",
 CellID->862926724],
Cell[2301098, 53435, 21757, 363, 70, "Output",ExpressionUUID->"ac9970a8-b719-4c0a-857f-110f7bf4ae5b",
 CellTags->"RasterizedOutput",
 CellID->1822657880]
}, Open  ]],
Cell[2322870, 53801, 59, 1, 70, "MathCaption",ExpressionUUID->"c0fa6258-403d-4d41-ae63-50548413d145",
 CellID->1377198042],
Cell[CellGroupData[{
Cell[2322954, 53806, 298, 9, 70, "Input",ExpressionUUID->"11b80c3e-602c-4757-80dd-16a6ff484daa",
 CellID->988744528],
Cell[2323255, 53817, 39337, 649, 70, "Output",ExpressionUUID->"76b9dae7-b9e3-461e-931c-93db9cb23207",
 CellID->2006014202]
}, Open  ]],
Cell[2362607, 54469, 75, 1, 70, "MathCaption",ExpressionUUID->"3ff42071-da5b-4fc9-92c3-88d4d6c1db56",
 CellID->632012813],
Cell[CellGroupData[{
Cell[2362707, 54474, 615, 15, 70, "Input",ExpressionUUID->"371fe3a5-30d1-47af-8e17-32d5d301246b",
 CellID->785230029],
Cell[2363325, 54491, 22220, 371, 70, "Output",ExpressionUUID->"e8ccca6d-ddb6-47fc-a9f3-71a40d5d4d74",
 CellTags->"RasterizedOutput",
 CellID->855736338]
}, Open  ]],
Cell[2385560, 54865, 58, 1, 70, "MathCaption",ExpressionUUID->"edd1eacb-e977-48a2-affc-4c2ff548fa6e",
 CellID->983872788],
Cell[CellGroupData[{
Cell[2385643, 54870, 307, 9, 70, "Input",ExpressionUUID->"0b1a7fce-a1b9-406a-8995-b5bff73e3fe0",
 CellID->325866016],
Cell[2385953, 54881, 36759, 607, 70, "Output",ExpressionUUID->"2bcecdff-fa6f-490a-9d30-8d257153e9aa",
 CellID->2019329860]
}, Open  ]],
Cell[2422727, 55491, 95, 1, 70, "Text",ExpressionUUID->"a354a866-68c1-4683-8cb9-f450ce39fdaf",
 CellID->973016157],
Cell[2422825, 55494, 115, 3, 70, "MathCaption",ExpressionUUID->"f3af7f4b-c854-41d8-8bb1-a15453b07476",
 CellID->499168171],
Cell[CellGroupData[{
Cell[2422965, 55501, 463, 14, 70, "Input",ExpressionUUID->"c450617e-1baa-4656-82e4-6c21a6cf4829",
 CellID->1448324815],
Cell[2423431, 55517, 2698, 68, 70, "Output",ExpressionUUID->"f6950db5-5b02-474f-8581-e92f798bedb1",
 CellID->863400676]
}, Open  ]],
Cell[2426144, 55588, 115, 3, 70, "MathCaption",ExpressionUUID->"1884c0ff-06ce-4e37-9c18-5b3d2f32eed1",
 CellID->401232237],
Cell[CellGroupData[{
Cell[2426284, 55595, 915, 27, 70, "Input",ExpressionUUID->"84dfe996-8a8d-48cc-b230-1fe4991f5253",
 CellID->411555679],
Cell[2427202, 55624, 26581, 578, 70, "Output",ExpressionUUID->"8b4ecf74-63d7-402e-a936-4efd5713be28",
 CellID->778663946]
}, Closed]],
Cell[2453798, 56205, 96, 1, 70, "MathCaption",ExpressionUUID->"8c087878-5ab7-408a-9ab2-0101d072c79f",
 CellID->1111199700],
Cell[CellGroupData[{
Cell[2453919, 56210, 422, 9, 70, "Input",ExpressionUUID->"d8470ae5-8646-41b1-a406-733cac889c65",
 CellID->1553382050],
Cell[2454344, 56221, 189071, 3106, 70, "Output",ExpressionUUID->"600ed31e-4972-4818-b640-5a0b0852647d",
 CellTags->"RasterizedOutput",
 CellID->1644939596]
}, Open  ]],
Cell[2643430, 59330, 119, 3, 70, "MathCaption",ExpressionUUID->"82a97df7-d3fa-444f-96d0-b0b010bbcccd",
 CellID->1695062567],
Cell[CellGroupData[{
Cell[2643574, 59337, 262, 7, 70, "Input",ExpressionUUID->"320cc283-a3ec-4932-8c58-1bafcaf3c6b1",
 CellID->398502467],
Cell[2643839, 59346, 568163, 9405, 70, "Output",ExpressionUUID->"6bbd5659-1938-46f7-81bc-c753a8e0dd8b",
 CellID->1509656058]
}, Open  ]],
Cell[3212017, 68754, 119, 3, 70, "MathCaption",ExpressionUUID->"3f48e214-6759-4100-9fce-79e4d6752606",
 CellID->596901522],
Cell[3212139, 68759, 361, 8, 70, "Input",ExpressionUUID->"597f1eea-7c85-43cb-8a50-07a93bffb3d8",
 CellID->1227765117]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3212561, 68774, 167, 7, 70, "RelatedTutorialsSection",ExpressionUUID->"b742dc94-bbe1-44a0-80a9-6e07da8978e8",
 CellID->415694126],
Cell[3212731, 68783, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"a737dbe7-4688-4b12-b790-11388645b0f1"],
Cell[3212765, 68785, 200, 5, 70, "RelatedTutorials",ExpressionUUID->"72569250-e07f-4702-8e6e-ec1ee7c348d2",
 CellID->795520170],
Cell[3212968, 68792, 174, 4, 70, "RelatedTutorials",ExpressionUUID->"fcde07c7-86da-4ca8-af08-e698808571a7",
 CellID->1258435320],
Cell[3213145, 68798, 162, 3, 70, "RelatedTutorials",ExpressionUUID->"f655a4fc-c6b7-460a-8000-b1558367bc6c",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],
Cell[3213334, 68805, 23, 0, 70, "FooterCell",ExpressionUUID->"13e6a402-1d7e-4677-9922-14c133febff5"]
}
]
*)

(* End of internal cache information *)
